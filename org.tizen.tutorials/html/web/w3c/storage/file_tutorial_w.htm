<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
    <script type="text/javascript" src="../../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

    <title>File: Managing Files</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../../images/mw_icon.png"/> <img alt="Wearable Web" src="../../../images/ww_icon.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li>Local files
			<ul class="toc">
			<li><a href="#read_info">Reading Local File Information</a>
			</li>
			<li><a href="#read_content">Reading Local File Content</a>
			</li>
			<li><a href="#slice">Slicing Blob</a>
			</li></ul></li>
			<li>Sandboxed file system
			<ul class="toc">
			<li><a href="#access">Accessing a Sandboxed File System</a>
			</li>
			<li><a href="#display">Displaying Files in a Sandboxed File System</a>
			</li>
			<li><a href="#create_dir">Creating a Directory or File</a>
			</li>
			<li><a href="#remove">Removing a Directory or File</a>
			</li></ul></li>
		</ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
             <li><a href="../../../../../org.tizen.guides/html/web/w3c/storage/file_w.htm">File Guide</a></li>
			 <li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#file">File API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_w.html#file">File API for Wearable Web</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>File: Managing Files</h1>

<p>This tutorial demonstrates how you can control files and directories on the device, and access the sandboxed sections of a local file system to search, create, or delete a directory or file.
</p>

<h2>Warm-up</h2>
<p>Become familiar with the File API basics by learning about:</p>

<ul>
<li>Local files
<ul>
<li><a href="#read_info">Reading Local File Information</a>
<p>Access and read local file information.</p></li>
<li><a href="#read_content">Reading Local File Content</a>
<p>Access, read, and display a local image file.</p></li>
<li><a href="#slice">Slicing Blob</a>
<p>Read a local file as a binary string and slice it.</p></li>
</ul>
</li>
<li>Sandboxed file system in mobile applications
<ul>
<li><a href="#access">Accessing a Sandboxed File System</a>
<p>Request access to sandboxed sections of a local file system.</p></li>
<li><a href="#display">Displaying Files in a Sandboxed File System</a>
<p>Display entries (directories or files) in sandboxed sections of a local file system.</p></li>
<li><a href="#create_dir">Creating a Directory or File</a>
<p>Create a directory or file in a sandboxed section of a local file system. </p></li>
<li><a href="#remove">Removing a Directory or File</a>
<p>Delete the directory or file in a sandboxed section of a local file system.</p></li>
</ul>
</li>
</ul>
   
  
 <h2 id="read_info" name="read_info">Reading Local File Information</h2>

<p>Reading basic information, such as file name, size, MIME type, modification date, and path, of a local file is a useful file management skill:</p>

<ol>
<li>To display file information, create the <span style="font-family: Courier New,Courier,monospace">&lt;input type=&quot;file&quot;&gt;</span> element and other needed elements: 
<pre class="prettyprint">
&lt;input type=&quot;file&quot; id=&quot;tizenFiles&quot; onchange=&quot;readSelectedFiles();&quot; multiple /&gt;
&lt;div id=&quot;selectedFileInfoList&quot;&gt;&lt;/div&gt;
</pre>

<table class="note"> 
     <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">To enable multiple upload, use the <span style="font-family: Courier New,Courier,monospace">multiple</span> attribute. </td> 
      </tr> 
     </tbody>
</table>
</li>

<li>Create a <a href="http://www.w3.org/TR/2011/WD-FileAPI-20111020/#dfn-filelist" target="_blank">FileList</a> instance: 
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;var files = document.getElementById(&quot;tizenFiles&quot;).files;
&nbsp;&nbsp;&nbsp;if (files.length === 0) return;
&lt;/script&gt;
</pre>
</li>

<li>Use the <span style="font-family: Courier New,Courier,monospace">readSelectedFiles()</span> method of the <span style="font-family: Courier New,Courier,monospace">FileList</span> interface to retrieve and display file information, such as file name, size, MIME type, and modification date: 
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;function readSelectedFiles() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var displaySection = document.getElementById(&#39;selectedFileInfoList&#39;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var html = [];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; files.length; i++) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var file = files[i];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html.push(&quot;&lt;li&gt;&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&lt;strong&gt;&quot;, escape(file.name), &quot;&lt;/strong&gt;&lt;br /&gt;&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;    type: &quot;, file.type, &quot;&lt;br /&gt;&quot;, /* MIME type */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;    size: &quot;, file.size, &quot;bytes&lt;br /&gt;&quot;, /* Size */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;    lastModifiedDate: &quot;, /* Last modification date */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() : &quot;&quot;), 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;   &lt;br /&gt;&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&lt;/li&gt;&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;displaySection.innerHTML = &quot;&lt;ul&gt;&quot; + html.join(&quot;&quot;) + &quot;&lt;/ul&gt;&quot;;
&nbsp;&nbsp;&nbsp;}
&lt;/script&gt;
</pre>
<p class="figure">Figure: Displaying file information (in mobile applications only)</p> 
<p align="center"><img alt="Displaying file information (in mobile applications only)" src="../../../images/file1.png" /></p> 
</li>
</ol>
 <h3>Source Code</h3>
	<p>For the complete source code related to this use case, see the following file:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/storage/file_api" target="_blank">file_api_reading_local_files_info.html</a></li>
 </ul>
 
 <h2 id="read_content" name="read_content">Reading Local File Content</h2>
 

<p>Reading a local image file in a Web application is a useful file management skill:</p>

<ol>
<li>To read a local image file and display its information, create the <span style="font-family: Courier New,Courier,monospace">&lt;input type=&quot;file&quot;&gt;</span> element and other needed elements:
<pre class="prettyprint">
&lt;input type=&quot;file&quot; id=&quot;tizenFiles&quot; onchange=&quot;readSelectedFiles();&quot; multiple/&gt;
&lt;div id=&quot;selectedFileInfoList&quot;&gt;&lt;/div&gt;
</pre>
</li>

<li>Create a <a href="http://www.w3.org/TR/2011/WD-FileAPI-20111020/#FileReader-interface" target="_blank">FileReader</a> instance to read the content of the local image file. Use the <span style="font-family: Courier New,Courier,monospace">readAsDataURL()</span> method to read data in the <span style="font-family: Courier New,Courier,monospace">dataURL</span> format.
<p>If the data is loaded, an <span style="font-family: Courier New,Courier,monospace">onload</span> event is fired. Create an <span style="font-family: Courier New,Courier,monospace">img</span> element to allocate the event result property value for rendering:</p>
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;function readSelectedFiles() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var files = document.getElementById(&quot;tizenFiles&quot;).files;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (files.length === 0) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var html = [];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; files.length; i++) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var file = files[i];
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reader = new FileReader();
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Check whether the file is an image */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!file.type.match(&quot;image.*&quot;)) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.onload = (function(e) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var img = document.createElement(&quot;img&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img.src = e.target.result; 

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Set the selected image&#39;s dataURL */     
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img.title = escape(file.name);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img.className = &quot;img&quot;;
    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;selectedFileInfoList&quot;).appendChild(img);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.readAsDataURL(file);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
&lt;/script&gt; 
</pre>

<p class="figure">Figure: Displaying an image file (in mobile applications only)</p> 
<p align="center"><img alt="Displaying an image file (in mobile applications only)" src="../../../images/file2.png" /></p> 
</li>
</ol>
 <h3>Source Code</h3>
	<p>For the complete source code related to this use case, see the following file:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/storage/file_api" target="_blank">file_api_reading_local_files.html</a></li>
 </ul>

 <h2 id="slice" name="slice">Slicing Blob</h2>

<p>Slicing a local file using the <a href="http://www.w3.org/TR/2011/WD-FileAPI-20111020/#blob" target="_blank">Blob</a> interface is a useful file management skill:</p>

<ol>
<li>Create the <span style="font-family: Courier New,Courier,monospace">&lt;input type=&quot;file&quot;&gt;</span> element, the element for inputting the start byte and the end byte for slice, and the element for displaying the slicing result:
<pre class="prettyprint">
&lt;input type=&quot;file&quot; id=&quot;tizenFile&quot; name=&quot;tizenFile&quot; onchange=&quot;setFileSize();&quot; /&gt; &lt;br /&gt;
start byte: &lt;input type=&quot;text&quot; id=&quot;startByte&quot; name=&quot;startByte&quot; style=&quot;width: 100px;&quot; /&gt;~
end byte: &lt;input type=&quot;text&quot; id=&quot;endByte&quot; name=&quot;endByte&quot; style=&quot;width: 100px;&quot; /&gt;
&lt;input type=&quot;button&quot; value=&quot;Slice File&quot; onclick=&quot;readBinaryString();&quot; /&gt;

&lt;div id=&quot;result&quot; style=&quot;padding: 25px 10px 0 20px;&quot;&gt;&lt;/div&gt;
</pre>
</li>

<li>To read the local file, create a <a href="http://www.w3.org/TR/2011/WD-FileAPI-20111020/#FileReader-interface" target="_blank">FileReader</a> instance:
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;var reader = new FileReader();
&lt;/script&gt;
</pre>
</li>

<li>Slice the defined byte range (from <span style="font-family: Courier New,Courier,monospace">startByte</span> to <span style="font-family: Courier New,Courier,monospace">endByte</span>) using the <span style="font-family: Courier New,Courier,monospace">slice()</span> method of the <a href="http://www.w3.org/TR/2011/WD-FileAPI-20111020/#file" target="_blank">File</a> interface:

<pre class="prettyprint lang-js">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;function readBinaryString() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (document.getElementById(&quot;tizenFile&quot;).files.length === 0) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(&quot;Upload File&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var file = document.getElementById(&quot;tizenFile&quot;).files[0];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var startByte = document.getElementById(&quot;startByte&quot;).value;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var endByte = document.getElementById(&quot;endByte&quot;).value;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var blob = file.slice(startByte, endByte);
</pre>
<p>A new <span style="font-family: Courier New,Courier,monospace">Blob</span> object is created. </p> 
</li>
<li>
<p>Read the data as a binary string using the <span style="font-family: Courier New,Courier,monospace">readAsBinaryString()</span> method:</p>
<pre class="prettyprint lang-html">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.readAsBinaryString(blob);
&nbsp;&nbsp;&nbsp;}
&lt;/script&gt;
</pre>
</li>
<li>If the data loading is complete, the read data is displayed. Check the status using the <span style="font-family: Courier New,Courier,monospace">onloadend</span> event:
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;reader.onloadend = function(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (e.target.readyState == FileReader.DONE) /* DONE == 2 */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&#39;result&#39;).textContent = e.target.result;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;};
&lt;/script&gt;
</pre>

<p class="figure">Figure: Slicing a file (in mobile applications only)</p> 
<p align="center"><img alt="Slicing a file (in mobile applications only)" src="../../../images/file3.png" /></p> 
</li>
</ol>
<h3>Source Code</h3>
	<p>For the complete source code related to this use case, see the following file:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/storage/file_api" target="_blank">file_api_slicing_blob.htm</a></li>
 </ul>
 
 <h2 id="access" name="access">Accessing a Sandboxed File System</h2>

<p>Requesting access to sandboxed sections of a local file system is a useful file management skill:</p>

<ol>
<li>Use the <span style="font-family: Courier New,Courier,monospace">requestFileSystem()</span> method of the <a href="http://www.w3.org/TR/2011/WD-file-system-api-20110419/#using-localfilesystem" target="_blank">LocalFileSystem</a> interface to request access to sandboxed sections of a local file system:
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;/* Tizen uses the webkit prefix */
&nbsp;&nbsp;&nbsp;window.requestFileSystem = window.webkitRequestFileSystem;
            
&nbsp;&nbsp;&nbsp;var fs = null; 

&nbsp;&nbsp;&nbsp;/* Initialize the file system when loading a page */
&nbsp;&nbsp;&nbsp;if (window.requestFileSystem) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initFS();
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;function initFS() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Request for access to the sandboxed file system */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* and define PERSISTENT or TEMPORARY storage */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.requestFileSystem(window.TEMPORARY,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1024 * 1024, /* Storage space (bytes) */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(filesystem) {fs = filesystem;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errorHandler);
&nbsp;&nbsp;&nbsp;} 
&lt;/script&gt;
</pre>

<table class="note"> 
     <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">The <span style="font-family: Courier New,Courier,monospace">requestFileSystem()</span> method is created in the Web application program when it is initially called.  </td> 
      </tr> 
     </tbody>
</table>

<p>The directory file in the file system root can be searched, created and deleted by accessing local file system. 
</p>
</li>

</ol>
<h3>Source Code</h3>
	<p>For the complete source code related to this use case, see the following file:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/storage/file_api" target="_blank">file_api_file_system.htm</a></li>
 </ul>

 <h2 id="display" name="display">Displaying Files in a Sandboxed File System</h2>

<p>Reading a file or directory in a sandboxed section of a local file system is a useful file management skill:</p>

<ol>
<li>Create the <span style="font-family: Courier New,Courier,monospace">&lt;input type=&quot;button&quot;&gt;</span> element for displaying the entries (directories or files) stored in the root directory within the file system, and the list element for displaying the result:
<pre class="prettyprint">
&lt;input type=&quot;button&quot; value=&quot;Show FileList&quot; onclick=&quot;ShowFileList();&quot; /&gt;
&lt;ul id=&quot;resultSection&quot;&gt;&lt;/ul&gt;
</pre>
</li>

<li>To read the entry within the file system, use the <span style="font-family: Courier New,Courier,monospace">createReader()</span> method of the <a href="http://www.w3.org/TR/2011/WD-file-system-api-20110419/#the-directoryentry-interface" target="_blank">DirectoryEntry</a> interface:
<pre class="prettyprint lang-js">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;function ShowFileList() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!fs) return;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var objResultSection = document.querySelector(&#39;#resultSection&#39;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var root = fs.root;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var dirReader = root.createReader();
</pre>
</li>
<li>Use the <span style="font-family: Courier New,Courier,monospace">readEntries()</span> method of the <a href="http://www.w3.org/TR/2011/WD-file-system-api-20110419/#the-directoryreader-interface" target="_blank">DirectoryReader</a> interface to read all entries:
<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dirReader.readEntries(function(entries) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
</pre>
</li>
<li>Display the list of the relevant entries using the <a href="http://www.w3.org/TR/2011/WD-file-system-api-20110419/#the-entry-interface" target="_blank">Entry</a> interface:
<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!entries.length) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objResultSection.innerHTML = &#39;Filesystem is empty.&#39;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var fragment = document.createDocumentFragment();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var entry, i;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; entries.length; i++) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entry = entries[i]; 

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var img = entry.isDirectory ? 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;img class=&quot;icon-img&quot; src=&quot;img/icon_folder.png&quot; alt=&quot;folder&quot;&gt;&#39; :
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;img  class=&quot;icon-img&quot; src=&quot;img/icon_file.png&quot; alt=&quot;file&quot;&gt;&#39;;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var li = document.createElement(&#39;li&#39;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Display entry name */ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;li.innerHTML = [img, &#39;&lt;span&gt;&#39;, entry.name, &#39;&lt;/span&gt;&#39;].join(&#39;&#39;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objResultSection.innerHTML = &#39;&#39;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fragment.appendChild(li);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objResultSection.appendChild(fragment);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, errorHandler);
&nbsp;&nbsp;&nbsp;}
&lt;/script&gt;
</pre>
</li></ol>
<table class="note"> 
     <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">For error handling, see <a href="#access">Accessing a Sandboxed File System</a>.</td> 
      </tr> 
     </tbody>
</table>
<p class="figure">Figure: Displaying files</p> 
<p align="center"><img alt="Displaying files" src="../../../images/file4.png" /></p> 


<h3>Source Code</h3>
	<p>For the complete source code related to this use case, see the following files:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/storage/file_api" target="_blank">file_api_file_system.htm</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/storage/file_api/img" target="_blank">icon_file.png</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/storage/file_api/img" target="_blank">icon_folder.png</a></li>
 </ul>

<h2 id="create_dir" name="create_dir">Creating a Directory or File</h2>

<p>Creating a directory or file in a sandboxed section of a local file system is a useful file management skill:</p>

<ol>
<li>Create the <span style="font-family: Courier New,Courier,monospace">select</span> element for selecting the type of entry to be added, <span style="font-family: Courier New,Courier,monospace">&lt;input type=&quot;text&quot;&gt;</span> element for entering the entry name, and <span style="font-family: Courier New,Courier,monospace">&lt;input type=&quot;button&gt;&quot;</span> element for creating the entry:
<pre class="prettyprint">
&lt;select id=&quot;selType&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;option value=&quot;dir&quot;&gt;Directory&lt;/option&gt;
&nbsp;&nbsp;&nbsp;&lt;option value=&quot;file&quot;&gt;File&lt;/option&gt;
&lt;/select&gt;
&lt;input type=&quot;text&quot; id=&quot;txtName&quot; name=&quot;txtName&quot; style=&quot;width: 200px;&quot; maxlength=&quot;20&quot; /&gt;
&lt;input type=&quot;button&quot; value=&quot;Add File or Directory&quot; onclick=&quot;AddFile();&quot; /&gt;
</pre>
</li>

<li>To create a directory, use the <span style="font-family: Courier New,Courier,monospace">getDirectory()</span> method. To create a file, use the <span style="font-family: Courier New,Courier,monospace">getFile()</span> method:
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;function AddFile() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!fs) return;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var type = document.querySelector(&#39;#selType&#39;).value;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var name = document.querySelector(&#39;#txtName&#39;).value;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name == &quot;&quot;) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return alert(&quot;Enter File or Directory Name.&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (type == &quot;file&quot;) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Create file */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fs.root.getFile(name, {create: true}, null, errorHandler); 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (type == &quot;dir&quot;) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Create directory */ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fs.root.getDirectory(name, {create: true}, null, errorHandler); 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.querySelector(&#39;#resultSection&#39;).innerHTML = &#39;Files created.&#39;;
&nbsp;&nbsp;&nbsp;}
&lt;/script&gt;
</pre>
<table class="note"> 
     <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">For error handling, see <a href="#access">Accessing a Sandboxed File System</a>.</td> 
      </tr> 
     </tbody>
</table>

<p class="figure">Figure: Adding a file</p> 
<p align="center"><img alt="Adding a file" src="../../../images/file5.png" /></p> 
</li>
</ol>
<h3>Source Code</h3>
	<p>For the complete source code related to this use case, see the following file:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/storage/file_api" target="_blank">file_api_file_system.htm</a></li>
 </ul>

 <h2 id="remove" name="remove">Removing a Directory or File</h2>

<p>Deleting a directory or file in a sandboxed section of a local file system is a useful file management skill:</p>

<ol>
<li>Create the <span style="font-family: Courier New,Courier,monospace">&lt;input type=&quot;button&quot;&gt;</span> element for deleting the entry (directory or file):
<pre class="prettyprint">
&lt;input type=&quot;button&quot; value=&quot;Remove all files&quot; onclick=&quot;RemoveFile();&quot; /&gt;
</pre>
</li>

<li>To delete a directory and all the files in it, use the <span style="font-family: Courier New,Courier,monospace">removeRecursively()</span> method. To delete an individual file, use the <span style="font-family: Courier New,Courier,monospace">remove()</span> method:
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;function RemoveFile() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!fs) return;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var dirReader = fs.root.createReader();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var entry, i;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dirReader.readEntries(function(entries) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; entries.length; i++) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entry = entries[i];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (entry.isDirectory) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entry.removeRecursively(function() {}, errorHandler); 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entry.remove(function() {}, errorHandler);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.querySelector(&#39;#resultSection&#39;).innerHTML = &#39;Directory emptied.&#39;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, errorHandler);
&nbsp;&nbsp;&nbsp;}
&lt;/script&gt;
</pre>
<table class="note"> 
     <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">For error handling, see <a href="#access">Accessing a Sandboxed File System</a>.</td> 
      </tr> 
     </tbody>
</table>
<p class="figure">Figure: Deleting files</p> 
<p align="center"><img alt="Deleting files" src="../../../images/file6.png" /></p> 
</li>
</ol>
<h3>Source Code</h3>
	<p>For the complete source code related to this use case, see the following file:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/storage/file_api" target="_blank">file_api_file_system.htm</a></li>
 </ul>

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
