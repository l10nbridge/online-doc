<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

	<title>CSS Basic User Interface Module Level 3 (CSS3 UI): Applying Styles to HTML Documents</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../../images/mw_icon.png"/> <img alt="Wearable Web" src="../../../images/ww_icon.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#selector" class="opensection">Using Pseudo-element Selectors</a></li>
			<li><a href="#boxmodel" class="opensection">Using Box Model Properties</a>
			</li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
		    <li><a href="../../../../../org.tizen.guides/html/web/w3c/dom/basic_ui_w.htm">CSS Basic User Interface Module Level 3 (CSS3 UI) Guide</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#basicui">CSS Basic User Interface Module Level 3 (CSS3 UI) API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_w.html#basicui">CSS Basic User Interface Module Level 3 (CSS3 UI) API for Wearable Web</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>CSS Basic User Interface Module Level 3 (CSS3 UI): Applying Styles to HTML Documents</h1>
<div class="cont"><div class="static-cont">	

<p>This tutorial demonstrates how you can change the Web form UI and control the box model in HTML documents.</p>

<h2 id="warm-up" name="warm-up">Warm-up</h2>
<p>Become familiar with the CSS Basic User Interface Module Level 3 (CSS3 UI) API basics by learning about:</p>
<ul>
<li><a class="opensection" href="#selector">Using Pseudo-element Selectors</a><p>Change the Web Form UI using a CSS3 pseudo-class based on the user actions.</p></li>
<li><a class="opensection" href="#boxmodel">Using Box Model Properties</a><p>Use the box model properties to control the box model.</p></li>
</ul>  



	<!-- Show / Hide all links -->
	<div class="devicespecs-util mt5 clfix">
		<ul class="dutil">
			<li><a href="#" class="showA">Show All</a></li>
			<li class="none"><a href="#" class="hideA">Hide All</a></li>
		</ul>
	</div>
	<!-- Folds -->
	<ul class="devicespecifications">
		<li>
			<div class="devicespec-tit">
				<h2 id="selector" name="selector" class="items-tit-h2">Using Pseudo-element Selectors</h2>
				<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
			</div>
			<div class="devicespec-con">
			<p>To enhance the user experience of your application, you must learn how to use pseudo-element selectors:</p>
<ol>
<li><p>Use the pseudo-classes, such as <span style="font-family: Courier New,Courier,monospace">:enabled</span> and <span style="font-family: Courier New,Courier,monospace">:disabled</span>, to add different styles based on the state of the DOM elements:</p>
<pre class="prettyprint">input: enabled {border: 1px solid blue}
input: disabled {border: 1px solid red}</pre>
<table class="note"> 
    <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">In the versions prior to CSS3, pseudo-elements, such as <span style="font-family: Courier New,Courier,monospace">:hover</span>, <span style="font-family: Courier New,Courier,monospace">:active</span>, and <span style="font-family: Courier New,Courier,monospace">:focus</span>, were used, and required an attribute selector. Since the <span style="font-family: Courier New,Courier,monospace">:enabled</span> and <span style="font-family: Courier New,Courier,monospace">:disabled</span> classes are not influenced by the <span style="font-family: Courier New,Courier,monospace">display</span> and <span style="font-family: Courier New,Courier,monospace">visibility</span> attributes, they improve the accessibility.</td> 
      </tr> 
     </tbody> 
   </table></li>
<li>To control the state of the HTML5 Web Forms (in <a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#forms">mobile</a> or <a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_w.html#forms">wearable</a> applications), use the <span style="font-family: Courier New,Courier,monospace">:in-range</span> and <span style="font-family: Courier New,Courier,monospace">:out-of-range</span> pseudo-classes. 
<p>They check for any values that have exceeded the inserted range. (The following figure applies to mobile applications only.)</p>
<pre><pre class="prettyprint" style="border:0px">
&lt;!-- HTML --&gt;
&lt;input type=&quot;number&quot; step=&quot;10&quot; min=&quot;10&quot; max=&quot;100&quot;&gt;
</pre>
<pre class="prettyprint lang-js" style="border:0px">
/* css */
input[type=&quot;number&quot;]: in-range {border: 3px solid blue; width: 90%}
input[type=&quot;number&quot;]: out-of-range {border: 3px solid red; width: 90%}
</pre></pre>
<p align="center"><img alt="Element ranges (in mobile applications only)" src="../../../images/pseudo_elements_selector_range.png"/></p></li>
<li>To apply different styles to required input items and option items, use the <span style="font-family: Courier New,Courier,monospace">:required</span> and <span style="font-family: Courier New,Courier,monospace">:optional</span> pseudo-classes. (The following figure applies to mobile applications only.)
<pre><pre class="prettyprint" style="border:0px">
&lt;!-- HTML --&gt;
&lt;fieldset&gt;
&nbsp;&nbsp;&nbsp;&lt;legend&gt;required and optional&lt;/legend&gt;
&nbsp;&nbsp;&nbsp;&lt;label&gt;email: &lt;input type=&quot;email&quot; required&gt;&lt;/label&gt;
&nbsp;&nbsp;&nbsp;&lt;label&gt;password: &lt;input type=&quot;Password&quot; placeholder=&quot;required area&quot; required&gt;&lt;/label&gt;

&nbsp;&nbsp;&nbsp;&lt;label&gt;date: &lt;input type=&quot;date&quot; placeholder=&quot;You know what to do, huh?&quot;&gt;&lt;/label&gt;
&nbsp;&nbsp;&nbsp;&lt;textarea placeholder=&quot;Comment&quot;&gt;&lt;/textarea&gt;
&lt;/fieldset&gt;</pre>
<pre class="prettyprint lang-js" style="border:0px">
/* css */
input: required, textarea: required {border: 1px solid red}
input: optional, textarea: optional {border: 1px solid #777}
</pre></pre>
<p align="center"><img alt="Required and optional elements (in mobile applications only)" src="../../../images/pseudo_elements_selector_required.png"/></p></li></ol>

<h3>Source Code</h3>
 <p>For the complete source code related to this use case, see the following files:</p>
 <ul class="ul">
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_basic_user_interface_module_level_3" target="_blank">range.html</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_basic_user_interface_module_level_3" target="_blank">required_and_optional.html</a></li>
 </ul>
			</div>
		</li>
		
		
		<li>
			<div class="devicespec-tit">
				<h2 id="boxmodel" name="boxmodel" class="items-tit-h2">Using Box Model Properties</h2>
				<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
			</div>
			<div class="devicespec-con">
			<p>To enhance the user experience of your application, you must learn how to use box model properties:</p> 
<table>
<tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">The properties dependent on mouse and keyboard functions are not discussed in this tutorial.</td> 
      </tr> 
     </tbody> 
   </table>
<ol>
<li>To assign the area that is included in the width and height of the box automatically, use the <span style="font-family: Courier New,Courier,monospace">box-sizing</span> property. To assign the width without a margin, use the <span style="font-family: Courier New,Courier,monospace">box-sizing: border-box</span> property.
<pre class="prettyprint">
div.content-box {box-sizing: content-box} /* width (height) = content */
div.border-box {box-sizing: border-box} /* width (height) = content + padding + border */
div.border-box: before {height: 40px}
</pre></li>

<li>To draw an outline without using up the area, use the <span style="font-family: Courier New,Courier,monospace">outline</span> property:
<pre class="prettyprint">
.Test-Box {outline: 5px dashed red}
.outline: before {outline: 2px dashed red}
.outline-offset: before {outline-offset: 35px}
</pre></li>

<li>To handle text that exceeds the area of the box model, use the <span style="font-family: Courier New,Courier,monospace">text-overflow</span> property. The <span style="font-family: Courier New,Courier,monospace">text-overflow: ellipsis</span> property is used to indicate the text exceeded the padding area as &#39;...&#39;.
<pre class="prettyprint">div 
{
&nbsp;&nbsp;&nbsp;width: 250px;
&nbsp;&nbsp;&nbsp;margin: 20px auto;
&nbsp;&nbsp;&nbsp;padding: 20px 30px;
&nbsp;&nbsp;&nbsp;background-color: #eee;
&nbsp;&nbsp;&nbsp;color: #333;
&nbsp;&nbsp;&nbsp;border: 5px solid #333;
&nbsp;&nbsp;&nbsp;font-weight: bold;
&nbsp;&nbsp;&nbsp;overflow: hidden;
&nbsp;&nbsp;&nbsp;white-space: nowrap;
}

.clip {text-overflow: clip}
.ellipsis {text-overflow: ellipsis}</pre></li>
</ol>

<p>The following figure illustrates the box model properties; from left to right, it shows the effects of the box sizing, outline, and text overflow properties.</p>
<p class="figure">Figure: Box model properties (in mobile applications only)</p>
<p align="center"><img alt="Box model properties (in mobile applications only)" src="../../../images/box_model_properties.png"/></p>

<h3>Source Code</h3>
 <p>For the complete source code related to this use case, see the following files:</p>
 <ul class="ul">
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_basic_user_interface_module_level_3" target="_blank">box_sizing_property.html</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_basic_user_interface_module_level_3" target="_blank">outline_property.html</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_basic_user_interface_module_level_3" target="_blank">text_overflow_property.html</a></li>
 </ul>
			</div>
		</li>


	</ul>	
</div>				
</div>

		
<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
