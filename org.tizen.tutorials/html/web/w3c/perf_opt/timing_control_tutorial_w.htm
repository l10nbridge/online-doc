<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

	<title>Timing control for script-based animations: Controlling Animation Frame Rate</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../../images/mw_icon.png"/> <img alt="Wearable Web" src="../../../images/ww_icon.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a class="opensection" href="#Creating_App">Creating an Application with a Controllable Animation</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			 <li><a class="opensection" href="../../../../../org.tizen.guides/html/web/w3c/perf_opt/timing_control_w.htm">Timing control for script-based animations Guide</a></li>
			 <li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#timing">Timing control for script-based animations API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_w.html#timing">Timing control for script-based animations API for Wearable Web</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Timing control for script-based animations: Controlling Animation Frame Rate</h1>
<div class="cont"><div class="static-cont">	 

<p>This tutorial demonstrates how you can use animation control in your application.</p>
  
 
  <h2>Warm-up</h2>
  <p>Become familiar with the Timing control for script-based animations API basics by learning about:</p>
  <ul>
   <li><a href="#Creating_App">Creating an Application with a Controllable Animation</a> 
   <p>Create an application whose speed you can control.</p></li>
  </ul>   

<div class="devicespecs-util mt5 clfix">
		<ul class="dutil">
			<li><a href="#" class="showA">Show All</a></li>
			<li class="none"><a href="#" class="hideA">Hide All</a></li>
		</ul>
	</div> 
 
	<ul class="devicespecifications">
	
	<li>
			<div class="devicespec-tit">
				<h2 id="Creating_App" name="Creating_App" class="items-tit-h2">Creating an Application with a Controllable Animation</h2>
				<span class="fr"><a href="#" class="bt-arr"><em>hide</em></a></span>
			</div>
			<div class="devicespec-con">
			<p>To optimize the performance of your application, you must learn to create a simple controllable DOM animation.</p>
	<p>This example creates a screen with a Tizen pinwheel rotating on it, and buttons to increase or decrease the rotation speed and start or stop the animation.</p>
	<p class="figure">Figure: Controllable animation (in mobile applications only)</p> 
	<p style="text-align:center;"><img alt="Controllable animation (in mobile applications only)" src="../../../images/timing.png" /></p>
	<ol>
		<li><p>Create the HTML layout, including a <span style="font-family: Courier New,Courier,monospace">&lt;nav&gt;</span> element with 3 buttons and <span style="font-family: Courier New,Courier,monospace">&lt;div&gt;</span> elements for the pinwheel image and text:</p>
		<pre class="prettyprint">
&lt;nav&gt;
&nbsp;&nbsp;&nbsp;&lt;a href=&quot;#&quot; id=&quot;leftBtn&quot; class=&quot;btn&quot;&gt;Left&lt;/a&gt;
&nbsp;&nbsp;&nbsp;&lt;a href=&quot;#&quot; id=&quot;playstopBtn&quot; class=&quot;btn&quot;&gt;Stop&lt;/a&gt;
&nbsp;&nbsp;&nbsp;&lt;a href=&quot;#&quot; id=&quot;rightBtn&quot; class=&quot;btn&quot;&gt;Right&lt;/a&gt;
&lt;/nav&gt;

&lt;div id=&quot;pinwheel&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;div id=&quot;rotateBackground&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;TIZEN OS
&lt;/div&gt;
		</pre>
		</li>
		<li>Set the CSS properties: 
			<ol>
				<li><p>Define properties for a flexible vertical layout for the content area, and the <span style="font-family: Courier New,Courier,monospace">nav</span> container:</p>
				<pre class="prettyprint">
body
{
&nbsp;&nbsp;&nbsp;display: -webkit-flex;
&nbsp;&nbsp;&nbsp;-webkit-flex-direction: column;
}

nav
{
&nbsp;&nbsp;&nbsp;display: -webkit-flex;
&nbsp;&nbsp;&nbsp;-webkit-flex-direction: row;
&nbsp;&nbsp;&nbsp;-webkit-align-content: stretch;
&nbsp;&nbsp;&nbsp;width: 100%;
}
				</pre></li>
				<li><p>To enable the rotation of the background, define the <span style="font-family: Courier New,Courier,monospace">pinwheel</span> element in relation to its children, and set its size to change according to the display size. Define the <span style="font-family: Courier New,Courier,monospace">rotateBackground</span> element to have a fixed size depending on the display size:</p>
				<pre class="prettyprint">
#pinwheel 
{
&nbsp;&nbsp;&nbsp;width: 90vw;
&nbsp;&nbsp;&nbsp;height: 80vh;
&nbsp;&nbsp;&nbsp;position: relative;
&nbsp;&nbsp;&nbsp;overflow: hidden;
&nbsp;&nbsp;&nbsp;line-height: 80vh;
&nbsp;&nbsp;&nbsp;text-align: center;
}

#rotateBackground 
{
&nbsp;&nbsp;&nbsp;background: url(images/Tizen-Pinwheel-On-Dark-RGB.png) no-repeat center;
&nbsp;&nbsp;&nbsp;background-size: 90vw;
&nbsp;&nbsp;&nbsp;content: &quot;&quot;;
&nbsp;&nbsp;&nbsp;position: absolute;
&nbsp;&nbsp;&nbsp;width: 90vw;
&nbsp;&nbsp;&nbsp;height: 90vh;
&nbsp;&nbsp;&nbsp;z-index: -1;
}
				</pre></li>
			</ol>
		</li>
		<li><p>Declare the variables used in the application:</p>
		<pre class="prettyprint lang-js">
&lt;script type=&quot;text/javascript&quot;&gt;
&nbsp;&nbsp;&nbsp;var leftDiv, rightDiv, playstopDiv, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlerRequest, rotateBackgroundDiv, rotation = 0, speed = -1;
&lt;/script&gt;
		</pre>
		<p>The <span style="font-family: Courier New,Courier,monospace">leftDiv</span>, <span style="font-family: Courier New,Courier,monospace">rightDiv</span>, <span style="font-family: Courier New,Courier,monospace">playstopDiv</span>, and <span style="font-family: Courier New,Courier,monospace">rotateBackgroundDiv</span> variables contain DOM elements from the application UI. The <span style="font-family: Courier New,Courier,monospace">handlerRequest</span> variable handles the <span style="font-family: Courier New,Courier,monospace">requestAnimationFrame()</span> requests. The <span style="font-family: Courier New,Courier,monospace">rotation</span> variable is the current angle of the pinwheel, and the <span style="font-family: Courier New,Courier,monospace">speed</span> variable is the rotation speed in degrees per frame.</p>
		</li>
		<li><p>Create a DOM object for the <strong>Play</strong> or <strong>Stop</strong> button and define button events:</p>
		<pre class="prettyprint">
playstopDiv = document.getElementById(&quot;playstopBtn&quot;);

playstopDiv.onclick = function() 
{
&nbsp;&nbsp;&nbsp;if (handlerRequest) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.webkitCancelRequestAnimationFrame(handlerRequest);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlerRequest = 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playstopDiv.innerHTML = &quot;Play&quot;;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlerRequest = window.webkitRequestAnimationFrame(nextFrame);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playstopDiv.innerHTML = &quot;Stop&quot;;
&nbsp;&nbsp;&nbsp;}
}
		</pre>
		<p>When the <span style="font-family: Courier New,Courier,monospace">handlerRequest</span> variable returns <span style="font-family: Courier New,Courier,monospace">true</span>, the animation is played. Clicking the button calls the <span style="font-family: Courier New,Courier,monospace">cancelRequestAnimationFrame()</span> method to stop the animation. The <span style="font-family: Courier New,Courier,monospace">handlerRequest</span> is reset to value 0, and the button text changes from <strong>Stop</strong> to <strong>Play</strong>.</p>  
		<p>If the <span style="font-family: Courier New,Courier,monospace">handlerRequest</span> value is undefined or 0, the animation is not played. Clicking the button calls the <span style="font-family: Courier New,Courier,monospace">requestAnimationFrame()</span> method to play the animation, and the button text changes from <strong>Play</strong> to <strong>Stop</strong>. The parameter of the <span style="font-family: Courier New,Courier,monospace">requestAnimationFrame()</span> method defines the callback.</p>
		</li>
		<li><p>In the callback of the <span style="font-family: Courier New,Courier,monospace">requestAnimationFrame()</span> method, to avoid rotation value overflow, define the rotation value to be decreased when the absolute value is greater than the round angle (360 degrees). Set the background rotation using the <span style="font-family: Courier New,Courier,monospace">rotate()</span> method, and use the <span style="font-family: Courier New,Courier,monospace">requestAnimationFrame()</span> method to update the next frame of the animation:</p>
		<pre class="prettyprint">
function nextFrame(arg)
{
&nbsp;&nbsp;&nbsp;rotation += speed;

&nbsp;&nbsp;&nbsp;if (rotation &gt; 360) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation -= 360;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else if (rotation &lt; -360) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation += 360;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;rotateBackgroundDiv.style.webkitTransform = &quot;rotate(&quot; + rotation + &quot;deg)&quot;;
&nbsp;&nbsp;&nbsp;handlerRequest = window.webkitRequestAnimationFrame(nextFrame);  
}
		</pre>
		<p>The callback method is automatically called before the screen is updated. To keep the animation going, the <span style="font-family: Courier New,Courier,monospace">requestAnimationFrame()</span> method is called at the end of the callback method. Because the callback is synchronized with screen updates, when application is in the background and not visible on the screen, the updates are not called and the animation stops.</p>
		</li>
		<li><p>Set events for the <strong>Left</strong> and <strong>Right</strong> buttons. Tapping the buttons increases or decreases the animation speed.</p>
		<pre class="prettyprint">
leftDiv = document.getElementById(&quot;leftBtn&quot;);
leftDiv.onclick = function() 
{
&nbsp;&nbsp;&nbsp;speed -= 0.5;
}
rightDiv = document.getElementById(&quot;rightBtn&quot;);
rightDiv.onclick = function() 
{
&nbsp;&nbsp;&nbsp;speed += 0.5;
}
handlerRequest = window.webkitRequestAnimationFrame(nextFrame);
		</pre>
		</li>
	</ol>

<h3>Source Code</h3>
 <p>For the complete source code related to this use case, see the following file:</p>
 <ul class="ul">
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/performance_and_optimization/timing_control_for_script_based_animations/animation_timing_warm_up" target="_blank">renamed_index.html</a></li>
 </ul> 
			</div>
		</li>
	
	</ul>	
</div>				
</div>  

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 

  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
  
 </body>
</html>