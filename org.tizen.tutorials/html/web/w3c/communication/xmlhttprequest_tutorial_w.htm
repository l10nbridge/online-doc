<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
    <script type="text/javascript" src="../../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

    <title>XMLHttpRequest Level 1 and 2: Communicating with the Server</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../../images/mw_icon.png"/> <img alt="Wearable Web" src="../../../images/ww_icon.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
	<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#Sending_Request">Sending a Cross-origin Request</a>
			</li>
			<li><a href="#Uploading_Files">Uploading Files with Ajax</a>
			</li>
			<li><a href="#Handling_Requests">Handling Request Events</a>
			</li>
			<li><a href="#Tracking_Download">Tracking Download Progress State</a>
			</li>
		</ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../../org.tizen.guides/html/web/w3c/communication/xmlhttprequest_w.htm">XMLHttpRequest Level 1 and 2 Guide</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#httpreq">XMLHttpRequest Level 2 API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_w.html#httpreq">XMLHttpRequest Level 1 API for Wearable Web</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>XMLHttpRequest Level 1 and 2: Communicating with the Server</h1>
  
 <p>This tutorial demonstrates how you can communicate with a Web server using HTTP requests.</p>
      
    <h2>Warm-up</h2>
        <p>Become familiar with the XMLHttpRequest Level 1 and 2 API basics by learning about:</p>
        <ul>
            <li><a href="#Sending_Request">Sending a Cross-origin Request</a>
            <p>Send a cross-domain request to the Web server.</p></li>
            <li><a href="#Uploading_Files">Uploading Files with Ajax</a>
            <p>Upload files on the background using Ajax.</p></li>
            <li><a href="#Handling_Requests">Handling Request Events</a>
            <p>Track requests through various events. </p></li>
            <li><a href="#Tracking_Download">Tracking Download Progress State</a>
            <p>Start and cancel a download and track the download status.</p></li>
        </ul>

	
  <h2 id="Sending_Request" name="Sending_Request">Sending a Cross-origin Request</h2>
  
<p>To use the XML HTTP request features in your application, you must learn to send a cross-origin request:</p>
<ol>
<li><p>Create an <a href="http://www.w3.org/TR/2012/WD-XMLHttpRequest-20120117/#dom-xmlhttprequest" target="_blank">XMLHttpRequest</a> interface instance:</p>
<pre class="prettyprint lang-js">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;var client = new XMLHttpRequest();
</pre>
</li>
<li><p>Open the connection with the <span style="font-family: Courier New,Courier,monospace">open()</span> method using the cross-domain URL as a parameter. Send the request with the <span style="font-family: Courier New,Courier,monospace">send()</span> method.</p>
<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;client.open(&quot;GET&quot;, &quot;video_sample.mp4&quot;);
&nbsp;&nbsp;&nbsp;client.send();
&lt;/script&gt;
</pre>
<table class="note"> 
     <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">Cross-domain access only works if <a href="../security/cors_tutorial_w.htm#Using_Simple_Requests">the server allows the domain access of the client</a>. </td> 
      </tr> 
     </tbody> 
    </table>
</li>
</ol>
 <h3>Source Code</h3>
 <p>For the complete source code related to this use case, see the following files:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/communication/xmlhttprequest_level_2" target="_blank">xhr3.html</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/communication/xmlhttprequest_level_2" target="_blank">video_sample.mp4</a></li>
 </ul>

 
<h2 id="Uploading_Files" name="Uploading_Files">Uploading Files with Ajax</h2>

<p>To use the XML HTTP request features in your application, you must learn to upload files on the background with Ajax:</p>
<ol>
<li><p>Define the input elements for the file upload. Use the <span style="font-family: Courier New,Courier,monospace">upload()</span> method for the button click event to upload the file when the button is clicked.</p>
<pre class="prettyprint">
&lt;input type=&quot;file&quot; id=&quot;uploadfile&quot; name=&quot;uploadfile&quot; /&gt;
&lt;input type=&quot;button&quot; value=&quot;upload&quot; onclick=&quot;upload()&quot; /&gt;
</pre>
</li>
<li><p>In the <span style="font-family: Courier New,Courier,monospace">upload()</span> method, create a <a href="http://www.w3.org/TR/2010/WD-XMLHttpRequest2-20100907/#the-formdata-interface" target="_blank">FormData</a> interface instance, and add the <a href="http://www.w3.org/wiki/HTML/Elements/input/file" target="_blank">file</a> element with the attached file into it. Use the <span style="font-family: Courier New,Courier,monospace">send()</span> method to send the <span style="font-family: Courier New,Courier,monospace">FormData</span> to the server.  
</p>
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;var client = new XMLHttpRequest();
  
&nbsp;&nbsp;&nbsp;function upload() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var file = document.getElementById(&quot;uploadfile&quot;);
     
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Create a FormData instance */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var formData = new FormData();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Add the file */ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formData.append(&quot;upload&quot;, file.files[0]);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client.open(&quot;post&quot;, &quot;/upload&quot;, true);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client.setRequestHeader(&quot;Content-Type&quot;, &quot;multipart/form-data&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client.send(formData);  /* Send to server */ 
&nbsp;&nbsp;&nbsp;}
     
&nbsp;&nbsp;&nbsp;/* Check the response status */  
&nbsp;&nbsp;&nbsp;client.onreadystatechange = function() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (client.readyState == 4 &amp;&amp; client.status == 200) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(client.statusText);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
&lt;/script&gt;
</pre>
</li>
</ol>
 <h3>Source Code</h3>
 <p>For the complete source code related to this use case, see the following file:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/communication/xmlhttprequest_level_2" target="_blank">xhr1.html</a></li>
 </ul>
 
<h2 id="Handling_Requests" name="Handling_Requests">Handling Request Events</h2>

 <p>To use the XML HTTP request features in your application, you must learn to track requests through events:</p>
<ol>
<li><p>Define a text element in which to display the request event results:</p>
<pre class="prettyprint">
&lt;div id=&quot;divText&quot;&gt;&lt;/div&gt;
</pre>
</li>
<li><p>Create an <a href="http://www.w3.org/TR/2012/WD-XMLHttpRequest-20120117/#dom-xmlhttprequest" target="_blank">XMLHttpRequest</a> interface instance and define event handlers for it:</p>
<pre class="prettyprint lang-js">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;var html = &quot;&quot;;

&nbsp;&nbsp;&nbsp;var client = new XMLHttpRequest();
 
&nbsp;&nbsp;&nbsp;/* Event handlers */
&nbsp;&nbsp;&nbsp;client.onloadstart = onloadstarthandler;
&nbsp;&nbsp;&nbsp;client.onprogress = onprogresshandler;
&nbsp;&nbsp;&nbsp;client.onabort = onaborthandler;
&nbsp;&nbsp;&nbsp;client.onerror = onerrorhandler;
&nbsp;&nbsp;&nbsp;client.onload = onloadhandler;
&nbsp;&nbsp;&nbsp;client.ontimeout = ontimeouthandler;
&nbsp;&nbsp;&nbsp;client.onloadend = onloadendhandler;
&nbsp;&nbsp;&nbsp;client.onreadystatechange = onreadystatechangehandler;
 
&nbsp;&nbsp;&nbsp;/* Assign request type and server path */ 
&nbsp;&nbsp;&nbsp;client.open(&quot;GET&quot;, &quot;video_sample.mp4&quot;);
&nbsp;&nbsp;&nbsp;client.send();
</pre>
</li>
<li><p>Define the actions of each <a href="http://www.w3.org/TR/XMLHttpRequest/#event-handlers" target="_blank">event handler</a>:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;/* When the request begins */
&nbsp;&nbsp;&nbsp;function onloadstarthandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html += &quot;onloadstart&lt;br/&gt;&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = html;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;/* When the request is in progress */ 
&nbsp;&nbsp;&nbsp;function onprogresshandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html += &quot;onprogress&lt;br/&gt;&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = html;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;/* When the client cancels the request */ 
&nbsp;&nbsp;&nbsp;function onaborthandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html += &quot;onabort&lt;br/&gt;&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = html;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;/* When server exception occurs */
&nbsp;&nbsp;&nbsp;function onerrorhandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html += &quot;onerror&lt;br/&gt;&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = html;
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp;/* When the request is successfully terminated */ 
&nbsp;&nbsp;&nbsp;function onloadhandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html += &quot;onload&lt;br/&gt;&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = html;
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp;/* When a timeout occurs */
&nbsp;&nbsp;&nbsp;function ontimeouthandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html += &quot;ontimeout&lt;br/&gt;&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = html;
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp; /* When request is terminated regardless of success or failure */
&nbsp;&nbsp;&nbsp;function onloadendhandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html += &quot;onloadend&lt;br/&gt;&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = html;
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp;/* Checks current progress based on a random repetition period */
&nbsp;&nbsp;&nbsp;function onreadystatechangehandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html += &quot;onreadystate&lt;br/&gt;&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = html;
&nbsp;&nbsp;&nbsp;}
&lt;/script&gt;
</pre>
</li>
</ol>
 <h3>Source Code</h3>
 <p>For the complete source code related to this use case, see the following files:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/communication/xmlhttprequest_level_2" target="_blank">xhr2.html</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/communication/xmlhttprequest_level_2" target="_blank">video_sample.mp4</a></li>
 </ul>
 
<h2 id="Tracking_Download" name="Tracking_Download">Tracking Download Progress State</h2>

<p>To use the XML HTTP request features in your application, you must learn to track download progress:</p> 
<ol>
<li><p>Define the input elements for managing a download. Use the <span style="font-family: Courier New,Courier,monospace">sendRequest()</span> and <span style="font-family: Courier New,Courier,monospace">abortRequest()</span> methods for the button click events to start and cancel a download.</p>
<pre class="prettyprint">
&lt;input type=&quot;button&quot; value=&quot;Send XMLHttpRequest&quot; onclick=&quot;sendRequest()&quot; /&gt;
&lt;input type=&quot;button&quot; value=&quot;Abort Sending&quot; onclick=&quot;abortRequest()&quot; /&gt;
&lt;div id=&quot;divText&quot;&gt;&lt;/div&gt;
</pre>
</li>
<li><p>Create an <a href="http://www.w3.org/TR/2012/WD-XMLHttpRequest-20120117/#dom-xmlhttprequest" target="_blank">XMLHttpRequest</a> interface instance and define the handlers for the <span style="font-family: Courier New,Courier,monospace">onprogress</span> and <span style="font-family: Courier New,Courier,monospace">onabort</span> events to track the download progress and cancellation events:</p>
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;var client = new XMLHttpRequest();
 
&nbsp;&nbsp;&nbsp;client.onprogress = onprogresshandler;
&nbsp;&nbsp;&nbsp;client.onabort = onaborthandler;
&lt;/script&gt;
</pre>
</li>
<li><p>Use the <span style="font-family: Courier New,Courier,monospace">send()</span> method to request for a file to be read when the <strong>Start download</strong> button is clicked. When the <strong>Cancel download</strong> button is clicked, use the <span style="font-family: Courier New,Courier,monospace">abort()</span> method to cancel the download.</p>
<pre class="prettyprint lang-js">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;/* When Start download button is clicked */
&nbsp;&nbsp;&nbsp;function sendRequest() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client.send();
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp;/* When Cancel download button is clicked */
&nbsp;&nbsp;&nbsp;function abortRequest() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client.abort();
&nbsp;&nbsp;&nbsp;}
</pre>
</li>
<li><p>During the download, use the <span style="font-family: Courier New,Courier,monospace">onprogresshandler</span> event handler to track the current and total download size, and calculate the download status. With the <span style="font-family: Courier New,Courier,monospace">onaborthandler</span> event handler, you can display the cancellation notification on the screen.</p>
<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;function onprogresshandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = &quot;DownLoading.. (&quot; + parseInt(e.loaded / e.totalSize * 100) + &quot;%)&quot;;
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp;function onaborthandler(e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;divText&quot;).innerHTML = &quot;Download has been cancelled by user.&quot;;
&nbsp;&nbsp;&nbsp;}
&lt;/script&gt;
</pre>
</li>
</ol>
 <h3>Source Code</h3>
 <p>For the complete source code related to this use case, see the following file:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/communication/xmlhttprequest_level_2" target="_blank">xhr3.html</a></li>
 </ul>
 
<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

 </body>
</html>