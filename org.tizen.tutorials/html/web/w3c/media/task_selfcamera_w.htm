<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
    <script type="text/javascript" src="../../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

    <title>Task: Self Camera</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../../images/mobile_s_w.png"/></p>
    </div>

    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#layout">Defining the Application Layout</a></li>
            <li><a href="#configure">Initializing the Application</a></li>
            <li><a href="#stream">Accessing the Camera Stream</a></li>
            <li><a href="#capture">Capturing Pictures from Video</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../../org.tizen.guides/html/web/w3c/media/getusermedia_w.htm">getUserMedia Guide</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#getusermedia">getUserMedia API for Mobile Web</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

  <h1>Task: Self Camera</h1>
  <p>This task, based on the SelfCamera sample delivered with the Tizen SDK, demonstrates how you can use the <a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#getusermedia">getUserMedia</a> API to access and display the camera video stream, and capture a single photo. For more information on the sample functionality and creating the sample with the full source code, see the <a href="https://developer.tizen.org/downloads/sample-applications/sample-mobile-applications" target="blank">SelfCamera</a>.</p>
  <p>This task consists of the following parts:</p>
  <ul>
   <li><a href="#layout">Defining the Application Layout</a> defines how to create the application screens. </li>
   <li><a href="#configure">Initializing the Application</a> defines how to initialize the application.</li>
   <li><a href="#stream">Accessing the Camera Stream</a> defines how to access the front camera video stream.</li>
   <li><a href="#capture">Capturing Pictures from Video</a> defines how to capture a single frame from the video tag.</li>
  </ul>

 <p>This sample is a fully functional camera application for taking photos with the device front camera. The user can set the timer delay and access photos by clicking on the photo previews.</p>

<h2 id="layout" name="layout">Defining the Application Layout</h2>
  <p>The SelfCamera sample application layout contains only 1 screen: the main screen that displays the camera view and application control elements (buttons).</p>


   <p>The following figure shows the main screen of the application.</p>
  <p class="figure">Figure: SelfCamera screen</p>
  <p align="center"><img alt="SelfCamera screen" src="../../../images/selfcamera.png" /></p>

<h3 id="main" name="main">Defining the Main Screen</h3>
  <ol class="tutorstep">
   <li>index.html Source File
 <p>The <span style="font-family: Courier New,Courier,monospace">
&lt;div&gt;</span> elements are used to define the camera elements for the screen.</p>
  <pre class="prettyprint">
&lt;body&gt;
&nbsp;&nbsp;&nbsp;&lt;div id=&quot;camera&quot;&gt;&lt;/div&gt;

&nbsp;&nbsp;&nbsp;&lt;div id=&quot;countdown&quot;&gt;&lt;/div&gt;

&nbsp;&nbsp;&nbsp;&lt;div class=&quot;timers&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;timer2&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;timer5&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;timer10&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;

&nbsp;&nbsp;&nbsp;&lt;div id=&quot;thumbnail&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;upImage&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;

&nbsp;&nbsp;&nbsp;&lt;div id=&quot;shutter-container&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;shutter&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&lt;/body&gt;</pre> </li>
<li> css/style.css Source File
<p>The <span style="font-family: Courier New,Courier,monospace">
style.css</span> file defines the positions and styles of the camera elements.</p>
<pre class="prettyprint">
#camera
{
&nbsp;&nbsp;&nbsp;width: 100%;
&nbsp;&nbsp;&nbsp;height: 100%;
&nbsp;&nbsp;&nbsp;overflow: hidden;
}

div#countdown
{
&nbsp;&nbsp;&nbsp;position: absolute;
&nbsp;&nbsp;&nbsp;width: 100%;
&nbsp;&nbsp;&nbsp;height: 100%;
&nbsp;&nbsp;&nbsp;top: 20%;
&nbsp;&nbsp;&nbsp;font-size: 200pt;
&nbsp;&nbsp;&nbsp;text-align: center;
&nbsp;&nbsp;&nbsp;vertical-align: middle;
&nbsp;&nbsp;&nbsp;color: rgba(135, 226, 0, 0.8);
&nbsp;&nbsp;&nbsp;margin: auto 0;
&nbsp;&nbsp;&nbsp;z-index: 10;
}

.timers
{
&nbsp;&nbsp;&nbsp;position: absolute;
&nbsp;&nbsp;&nbsp;width: 100%;
&nbsp;&nbsp;&nbsp;background-color: rgba(10, 10, 10, 0.4);
&nbsp;&nbsp;&nbsp;top: 0;
&nbsp;&nbsp;&nbsp;left: 0;
}

div#thumbnail
{
&nbsp;&nbsp;&nbsp;position: absolute;
&nbsp;&nbsp;&nbsp;width: 56px;
&nbsp;&nbsp;&nbsp;height: 64px;
&nbsp;&nbsp;&nbsp;left: 13px;
&nbsp;&nbsp;&nbsp;bottom: 19px;
&nbsp;&nbsp;&nbsp;background-size: 56px 64px;
&nbsp;&nbsp;&nbsp;background-color: transparent;
&nbsp;&nbsp;&nbsp;background-image: url(&#39;../images/none.png&#39;);
&nbsp;&nbsp;&nbsp;background-repeat: no-repeat;
&nbsp;&nbsp;&nbsp;z-index: 100;
}

div#shutter-container
{
&nbsp;&nbsp;&nbsp;width: 100%;
&nbsp;&nbsp;&nbsp;height: 86px;
&nbsp;&nbsp;&nbsp;position: absolute;
&nbsp;&nbsp;&nbsp;bottom: 0;
&nbsp;&nbsp;&nbsp;z-index: 11
}
</pre></li></ol>

<h2 id="configure" name="configure">Initializing the Application</h2>
  <ol class="tutorstep">
   <li>config.xml Source File <p>The required privileges are declared in the <span style="font-family: Courier New,Courier,monospace">config.xml</span> file. </p> <pre class="prettyprint">&lt;!--Configuration file content--&gt;
&lt;widget ...&gt;
&nbsp;&nbsp;&nbsp;&lt;!--Other configuration details--&gt;
&nbsp;&nbsp;&nbsp;&lt;tizen:privilege name=&quot;http://tizen.org/privilege/application.launch&quot;/&gt;
&nbsp;&nbsp;&nbsp;&lt;tizen:privilege name=&quot;http://tizen.org/privilege/filesystem.read&quot;/&gt;
&nbsp;&nbsp;&nbsp;&lt;tizen:privilege name=&quot;http://tizen.org/privilege/filesystem.write&quot;/&gt;
&nbsp;&nbsp;&nbsp;&lt;tizen:privilege name=&quot;http://tizen.org/privilege/content.read&quot;/&gt;
&nbsp;&nbsp;&nbsp;&lt;tizen:privilege name=&quot;http://tizen.org/privilege/content.write&quot;/&gt;
&lt;/widget&gt;</pre> </li>
  </ol>

<h2 id="stream" name="stream">Accessing the Camera Stream</h2>

  <p>This section builds upon the elements described in <a href="getusermedia_tutorial_w.htm#access">Accessing a Video Stream</a>.</p>
  

 <h3 id="app" name="app">Managing the Application Object</h3>
 <p>The application object functionality is implemented in the <span style="font-family: Courier New,Courier,monospace">main.js</span> file.</p>
  <ol class="tutorstep">
  <li>Creating and Initializing the Application Object
        <ol type="a">
<li>The <span style="font-family: Courier New,Courier,monospace">SelfCamera</span> object represents the entire application entity, and by using the prototype, the member methods are registered in the object.

  <pre class="prettyprint">
var selfCamera;
function SelfCamera()
{
&nbsp;&nbsp;&nbsp;&quot;use strict&quot;;
}

function()
{
&nbsp;&nbsp;&nbsp;&quot;use strict&quot;;
&nbsp;&nbsp;&nbsp;var DELAY_2_SECOND = 2, DELAY_5_SECOND = 5, DELAY_10_SECOND = 10;
&nbsp;&nbsp;&nbsp;var previewLock = false;

&nbsp;&nbsp;&nbsp;SelfCamera.prototype =
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;countdown: -1, /* Current value after clicking the camera button */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;countdownTimeoutID: -1,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;countSound: new Audio(&#39;sounds/sounds_count.wav&#39;),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img: document.createElement(&#39;canvas&#39;),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filename: &#39;&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadDirectory: &#39;&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saveDirectory: &#39;images/&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMG_PREFIX: &#39;SelfCamera_&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shutterSound: new Audio(&#39;sounds/sounds_Shutter_01.wav&#39;),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timer: null, /* Value set by the buttons */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;systemIO: null,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;video: null,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src: null,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isMediaWorking: false
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previewLock: false
&nbsp;&nbsp;&nbsp;};
}</pre></li>

 <li>The <span style="font-family: Courier New,Courier,monospace">SelfCamera</span> object is created and initialized.

  <pre class="prettyprint">
selfCamera = new SelfCamera();
$(document).ready(function()
{
&nbsp;&nbsp;&nbsp;&quot;use strict&quot;;
&nbsp;&nbsp;&nbsp;selfCamera.init();
}); </pre></li>
</ol></li>
<li>Binding Events to the Application Object
<ol type="a">

<li><p>To bind video events to the application object, call the <span style="font-family: Courier New,Courier,monospace">bindVideoEvents()</span> method, which registers the event handlers to the corresponding events using the <span style="font-family: Courier New,Courier,monospace">bind()</span> method.</p>
  <pre class="prettyprint">
SelfCamera.prototype.bindVideoEvents = function()
{
&nbsp;&nbsp;&nbsp;var self = this;
&nbsp;&nbsp;&nbsp;$(this.video).on(&quot;stalled&quot;, function(e) {this.load();});
&nbsp;&nbsp;&nbsp;$(this.video).on(&quot;playing&quot;, this.resizeVideo.bind(this));
&nbsp;&nbsp;&nbsp;$(this.video).on(&#39;click&#39;, function() {this.play();});
};
</pre></li>

<li><p>To bind button and hardware key events to the application object, call the <span style="font-family: Courier New,Courier,monospace">bindEvents()</span> method, which register the event handlers to the corresponding events using the <span style="font-family: Courier New,Courier,monospace">bind()</span> method.</p>
  <pre class="prettyprint">
SelfCamera.prototype.bindEvents = function bindEvents()
{
&nbsp;&nbsp;&nbsp;var self = this;

&nbsp;&nbsp;&nbsp;document.addEventListener(&#39;webkitvisibilitychange&#39;, function(event)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.clearCountdown();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previewLock = false;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (document.webkitVisibilityState === &#39;visible&#39;)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (self.video !== null)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.reloadSaveDirectory(function() {self.video.play();});
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.loadThumbnail(true, false);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;});

&nbsp;&nbsp;&nbsp;$(&#39;shutter&#39;).mousedown(function(ev) {$(&#39;shutter&#39;).addClass(&#39;active&#39;);})
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.mouseup(function(ev) {$(&#39;shutter&#39;).removeClass(&#39;active&#39;);})
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.on(&#39;touchstart&#39;, function(ev) {$(&#39;shutter&#39;).addClass(&#39;active&#39;);})
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.on(&#39;touchend&#39;, function(ev) {$(&#39;shutter&#39;).removeClass(&#39;active&#39;);});

&nbsp;&nbsp;&nbsp;$(window).on(&#39;tizenhwkey&#39;, function(e)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (e.originalEvent.keyName === &quot;back&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (self.countdownTimeoutID !== -1)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.clearCountdown();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.loadThumbnail(true, false);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.application.getCurrentApplication().exit();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;});

&nbsp;&nbsp;&nbsp;this.bindTimerClicks();

&nbsp;&nbsp;&nbsp;$(&#39;#thumbnail&#39;).on(&#39;click&#39;, this.launchPreview.bind(this));
&nbsp;&nbsp;&nbsp;$(&#39;#shutter&#39;).on(&#39;touchstart&#39;, this.shutterTouched.bind(this));
};</pre>

</li></ol></li></ol>

<h3 id="access" name="access">Accessing the Camera Stream</h3>
  <ol class="tutorstep">
   <li>main.js Source File
 <ol type="a">
 <li> The <span style="font-family: Courier New,Courier,monospace">startPreview()</span> method requests the video stream using the <span style="font-family: Courier New,Courier,monospace">getUserMedia()</span> method of the navigator.
   <pre class="prettyprint">
navigator.getUserMedia(options, this.onCaptureVideoSuccess.bind(this),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.onCaptureVideoError.bind(this));
</pre></li>

<li>The <span style="font-family: Courier New,Courier,monospace">onCaptureVideoSuccess()</span> event handler obtains the stream URL and creates the <a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#video">video element</a> with the <span style="font-family: Courier New,Courier,monospace">createVideoElement()</span> method.
 <pre class="prettyprint">
SelfCamera.prototype.onCaptureVideoSuccess = function onCaptureVideoSuccess(stream)
{
&nbsp;&nbsp;&nbsp;var urlStream;
&nbsp;&nbsp;&nbsp;urlStream = window.webkitURL.createObjectURL(stream); /* Create stream */
&nbsp;&nbsp;&nbsp;this.isMediaWorking = true;
&nbsp;&nbsp;&nbsp;this.createVideoElement(urlStream); /* Create video element with stream handler */
&nbsp;&nbsp;&nbsp;this.setTimer(DELAY_2_SECOND); /* Initialize timer button options */
};
</pre></li>
<li><p>The <span style="font-family: Courier New,Courier,monospace">createVideoElement()</span> method defines the video element, except for the <span style="font-family: Courier New,Courier,monospace">
src</span> attribute, which is already defined by the <span style="font-family: Courier New,Courier,monospace">onCaptureVideoSuccess()</span> event handler.</p>
  <pre class="prettyprint">SelfCamera.prototype.createVideoElement = function(src)
{
&nbsp;&nbsp;&nbsp;this.video = $(&#39;&lt;video/&gt;&#39;,
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoplay: &#39;autoplay&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: &#39;video&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style: &#39;height:&#39; + $(window).height() + &#39;px&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src: src
&nbsp;&nbsp;&nbsp;}).appendTo(&quot;#camera&quot;).get(0);

&nbsp;&nbsp;&nbsp;this.bindVideoEvents();
};</pre>
</li>

 </ol></li> </ol>

<h2 id="capture" name="capture">Capturing Pictures from Video</h2>
  <ol class="tutorstep">
   <li>main.js Source File
 <ol type="a">
 <li>Capture a video frame with canvas.
  <pre class="prettyprint">
SelfCamera.prototype.captureImage = function captureImage(video)
{
&nbsp;&nbsp;&nbsp;var sourceWidth = window.innerWidth,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sourceHeight = window.innerHeight,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sourceX = (sourceWidth - $(video).width()) / 2,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sourceY = (sourceHeight - $(video).height()) / 2;

&nbsp;&nbsp;&nbsp;this.img.width = sourceWidth;
&nbsp;&nbsp;&nbsp;this.img.height = sourceHeight;

&nbsp;&nbsp;&nbsp;/* Crop image to viewport dimensions */
&nbsp;&nbsp;&nbsp;this.img.getContext(&#39;2d&#39;).drawImage(video, sourceX, sourceY,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(video).width(), $(video).height());

&nbsp;&nbsp;&nbsp;/* For the best available dimension, use the following: */
&nbsp;&nbsp;&nbsp;/* this.img.width = video.videoWidth; */
&nbsp;&nbsp;&nbsp;/* this.img.height = video.videoHeight; */
&nbsp;&nbsp;&nbsp;/* this.img.getContext(&#39;2d&#39;).drawImage(video, 0, 0); */
};
</pre> </li>

<li>Extract the image data from the canvas.
 <pre class="prettyprint">
SelfCamera.prototype.saveCanvas = function saveCanvas(canvas, fileName)
{
&nbsp;&nbsp;&nbsp;var data, self = this,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onSuccess = function(fileHandle)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.setLoadDirectory(this.getFileDirectoryURI(fileHandle));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.content.scanFile(fileName,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function() {self.loadThumbnail(false, false);},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function() {/* Error handling */});
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}.bind(this);

&nbsp;&nbsp;&nbsp;data = canvas.toDataURL().replace(&#39;data:image/png;base64,&#39;, &#39;&#39;).replace(&#39;data:,&#39;, &#39;&#39;);

&nbsp;&nbsp;&nbsp;this.systemIO.saveFileContent(fileName, data, onSuccess, &#39;base64&#39;);
};</pre></li>

 <li>Save the image.
  <pre class="prettyprint">
saveFileContent: function SystemIO_saveFileContent(filePath, fileContent,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onSaveSuccess, fileEncoding)
{
&nbsp;&nbsp;&nbsp;var pathData = this.getPathData(filePath),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self = this,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileHandle;

&nbsp;&nbsp;&nbsp;function onOpenDirSuccess(dir)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Create a new file */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileHandle = self.createFile(dir, pathData.fileName);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fileHandle !== false)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Save data into the file */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.writeFile(fileHandle, fileContent, onSaveSuccess, false, fileEncoding);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;/* Open the directory */
&nbsp;&nbsp;&nbsp;this.openDir(pathData.dirName, onOpenDirSuccess);
};</pre>
  </li></ol></li></ol>

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>