<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>
	<title>Cross-Origin Resource Sharing: Enabling Client-side Cross-origin Requests</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../../images/mw_icon.png"/> <img alt="Wearable Web" src="../../../images/ww_icon.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#Using_Simple_Requests">Using Simple Requests</a></li>
            <li><a href="#Using_Preflight_Requests">Using Preflight Requests</a></li>
        </ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.guides/html/web/w3c/security/cors_w.htm">Cross-Origin Resource Sharing Guide</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#cross">Cross-Origin Resource Sharing API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_w.html#cross">Cross-Origin Resource Sharing API for Wearable Web</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Cross-Origin Resource Sharing: Enabling Client-side Cross-origin Requests</h1>


<p>This tutorial demonstrates how you can allow cross-origin resource sharing (CORS) through simple and preflight requests.</p>


	<h2>Warm-up</h2>
	<p>Become familiar with the Cross-Origin Resource Sharing API basics by learning about:</p>
	<ul>
	<li><a href="#Using_Simple_Requests">Using Simple Requests</a>
	<p>Create a simple request based on <a href="../communication/xmlhttprequest_tutorial_w.htm">XML HTTP Request level 2</a>, and receive a response.</p></li>
	
	<li><a href="#Using_Preflight_Requests">Using Preflight Requests</a>
	<p>Create a preflight request based on <a href="../communication/xmlhttprequest_tutorial_w.htm">XML HTTP Request level 2</a>, and receive a response. After a successful authorization, send the actual data request and receive a response.</p></li>
	</ul>  
	
                <h2 id="Using_Simple_Requests" name="Using_Simple_Requests">Using Simple Requests</h2>
				
<p>Learning how to handle a simple request based on XML HTTP Request level 2 enhances the security features of your application:</p>

<ol>
<li>Create an <a href="../communication/xmlhttprequest_tutorial_w.htm">XML HTTP request</a> on the client side, using JavaScript code that requests Ajax communication:
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;var method = &quot;GET&quot;;
&nbsp;&nbsp;&nbsp;var url = &quot;http://another-domain.com/CORS/&quot;;
&nbsp;&nbsp;&nbsp;var xhr = new XMLHttpRequest();

&nbsp;&nbsp;&nbsp;xhr.open(method, url);
&nbsp;&nbsp;&nbsp;xhr.send();
&lt;/script&gt;
</pre>
</li>

<li>On the server side, define the domain from which requests are allowed. In this case, the <span style="font-family: Courier New,Courier,monospace">http://origin-domain.com</span> domain has the required authority.
<pre class="prettyprint">
&lt;?php
&nbsp;&nbsp;&nbsp;header(&quot;Access-Control-Allow-Origin: http://origin-domain.com&quot;);
?&gt;
</pre>
<p>If all sites are allowed to send requests, use the wildcard (*):</p>
<pre class="prettyprint">
&lt;?php
&nbsp;&nbsp;&nbsp;header(&quot;Access-Control-Allow-Origin: *&quot;);
?&gt;
</pre>
</li>

<li>Check the request header.
<p>If you check the request header through the network log, you find that an additional <span style="font-family: Courier New,Courier,monospace">Origin</span> header has been added. This header informs the relevant server of the sender side domain. The <span style="font-family: Courier New,Courier,monospace">Origin</span> header is protected in the browser side, and cannot be changed by the user.</p>
<pre class="prettyprint">
GET http://origin-domain.com/CORS/simple_reqeust.html HTTP/1.1
Host: origin-domain.com
Origin: http://origin-domain.com
</pre>
</li>

<li>Check the response header:
<ul>
<li><p>If the request is received from a domain with access authority, the server allows a response.
The response header includes the <span style="font-family: Courier New,Courier,monospace">Access-Control-Allow-Origin</span> header set in the server side.</p>
<pre class="prettyprint">
HTTP/1/1 200 OK
Access-Control-Allow-Origin: http://origin-domain.com
</pre></li>
<li>If the request is received from a domain without access authority, the server sends no response, and the following error occurs:
<pre class="prettyprint">
XMLHttpRequest cannot load http://another-domain.com/CORS.
Origin http://another-domain.com/CORS is not allowed by Access-Control-Allow-Origin.
</pre></li></ul>

<table class="note">
     <tbody>
      <tr>
       <th class="note">Note</th>
      </tr>
      <tr>
       <td class="note">You must define the authorized domains on the server side to ensure that CORS is handled properly. For more information on setting the authorization settings on different platforms, see <a href="http://enable-cors.org/server.html" target="_blank">Enable CORS Web site</a>.</td>
      </tr>
     </tbody>
</table>
</li>
</ol>
 <h3>Source Code</h3>
    <p>For the complete source code related to this use case, see the following file:</p>
 <ul>
    <li><a href="http://download.tizen.org/misc/examples/w3c_html5/security/cross_origin_resource_sharing" target="_blank">simple_request.html</a></li>
 </ul>
           
                <h2 id="Using_Preflight_Requests" name="Using_Preflight_Requests">Using Preflight Requests</h2>
				
<p>Learning how to handle a preflight request based on XML HTTP Request level 2 enhances the security features of your application.</p>

<ol>
<li>Create an <a href="../communication/xmlhttprequest_tutorial_w.htm">XML HTTP request</a> on the client side, using JavaScript code that requests Ajax communication. In addition, define the request <span style="font-family: Courier New,Courier,monospace">Content-Type</span> and add a custom header.
<pre class="prettyprint">
&lt;script&gt;
&nbsp;&nbsp;&nbsp;var xhr = new XMLHttpRequest();
&nbsp;&nbsp;&nbsp;xhr.open(&quot;PUT&quot;, &quot;http://another-domain.com/CORS/&quot;);

&nbsp;&nbsp;&nbsp;xhr.setRequestHeader(&quot;Content-Type&quot;, &quot;application/json&quot;);

&nbsp;&nbsp;&nbsp;xhr.setRequestHeader(&quot;Header-Custom-TizenCORS&quot;, &quot;OK&quot;);
&nbsp;&nbsp;&nbsp;xhr.send(data);
&lt;/script&gt;
</pre>
</li>

<li><p>On the server side, define the domain from which requests are allowed. In this case, the <span style="font-family: Courier New,Courier,monospace">http://110.0.0.160:8081</span> domain has the required authority. In addition, define various server settings.</p>
<pre class="prettyprint">
&lt;?php
&nbsp;&nbsp;&nbsp;header(&quot;Access-Control-Allow-Origin: http://110.0.0.160:8081&quot;);

&nbsp;&nbsp;&nbsp;/* Allowed request method */
&nbsp;&nbsp;&nbsp;header(&quot;Access-Control-Allow-Methods: PUT&quot;);

&nbsp;&nbsp;&nbsp;/* Allowed custom header */
&nbsp;&nbsp;&nbsp;header(&quot;Access-Control-Allow-Headers: Content-Type&quot;);

&nbsp;&nbsp;&nbsp;/* Age set to 1 day to improve speed caching */
&nbsp;&nbsp;&nbsp;header(&quot;Access-Control-Max-Age: 86400&quot;);

&nbsp;&nbsp;&nbsp;/* Options request exits before the page is completely loaded */
&nbsp;&nbsp;&nbsp;if (strtolower($_SERVER[&#39;REQUEST_METHOD&#39;]) == &#39;options&#39;)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;/* Response data */
&nbsp;&nbsp;&nbsp;$arr = array(&quot;user_name&quot; => &quot;tizen&quot;, &quot;phone_number&quot; => &quot;12312334234&quot;);

&nbsp;&nbsp;&nbsp;/* Response data returned in JSON format */
&nbsp;&nbsp;&nbsp;echo json_encode($arr);
?&gt;
</pre>
</li>

<li>Check the request and response headers.
<p>If you check the network log, you find that 2 communications between the browser and server occur consecutively: first the preflight request and response, and then the actual request and response.</p>
<ul>
<li><p>The preflight request checks the access authority before sending the actual data. The <span style="font-family: Courier New,Courier,monospace">Origin</span> and <span style="font-family: Courier New,Courier,monospace">Access-Control-Request-Headers</span> headers have been added to the request, because the request has a user-defined custom header, and the <span style="font-family: Courier New,Courier,monospace">Content-Type</span> set to <span style="font-family: Courier New,Courier,monospace">application/json</span>:</p>
<pre>
OPTION http://origin-domain.com/CORS/non_simple_reqeust.html HTTP/1.1
Host: origin-domain.com
Origin: http://origin-domain.com
Access-Control-Request-Headers: Header-Custom-Tizen, origin, content-type
</pre></li>
<li><p>If the request is sent from the browser side, a preflight response is sent for it from the server side. The browser determines from the response whether the actual data is sent. In the following preflight response example, the <span style="font-family: Courier New,Courier,monospace">Content-Type</span> and <span style="font-family: Courier New,Courier,monospace">Header-Custom-Tizen</span> are included in the <span style="font-family: Courier New,Courier,monospace">Access-Control-Allow-Headers</span> header:</p>
<pre>
HTTP/1/1 200 OK
Access-Control-Allow-Headers: Content-Type, Header-Custom-Tizen
Access-Control-Allow-Methods:PUT
Access-Control-Allow-Origin:http://origin-domain.com
Access-Control-Max-Age:86400
</pre></li>
<li><p>Once the access authority is checked, the browser sends the actual data request to the server side. This request includes the actual data:</p>
<pre>
PUT http://origin-domain.com/CORS/non_simple_reqeust.html HTTP/1.1
Content-Type: application/json
Host: origin-domain.com
Origin: http://origin-domain.com
Header-Custom-TizenCOURSTest: OK
</pre></li>
<li><p>The response to the actual data request contains the actual handled result:</p>
<pre>
HTTP/1/1 200 OK
Access-Control-Allow-Headers: Content-Type, Header-Custom-Tizen
Access-Control-Allow-Methods: PUT
Access-Control-Allow-Origin: http://origin-domain.com
Access-Control-Max-Age:86400
</pre></li></ul>

<p>If the access authority fails, the browser does not send the actual data request. Instead, the following error occurs in the browser side:</p>
<pre>
XMLHttpRequest cannot load http://another-domain.com/CORS.
Request header field Header-Custom-Tizen is not allowed by Access-Control-Allow-Headers.
</pre>

<table class="note">
     <tbody>
      <tr>
       <th class="note">Note</th>
      </tr>
      <tr>
       <td class="note">You must define the authorized domains on the server side to ensure that CORS is handled properly. For more information on setting the authorization settings on different platforms, see <a href="http://enable-cors.org/server.html" target="_blank">Enable CORS Web site</a>.</td>
      </tr>
     </tbody>
</table>
</li>
</ol>

          

			
<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
 
 </body>
 </html>