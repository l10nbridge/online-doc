<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

	<title>Service Application: Creating a Service Application</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Wearable Web" src="../../../images/wearable_s_w_optional.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#create">Creating a Service Application</a></li>
			<li><a href="#package">Packaging a Service Application</a></li>
			<li><a href="#launch">Launching a Service Application</a></li>
			<li><a href="#terminate">Terminating a Service Application</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.guides/html/web/tizen/service/service_w.htm">Service Application Guide</a></li>
        </ul> 
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Service Application: Creating a Service Application</h1>
 
<p>This tutorial demonstrates how you can create a service application and implement specific features within the service application.</p>

<p>This feature is supported in wearable applications only. The Web service application is an optional feature, which means that it may not be supported in all wearable devices.</p>

<h2>Warm-up</h2>

<p>Become familiar with the service application basics by learning about:</p>
<ul>
<li><a href="#create">Creating a Service Application</a>
<p>Create a service application by writing key components.</p></li>
<li><a href="#package">Packaging a Service Application</a>
<p>Package a service application.</p></li>
<li><a href="#launch">Launching a Service Application</a>
<p>Launch a service application.</p></li>
<li><a href="#terminate">Terminating a Service Application</a>
<p>Terminate a service application</p></li>
</ul>

				<h2 id="create" name="create">Creating a Service Application</h2>
				
 <p>Learning how to create a service application is a basic application management skill:</p>


<p>The service application consists of a number of callbacks. To write a service application, you must implement the predefined callbacks for their purpose and register them using the <a href="http://wiki.commonjs.org/wiki/Modules/1.1" target="_blank">CommonJS Modules</a> API.</p>

<ol><li>Create the service entry point with the <span style="font-family: Courier New,Courier,monospace">onStart()</span> callback.
<p>The callback is invoked when the service is launched. Within the callback, you can prepare resources and initialize whatever the service application needs during the execution.</p>
<pre class="prettyprint">
module.exports.onStart = function() 
{
&nbsp;&nbsp;&nbsp;console.log(&quot;service start&quot;);

&nbsp;&nbsp;&nbsp;var remoteMsgPort = tizen.messageport.requestRemoteMessagePort(&quot;websvcapp0.WebServiceApplication&quot;, &quot;SERVICE_SAMPLE1&quot;);
&nbsp;&nbsp;&nbsp;var localMsgPort = tizen.messageport.requestLocalMessagePort(&quot;SERVICE_SAMPLE2&quot;);

&nbsp;&nbsp;&nbsp;function onreceived(data, remoteMsgPort) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; data.length; i++) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data[i].value == &quot;SERVICE_EXIT&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;localMsgPort.removeMessagePortListener(watchId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.application.getCurrentApplication().exit();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;var watchId = localMsgPort.addMessagePortListener(onreceived);
}
</pre></li>

<li>Write the request handler with the <span style="font-family: Courier New,Courier,monospace">onRequest()</span> callback.
<p>The callback is invoked to handle incoming service requests. Within the callback, write code for each request from other applications and the platform. To obtain the request, use the <span style="font-family: Courier New,Courier,monospace">getRequestedAppControl()</span> method in the <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/application.html">Application</a> API.</p>
<pre class="prettyprint">
module.exports.onRequest = function() 
{
&nbsp;&nbsp;&nbsp;var reqAppControl = tizen.application.getCurrentApplication().getRequestedAppControl();
&nbsp;&nbsp;&nbsp;if (reqAppControl) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (reqAppControl.appControl.operation == &quot;http://tizen.org/appcontrol/operation/service&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.systeminfo.addPropertyValueChangeListener(&quot;DEVICE_ORIENTATION&quot;, onDeviceOrientationSuccess);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
</pre></li>

<li>Write the termination with the <span style="font-family: Courier New,Courier,monospace">onExit()</span> callback.
<p>The callback is invoked when the service is about to be stopped. All resources can be cleared and backed up within the callback.</p>
<pre class="prettyprint">
module.exports.onExit = function() 
{
&nbsp;&nbsp;&nbsp;console.log(&quot;service terminate&quot;);
}
</pre></li></ol>
			
				<h2 id="package" name="package">Packaging a Service Application</h2>
				
 <p>Learning how to package a service application is a basic application management skill:</p>

<p>A Web application package can contain 1 Web UI application and several service applications. Each application in the Web application package shares the same package ID and has a unique application ID. In the following example, you can use the <span style="font-family: Courier New,Courier,monospace">&lt;tizen:application&gt;</span> element to contain information for the Web UI application. The <span style="font-family: Courier New,Courier,monospace">&lt;tizen:service&gt;</span> element is used to contain information about the service application. The UI application and the service application have the same package ID and different application IDs.</p>

<ol><li>Define the service in the <span style="font-family: Courier New,Courier,monospace">config.xml</span> file.
<p>The <span style="font-family: Courier New,Courier,monospace">&lt;tizen:service&gt;</span> element allows you to define the characteristics of the service application. For example, you can specify the name, icon, and starting JavaScipt file of the service application.</p>
<pre class="prettyprint lang-js">
&lt;?xml version=&quot;1.0&quot;encoding=&quot;TF-8&quot;&gt;
&lt;widget xmlns=&quot;http://www.w3.org/ns/widgets&quot; xmlns:tizen=http://tizen.org/ns/widgets
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=&quot;http://yourdomain/WebServiceApplication&quot; version=&quot;1.0.0&quot; viewmodes=&quot;maximized&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;tizen:application id=&quot;websvcapp0.WebServiceApplication&quot; package=&quot;websvcapp0&quot; required_version=&quot;2.3&quot; /&gt;
&nbsp;&nbsp;&nbsp;&lt;content src=&quot;index.html&quot; /&gt;
&nbsp;&nbsp;&nbsp;&lt;feature name=&quot;http://tizen.org/feature/screen.size.all&quot; /&gt;
&nbsp;&nbsp;&nbsp;&lt;icon src=&quot;icon.png&quot; /&gt;
&nbsp;&nbsp;&nbsp;&lt;name&gt;WebServiceApplication&lt;/name&gt;
&nbsp;&nbsp;&nbsp;&lt;tizen:service id=&quot;websvcapp0.service1&quot; auto-restart=&quot;true&quot; on-boot=&quot;false&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tizen:content src=&quot;service/service1.js&quot; /&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tizen:name&gt;WebServiceApplication1&lt;/tizen:name&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tizen:icon src=&quot;icon1.png&quot; /&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tizen:description&gt;WebServiceApplication1&lt;/tizen:description&gt;
&nbsp;&nbsp;&nbsp;&lt;/tizen:service&gt;
&lt;/widget&gt;
</pre></li></ol>
 
 		
				<h2 id="launch" name="launch">Launching a Service Application</h2>
				
 <p>Learning how to launch a service application is a basic application management skill:</p>


<ul>
<li>Launch by other applications
<p>The Web application launches a service application by calling the <span style="font-family: Courier New,Courier,monospace">launch()</span> or <span style="font-family: Courier New,Courier,monospace">launchAppControl()</span> method with the service application ID:</p>
<pre class="prettyprint">
tizen.application.launchAppControl(new tizen.ApplicationControl(&quot;http://tizen.org/appcontrol/operation/service&quot;),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;websvcapp0.service1&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function() {console.log(&quot;Launch Service succeeded&quot;);},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(e) {console.log(&quot;Launch Service failed: &quot; + e.message);});
</pre>
</li>

<li>Launch by the system
<p>A service application can start automatically if the <span style="font-family: Courier New,Courier,monospace">on-boot</span> attribute is set to <span style="font-family: Courier New,Courier,monospace">true</span>. This requires partner-level certification.</p>
<pre class="prettyprint">
&lt;tizen:service id=&quot;websvcapp0.service1&quot; on-boot=&quot;true&quot;&gt;
</pre>
</li>
</ul>

				<h2 id="terminate" name="terminate">Terminating a Service Application</h2>
				
<p>Learning how to terminate a service application is a basic application management skill:</p>


<ol>
<li><p>The service application can terminate itself when it receives a particular request. The following example code uses the <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/messageport.html">Message Port</a> API to send such a request to the service application.</p>
<p>The application sends a message by calling the <span style="font-family: Courier New,Courier,monospace">sendMessage()</span> method. </p>
<pre class="prettyprint">
var remoteMsgPort = tizen.messageport.requestRemoteMessagePort(&quot;websvcapp0.service1&quot;, &quot;SERVICE_SAMPLE2&quot;);
remoteMsgPort.sendMessage([{key: &quot;key&quot;, value: &quot;SERVICE_EXIT&quot;}]);
</pre>
</li>

<li>The service application can terminate itself by calling the <span style="font-family: Courier New,Courier,monospace">exit()</span> method after getting a signal through the message port:
<pre class="prettyprint">
var localMsgPort = tizen.messageport.requestLocalMessagePort(&quot;SERVICE_SAMPLE2&quot;);
function onreceived(data, remoteMsgPort) 
{
&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; data.length; i++) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data[i].value == &quot;SERVICE_EXIT&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;localMsgPort.removeMessagePortListener(watchId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.application.getCurrentApplication().exit();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
var watchId = localMsgPort.addMessagePortListener(onreceived);
</pre>
</li>
</ol>
 			

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
