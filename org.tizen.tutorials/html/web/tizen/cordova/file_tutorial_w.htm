<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
    <script type="text/javascript" src="../../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>
    <title>File</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../../images/mobile_s_w.png"/> <img alt="Wearable Web" src="../../../images/wearable_s_w.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#filesystemresolve">Resolving filesystem entries</a></li>
            <li><a href="#directories">Directories operations</a></li>
            <li><a href="#files">Files operations</a></li>
            <li><a href="#readwrite">Reading/writing files content</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../../org.tizen.guides/html/web/tizen/cordova/file_w.htm">File Guide</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html">File API for Mobile Web</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/cordova/file.html">File API for Wearable Web</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/device_api/tv/tizen/cordova/file.html">File API for TV Web</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>File</h1>

<p>This tutorial demonstrates how to perform actions on filesystem of the device. One could resolve, read, modify files and directories. It is also possible to handle content of files (both reading and writing).</p>

<h2>Prerequisites</h2>
      <p>To use functionalities based on filesystem, application need to have defined privileges in config.xml file:</p>
      <ul>
        <li><p>For reading features:</p>
        <pre class="prettyprint">&lt;tizen:privilege name=&quot;http://tizen.org/privilege/filesystem.read&quot;/&gt;</pre></li>
        <li><p>For writing features:</p>
        <pre class="prettyprint">&lt;tizen:privilege name=&quot;http://tizen.org/privilege/filesystem.write&quot;/&gt;</pre>
        </li>
      </ul>

<!-------------------------------------------------- filesystemresolve -------------------------------------------------->
<h2 id="filesystemresolve">Resolving filesystem entries</h2>
<p>
Resolving inital root for other filesystem operations could be performed in two ways.
</p>
  <ol>
    <li><p>By using <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#LocalFileSystem::requestFileSystem">requestFileSystem()</a> global async method. First it is needed to prepare callback for handling success and failure of operation.</p>
        <pre class="prettyprint">
 successCallback = function(fs) {
     console.log('File system name ' + fs.name);
 };

 errorCallback = function(err) {
     console.log(err.code);
 };
        </pre>
        <p>Second step is to call method with created callbacks. Filesystem request could use temporary or persistent filesystem with defined size.</p>
        <pre class="prettyprint">
 requestFileSystem(TEMPORARY, 1024*1024, successCallback, errorCallback);
        </pre>
<p>
The output:
</p>
<pre class="prettyprint">
  File system name temporary
</pre>
    </li>
    <li><p>By using <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#LocalFileSystem::resolveLocalFileSystemURL">
resolveLocalFileSystemURL()</a> global async method. This method could be used to retrieve <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#DirectoryEntry">DirectoryEntry</a>
 or <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileEntry">FileEntry</a> objects using local URI. First prepare callbacks.</p>
        <pre class="prettyprint">
 successCallback = function(entry) {
     console.log('Entry name ' + entry.name);
 };

 errorCallback = function(err) {
     console.log(err.code);
 };
        </pre>
        <p>Second step is to call method with provided valid uri for existing file or directory, we would like to work with.</p>
        <pre class="prettyprint">
 var uri = 'file:///home/owner/content/Documents/example.txt';
 resolveLocalFileSystemURL(uri, successCallback, errorCallback);
        </pre>
<p>
The output:
</p>
<pre class="prettyprint">
  Entry name example.txt
</pre>
    </li>
  </ol>
<!-------------------------------------------------- filesystemresolve -------------------------------------------------->

<!-------------------------------------------------- directories -------------------------------------------------->
<h2 id="directories">Directories operations</h2>
<p>
Description.
</p>
<pre class="prettyprint">
//////////////////// some code
</pre>
<p>
The output:
</p>
<pre class="prettyprint">
///////////////// some output
</pre>
<!-------------------------------------------------- directories -------------------------------------------------->

<!-------------------------------------------------- files -------------------------------------------------->
<h2 id="files">Files operations</h2>
<p>
One could perform operations on files resolved using methods of <a href="#filesystemresolve">resolving file entries</a>. File specific operations are:
</p>
  <ol>
    <li><p><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileEntry::createWriter">createWriter()</a> which alows to create
    <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileWriter">FileWriter</a> object.</p>
        <pre class="prettyprint">
 var f; // it needs to be FileEntry object resolved using methods presented before
 f.createWriter(function(fileWriter) {
         console.log ('created fileWriter object for ' + fileWriter.fileName);
       });
        </pre>
<p>
The output:
</p>
<pre class="prettyprint">
 created fileWriter object for testFile.txt
</pre>
    </li>
    <li><p>By using <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileEntry::file">
file()</a> one can get a <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#File">File</a> object  that represents the current state of the file that this FileEntry represents.
     </p>
        <pre class="prettyprint">
 var f; // it needs to be FileEntry object resolved using methods presented before
 f.file(function (file) {
         console.log ('created file object for ' + file.name);
       });
        </pre>
<p>
The output:
</p>
<pre class="prettyprint">
 created file object for example.txt
</pre>
    </li>
  </ol>
  </ol>
<!-------------------------------------------------- files -------------------------------------------------->

<!-------------------------------------------------- readwrite -------------------------------------------------->
<h2 id="readwrite">Reading/writing files content</h2>
<ol>
<li>
<p>
To read file and return data as a base64-encoded data URL, you can use <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileReader::readAsDataURL"><i>readAsDataURL</i></a> method.
</p>
<pre class="prettyprint">
var blob = new Blob(['abc']);
var fileReader = new FileReader();
fileReader.onload = function(){
    console.log('Loaded, result = '+fileReader.result);
};
fileReader.readAsDataURL(blob);
</pre>
<p>
The output:
</p>
<pre class="prettyprint">
Loaded, result = data:;base64,YWJj
</pre>
</li>

<li>
<p>
To read file and return data as a text, you can use <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileReader::readAsText"><i>readAsText</i></a> method.
</p>
<pre class="prettyprint">
var blob = new Blob(['abc']);
var fileReader = new FileReader();
fileReader.onload = function(){
    console.log('Loaded, result = '+fileReader.result);
};
fileReader.readAsText(blob);
</pre>
<p>
The output:
</p>
<pre class="prettyprint">
Loaded, result = abc
</pre>
</li>

<li>
<p>
To read file and return data as a binary and returns a binary string, you can use <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileReader::readAsBinaryString"><i>readAsBinaryString</i></a> method.
</p>
<pre class="prettyprint">
var blob = new Blob(['abc']);
var fileReader = new FileReader();
fileReader.onload = function(){
    console.log('Loaded, result = '+fileReader.result);
};
fileReader.readAsBinaryString(blob);
</pre>
<p>
The output:
</p>
<pre class="prettyprint">
Loaded, result = abc
</pre>
</li>

<li>
<p>
To read file and return data as an array buffer and result would be byte[], you can use <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileReader::readAsArrayBuffer"><i>readAsArrayBuffer</i></a> method.
</p>
<pre class="prettyprint">
var blob = new Blob(['abc']);
var fileReader = new FileReader();
fileReader.onload = function(){
    resultValue = fileReader.result;
     console.log("Result: "+resultValue.toString()+' '+'ByteLength: '+resultValue.byteLength);
};
fileReader.readAsArrayBuffer(blob);
</pre>
<p>
The output:
</p>
<pre class="prettyprint">
Result: [object ArrayBuffer]
ByteLength: 3
</pre>
</li>

<li>
<p>
To abort current operation of reading file, you can use <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileReader::abort"><i>abort</i></a> method.
</p>
<pre class="prettyprint">
var blob = new Blob(['abc']);
var fileReader = new FileReader();
fileReader.onload = function(){
    console.log('Loaded');
};
fileReader.onabort = function(){
    console.log('aborted');
};
fileReader.readAsDataURL(blob);
fileReader.abort();
</pre>
<p>
The output:
</p>
<pre class="prettyprint">
aborted
</pre>
</li>

<li>
<p>
To writes data to the file, you can use <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileWriter::write"><i>write</i></a> method.
</p>
<pre class="prettyprint">
successCallback = function(writer) {
   writer.onwrite = function(evt) {
        console.log('write success');
   };
   writer.write('some sample text');
};
errorCallback = function(err) {
    console.log(err.code);
};
// entry is FileEntry object retrieved by getFile() function of DirectoryEntry interface.
entry.createWriter(successCallback, errorCallback);
</pre>
<p>
The output:
</p>
<pre class="prettyprint">
write success
</pre>
</li>

<li>
<p>
To moves the file pointer to the specified byte, you can use <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileWriter::seek "><i>seek</i></a> method.
</p>
<pre class="prettyprint">
successCallback = function(writer) {
   // fast forwards file pointer to the end of file.
   writer.seek(writer.length);
};

errorCallback = function(err) {
    console.log(err.code);
};

// entry is FileEntry object retrieved by getFile() function of DirectoryEntry interface.
entry.createWriter(successCallback, errorCallback);
</pre>
</li>

<li>
<p>
To short the file to the specified length, you can use <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileWriter::truncate"><i>truncate</i></a> method.
</p>
<pre class="prettyprint">
successCallback = function(writer) {
writer.onwrite = function(evt) {
        console.log('truncate success');
   };
    writer.truncate(10);
};

errorCallback = function(err) {
    console.log(err.code);
};

// entry is FileEntry object retrieved by getFile() function of DirectoryEntry interface.
entry.createWriter(successCallback, errorCallback);
</pre>
<p>
The output:
</p>
<pre class="prettyprint">
truncate success
</pre>
</li>

<li>
<p>
To abort writing the file, you can use <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/file.html#FileWriter::abort"><i>abort</i></a> method.
</p>
<pre class="prettyprint">
successCallback = function(writer) {
   writer.onwrite = function(evt) {
        console.log('write success');
   };
   writer.onabort = function(e){
         console.log('abort');
   };
   writer.write('some sample text');
   writer.abort();
};

errorCallback = function(err) {
    console.log(err.code);
};

// entry is FileEntry object retrieved by getFile() function of DirectoryEntry interface.
entry.createWriter(successCallback, errorCallback);
</pre>
<p>
The output:
</p>
<pre class="prettyprint">
abort
</pre>
</li>

</ol>
<!-------------------------------------------------- readwrite -------------------------------------------------->

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
