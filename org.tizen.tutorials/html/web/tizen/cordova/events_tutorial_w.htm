<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
    <script type="text/javascript" src="../../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>
    <title>Events: events provided by Cordova for use in Web API applications</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../../images/mobile_s_w.png"/> <img alt="Wearable Web" src="../../../images/wearable_s_w.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../../org.tizen.guides/html/web/tizen/cordova/events_w.htm">Events Guide</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/events.html">Events API for Mobile Web</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/cordova/events.html">Events API for Wearable Web</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/device_api/tv/tizen/cordova/events.html">Events API for TV Web</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Events: events provided by Cordova for use in Web API applications</h1>

<p>This tutorial demonstrates how you can register and use custom listeners for events like deviceready, pause, resume, and button press events.</p>

<h2 id="deviceready">Waiting for deviceready event</h2>
<p>This event signals that Cordova's device APIs have loaded and are ready to access. You should wait until this event is fired, and after that you
can start using Cordova features.</p>

<ol>
<li><p>Prepare handler for the event:</p>
<pre class="prettyprint">function onDeviceReady() {
  // Now safe to use Cordova
}
</pre>
</li>
<li><p>Add event listener:</p>
<pre class="prettyprint">document.addEventListener('deviceready', onDeviceReady);</pre>
</li>
</ol>
<p>Alternatively you can add deviceready event listener in <span style="font-family: monospace">&lt;body&gt;</span> onload hadler, for example:</p>
<pre class="prettyprint">window.onload = function() {
    document.addEventListener("deviceready", onDeviceReady);
};</pre>

<h2 id="buttons">Pause and resume events</h2>
<p>We will add event listeners for pause and resume events.</p>
<p>Pause signals that application is put into the background. Typically when screen is being locked or when user switches to a different application. Resume signals tha native platform pulls the application out from the background.</p>

<ol>
<li><p>Prepare our event handlers for pause and resume events.<p>
    <pre class="prettyprint">
function onPause() {
    console.log("Application paused");
}

function onResume() {
    console.log("Application resumed");
}</pre>
</li>
<li><p>Add event listeners in deviceready event handler (see <a href="#deviceready">onDeviceReady</a> above).<p>
    <pre class="prettyprint">document.addEventListener("pause", onPause);
document.addEventListener("resume", onResume);</pre>
</li>
</ol>

<h2 id="buttons">Button press events</h2>
<p>We will add event listeners for menu, volume up and volume down buttons. Each event is triggered when corresponding button is pressed.</p>

<ol>
<li><p>Prepare our event handlers for menubutton, volumeupbutton, and volumeupbutton events.<p>
    <pre class="prettyprint">
function onVolumeChanged() {
    console.log("Volume changed");
}

function onMenuButton() {
    console.log("Menu button pressed");
}</pre>
</li>
<li><p>In deviceready event handler (see <a href="#deviceready">onDeviceReady</a> above) add listeners. For this example will use one listener for both volume up and down buttons.<p>
    <pre class="prettyprint">document.addEventListener("menubutton", onMenuButton);
document.addEventListener("volumeupbutton", onVolumeChanged);
document.addEventListener("volumedownbutton", onVolumeChanged);</pre>
</li>
</ol>
<p>Now press buttons and see results in system console.</p>

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
