<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
    <script type="text/javascript" src="../../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>
    <title>Dialogs: dialog boxes and notifications</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../../images/mobile_s_w.png"/> <img alt="Wearable Web" src="../../../images/wearable_s_w.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../../org.tizen.guides/html/web/tizen/cordova/dialogs_w.htm">Dialogs Guide</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/dialogs.html">Dialogs API for Mobile Web</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/cordova/dialogs.html">Dialogs API for Wearable Web</a></li>
            <li><a href="../../../../../org.tizen.web.apireference/html/device_api/tv/tizen/cordova/dialogs.html">Dialogs API for TV Web</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Dialogs: dialog boxes and notifications</h1>


<p>This tutorial demonstrates how to make different types of dialog boxes: alert, confirm, and prompt.  Also demonstrates how to make a beep sound.</p>
<p><span style="font-family: monospace">navigator.notification</span> object contains all necessary functions.</p>

<h2 id="alert">Alert</h2>
<p>Show a custom alert with one button.</p>

<ol>
<li><p>Prepare callback method to be invoked when user closes alert.<p>
    <pre class="prettyprint">var alertDismissed = function() {
   console.log('Alert was dismissed');
};</pre>
</li>
<li><p>Open alert dialog box with alert text and callback function.<p>
    <pre class="prettyprint">navigator.notification.alert('Please click OK button.', alertDismissed );</pre>
</li>
<li><p>Alternatively you can open alert dialog box with optional title (default is 'Dialog'), and optional button name (default is 'OK').<p>
    <pre class="prettyprint">navigator.notification.alert('Please click Close button.', alertDismissed,
                             'Alert title', 'Close' );</pre>
</li>
</ol>
<p>When user dismisses the dialog box log should appear in console.</p>

<h2 id="confirm">Confirm</h2>
<p>Show a confirmation dialog box with set of buttons.</p>

<ol>
<li><p>Prepare callback method to be invoked when user clicks a button.<p>
    <pre class="prettyprint">var confirmCallback = function(buttonIndex) {
   console.log('Selected button was ' + buttonIndex);
};</pre>
</li>
<li><p>Open alert dialog box with set of buttons as last parameter. Default values are ['OK', 'Cancel'].<p>
    <pre class="prettyprint">navigator.notification.confirm('Choose one option:', confirmCallback,
                              'Options title', ['Option1', 'Option2'] );</pre>
</li>
</ol>
<p>Callback is invoked when user performs an action. Callback provides index of button pressed (1,2,3 etc.) or 0, if dialog was dismissed without button press.</p>

<h2 id="prompt">Prompt</h2>
<p>Show a prompt dialog box where user can put some text, with set of buttons.</p>

<ol>
<li><p>Prepare callback method to be invoked when user clicks a button.<p>
    <pre class="prettyprint">var promptCallback = function(results) {
   console.log('User entered a value ' + results.input1 + ', and selected option ' + results.buttonIndex);
};</pre>
</li>
<li><p>Open alert dialog box with set of buttons and default text to be show in text input field. Default values are ['OK', 'Cancel'], and an empty string.<p>
    <pre class="prettyprint">navigator.notification.prompt('Please enter text:', promptCallback, 'Prompt dialog box',
                              ['OK', 'Exit'], 'default text');</pre>
</li>
</ol>
<p>Callback call provides <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/dialogs.html#PromptData">PromptData</a> object as an argument, which holds all data provided by user.</p>

<h2 id="beep">Beep</h2>
<p>Make a beep sound one or more times.</p>

<ol>
<li><p>Make a beep one time:<p>
    <pre class="prettyprint">navigator.notification.beep(1);</pre>
</li>
<li><p>Make a beep three times:<p>
    <pre class="prettyprint">navigator.notification.beep(3);</pre>
</li>
</ol>
<p></p>


<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
