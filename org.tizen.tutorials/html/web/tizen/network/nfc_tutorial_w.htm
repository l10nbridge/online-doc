<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
    <script type="text/javascript" src="../../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

    <title>NFC: Managing an NFC Device and Detecting NFC Tags and Peers</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../../images/mobile_s_w_optional.png"/> <img alt="Wearable Web" src="../../../images/wearable_s_w_optional.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#Managing_NFC_Conn">Managing NFC Connectivity</a></li>
            <li><a href="#Detecting_NFC_Tags" >Detecting NFC Tags and Peer Devices</a></li>
			<li>NDEF data
			<ul class="toc">
            <li><a href="#Handling_NDEF_Messages">Handling NDEF Messages</a></li>
            <li><a href="#Exchanging_NDEF_Peers">Exchanging NDEF Data with Peers</a></li>
            <li><a href="#Exchanging_NDEF_Tags">Exchanging NDEF Data with Tags</a></li>
			</ul></li>
            <li><a href="#Using_NFC_Card_Emulation">Using NFC Card Emulation</a></li>
			<li><a href="#Using_NFC_Host_Based_Card_Emulation">Using NFC Host-based Card Emulation</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../../org.tizen.guides/html/web/tizen/network/nfc_w.htm">NFC Guide</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html">NFC API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html">NFC API for Wearable Web</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>NFC: Managing an NFC Device and Detecting NFC Tags and Peers</h1>
  
 <p>This tutorial demonstrates how you can use NFC connectivity to detect NFC tags and exchange data with NFC-enabled devices.</p>
 
<p>The NFC API is optional for both Tizen mobile and wearable profiles, which means that it may not be supported in all mobile and wearable devices.</p>
     
      <h2 id="warm_up" name="warm_up">Warm-up</h2>
      <p>Become familiar with the NFC API basics by learning about:</p>
      <ul>
       <li><a href="#Managing_NFC_Conn">Managing NFC Connectivity</a> <p>Retrieve the default NFC adapter and enable or disable NFC.</p></li>
       <li><a href="#Detecting_NFC_Tags">Detecting NFC Tags and Peer Devices</a> <p>Receive notifications when an NFC tag or peer device has been detected.</p></li>
	   <li>NDEF data
	   <ul>
       <li><a href="#Handling_NDEF_Messages">Handling NDEF Messages</a> <p>Create NDEF records and add them to an NDEF message.</p></li>
       <li><a href="#Exchanging_NDEF_Peers">Exchanging NDEF Data with Peers</a> <p>Read NDEF messages and exchange them with peer devices.</p></li>
       <li><a href="#Exchanging_NDEF_Tags">Exchanging NDEF Data with Tags</a> <p>Read NDEF messages and exchange them with tags.</p></li>
	   </ul></li>
       <li><a href="#Using_NFC_Card_Emulation">Using NFC Card Emulation</a> <p>Enable NFC card emulation and monitor the transaction taking place.</p></li>
	   <li><a href="#Using_NFC_Host_Based_Card_Emulation">Using NFC Host-based Card Emulation</a> <p>Handle NFC host-based card emulation events.</p></li>
      </ul>
      <h2 id="task" name="task">Task in Mobile Applications</h2>
      <p>In the <a href="task_contactsexchanger_w.htm">Contacts Exchanger</a> task, we will walk through how to exchange contacts between devices over an NFC connection.</p>

     <h2>Prerequisites</h2>
      <p>To use the application and NFC APIs, the application has to request permission by adding the corresponding privileges to the config.xml file.</p>
      <pre class="prettyprint">&lt;tizen:privilege name=&quot;http://tizen.org/privilege/application.launch&quot;/&gt;
&lt;tizen:privilege name=&quot;http://tizen.org/privilege/nfc.cardemulation&quot;/&gt;
&lt;tizen:privilege name=&quot;http://tizen.org/privilege/nfc.common&quot;/&gt;
&lt;tizen:privilege name=&quot;http://tizen.org/privilege/nfc.p2p&quot;/&gt;
&lt;tizen:privilege name=&quot;http://tizen.org/privilege/nfc.tag&quot;/&gt;</pre>

  <h2 id="Managing_NFC_Conn" name="Managing_NFC_Conn">Managing NFC Connectivity</h2>
  
  <p>Learning how to enable or disable the NFC service is a basic NFC management skill:</p>
  <table class="note">
     <tbody>
      <tr>
       <th class="note">Note</th>
      </tr>
      <tr>
       <td class="note">The NFC API does not provide methods to directly enable or disable the NFC adapter of the device. When NFC is required, you must request the built-in Settings application to let the user enable or disable the NFC.</td>
      </tr>
     </tbody>
    </table>
  <ol>
   <li><p>To get the default NFC adapter, use the <span style="font-family: Courier New,Courier,monospace">getDefaultAdapter()</span> method and prepare an <span style="font-family: Courier New,Courier,monospace">ApplicationControl</span> object (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/application.html#ApplicationControl">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/application.html#ApplicationControl">wearable</a> applications) to request the NFC switching operation:</p>
   <pre class="prettyprint">var nfcSwitchAppControl = new tizen.ApplicationControl(&quot;http://tizen.org/appcontrol/operation/setting/nfc&quot;, null, null, null,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[new tizen.ApplicationControlData(&quot;type&quot;, &quot;nfc&quot;)]);
var adapter = tizen.nfc.getDefaultAdapter();</pre></li>
   <li>Define the event listener for the <span style="font-family: Courier New,Courier,monospace">launchAppControl()</span> method:
<pre class="prettyprint">function launchSuccess()
{
&nbsp;&nbsp;&nbsp;console.log(&quot;NFC Settings application has successfully launched.&quot;);
}
function launchError(error) 
{
&nbsp;&nbsp;&nbsp;alert(&quot;An error occurred: &quot; + error.name + &quot;. Please enable NFC through the Settings application.&quot;);
}</pre></li>
<li>Define the event handler for an application control, which implements the <span style="font-family: Courier New,Courier,monospace">ApplicationControlDataArrayReplyCallback</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/application.html#ApplicationControlDataArrayReplyCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/application.html#ApplicationControlDataArrayReplyCallback">wearable</a> applications):
<pre class="prettyprint">var serviceReply =
{
&nbsp;&nbsp;&nbsp;/* onsuccess is called when the launched application reports success */
&nbsp;&nbsp;&nbsp;onsuccess: function(data)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (adapter.powered)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;NFC is successfully turned on.&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;/* onfailure is called when the launched application reports failure of the requested operation */
&nbsp;&nbsp;&nbsp;onfailure: function() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(&quot;NFC Settings application reported failure.&quot;);
&nbsp;&nbsp;&nbsp;}
}</pre></li>
<li> If necessary, request launching the NFC Settings with <span style="font-family: Courier New,Courier,monospace">nfcSwitchAppControl</span> as parameter:
<pre class="prettyprint">if (adapter.powered)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;NFC is already enabled&quot;);
}
else
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Try to launch the NFC Settings application.&quot;);
&nbsp;&nbsp;&nbsp;tizen.application.launchAppControl(nfcSwitchAppControl, null, launchSuccess, launchError, serviceReply);
}</pre></li>
  </ol>
  
  <h2 id="Detecting_NFC_Tags" name="Detecting_NFC_Tags">Detecting NFC Tags and Peer Devices</h2>
  
  <p>Learning how to detect NFC tags and peer devices is a basic NFC management skill:</p>
  <ol>
   <li><p>To get the default NFC adapter, use the <span style="font-family: Courier New,Courier,monospace">getDefaultAdapter()</span> method:</p> <pre class="prettyprint">var nfcAdapter = tizen.nfc.getDefaultAdapter();</pre></li>
   <li><p>Define the event handlers for NFC tag detection using the <span style="font-family: Courier New,Courier,monospace">NFCTagDetectCallback</span> listener interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NFCTagDetectCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NFCTagDetectCallback">wearable</a> applications):</p> <pre class="prettyprint">var setTagDetect =
{
&nbsp;&nbsp;&nbsp;/* When an NFC tag is detected */
&nbsp;&nbsp;&nbsp;onattach: function(nfcTag)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;NFC Tag detected. Its type is: &quot; + nfcTag.type);
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;/* When an NFC tag becomes unavailable */
&nbsp;&nbsp;&nbsp;ondetach: function()
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;NFC Tag unavailable&quot;);
&nbsp;&nbsp;&nbsp;}
}</pre></li>
   <li><p>Register the listener to use the defined event handlers.</p> <p>You can limit the listener to detect only specific NFC tag types by defining the tag types as the second parameter of the <span style="font-family: Courier New,Courier,monospace;">setTagListener()</span> method. In the following example, only MIFARE tags are detected.</p> <pre class="prettyprint">
/* Defines the tag types to be detected */
var tagFilter = [&quot;MIFARE_MINI&quot;, &quot;MIFARE_1K&quot;, &quot;MIFARE_4K&quot;, &quot;MIFARE_ULTRA&quot;, &quot;MIFARE_DESFIRE&quot;];

/* Registers the event listener */
nfcAdapter.setTagListener(setTagDetect, tagFilter);</pre> </li>
   <li><p>To stop the tag detection, use the <span style="font-family: Courier New,Courier,monospace;">unsetTagListener()</span> method:</p> <pre class="prettyprint">
nfcAdapter.unsetTagListener();</pre> </li>
  </ol>
  <p>NFC peers are detected similarly as NFC tags, except that the <span style="font-family: Courier New,Courier,monospace;">setPeerListener()</span> method is used to register the <span style="font-family: Courier New,Courier,monospace;">NFCPeerDetectCallback</span> listener interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NFCPeerDetectCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NFCPeerDetectCallback">wearable</a> applications), and the <span style="font-family: Courier New,Courier,monospace;">unsetPeerListener()</span> method is used to stop the peer detection.</p>
    
  <h2 id="Handling_NDEF_Messages" name="Handling_NDEF_Messages">Handling NDEF Messages</h2>
  
  
  <p>Learning how to create NDEF messages is a basic NFC management skill:</p>
  <ol>
   <li><p>To create an NDEF URI record, create an <span style="font-family: Courier New,Courier,monospace;">NDEFRecordURI</span> interface instance (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NDEFRecordURI">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NDEFRecordURI">wearable</a> applications) and specify the URI parameter.</p> <p>Additionally, you can create instances of the <span style="font-family: Courier New,Courier,monospace;">NDEFRecord</span> (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NDEFRecord">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NDEFRecord">wearable</a> applications), <span style="font-family: Courier New,Courier,monospace;">NDEFRecordText</span> (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NDEFRecordText">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NDEFRecordText">wearable</a> applications), or <span style="font-family: Courier New,Courier,monospace;">NDEFRecordMedia</span> (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NDEFRecordMedia">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NDEFRecordMedia">wearable</a> applications) interfaces based on the record type to be created.</p> <pre class="prettyprint">var newRecord = new tizen.NDEFRecordURI(&quot;https://www.tizen.org/&quot;);</pre></li>
   <li><p>Create an <span style="font-family: Courier New,Courier,monospace">NDEFMessage</span> interface instance (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NDEFMessage">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NDEFMessage">wearable</a> applications):</p> <pre class="prettyprint">
var newMessage = new tizen.NDEFMessage(); </pre></li>
   <li><p>To add an NDEF record to an NDEF message, use the <span style="font-family: Courier New,Courier,monospace">records</span> attribute of the <span style="font-family: Courier New,Courier,monospace">NDEFMessage</span> interface:</p> <pre class="prettyprint">
newMessage.records[0] = newRecord;</pre></li>
  </ol>
   
  <h2 id="Exchanging_NDEF_Peers" name="Exchanging_NDEF_Peers">Exchanging NDEF Data with Peers</h2> 
  
  <p>Learning how to exchange NDEF messages is a basic NFC management skill:</p>
  <ol>
   <li><p>To receive NDEF messages from a peer device, use the <span style="font-family: Courier New,Courier,monospace;">setReceiveNDEFListener()</span> method of the <span style="font-family: Courier New,Courier,monospace;">NFCPeer</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NFCPeer">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NFCPeer">wearable</a> applications).</p><p>The <span style="font-family: Courier New,Courier,monospace;">setReceiveNDEFListener()</span> method registers the <span style="font-family: Courier New,Courier,monospace;">NDEFMessageReadCallback</span> listener interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NDEFMessageReadCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NDEFMessageReadCallback">wearable</a> applications), which is invoked when an NDEF message from a peer device is read.</p> <pre class="prettyprint">
/* NDEFMessageReadCallback listener */
function readMessage(message)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Record Count is &quot; + message.recordCount);
}

/* Set a listener to receive an NDEF message */
Peer.setReceiveNDEFListener(readMessage);</pre></li>
   <li><p>To send an NDEF message to an NFC peer, use the <span style="font-family: Courier New,Courier,monospace;">sendNDEF()</span> method:</p> <pre class="prettyprint">
var newMessage = new tizen.NDEFMessage();

Peer.sendNDEF(newMessage);</pre></li>
  </ol>
   
  <h2 id="Exchanging_NDEF_Tags" name="Exchanging_NDEF_Tags">Exchanging NDEF Data with Tags</h2>
			
  <p>Learning how to exchange NDEF data with tags is a basic NFC management skill:</p>
  <ol>
   <li><p>To read data from an NFC tag, use the <span style="font-family: Courier New,Courier,monospace;">readNDEF()</span> method of the <span style="font-family: Courier New,Courier,monospace;">NFCTag</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NFCTag">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NFCTag">wearable</a> applications).</p> <p>The <span style="font-family: Courier New,Courier,monospace;">readNDEF()</span> method registers the <span style="font-family: Courier New,Courier,monospace;">NDEFMessageReadCallback</span> listener interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NDEFMessageReadCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NDEFMessageReadCallback">wearable</a> applications), which is invoked when an NDEF message is read.</p> <pre class="prettyprint">
/* NDEFMessageReadCallback listener */
function readMessage(message)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Record Count is &quot; + message.recordCount);
}

/* Check whether the NFC tag supports NDEF format */
if (Tag.isSupportedNDEF)
{
&nbsp;&nbsp;&nbsp;/* Read NDEF data */
&nbsp;&nbsp;&nbsp;Tag.readNDEF(readMessage);
}</pre></li>
   <li><p>To write data on an NFC tag, use the <span style="font-family: Courier New,Courier,monospace;">writeNDEF()</span> method:</p> <pre class="prettyprint">
var newMessage = new tizen.NDEFMessage();
function writeCallback()
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Success!&quot;);
}
Tag.writeNDEF(newMessage, writeCallback);</pre> <p>You can use the <span style="font-family: Courier New,Courier,monospace;">transceive()</span> method to transfer raw data as a byte array to an NFC tag without knowing the underlying details of the tag.</p></li>
  </ol>
   
                <h2 id="Using_NFC_Card_Emulation" name="Using_NFC_Card_Emulation">Using NFC Card Emulation</h2>

<p>Learning how to enable or disable the NFC card emulation and detect Secure Element transactions is a basic NFC management skill:</p>
<ol>
<li>Declare the required variables and obtain the <span style="font-family: Courier New,Courier,monospace">NFCAdapter</span> object (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NFCAdapter">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NFCAdapter">wearable</a> applications) using the <span style="font-family: Courier New,Courier,monospace">getDefaultAdapter()</span> method of the <span style="font-family: Courier New,Courier,monospace">NFCManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NFCManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NFCManager">wearable</a> applications):
<pre class="prettyprint">
var adapter = tizen.nfc.getDefaultAdapter();
var modeListenerId = 0, aseListenerId = 0, transListenerId = 0;
</pre></li>
<li>Use the <span style="font-family: Courier New,Courier,monospace">addCardEmulationModeChangeListener()</span>  method of the <span style="font-family: Courier New,Courier,monospace">NFCAdapter</span> interface to register a listener to monitor the current card emulation mode:
<pre class="prettyprint">
modeListenerId = adapter.addCardEmulationModeChangeListener(function(mode)
{
&nbsp;&nbsp;&nbsp;if (mode === &quot;ALWAYS_ON&quot;)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;We are ready to go now&quot;);
&nbsp;&nbsp;&nbsp;}
});
</pre></li>
<li>To enable NFC card emulation, change the value of the <span style="font-family: Courier New,Courier,monospace">cardEmulationMode</span>  attribute:
<pre class="prettyprint">
adapter.cardEmulationMode = &quot;ALWAYS_ON&quot;;
</pre></li>
 <li>To be notified when the type of an active NFC secure element changes, use the <span style="font-family: Courier New,Courier,monospace">addActiveSecureElementChangeListener()</span>  method of the <span style="font-family: Courier New,Courier,monospace">NFCAdapter</span> interface:
<pre class="prettyprint">
aseListenerId = adapter.addActiveSecureElementChangeListener(function(seType)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Active secure element is &quot; + seType);
});
</pre></li>
<li>To be notified when a NFC secure element transaction data is exchanged, use the <span style="font-family: Courier New,Courier,monospace">addTransactionEventListener()</span>  method of the <span style="font-family: Courier New,Courier,monospace">NFCAdapter</span> interface:
<pre class="prettyprint">
function onDetected(appletId, data)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;NFC secure element transaction detected. Application: &quot; + appletId + &quot;. Protocol data: &quot; + data);
});
transListenerId = adapter.addTransactionEventListener(&quot;UICC&quot;, onDetected);
</pre></li>
<li>Remove the registered listeners when they are no longer necessary and disable NFC card emulation:
<pre class="prettyprint">
adapter.removeActiveSecureElementChangeListener(aseListenerId);
adapter.removeTransactionEventListener(transListenerId);
adapter.removeCardEmulationModeChangeListener(modeListenerId);
adapter.cardEmulationMode = &quot;OFF&quot;;
</pre></li>
</ol>
  
<h2 id="Using_NFC_Host_Based_Card_Emulation" name="Using_NFC_Host_Based_Card_Emulation">Using NFC Host-based Card Emulation</h2>

<p>Learning how to detect NFC HCE (host-based card emulation) events and manage AID (Application ID) is a basic NFC management skill:</p>
<ol>
<li><p>Specify an <span style="font-family: Courier New,Courier,monospace;">AID</span> value for receiving HCE transaction events:</p>
<ol type="a">
<li>
<p>To tell the platform which AID groups are requested by the application, a metadata element must be included in the <span style="font-family: Courier New,Courier,monospace;">config.xml</span> file:</p>
<pre class="prettyprint">
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;widget xmlns:tizen=&quot;http://tizen.org/ns/wdigets&quot; xmlns=&quot;http://www.w3.org/ns/widgets&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=&quot;http://yourdomain/basicapp&quot; version=&quot;1.0.0&quot; viewmodes=&quot;maximized&quot; &gt;
&nbsp;&nbsp;&nbsp;&lt;profile name=&quot;wearable&quot; /&gt;
&nbsp;&nbsp;&nbsp;&lt;tizen:application id=&quot;ZmAk4fxZWY.basicapp&quot; package=&quot;ZmAk4fxZWY&quot; required_version=&quot;2.3.1&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;icon src=icon.png&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;basicapp&lt;/name&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;metadata key=&quot;http://tizen.org/metadata/nfc_cardemulation&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value=&quot;/res/wgt/wallet.xml&quot;/&gt;
&lt;/widget&gt;
</pre>
<ul><li>The <span style="font-family: Courier New,Courier,monospace;">metadata</span> element must contain the <span style="font-family: Courier New,Courier,monospace;">key</span> and <span style="font-family: Courier New,Courier,monospace;">value</span> attributes.</li>
<li>The <span style="font-family: Courier New,Courier,monospace;">key</span> attribute must be <span style="font-family: Courier New,Courier,monospace;">http://tizen.org/metadata/nfc_cardemulation</span>.</li>
<li>The <span style="font-family: Courier New,Courier,monospace;">value</span> attribute must contain the AID XML file path.
<p>The <span style="font-family: Courier New,Courier,monospace;">value</span> attribute is a relative path starting from the application root path.</p></li>
</ul>
</li>
<li><p>The metadata element points to an AID XML file. The following is an example of the file with an AID declaration:</p>
<pre class="prettyprint">
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;application name=&quot;ZmAk4fxZWY.basicapp&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;wallet&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;aid-group category=&quot;payment&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;aid aid=&quot;325041592E5359532E4444463031&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;se_type=&quot;hce&quot; unlock=&quot;false&quot; power=&quot;sleep&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/aid-group&gt;
&nbsp;&nbsp;&nbsp;&lt;/wallet&gt;
&lt;/application&gt;
</pre>
<ul><li>The <span style="font-family: Courier New,Courier,monospace;">application</span> element must contain a <span style="font-family: Courier New,Courier,monospace;">name</span> attribute with an application name.</li>
<li>The <span style="font-family: Courier New,Courier,monospace;">application</span> element must contain one or more <span style="font-family: Courier New,Courier,monospace;">wallet</span> element, each of which must contain one or more <span style="font-family: Courier New,Courier,monospace;">aid-group</span> element. </li>
<li>The <span style="font-family: Courier New,Courier,monospace;">aid-group</span> element is required to contain a <span style="font-family: Courier New,Courier,monospace;">category</span> attribute with the <span style="font-family: Courier New,Courier,monospace;">payment</span> or <span style="font-family: Courier New,Courier,monospace;">other</span> value.</li>
<li>Each <span style="font-family: Courier New,Courier,monospace;">aid-group</span> element must contain one or more <span style="font-family: Courier New,Courier,monospace;">aid</span> element, each of which contains a single AID. The <span style="font-family: Courier New,Courier,monospace;">aid-group</span> can have as many <span style="font-family: Courier New,Courier,monospace;">aid</span> elements as you want.</li>
<li>The <span style="font-family: Courier New,Courier,monospace;">aid</span> element must contain the <span style="font-family: Courier New,Courier,monospace;">aid</span>, <span style="font-family: Courier New,Courier,monospace;">se_type</span>, <span style="font-family: Courier New,Courier,monospace;">unlock</span>, and <span style="font-family: Courier New,Courier,monospace;">power</span> attributes.</li>
<li>The <span style="font-family: Courier New,Courier,monospace;">se_type</span> attribute must contain <span style="font-family: Courier New,Courier,monospace;">hce</span>, <span style="font-family: Courier New,Courier,monospace;">ese</span>, or <span style="font-family: Courier New,Courier,monospace;">uicc</span>. The <span style="font-family: Courier New,Courier,monospace;">se_type</span> value can be added later.</li>
<li>The <span style="font-family: Courier New,Courier,monospace;">unlock</span> attribute must contain one of the following:
<ul><li><span style="font-family: Courier New,Courier,monospace;">true</span>: The card cannot work when the device is locked.</li>
<li><span style="font-family: Courier New,Courier,monospace;">false</span>: The card can work when the device is locked.</li></ul></li>
<li>The <span style="font-family: Courier New,Courier,monospace;">power</span> must contain one of the following:
<ul><li><span style="font-family: Courier New,Courier,monospace;">on</span>: The card can work when the device is on.</li>
<li><span style="font-family: Courier New,Courier,monospace;">off</span>: The card can work when the device is off.</li>
<li><span style="font-family: Courier New,Courier,monospace;">sleep</span>: The card can work when the device is in the sleep mode.</li></ul></li>
</ul></li></ol></li>
<li><p>Declare the required variables and obtain the <span style="font-family: Courier New,Courier,monospace">NFCAdapter</span> object (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NFCAdapter">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NFCAdapter">wearable</a> applications) using the <span style="font-family: Courier New,Courier,monospace">getDefaultAdapter()</span> method of the <span style="font-family: Courier New,Courier,monospace">NFCManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/nfc.html#NFCManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/nfc.html#NFCManager">wearable</a> applications).</p>
<p>To enable NFC card emulation, change the value of the <span style="font-family: Courier New,Courier,monospace">cardEmulationMode</span> attribute.</p>
<pre class="prettyprint">
var hceListenerId = 0;
var adapter = tizen.nfc.getDefaultAdapter();

adapter.cardEmulationMode = &quot;ALWAYS_ON&quot;;
</pre></li>
<li>
<p>To detect the HCE event, use the <span style="font-family: Courier New,Courier,monospace">addHCEEventListener()</span> method of the <span style="font-family: Courier New,Courier,monospace">NFCAdapter</span> interface to register a listener.</p>
<p>Use the <span style="font-family: Courier New,Courier,monospace">sendHostAPDUResponse()</span> method of the <span style="font-family: Courier New,Courier,monospace">NFCAdapter</span> interface to send a host APDU response to a contactless front-end. (APDU - Application Protocol Data Unit - is defined in the ISO/IEC 7816-4 specification.)</p>
<pre class="prettyprint">
var successCB = function()
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Sending APDU response was successful.&quot;);
};

var errorCB = function()
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Sending APDU response failed.&quot;);
};

hceListenerId = adapter.addHCEEventListener(function(event_data)
{
&nbsp;&nbsp;&nbsp;if (event_data.eventType == &quot;ACTIVATED&quot;)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;HCE activated&quot;);
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;else if (event_data.eventType == &quot;DEACTIVATED&quot;)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;HCE deactivated&quot;);
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;else if (event_data.eventType == &quot;APDU_RECEIVED&quot;)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;APDU received&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var apdu_response = [0x00,0xA4,0x04,0x00,0x04,0x11,0x12, 0x13, 0x14];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adapter.sendHostAPDUResponse(apdu_response, successCB, errorCB);
&nbsp;&nbsp;&nbsp;}
});
</pre></li> 
<li>To register an AID for a specific category and secure element type, use the <span style="font-family: Courier New,Courier,monospace">registerAID()</span> method of the <span style="font-family: Courier New,Courier,monospace">NFCAdapter</span> interface:
<pre class="prettyprint">
try 
{
&nbsp;&nbsp;&nbsp;var aid = &quot;ABC0012345&quot;;
&nbsp;&nbsp;&nbsp;adapter.registerAID(&quot;HCE&quot;, aid, &quot;PAYMENT&quot;)
} 
catch (err) 
{
&nbsp;&nbsp;&nbsp;console.log(err.name + &quot;:&quot; + err.message);
}
</pre></li>
 <li>To retrieve the registered AIDs for a specific category and secure element type, use the <span style="font-family: Courier New,Courier,monospace">getAIDsForCategory()</span> method of the <span style="font-family: Courier New,Courier,monospace">NFCAdapter</span> interface:
<pre class="prettyprint">
try 
{
&nbsp;&nbsp;&nbsp;var successCallback = function(aid_datas) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; aid_datas.length; i++)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;SE Type is &quot; + aid_datas[i].type);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;AID is &quot; + aid_datas[i].aid);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;readonly: &quot; + aid_datas[i].readOnly);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;};

&nbsp;&nbsp;&nbsp;var errorCallback = function(error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;getAIDsForCategory failed.&quot;);
&nbsp;&nbsp;&nbsp;};

&nbsp;&nbsp;&nbsp;adapter.getAIDsForCategory(&quot;HCE&quot;, &quot;PAYMENT&quot;, successCallback, errorCallback);
} 
catch (err) 
{
&nbsp;&nbsp;&nbsp;console.log(err.name + &quot;:&quot; + err.message);
}
</pre></li>
<li>Remove the registered listeners when they are no longer necessary, and disable NFC card emulation:
<pre class="prettyprint">
adapter.removeHCEEventListener(hceListenerId);
adapter.cardEmulationMode = &quot;OFF&quot;;
</pre></li>
</ol>
  
  
<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

 </body>
</html>