<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

	<title>WidgetService: Providing Information about Installed Widgets</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../../images/mobile_s_w.png"/>
		<img alt="Wearable Web" src="../../../images/wearable_s_w.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
			<ul class="toc">
				<li><a href="#widget">Retrieving Widgets</a>
				</li>
				<li><a href="#info">Retrieving ID And Size Information</a>
				</li>
				<li><a href="#name">Retrieving Widget Name</a>
				</li>
				<li><a href="#instances">Retrieving Widget Instances</a>
				</li>
				<li><a href="#variants">Retrieving Widget Variants</a>
				</li>
				<li><a href="#receive">Receiving Widget Change Notifications</a>
				</li>
				<li><a href="#period">Changing Update Period</a>
				</li>
				<li><a href="#content">Sending And Getting Content</a>
				</li>
			</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.guides/html/web/tizen/application/widgetservice_w.htm">WidgetService Guide</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html">WidgetService API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html">WidgetService API for Wearable Web</a></li>
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">

	<h1>WidgetService: Providing Information about Installed Widgets</h1>

<p>This tutorial demonstrates how you can retrieve installed widgets and additional information related to them.</p>

<p>The WidgetService API is mandatory for both Tizen mobile and wearable profiles, which means that it is supported in all mobile and wearable devices. All mandatory APIs are supported on the Tizen Emulators.</p>

  <h2 id="warmup" name="warmup">Warm-up</h2>
  <p>Become familiar with the Widget Service API basics by learning about:</p>
  <ul>
   <li><a href="#widget">Retrieving Widgets</a> <p>Retrieve installed widgets.</p></li>
   <li><a href="#info">Retrieving ID And Size Information</a> <p>Retrieve information about primary id or size.</p></li>
   <li><a href="#name">Retrieving Widget Name</a> <p>Retrieve widget name.</p></li>
   <li><a href="#instances">Retrieving Widget Instances</a> <p>Retrieve a list of widget's instances.</p></li>
   <li><a href="#variants">Retrieving Widget Variants</a> <p>Retrieve widget variants.</p></li>
   <li><a href="#receive">Receiving Widget Change Notifications</a> <p>Receive notifications about widget's life cycle.</p></li>
   <li><a href="#period">Changing Update Period</a> <p>Change the instance data update interval.</p></li>
   <li><a href="#content">Sending And Getting Content</a> <p>Manage content of the instance..</p></li>
  </ul>

                <h2 id="widget" name="widget">Retrieving Widgets</h2>

                <p>Learning how to retrieve installed widgets list is a basic Widget service skill:</p>
  <ol>
   <li><p>Define a success handler implementing <span style="font-family: Courier New,Courier,monospace">WidgetArraySuccessCallback()</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetArraySuccessCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetArraySuccessCallback">wearable</a> applications). Optionally you can specify error handler too.</p> <pre class="prettyprint lang-js">
var successCallback = function (widgets) {
&nbsp;&nbsp;&nbsp;console.log(&quot;There are &quot; + widgets.length + &quot; installed widgets&quot;);
};

var errorCallback = function (error) {
&nbsp;&nbsp;&nbsp;console.log(&quot;Error &quot; + error.message);
};</pre></li>
   <li><p>To get a list of all installed widgets use the <span style="font-family: Courier New,Courier,monospace">getWidgets()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetServiceManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetServiceManager">wearable</a> applications). If the optional parameter packageId is given, the only widgets belonging to the given package are returned. <pre class="prettyprint lang-js">
var packageId = &quot;org.tizen.contacts&quot;;
tizen.widgetservice.getWidgets(successCallback, errorCallback, packageId);
</pre></li>
   <li><p>You can also get specific widget object by using the <span style="font-family: Courier New,Courier,monospace">getWidget()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetServiceManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetServiceManager">wearable</a> applications). <pre class="prettyprint lang-js">
var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
</pre></li>
  </ol>
                <h2 id="info" name="info">Retrieving ID And Size Information</h2>

                <p>Learning how to retrieve primary widget id or size makes using Widget service API easy and convenient:</p>
  <ol>
   <li><p>To get primary widget id of given application or package id use the <span style="font-family: Courier New,Courier,monospace">getPrimaryWidgetId()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetServiceManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetServiceManager">wearable</a> applications).</p> <pre class="prettyprint lang-js">
var widgetId = tizen.widgetservice.getPrimaryWidgetId(&quot;org.tizen.music-player&quot;);
</pre></li>
   <li><p>To get size of the corresponding size type use the <span style="font-family: Courier New,Courier,monospace">getSize()</span> method of the <span style="font-family: Courier New,Courier,monospace">PackageManager</span> interface, specifying the size type.</p> <pre class="prettyprint lang-js">
var widgetSize = tizen.widgetservice.getSize(&quot;4x4&quot;);
</pre></li>
  </ol>
                <h2 id="name" name="name">Retrieving Widget Name</h2>

                <p>Learning how to retrieve widget name:</p>
  <ol>
   <li><p>Retrieve widget that name you would like to get.<pre class="prettyprint lang-js">
var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
</pre></li>
   <li><p>To get widget name use the <span style="font-family: Courier New,Courier,monospace">getName()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface. If the locale parameter is omitted then system locale one is used.</p><pre class="prettyprint lang-js">
var name = widget.getName(&quot;en-us&quot;);
</pre></li>
  </ol>
                <h2 id="instances" name="instances">Retrieving Widget Instances</h2>

                <p>Learning how to retrieve information about installed widget instances makes widget service API more useful:</p>
  <ol>
   <li><p>Define a success handler implementing <span style="font-family: Courier New,Courier,monospace">WidgetInstancesCallback()</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetInstancesCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetInstancesCallback">wearable</a> applications). Optionally you can specify error handler too.</p> <pre class="prettyprint lang-js">
var successCallback = function (instances) {
&nbsp;&nbsp;&nbsp;console.log(&quot;There are &quot; + instances.length + &quot; instances&quot;);
};

var errorCallback = function (error) {
&nbsp;&nbsp;&nbsp;console.log(&quot;Error &quot; + error.message);
};</pre></li>

   <li><p>To retrieve a list of all instances belonging to the widget, use the <span style="font-family: Courier New,Courier,monospace">getInstances()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#Widget">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#Widget">wearable</a> applications):</p> <pre class="prettyprint lang-js">
widget.getInstances(successCallback, errorCallback);
</pre></li>
   <li><p>To retrieve basic package information, use the <span style="font-family: Courier New,Courier,monospace">getPackageInfo()</span> method of the <span style="font-family: Courier New,Courier,monospace">PackageManager</span> interface, specifying the package ID. If no package ID is set, the method retrieves information of the application package calling the method.</p> <pre class="prettyprint lang-js">var packageInfo = tizen.package.getPackageInfo(&quot;org.tizen.calculator&quot;);</pre></li>
  </ol>


                <h2 id="variants" name="variants">Retrieving Widget Variants</h2>

                <p>Learning how to retrieve variants representing all of the supported widget size types</p>
  <ol>
   <li><p>Define a success handler implementing <span style="font-family: Courier New,Courier,monospace">WidgetVariantsCallback()</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetVariantsCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetVariantsCallback">wearable</a> applications). Optionally you can specify error handler too.</p> <pre class="prettyprint lang-js">
var successCallback = function (variants) {
&nbsp;&nbsp;&nbsp;console.log(&quot;There are &quot; + variants.length + &quot; variants of the widget&quot;);
};

var errorCallback = function (error) {
&nbsp;&nbsp;&nbsp;console.log(&quot;Error &quot; + error.message);
};</pre></li>
   <li><p>Retrieve widget that variants you would like to obtain.<pre class="prettyprint lang-js">
var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
</pre></li>
   <li><p>To get a list of all variants use the <span style="font-family: Courier New,Courier,monospace">getVariants()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#Widget">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#Widget">wearable</a> applications): <pre class="prettyprint lang-js">
widget.getVariants(successCallback, errorCallback);
</pre></li>
   <li><p>You can also get specific variant by using the <span style="font-family: Courier New,Courier,monospace">getVariant()</span> method with one of the supported size type as a parameter. <pre class="prettyprint lang-js">
var variant = widget.getVariant(&quot;4x4&quot;);
</pre></li>
  </ol>
                <h2 id="receive" name="receive">Receiving Widget Change Notifications</h2>

                <p>Learning to receive notifications when the state of the widget has been changed. There are four states that can be noticed: CREATE, DESTROY, PAUSE and RESUME.</p>
  <ol>
   <li><p>Define the event handler for state notifications using the <span style="font-family: Courier New,Courier,monospace">WidgetChangeCallback</span> listener interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetChangeCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetChangeCallback">wearable</a> applications):</p> <pre class="prettyprint">
var WidgetChangeCallback = function (instance, event) {
&nbsp;&nbsp;&nbsp;console.log(&quot;The instance &quot; + instance + &quot; has state &quot; + event);
};</pre></li>

   <li><p>Retrive widget object using the <span style="font-family: Courier New,Courier,monospace">getWidget</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetServiceManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetServiceManager">wearable</a> applications)</p> <pre class="prettyprint">
var widget = tizen.widgetservice.getWidget(&quot;org.tizen.music-player.widget&quot;);
</pre></li>

   <li><p>Add the listener to use the defined event handler with the <span style="font-family: Courier New,Courier,monospace">addStateChangeListener()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#Widget">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#Widget">wearable</a> applications):</p> <pre class="prettyprint lang-js">
var watchId = widget.addStateChangeListener(WidgetChangeCallback);
</pre></li>
   <li><p>To stop receiving notifications for defined listener, use the <span style="font-family: Courier New,Courier,monospace">removeStateChangeListener()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface with previously obtained listener id:</p> <pre class="prettyprint lang-js">widget.removeStateChangeListener(watchId);</pre></li>
  </ol>
                <h2 id="period" name="period">Changing Update Period</h2>

                <p>Learning how to change update interval for the widget instance:</p>
  <ol>
   <li><p>First of all you have to retrive widget instance by <span style="font-family: Courier New,Courier,monospace">getInstances()</span> method.</p> <pre class="prettyprint lang-js">
var instance;
var successCallback = function (instances) {
&nbsp;&nbsp;&nbsp;instance = instances[0];
};

var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
widget.getInstances(successCallback);
</pre></li>
   <li><p>To change update interval use the <span style="font-family: Courier New,Courier,monospace">changeUpdatePeriod()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetInstance</span> interface with new value in seconds.</p>
<pre class="prettyprint lang-js">
instance.changeUpdatePeriod(2);
</pre></li>
  </ol>
                <h2 id="content" name="content">Sending And Getting Content</h2>

                <p>Learning how to change update interval for the widget instance:</p>
  <ol>
   <li><p>The first step is obtaining widget instance by <span style="font-family: Courier New,Courier,monospace">getInstances()</span> method.</p> <pre class="prettyprint lang-js">
var instance;
var successCallback = function (instances) {
&nbsp;&nbsp;&nbsp;instance = instances[0];
};

var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
widget.getInstances(successCallback);
</pre></li>
   <li><p>To change update interval use the <span style="font-family: Courier New,Courier,monospace">changeUpdatePeriod()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetInstance</span> interface with new value in seconds.</p>
<pre class="prettyprint lang-js">
instance.changeUpdatePeriod(2);
</pre></li>
   <li><p>To send data use the <span style="font-family: Courier New,Courier,monospace">sendContent()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetInstance</span> interface. The second parameter decides if the instance will be updated even if the provider is paused.</p>
<pre class="prettyprint lang-js">
instance.sendContent(data, true);
</pre></li>
   <li><p>You can also retrieve widget instance content. At the beginning define success handler implementing <span style="font-family: Courier New,Courier,monospace">WidgetContentCallback()</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetContentCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetContentCallback">wearable</a> applications). Optionally you can specify error handler too.</p> <pre class="prettyprint lang-js">
var successCallback = function (object) {
&nbsp;&nbsp;&nbsp;console.log(&quot;Data successfully retrieved&quot;);
};

var errorCallback = function (error) {
&nbsp;&nbsp;&nbsp;console.log(&quot;Error &quot; + error.message);
};</pre></li>
   <li><p>Afterwards use <span style="font-family: Courier New,Courier,monospace">getContent()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetInstance</span> interface.</p>
<pre class="prettyprint lang-js">
instance.getContent(successCallback, errorCallback);
</pre></li>
  </ol>


<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
