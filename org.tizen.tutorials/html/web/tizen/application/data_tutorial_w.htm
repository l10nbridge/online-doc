<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

	<title>Data Control: Providing Information about Packages and their Installation</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../../images/mobile_s_w.png"/> <img alt="Wearable Web" src="../../../images/wearable_s_w.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#prerequisites">Prerequisites</a></li>
			<li><a href="#map">Managing Data in Key-value Pairs</a></li>
			<li><a href="#sql">Managing SQL-type Data</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.guides/html/web/tizen/application/data_w.htm">Data Control Guide</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/datacontrol.html">Data Control API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/datacontrol.html">Data Control API for Wearable Web</a></li>			
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

	<h1>Data Control: Providing Information about Packages and their Installation</h1>

  <p>This tutorial demonstrates how you can share data between applications.</p>
  
<p>The Data Control API is mandatory for both Tizen mobile and wearable profiles, which means that it is supported in all mobile and wearable applications. All mandatory APIs are supported on the Tizen Emulators.</p>

  
  <h2>Warm-up</h2>
  <p>Become familiar with the Data Control API basics by learning about:</p>
  <ul>
   <li><a href="#prerequisites">Prerequisites</a> <p>Prepare your application to use the data control functionality.</p></li>
   <li><a href="#map">Managing Data in Key-value Pairs</a><p>Get, add, update, and remove values assigned to a key.</p></li>
   <li><a href="#sql">Managing SQL-type Data</a><p>Select, insert, update, and remove SQL-type data.</p></li>
  </ul>
 
 
 <h2 id="prerequisites">Prerequisites</h2>
 
<p>To use the Data Control API (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/datacontrol.html">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/datacontrol.html">wearable</a> applications), the application has to request permission by adding the following privilege to the <span style="font-family: Courier New,Courier,monospace">config.xml</span> file:</p>
<pre class="prettyprint">
&lt;tizen:privilege name=&quot;http://tizen.org/privilege/datacontrol.consumer&quot;/&gt;
</pre>


				<h2 id="map" name="map">Managing Data in Key-value Pairs</h2>
				
  <p>Learning how to manage map-type data allows you to use key-value pairs exposed by a DataControl provider:</p>
  <ol>
   <li><p>Retrieve the <span style="font-family: Courier New,Courier,monospace">MappedDataControlConsumer</span> object (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/datacontrol.html#MappedDataControlConsumer">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/datacontrol.html#MappedDataControlConsumer">wearable</a> applications) using
   the <span style="font-family: Courier New,Courier,monospace">getDataControlConsumer()</span> method of
   the <span style="font-family: Courier New,Courier,monospace">DataControlManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/datacontrol.html#DataControlManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/datacontrol.html#DataControlManager">wearable</a> applications).
   This object allows accessing the key-value data stored by the DataControl provider.</p>
   <p>You need a running DataControl provider application, which uses the <span style="font-family: Courier New,Courier,monospace">&quot;http://tizen.org/datacontrol/provider/DictionaryDataControlProvider&quot;</span> provider ID.</p>
<pre class="prettyprint">
/* Get the map-type DataControlConsumerObject */
try 
{
&nbsp;&nbsp;&nbsp;var globalMappedConsumer = tizen.datacontrol.getDataControlConsumer(&quot;http://tizen.org/datacontrol/provider/DictionaryDataControlProvider&quot;, &quot;Dictionary&quot;, &quot;MAP&quot;);
}
</pre></li>
   <li><p>To meet the API requirement of using unique request identifiers, define a global variable, which is incremented every time a new request ID is needed.
   When the Data Control API responds to a request, it provides the request ID, which allows connecting the response with the specific request.</p>
<pre class="prettyprint">
var globalReqId = new Date().getTime() % 2e9;
</pre></li>
   <li><p>Define a common success and error callback:</p>
<pre class="prettyprint">
function onRequestSuccess(id)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Request &quot; + id + &quot; - done&quot;);
}

function onRequestError(id, error)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;error in request &quot; + id + &quot;, message: &quot; + error.message);
}
</pre></li>
<li>To manage key-value pairs:
<ul>
   <li><p>To add a key-value pair, use the <span style="font-family: Courier New,Courier,monospace">addValue()</span> method of the <span style="font-family: Courier New,Courier,monospace">MappedDataControlConsumer</span>:</p>
<pre class="prettyprint">
try 
{
&nbsp;&nbsp;&nbsp;/* Increase globalReqId for uniqueness */
&nbsp;&nbsp;&nbsp;globalReqId++;
&nbsp;&nbsp;&nbsp;globalMappedConsumer.addValue(globalReqId, &quot;tizen&quot;, &quot;Foo&quot;, onRequestSuccess, onRequestError);
}
</pre></li>
   <li><p>To retrieve values assigned to a key, use the <span style="font-family: Courier New,Courier,monospace">getValue()</span> method of the <span style="font-family: Courier New,Courier,monospace">MappedDataControlConsumer</span>:</p>
<pre class="prettyprint">
function onGetValueSuccess(values, id)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Values retrieved in request &quot; + id + &quot;: &quot; + values.toString());
}

try 
{
&nbsp;&nbsp;&nbsp;globalReqId++;
&nbsp;&nbsp;&nbsp;globalMappedConsumer.getValue(globalReqId, &quot;tizen&quot;, onGetValueSuccess, onRequestError);
}
</pre></li>
   <li><p>To update a value assigned to a key, use the <span style="font-family: Courier New,Courier,monospace">updateValue()</span> method of the <span style="font-family: Courier New,Courier,monospace">MappedDataControlConsumer</span> interface:</p>
<pre class="prettyprint">
try 
{
&nbsp;&nbsp;&nbsp;globalReqId++;
&nbsp;&nbsp;&nbsp;globalMappedConsumer.updateValue(globalReqId, &quot;tizen&quot;, &quot;Foo&quot;, &quot;Bar&quot;, onRequestSuccess, onRequestError);
}
</pre></li>
   <li><p>To remove a key-value pair, use the <span style="font-family: Courier New,Courier,monospace">removeValue()</span> method of the <span style="font-family: Courier New,Courier,monospace">MappedDataControlConsumer</span> interface:</p>
<pre class="prettyprint">
try 
{
&nbsp;&nbsp;&nbsp;globalReqId++;
&nbsp;&nbsp;&nbsp;globalMappedConsumer.removeValue(globalReqId, &quot;tizen&quot;, &quot;Bar&quot;, onRequestSuccess, onRequestError);
}
</pre></li></ul></li>
  </ol>
		
				<h2 id="sql" name="sql">Managing SQL-type Data</h2>
				
  <p>Learning how to manage SQL-type data allows you to use databases exposed by a DataControl provider:</p>
  <ol>
   <li><p>To retrieve a <span style="font-family: Courier New,Courier,monospace">SQLDataControlConsumer</span> object (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/datacontrol.html#SQLDataControlConsumer">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/datacontrol.html#SQLDataControlConsumer">wearable</a> applications), use
   the <span style="font-family: Courier New,Courier,monospace">getDataControlConsumer()</span> method of
   the <span style="font-family: Courier New,Courier,monospace">DataControlManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/datacontrol.html#DataControlManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/datacontrol.html#DataControlManager">wearable</a> applications).
   This object allows accessing the data stored by the DataControl provider.</p>
   <p>You need a running DataControl provider application, which uses the <span style="font-family: Courier New,Courier,monospace">&quot;http://tizen.org/datacontrol/provider/DictionaryDataControlProvider&quot;</span> provider ID.</p>
<pre class="prettyprint">
/* Get SQL type DataControlConsumerObject */
try 
{
&nbsp;&nbsp;&nbsp;var globalSQLConsumer = tizen.datacontrol.getDataControlConsumer(&quot;http://tizen.org/datacontrol/provider/DictionaryDataControlProvider&quot;, &quot;Dictionary&quot;, &quot;SQL&quot;);
}
</pre></li>
   <li><p>To meet the API requirement of using unique request identifiers, define a global variable, which is incremented every time new request ID is needed.
   When the Data Control API responds to a request, it provides the request ID, which allows connecting the response with the specific request.</p>
<pre class="prettyprint">
var globalReqId = new Date().getTime() % 2e9;
</pre></li>
   <li><p>Define a common success and error callback:</p>
<pre class="prettyprint">
function onRequestSuccess(id)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Request &quot; + id + &quot; - done&quot;);
}

function onRequestError(id, error)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;error in request &quot; + id + &quot;, message: &quot; + error.message);
}
</pre> </li>

<li>To manage the data:
<ul>
   <li><p>To insert data, use the <span style="font-family: Courier New,Courier,monospace">insert()</span> method of the <span style="font-family: Courier New,Courier,monospace">SQLDataControlConsumer</span> interface:</p>
<pre class="prettyprint">
function onInsertSuccess(reqId, rowId)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;request: &quot; + reqId + &quot; succeed - inserted row id:&quot; + rowId);
}

try 
{
&nbsp;&nbsp;&nbsp;var rowData = 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;columns: [&quot;WORD&quot;, &quot;WORD_DESC&quot;],
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values: [&quot;'tizen1'&quot;, &quot;&#39;tizen2&#39;&quot;]
&nbsp;&nbsp;&nbsp;};
&nbsp;&nbsp;&nbsp;/* Increases globalReqId for uniqueness */
&nbsp;&nbsp;&nbsp;globalReqId++;
&nbsp;&nbsp;&nbsp;globalSQLConsumer.insert(globalReqId, rowData, onInsertSuccess, onRequestError);
}
</pre> </li>
   <li><p>To select data, use the <span style="font-family: Courier New,Courier,monospace">select()</span> method of the <span style="font-family: Courier New,Courier,monospace">SQLDataControlConsumer</span> interface:</p>
<pre class="prettyprint">
function onSelectSuccess(result, id)
{
&nbsp;&nbsp;&nbsp;var length = result.length, i, j;
&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; length; i++)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;==== Row &quot;, i, &quot;:&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (j = 0; j &lt; result[i].columns.length; j++)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;column: &quot; + result[i].columns[j] + &quot;, value: &quot; + result[i].values[j]);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}

try 
{
&nbsp;&nbsp;&nbsp;var columns = [&quot;WORD&quot;, &quot;WORD_DESC&quot;];
&nbsp;&nbsp;&nbsp;var order = &quot;WORD ASC&quot;;
&nbsp;&nbsp;&nbsp;var page = null;
&nbsp;&nbsp;&nbsp;var maxNumberPerPage = null;

&nbsp;&nbsp;&nbsp;globalReqId++;
&nbsp;&nbsp;&nbsp;globalSQLConsumer.select(globalReqId, columns, &quot;WORD=&#39;tizen1&#39;&quot;, onSelectSuccess, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onRequestError, page, maxNumberPerPage, order);
}
</pre> </li>
   <li><p>To update data, use the <span style="font-family: Courier New,Courier,monospace">update()</span> method of the <span style="font-family: Courier New,Courier,monospace">SQLDataControlConsumer</span> interface:</p>
<pre class="prettyprint">
try 
{
&nbsp;&nbsp;&nbsp;var rowData = 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;columns: [&quot;WORD&quot;, &quot;WORD_DESC&quot;],
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values: [&quot;&#39;tizen1&#39;&quot;, &quot;&#39;Web apps platform!&#39;&quot;]
&nbsp;&nbsp;&nbsp;};
&nbsp;&nbsp;&nbsp;globalReqId++;
&nbsp;&nbsp;&nbsp;globalSQLConsumer.update(globalReqId, rowData, &quot;WORD=&#39;tizen1&#39;&quot;, onRequestSuccess, onRequestError);
}
</pre> </li>
   <li><p>To remove data, use the <span style="font-family: Courier New,Courier,monospace">remove()</span> method of the <span style="font-family: Courier New,Courier,monospace">SQLDataControlConsumer</span> interface:</p>
<pre class="prettyprint">
try 
{
&nbsp;&nbsp;&nbsp;globalReqId++;
&nbsp;&nbsp;&nbsp;globalSQLConsumer.remove(globalReqId, &quot;WORD=&#39;tizen1&#39;&quot;, onRequestSuccess, onRequestError);
}
</pre> </li></ul></li>
  </ol>
  		

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
