<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=9" />
  <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
  <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
  <script type="text/javascript" src="../../../scripts/snippet.js"></script>
  <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
  <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
  <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
  <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

  <title>Preference Tutorial</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
  <div id="profile">
    <p><img alt="Mobile Web" src="../../../images/mobile_s_w.png"/>
    <!--<img alt="Wearable Web" src="../../../images/wearable_s_w.png"/>--></p>
  </div>
  <div id="toc_border"><div id="toc">
    <p class="toc-title">Content</p>
      <ul class="toc">
        <li>
          <a href="#set_value">Setting up a preference</a>
        </li>
        <li>
          <a href="#get_value">Getting a value of a preference</a>
        </li>
        <li>
          <a href="#get_all">Getting all preferences</a>
        </li>
        <li>
          <a href="#remove">Removing a preference</a>
        </li>
        <li>
          <a href="#remove_all">Removing all preferences</a>
        </li>
        <li>
          <a href="#exists">Checking if a preference exists</a>
        </li>
        <li>
          <a href="#set_change_listener">Listening for a preference's value change</a>
        </li>
      </ul>
    <p class="toc-title">Related Info</p>
    <ul class="toc">
      <li><a href="../../../../../org.tizen.guides/html/web/tizen/application/preference_w.htm">Preference Guide</a></li>
      <li><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/preference.html">Preference API for Mobile Web</a></li>
      <li><a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/preference.html">Preference API for Wearable Web</a></li>
    </ul>
  </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

  <h1>Preference Tutorial</h1>

<p>This tutorial demonstrates how you can manage preferences.</p>

<p>The Preference API is mandatory for Tizen mobile profile, which means that it is supported in all mobile devices. <!--The Preference API is mandatory for both Tizen mobile and wearable profiles, which means that it is supported in all mobile and wearable devices.--> All mandatory APIs are supported on the Tizen Emulators.</p>

  <h2 id="warmup" name="warmup">Warm-up</h2>
  <p>Become familiar with the Preference API basics by learning about:</p>
  <ul>
    <li>
      <a href="#set_value">Setting up a preference</a><p>Create a preference and set its value</p>
    </li>
    <li>
      <a href="#get_value">Getting a value of a preference</a><p>Get a value of a preference with a given key</p>
    </li>
    <li>
      <a href="#get_all">Getting all preferences</a><p>Get all existing preferences</p>
    </li>
    <li>
      <a href="#remove">Removing a preference</a><p>Remove a preference with a given key</p>
    </li>
    <li>
      <a href="#remove_all">Removing all preferences</a><p>Remove all existing preferences</p>
    </li>
    <li>
      <a href="#exists">Checking if a preference exists</a><p>Check if the preference with a given key exists</p>
    </li>
    <li>
      <a href="#set_change_listener">Listening for a preference's value change</a><p>Start to listen for change of value of a preference with the given key</p>
    </li>
  </ul>

  <h2 id="set_value" name="set_value">Setting up a preference</h2>
  <p>In order to create a preference with a given key or to change a value of a existing one, use the following function:</p>
  <pre class="prettyprint lang-js">tizen.preference.setValue(&quot;key1&quot;, &quot;New value&quot;);</pre>
  <p>If the preference with the given key doesn't exist, it is created with the given value.  If the preference exists, only its new value is assigned.</p>

  <h2 id="get_value" name="get_value">Getting a value of a preference</h2>
  <p>The code below shows how to get a value of a preference with a given key:</p>
  <pre class="prettyprint lang-js">var currentValue = tizen.preference.getValue(&quot;key1&quot;);
console.log(&quot;The current value of the preference key1 is: &quot; + currentValue);</pre>
  <p>The value returned by the function can be a string, number or boolean.  If the preference with the given key doesn't exist, an exception is thrown.</p>

  <h2 id="get_all" name="get_all">Getting all preferences</h2>
  <p>How to get all preferences:</p>
  <pre class="prettyprint lang-js">var successCB = function(preferences) {
&nbsp;&nbsp;var i;
&nbsp;&nbsp;for (i = 0; i &lt; preferences.length; i++) {
&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;The preference - key: &quot; + preferences[i].key + &quot; value: &quot; + preferences[i].value);
&nbsp;&nbsp;}
};

tizen.preference.getAll(successCB);</pre>
  <p>
    All preferences can be retrieved at once using the function <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/preference.html#PreferenceManager::getAll">getAll()</a> with a callback function which gets an array of all preferences.  Each row of the array
    consists of fields key and value.
  </p>

  <h2 id="remove" name="remove">Removing a preference</h2>
  <p>You can remove a single preference with the given key using the following function:</p>
  <pre class="prettyprint lang-js">tizen.preference.remove(&quot;key1&quot;);</pre>
  <p>If the preference with the given key doesn't exist, an exception is thrown.</p>

  <h2 id="remove_all" name="remove_all">Removing all preferences</h2>
  <p>How to remove all existing preferences:</p>
  <pre class="prettyprint lang-js">tizen.preference.removeAll();</pre>
  <p>All preferences will be removed.</p>

  <h2 id="exists" name="exists">Checking if a preference exists</h2>
  <p>There is a possibiliy to check if a preference with a given key exists.  The function <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/preference.html#PreferenceManager::exists">exists()</a> is used to do that:</p>
  <pre class="prettyprint lang-js">if (tizen.preference.exists(&quot;key1&quot;)) {
&nbsp;&nbsp;console.log(&quot;Preference with the key key1 exists&quot;);
} else {
&nbsp;&nbsp;console.log(&quot;Preference with the key key1 doesn't exist&quot;);
}</pre>
  <p>The function returns <span style="font-family: Courier New,Courier,monospace">true</span> if the preference exists and <span style="font-family: Courier New,Courier,monospace">false</span> when it doesn't.</p>

  <h2 id="set_change_listener" name="set_change_listener">Listening for a preference value's change</h2>
  <p>How to start and stop listening for a change of value of a preference with a given key:</p>

  <ul>
    <li>
      <p>
        In order to start listening for a change of a value of a preference with the given key, the function <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/preference.html#PreferenceManager::setChangeListener">setChangeListener()</a> is used:</p>
      <pre class="prettyprint lang-js">var listener = function(data) {
&nbsp;&nbsp;console.log(&quot;Preference with the key: &quot; + data.key + &quot; has a new value: &quot; + data.value);
};

tizen.preference.setChangeListener(&quot;key1&quot;, listener);</pre>
      <p>The callback provided to the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/preference.html#PreferenceManager::setChangeListener">setChangeListener()</a> function, will be called every time a value of the given preference changes.  The argument of the callback is an object what consists of fields <span style="font-family: Courier New,Courier,monospace">key</span> and <span style="font-family: Courier New,Courier,monospace">value</span>.</p>
    </li>

    <li>
      <p>In order to stop listening, the function <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/preference.html#PreferenceManager::unsetChangeListener">unsetChangeListener()</a> is used:</p>
      <pre class="prettyprint lang-js">var listener = function(data) {
&nbsp;&nbsp;tizen.preference.unsetChangeListener(data.key);
};

tizen.preference.setChangeListener(&quot;key1&quot;, listener);</pre>
      <p>
        Listening for a change of a preference's value will turned off.
      </p>
    </li>
  </ul>

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
