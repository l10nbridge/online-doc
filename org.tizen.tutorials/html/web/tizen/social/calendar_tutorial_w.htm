<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
    <script type="text/javascript" src="../../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>
  <title>Calendar: Managing Calendars and Calendar Events</title>
 </head>
<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../../images/mobile_s_w.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
		<li><a href="#Creating_Calendar">Creating a Calendar</a></li>
		<li>Events
		<ul class="toc">
			<li><a href="#Adding_Events">Adding Events to a Calendar</a></li> 
			<li><a href="#Adding_Events_Batch">Adding Events to a Calendar in the Batch Mode</a></li> 
			<li><a href="#Managing_Event">Managing a Single Calendar Event</a></li>
			<li><a href="#Updating_Event">Updating Recurring Calendar Events</a></li>
			<li><a href="#Managing_Event_Batch">Managing Multiple Calendar Events in the Batch Mode</a></li>
			<li><a href="#Converting_Event">Converting Calendar Event Formats</a></li>
		</ul></li>
		<li>Tasks
		<ul class="toc">
			<li><a href="#Adding_Tasks">Adding Tasks to a Calendar</a></li>
			<li><a href="#Adding_Tasks_Batch">Adding Tasks to a Calendar in the Batch Mode</a></li>
			<li><a href="#Managing_Task">Managing a Single Calendar Task</a></li>
			<li><a href="#Managing_Task_Batch">Managing Multiple Calendar Tasks in the Batch Mode</a></li>
			<li><a href="#Converting_Task">Converting Calendar Task Formats</a></li>  
		</ul></li>
		<li><a href="#Receiving_Calendar">Receiving Notifications on Calendar Changes</a></li>		
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../../org.tizen.guides/html/web/tizen/social/calendar_w.htm">Calendar Guide</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html">Calendar API for Mobile Web</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

 <h1>Calendar: Managing Calendars and Calendar Events</h1>
	 
      <p>This tutorial demonstrates how you can manage calendars in the device to access, modify, add, and remove calendar items within a specified calendar on the device.</p>
	  
<p>This feature is supported in mobile applications only.</p>
      
  <h2>Warm-up</h2>
      <p>Become familiar with the Calendar API basics by learning about:</p>
      <ul>
	    <li><a href="#Creating_Calendar">Creating a Calendar</a> <p>Create a new calendar using the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> constructor.</p></li>
		<li>Events
		<ul>
			<li><a href="#Adding_Events">Adding Events to a Calendar</a> <p>Add events to the default calendar, and define an alarm and recurrence rule for an event.</p> </li> 
			<li><a href="#Adding_Events_Batch">Adding Events to a Calendar in the Batch Mode</a> <p>Add events to the default calendar in the batch mode.</p></li> 
			<li><a href="#Managing_Event">Managing a Single Calendar Event</a> <p>Update and delete an existing calendar event.</p> </li>
			<li><a href="#Updating_Event">Updating Recurring Calendar Events</a> <p>Update a single instance of a recurring event.</p> </li>
			<li><a href="#Managing_Event_Batch">Managing Multiple Calendar Events in the Batch Mode</a> <p>Update and delete calendar events in the batch mode.</p> </li>
			<li><a href="#Converting_Event">Converting Calendar Event Formats</a> <p>Convert a calendar event to the iCalendar format and back.</p></li>
		</ul></li>
		<li>Tasks
		<ul>
			<li><a href="#Adding_Tasks">Adding Tasks to a Calendar</a> <p>Add tasks to the default calendar, and define an alarm for a task.</p></li>
			<li><a href="#Adding_Tasks_Batch">Adding Tasks to a Calendar in the Batch Mode</a> <p>Add tasks to the default calendar in the batch mode.</p></li>
			<li><a href="#Managing_Task">Managing a Single Calendar Task</a> <p>Update and delete an existing calendar task.</p></li>
			<li><a href="#Managing_Task_Batch">Managing Multiple Calendar Tasks in the Batch Mode</a> <p>Update and delete calendar tasks in the batch mode.</p> </li>
			<li><a href="#Converting_Task">Converting Calendar Task Formats</a> <p>Convert a calendar task to the iCalendar format and back.</p></li>  
		</ul></li>
		<li><a href="#Receiving_Calendar">Receiving Notifications on Calendar Changes</a> <p>Receive notifications when calendar items are added, updated, or deleted.</p></li>
      </ul>

     <h2>Prerequisites</h2>
      <p>To use the calendar APIs, the application has to request permission by adding the corresponding privileges to the config.xml file.</p>
      <pre class="prettyprint">&lt;tizen:privilege name=&quot;http://tizen.org/privilege/calendar.read&quot;/&gt;
&lt;tizen:privilege name=&quot;http://tizen.org/privilege/calendar.write&quot;/&gt;</pre>

  <h2 id="task" name="task">Task</h2>
        <p>In the <a href="task_eventmanager_w.htm">Event Manager</a> task, we will walk through how to manage calendar events in your application.</p>
	
 <h2 id="Creating_Calendar" name="Creating_Calendar">Creating a Calendar</h2>
 
  <p>Creating a new calendar is a basic calendar management skill:</p>
  
    <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">The created calendar is associated with a specified account. Therefore, you must retrieve the account before creating a new calendar.</td> 
    </tr> 
   </tbody> 
  </table>
  <ol> 
   <li>Declare a variable to store the created calendar:
<pre class="prettyprint">var myCalendar = null;</pre>
   </li>
   <li>Define a success callback for the <span style="font-family: Courier New,Courier,monospace">getAccounts()</span> method. The callback receives a list of <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/account.html#Account">Account</a> objects. Use the first account ID to construct a new <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object. 
   <p>Add the new calendar to the system using the <span style="font-family: Courier New,Courier,monospace">addCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface:</p>
<pre class="prettyprint">function getAccountsSuccess(accounts)
{
&nbsp;&nbsp;&nbsp;var account = accounts[0];
&nbsp;&nbsp;&nbsp;if (account)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* New calendar can be created and added */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCalendar = new tizen.Calendar(account.id, &quot;remote calendar&quot;, &quot;TASK&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.calendar.addCalendar(myCalendar);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;New calendar created with ID=&quot; + myCalendar.id);
&nbsp;&nbsp;&nbsp;}
}</pre></li>
   <li>To retrieve available accounts, use the <span style="font-family: Courier New,Courier,monospace">getAccounts()</span> method. The following method call invokes the <span style="font-family: Courier New,Courier,monospace">getAccountsSuccess</span> event handler defined above:
<pre class="prettyprint">tizen.account.getAccounts(getAccountsSuccess, function(err));
</pre></li>
  </ol>

              
 <h2 id="Adding_Events" name="Adding_Events">Adding Events to a Calendar</h2>
 
 
  <p>To create engaging applications with various calendar features, you must learn to add events to calendars:</p>
  <ol>
    <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface.</p> <p>With the parameter, specify the calendar type as an event.</p> <pre class="prettyprint">
var calendar = tizen.calendar.getDefaultCalendar(&quot;EVENT&quot;);
</pre> </li>
     <li><p>Create a <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarEvent">CalendarEvent</a> object and define the event properties:</p> <pre class="prettyprint">var ev = new tizen.CalendarEvent
({
&nbsp;&nbsp;&nbsp;description:&quot;HTML5 Introduction&quot;,
&nbsp;&nbsp;&nbsp;summary:&quot;HTML5 Webinar&quot;,
&nbsp;&nbsp;&nbsp;startDate: new tizen.TZDate(2011, 3, 30, 10, 0),
&nbsp;&nbsp;&nbsp;duration: new tizen.TimeDuration(1, &quot;HOURS&quot;),
&nbsp;&nbsp;&nbsp;location:&quot;Huesca&quot;,
</pre> </li>
     <li><p>To make a recurring event, define a recurrence rule.</p> <p>In this example, the event repeats once a day for 3 days.</p> <pre class="prettyprint">
&nbsp;&nbsp;&nbsp;recurrenceRule: new tizen.CalendarRecurrenceRule(&quot;DAILY&quot;, {occurrenceCount: 3})
});
</pre> </li>
    <li><p>To set up an alarm to remind the user about the event, create an alarm with the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarAlarm">CalendarAlarm</a> interface, and add the alarm to the event:</p> <pre class="prettyprint">
/* Alarm is triggered with sound 30 minutes before the event start time */
var alarm = new tizen.CalendarAlarm(new tizen.TimeDuration(30, &quot;MINS&quot;), &quot;SOUND&quot;);

ev.alarms = [alarm];
</pre></li>
     <li><p>Add the <span style="font-family: Courier New,Courier,monospace">CalendarEvent</span> object to the default calendar with the <span style="font-family: Courier New,Courier,monospace">add()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object.</p> <pre class="prettyprint">calendar.add(ev);  /* ev.id attribute is generated */</pre> </li>
    </ol>
                
  <h2 id="Adding_Events_Batch" name="Adding_Events_Batch">Adding Events to a Calendar in the Batch Mode</h2>
  
  
  <p>To create engaging applications with various calendar features, you must learn to add events to calendars in the batch mode:</p>
    <ol>
     <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface:</p> <pre class="prettyprint">
var calendar = tizen.calendar.getDefaultCalendar(&quot;EVENT&quot;);
</pre> </li>
     <li><p>Define the items to be added as an array:</p> <pre class="prettyprint">
var ev = new tizen.CalendarEvent
({
&nbsp;&nbsp;&nbsp;description:&quot;HTML5 Introduction&quot;,
&nbsp;&nbsp;&nbsp;summary:&quot;HTML5 Webinar&quot;,
&nbsp;&nbsp;&nbsp;startDate: new tizen.TZDate(2011, 3, 30, 10, 0),
&nbsp;&nbsp;&nbsp;duration: new tizen.TimeDuration(1, &quot;HOURS&quot;),
&nbsp;&nbsp;&nbsp;location:&quot;Huesca&quot;
});
</pre>
      <table class="note">
       <tbody>
        <tr>
         <th class="note">Note</th>
        </tr>
        <tr>
         <td class="note">To keep the example as simple as possible, the array above includes only 1 event.</td>
        </tr>
       </tbody>
      </table> </li>
     <li><p>Use the <span style="font-family: Courier New,Courier,monospace">addBatch()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object to add the events in the array to the calendar:</p> <pre class="prettyprint">
calendar.addBatch([ev]);
</pre>
      <table class="note">
       <tbody>
        <tr>
         <th class="note">Note</th>
        </tr>
        <tr>
         <td class="note">The <span style="font-family: Courier New,Courier,monospace">addBatch()</span> method is asynchronous, and its callbacks must be used to react to the success or failure of the operation.</td>
        </tr>
       </tbody>
      </table>
</li>
    </ol>
	
  <h2 id="Managing_Event" name="Managing_Event">Managing a Single Calendar Event</h2>
			
  <p>To create engaging applications with various calendar features, you must learn to manage a single calendar event:</p>
    <ol>
     <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface.</p> <p>With the parameter, specify the calendar type as event.</p> <pre class="prettyprint">
var myCalendar = tizen.calendar.getDefaultCalendar(&quot;EVENT&quot;);
</pre> </li>
     <li><p>Retrieve all events stored in the calendar by using the <span style="font-family: Courier New,Courier,monospace">find()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object:</p> <pre class="prettyprint">
myCalendar.find(eventSearchSuccessCallback);</pre>
      <table class="note">
       <tbody>
        <tr>
         <th class="note">Note</th>
        </tr>
        <tr>
         <td class="note">To retrieve a specific set of events, you can specify a filter and sorting order for the search operation through the <span style="font-family: Courier New,Courier,monospace">filter</span> and <span style="font-family: Courier New,Courier,monospace">sortMode</span> parameters (for attributes supported in the filter, see <a href="../../../../../org.tizen.guides/html/web/tizen/tizen/tizen_guide_w.htm#calendar">Calendar Filter Attributes</a>). <p>In this example, all the events are retrieved because no filter is used.</p> </td>
        </tr>
       </tbody>
      </table> </li>
     <li><p>Update or delete the found item inside the <span style="font-family: Courier New,Courier,monospace">eventSearchSuccessCallback()</span> event handler.</p> <p>In this example, the description parameter of the first event is changed and the event is updated in the calendar using the <span style="font-family: Courier New,Courier,monospace">update()</span> method. The second event is deleted using the <span style="font-family: Courier New,Courier,monospace">remove()</span> method.</p> <pre class="prettyprint">/* Define the event success callback */
function eventSearchSuccessCallback(events)
{
&nbsp;&nbsp;&nbsp;/* Update the first existing event */
&nbsp;&nbsp;&nbsp;events[0].description = &quot;New Description&quot;;
&nbsp;&nbsp;&nbsp;myCalendar.update(events[0]);

&nbsp;&nbsp;&nbsp;/* Delete the second existing event */
&nbsp;&nbsp;&nbsp;myCalendar.remove(events[1].id);
}</pre> </li>
    </ol>
            
  <h2 id="Updating_Event" name="Updating_Event">Updating Recurring Calendar Events</h2>
			
  <p>To create engaging applications with various calendar features, you must learn to update recurring calendar events:</p>
  <ol>
     <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface.</p>
<p>Retrieve the calendar event using the <span style="font-family: Courier New,Courier,monospace">get()</span> method by specifying the event ID.</p>     <pre class="prettyprint">
var calendar = tizen.calendar.getDefaultCalendar(&quot;EVENT&quot;);
var event = calendar.get(evId);
</pre> </li>
     <li>Expand the recurring event to get its instances by using the <span style="font-family: Courier New,Courier,monospace">expandRecurrence()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarEvent">CalendarEvent</a> object: <pre class="prettyprint">
event.expandRecurrence(new tizen.TZDate(2012, 2, 1), new tizen.TZDate(2012, 2, 15),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventExpandSuccessCB);</pre> <p>The expanded event instances have their own <span style="font-family: Courier New,Courier,monospace">id.uid</span> and <span style="font-family: Courier New,Courier,monospace">id.rid</span> attributes, where the <span style="font-family: Courier New,Courier,monospace">id.uid</span> attribute is the same for all instances.</p> </li>
     <li><p>Update a single instance of the expanded recurring event.</p> <p>In case of recurring events, you can use the second parameter of the <span style="font-family: Courier New,Courier,monospace">update()</span> method to determine whether a single instance or all occurrences of the event are updated. If the parameter is set to <span style="font-family: Courier New,Courier,monospace">true</span>, all instances are updated, while if it is set to <span style="font-family: Courier New,Courier,monospace">false</span>, only the indicated instance of the recurring event is updated (based on the <span style="font-family: Courier New,Courier,monospace">id.rid</span> attribute).</p> <p>In this example, the second instance of the event is updated.</p> <pre class="prettyprint">
/* Success event handler */
function eventExpandSuccessCB(events)
{
&nbsp;&nbsp;&nbsp;events[1].summary = &#39;updated summary&#39;;
&nbsp;&nbsp;&nbsp;calendar.update(events[1], false);
}
</pre> </li>
    </ol>
           
  <h2 id="Managing_Event_Batch" name="Managing_Event_Batch">Managing Multiple Calendar Events in the Batch Mode</h2>
  
  <p>To create engaging applications with various calendar features, you must learn to manage multiple calendar events in the batch mode:</p>
  <ol>
   <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface.</p> <p>With the parameter, specify the calendar type as event.</p> <pre class="prettyprint">
var myCalendar = tizen.calendar.getDefaultCalendar(&quot;EVENT&quot;);
</pre> </li>
     <li><p>Retrieve all events stored in the calendar by using the <span style="font-family: Courier New,Courier,monospace">find()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object:</p> <pre class="prettyprint">
myCalendar.find(eventSearchSuccessCallback, errorCallback);</pre>
      <table class="note">
       <tbody>
        <tr>
         <th class="note">Note</th>
        </tr>
        <tr>
         <td class="note">To retrieve a specific set of events, you can specify a filter and sorting order for the search operation through the <span style="font-family: Courier New,Courier,monospace">filter</span> and <span style="font-family: Courier New,Courier,monospace">sortMode</span> parameters (for attributes supported in the filter, see <a href="../../../../../org.tizen.guides/html/web/tizen/tizen/tizen_guide_w.htm#calendar">Calendar Filter Attributes</a>). <p>In this example, all the events are retrieved because no filter is used.</p> </td>
        </tr>
       </tbody>
      </table> </li>

     <li>To update events:
      <ol type="a">
       <li><p>Define the items to be updated in the success event handler of the <span style="font-family: Courier New,Courier,monospace">find()</span> method:</p> <pre class="prettyprint">
function eventSearchSuccessCallback(events)
{
&nbsp;&nbsp;&nbsp;events[0].description = &quot;New Description 1&quot;;
&nbsp;&nbsp;&nbsp;events[1].description = &quot;New Description 2&quot;;
</pre> </li>
       <li><p>Use the <span style="font-family: Courier New,Courier,monospace">updateBatch()</span> method to update multiple calendar items asynchronously:</p> <pre class="prettyprint">
&nbsp;&nbsp;&nbsp;/* Update the first 2 existing events */
&nbsp;&nbsp;&nbsp;myCalendar.updateBatch(events.slice(0, 2));
}
</pre> </li>
      </ol> </li>
     <li><p>To delete events, use the <span style="font-family: Courier New,Courier,monospace">removeBatch()</span> method in the success event handler of the <span style="font-family: Courier New,Courier,monospace">find()</span> method to delete multiple calendar items asynchronously:</p> <pre class="prettyprint">
function eventSearchSuccessCallback(events)
{
&nbsp;&nbsp;&nbsp;/* Delete the first 2 existing events */
&nbsp;&nbsp;&nbsp;myCalendar.removeBatch([events[0].id, events[1].id]);
}
</pre> </li>
    </ol>
	
  <h2 id="Converting_Event" name="Converting_Event">Converting Calendar Event Formats</h2>
  
  <p>The following examples illustrate how to make calendar event exchange more efficient in your application by converting the calendar events to iCalendar format or the other way around using the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarEvent">CalendarEvent</a> constructor and the <span style="font-family: Courier New,Courier,monospace">convertToString()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object respectively:</p>
  <ul>
   <li>To convert an iCalendar string to a calendar event:
    <ol>
     <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface.</p> <p>With the parameter, specify the calendar type as event.</p> <pre class="prettyprint">
var calendar = tizen.calendar.getDefaultCalendar(&quot;EVENT&quot;);</pre> </li>
     <li>Create a new <span style="font-family: Courier New,Courier,monospace">CalendarEvent</span> object from the iCalendar string and add it to the default calendar: <pre class="prettyprint">
try
{
&nbsp;&nbsp;&nbsp;var ev = new tizen.CalendarEvent
&nbsp;&nbsp;&nbsp;(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;BEGIN:VCALENDAR\r\n&quot; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;BEGIN:VEVENT\r\n&quot; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;DTSTAMP:19970901T1300Z\r\n&quot; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;DTSTART:19970903T163000Z\r\n&quot; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;DTEND:19970903T190000Z\r\n&quot; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;SUMMARY:Tizen, Annual Employee Review\r\n&quot; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;CATEGORIES:BUSINESS,HUMAN RESOURCES\r\n&quot; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;END:VEVENT\r\n&quot; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;END:VCALENDAR&quot;, &quot;ICALENDAR_20&quot;
&nbsp;&nbsp;&nbsp;);

&nbsp;&nbsp;&nbsp;calendar.add(ev);
&nbsp;&nbsp;&nbsp;console.log(&#39;Event added with UID &#39; + ev.id.uid);
}</pre> </li>
    </ol> <p>To convert multiple strings and import them to a calendar, convert the strings one by one and then use the <span style="font-family: Courier New,Courier,monospace">addBatch()</span> method to <a href="#Adding_Events_Batch">add all the events at once in a batch mode</a>.</p> </li>
   <li>To convert a calendar event to the iCalendar format:
    <ol>
     <li>Get the default calendar and find all calendar events which include the &quot;Tizen&quot; string in the <span style="font-family: Courier New,Courier,monospace">Summary</span> attribute: <pre class="prettyprint">
var myCalendar;

myCalendar = tizen.calendar.getDefaultCalendar(&quot;EVENT&quot;);

/* Define a filter */
var filter = new tizen.AttributeFilter(&quot;summary&quot;, &quot;CONTAINS&quot;, &quot;Tizen&quot;);

/* Search for the events */
myCalendar.find(eventSearchSuccessCallback, errorCallback, filter);
</pre> </li>
     <li>Convert a calendar event to an iCalendar string in the success event handler of the <span style="font-family: Courier New,Courier,monospace">find()</span> method using the <span style="font-family: Courier New,Courier,monospace">convertToString()</span> method: <pre class="prettyprint">
function eventSearchSuccessCallback(events)
{
&nbsp;&nbsp;&nbsp;/* Convert the first event */
&nbsp;&nbsp;&nbsp;var vevent = events[0].convertToString(&quot;ICALENDAR_20&quot;);
}
</pre> </li>
    </ol>
<p>To export and convert multiple events from a calendar, find the required events using the <span style="font-family: Courier New,Courier,monospace">find()</span> method with an applicable filter, and then convert the found events one by one.</p> </li></ul>

       
 <h2 id="Adding_Tasks" name="Adding_Tasks">Adding Tasks to a Calendar</h2>
 
  <p>To create engaging applications with various calendar features, you must learn to add tasks to calendars:</p>
  <ol>
    <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface.</p> <p>With the parameter, specify the calendar type as task.</p> <pre class="prettyprint">
var calendar = tizen.calendar.getDefaultCalendar(&quot;TASK&quot;);
</pre> </li>
     <li><p>Create a <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarTask">CalendarTask</a> object and define the task properties:</p> <pre class="prettyprint">var task = new tizen.CalendarTask
({
&nbsp;&nbsp;&nbsp;description:&quot;HTML5 Introduction&quot;,
&nbsp;&nbsp;&nbsp;summary:&quot;HTML5 Webinar&quot;,
&nbsp;&nbsp;&nbsp;startDate: new tizen.TZDate(2011, 3, 10, 10, 0),
&nbsp;&nbsp;&nbsp;dueDate: new tizen.TZDate(2011, 3, 30, 10, 0),
&nbsp;&nbsp;&nbsp;completedDate: new tizen.TZDate(2011, 3, 20, 10, 0),
&nbsp;&nbsp;&nbsp;location:&quot;Huesca&quot;
});
</pre> </li>
        <li><p>To set up an alarm to remind the user about the task, create an alarm with the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarAlarm">CalendarAlarm</a> interface, and add the alarm to the task:</p> <pre class="prettyprint">
/* Alarm is triggered with sound 30 minutes before the task start time */
var alarm = new tizen.CalendarAlarm(new tizen.TimeDuration(30, &quot;MINS&quot;), &quot;SOUND&quot;);

task.alarms = [alarm];
</pre></li>
     <li><p>Add the <span style="font-family: Courier New,Courier,monospace">CalendarTask</span> object to the default calendar with the <span style="font-family: Courier New,Courier,monospace">add()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object:</p> <pre class="prettyprint">calendar.add(task);  /* task.id attribute is generated */</pre> </li>
    </ol>
               
 <h2 id="Adding_Tasks_Batch" name="Adding_Tasks_Batch">Adding Tasks to a Calendar in the Batch Mode</h2>
 
  <p>To create engaging applications with various calendar features, you must learn to add tasks to calendars in the batch mode:</p>
    <ol>
     <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface:</p> <pre class="prettyprint">
var calendar = tizen.calendar.getDefaultCalendar(&quot;TASK&quot;);
</pre> </li>
     <li><p>Define the items to be added as an array:</p> <pre class="prettyprint">
var task = new tizen.CalendarTask
({
&nbsp;&nbsp;&nbsp;description:&quot;HTML5 Introduction&quot;,
&nbsp;&nbsp;&nbsp;summary:&quot;HTML5 Webinar&quot;,
&nbsp;&nbsp;&nbsp;startDate: new tizen.TZDate(2011, 3, 30, 10, 0),
&nbsp;&nbsp;&nbsp;dueDate: new tizen.TZDate(2011, 5, 30, 10, 0),
&nbsp;&nbsp;&nbsp;completedDate: new tizen.TZDate(2011, 4, 30, 10, 0),
&nbsp;&nbsp;&nbsp;location:&quot;Huesca&quot;
});
</pre>
      <table class="note">
       <tbody>
        <tr>
         <th class="note">Note</th>
        </tr>
        <tr>
         <td class="note">To keep the example as simple as possible, the array above includes only 1 task.
                 </td>
        </tr>
       </tbody>
      </table> </li>
     <li><p>Use the <span style="font-family: Courier New,Courier,monospace">addBatch()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object to add the tasks in the array to the calendar:</p> <pre class="prettyprint">
calendar.addBatch([task]);
</pre>
      <table class="note">
       <tbody>
        <tr>
         <th class="note">Note</th>
        </tr>
        <tr>
         <td class="note">The <span style="font-family: Courier New,Courier,monospace">addBatch()</span> method is asynchronous, and its callbacks must be used if you want to react to the success or failure of the operation.</td>
        </tr>
       </tbody>
      </table>
</li>
    </ol>
	
 <h2 id="Managing_Task" name="Managing_Task">Managing a Single Calendar Task</h2>
 
  <p>To create engaging applications with various calendar features, you must learn to manage a single calendar task:</p>
    <ol>
     <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface.</p> <p>With the parameter, specify the calendar type as task.</p> <pre class="prettyprint">
var myCalendar = tizen.calendar.getDefaultCalendar(&quot;TASK&quot;);
</pre> </li>
     <li><p>Retrieve all tasks stored in the calendar by using the <span style="font-family: Courier New,Courier,monospace">find()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object:</p> <pre class="prettyprint">
myCalendar.find(taskSearchSuccessCallback);</pre>
      <table class="note">
       <tbody>
        <tr>
         <th class="note">Note</th>
        </tr>
        <tr>
         <td class="note">To retrieve a specific set of tasks, you can specify a filter and sorting order for the search operation through the <span style="font-family: Courier New,Courier,monospace">filter</span> and <span style="font-family: Courier New,Courier,monospace">sortMode</span> parameters (for attributes supported in the filter, see <a href="../../../../../org.tizen.guides/html/web/tizen/tizen/tizen_guide_w.htm#calendar">Calendar Filter Attributes</a>). <p>In this example, all the tasks are retrieved because no filter is used.</p> </td>
        </tr>
       </tbody>
      </table> </li>
     <li><p>Update or delete the found item inside the <span style="font-family: Courier New,Courier,monospace">taskSearchSuccessCallback()</span> event handler.</p> <p>In this example, the description parameter of the first task is changed and the task is updated in the calendar using the <span style="font-family: Courier New,Courier,monospace">update()</span> method. The second task is deleted using the <span style="font-family: Courier New,Courier,monospace">remove()</span> method.</p> <pre class="prettyprint">/* Define the event success callback */
function taskSearchSuccessCallback(tasks)
{
&nbsp;&nbsp;&nbsp;/* Update the first existing task */
&nbsp;&nbsp;&nbsp;tasks[0].description = &quot;New Description&quot;;
&nbsp;&nbsp;&nbsp;myCalendar.update(tasks[0]);

&nbsp;&nbsp;&nbsp;/* Delete the second existing task */
&nbsp;&nbsp;&nbsp;myCalendar.remove(tasks[1].id);
}</pre> </li>
    </ol>
               
 <h2 id="Managing_Task_Batch" name="Managing_Task_Batch">Managing Multiple Calendar Tasks in the Batch Mode</h2>
 
  <p>To create engaging applications with various calendar features, you must learn to manage multiple calendar tasks in the batch mode:</p>
  <ol>
   <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface.</p> <p>With the parameter, specify the calendar type as task.</p> <pre class="prettyprint">
var myCalendar = tizen.calendar.getDefaultCalendar(&quot;TASK&quot;);
</pre> </li>
     <li><p>Retrieve all tasks stored in the calendar by using the <span style="font-family: Courier New,Courier,monospace">find()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object:</p> <pre class="prettyprint">
myCalendar.find(taskSearchSuccessCallback);</pre>
      <table class="note">
       <tbody>
        <tr>
         <th class="note">Note</th>
        </tr>
        <tr>
         <td class="note">To retrieve a specific set of tasks, you can specify a filter and sorting order for the search operation through the <span style="font-family: Courier New,Courier,monospace">filter</span> and <span style="font-family: Courier New,Courier,monospace">sortMode</span> parameters (for attributes supported in the filter, see <a href="../../../../../org.tizen.guides/html/web/tizen/tizen/tizen_guide_w.htm#calendar">Calendar Filter Attributes</a>). <p>In this example, all the tasks are retrieved because no filter is used.</p> </td>
        </tr>
       </tbody>
      </table> </li>
     <li>To update tasks:
      <ol type="a">
       <li><p>Define the items to be updated in the success event handler of the <span style="font-family: Courier New,Courier,monospace">find()</span> method:</p> <pre class="prettyprint open-bottom">
function taskSearchSuccessCallback(tasks)
{
&nbsp;&nbsp;&nbsp;tasks[0].description = &quot;New Description 1&quot;;
&nbsp;&nbsp;&nbsp;tasks[1].description = &quot;New Description 2&quot;;
</pre> </li>
       <li><p>Use the <span style="font-family: Courier New,Courier,monospace">updateBatch()</span> method to update multiple calendar items asynchronously:</p> <pre class="prettyprint open-top">
&nbsp;&nbsp;&nbsp;/* Update the first 2 existing tasks */
&nbsp;&nbsp;&nbsp;myCalendar.updateBatch(tasks.slice(0, 2));
}
</pre> </li>
      </ol> </li>
     <li><p>To delete tasks, use the <span style="font-family: Courier New,Courier,monospace">removeBatch()</span> method in the success event handler of the <span style="font-family: Courier New,Courier,monospace">find()</span> method to delete multiple calendar items asynchronously:</p> <pre class="prettyprint">
function taskSearchSuccessCallback(tasks)
{
&nbsp;&nbsp;&nbsp;/* Delete the first 2 existing tasks */
&nbsp;&nbsp;&nbsp;myCalendar.removeBatch([tasks[0].id, tasks[1].id]);
}
</pre> </li>
    </ol>             
 
 <h2 id="Converting_Task" name="Converting_Task">Converting Calendar Task Formats</h2>
			
  <p>The following examples illustrate how to make calendar task exchange more efficient in your application by converting the calendar task to iCalendar format or the other way around using the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarTask">CalendarTask</a> constructor and the <span style="font-family: Courier New,Courier,monospace">convertToString()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#Calendar">Calendar</a> object respectively:</p>
  <ul>
   <li>To convert an iCalendar string to a calendar task:
    <ol>
     <li><p>Retrieve the default system calendar using the <span style="font-family: Courier New,Courier,monospace">getDefaultCalendar()</span> method of the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarManager">CalendarManager</a> interface.</p> <p>With the parameter, specify the calendar type as task.</p> <pre class="prettyprint">
var calendar = tizen.calendar.getDefaultCalendar(&quot;TASK&quot;);</pre> </li>
     <li>Create a new <span style="font-family: Courier New,Courier,monospace">CalendarTask</span> object from the iCalendar string and add it to the default calendar: <pre class="prettyprint">
var task = new tizen.CalendarTask
(
&nbsp;&nbsp;&nbsp;&quot;BEGIN:VCALENDAR\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;VERSION:2.0\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;BEGIN:VTODO\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;DTSTAMP:TZID=CET:20110902T110000Z\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;DTSTART;TZID=CET:20110906T140000Z\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;DUE;TZID=CET:20110906T150000Z\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;SUMMARY:Tizen, discuss the schedule\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;DESCRIPTION:Find the feasible schedule\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;CATEGORIES:HUMAN RESOURCES\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;END:VTODO\r\n&quot; +
&nbsp;&nbsp;&nbsp;&quot;END:VCALENDAR&quot;, &quot;ICALENDAR_20&quot;
);

calendar.add(task);
console.log(&#39;Task added with id &#39; + task.id);
</pre> </li>
    </ol> <p>To convert multiple strings and import them to a calendar, convert the strings one by one and then use the <span style="font-family: Courier New,Courier,monospace">addBatch()</span> method to <a href="#Adding_Tasks_Batch">add all the tasks at once in a batch mode</a>.</p> </li>
   <li>To convert a calendar task to the iCalendar format:
    <ol>
     <li>Get the default calendar and find all calendar items which include the &quot;Tizen&quot; string in the <span style="font-family: Courier New,Courier,monospace">Summary</span> attribute: <pre class="prettyprint">
var myCalendar;

myCalendar = tizen.calendar.getDefaultCalendar(&quot;TASK&quot;);

/* Define a filter */
var filter = new tizen.AttributeFilter(&quot;summary&quot;, &quot;CONTAINS&quot;, &quot;Tizen&quot;);

/* Search for the tasks */
myCalendar.find(taskSearchSuccessCallback, null, filter);
</pre> </li>
     <li>Convert a calendar item to an iCalendar string in the success event handler of the <span style="font-family: Courier New,Courier,monospace">find()</span> method using the <span style="font-family: Courier New,Courier,monospace">convertToString()</span> method: <pre class="prettyprint">
function taskSearchSuccessCallback(tasks)
{
&nbsp;&nbsp;&nbsp;/* Convert the first task */
&nbsp;&nbsp;&nbsp;var vtodo = tasks[0].convertToString(&quot;ICALENDAR_20&quot;);
}
</pre> </li>
    </ol> <p>To export and convert multiple tasks from a calendar, find the required tasks using the <span style="font-family: Courier New,Courier,monospace">find()</span> method with an applicable filter, and then convert the found tasks one by one.</p> </li>
  </ul>
                 
  <h2 id="Receiving_Calendar" name="Receiving_Calendar">Receiving Notifications on Calendar Changes</h2>
  
  <p>To create engaging applications with various calendar features, you must learn to receive notifications when calendar items are added, updated, or removed:</p>
  <ol>
   <li><p>Define the needed variables:</p> <pre class="prettyprint">
/* Watcher identifier */
var watcherId = 0;

/* This example assumes that the calendar is initialized */
var calendar;
</pre> </li>
   <li><p>Define the event handlers for different notifications using the <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/calendar.html#CalendarChangeCallback">CalendarChangeCallback</a> listener interface:</p> <pre class="prettyprint">
var watcher =
{
&nbsp;&nbsp;&nbsp;/* When new items are added */
&nbsp;&nbsp;&nbsp;onitemsadded: function(items)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(items.length + &quot; items were added&quot;);
&nbsp;&nbsp;&nbsp;},

&nbsp;&nbsp;&nbsp;/* When items are updated */
&nbsp;&nbsp;&nbsp;onitemsupdated: function(items)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(items.length + &quot; items were updated&quot;);
&nbsp;&nbsp;&nbsp;},

&nbsp;&nbsp;&nbsp;/* When items are deleted */
&nbsp;&nbsp;&nbsp;onitemsremoved: function(ids)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(ids.length + &quot; items were removed&quot;);
&nbsp;&nbsp;&nbsp;}
};
</pre> </li>
   <li><p>Register the listener to use the defined event handlers:</p> <pre class="prettyprint">
watcherId = calendar.addChangeListener(watcher);
</pre> </li>
   <li><p>To stop the notifications, use the <span style="font-family: Courier New,Courier,monospace">removeChangeListener()</span> method: </p> <pre class="prettyprint">
function cancelWatch()
{
&nbsp;&nbsp;&nbsp;calendar.removeChangeListener(watcherId);
}
</pre> </li>
  </ol>
            
		
<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>