<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
    <script type="text/javascript" src="../../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

    <title>Content: Discovering Multimedia Content (Such as Images, Videos, or Music)</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../../images/mobile_s_w.png"/> <img alt="Wearable Web" src="../../../images/wearable_s_w.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
	 <p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#browse">Browsing Content</a>
            </li>
            <li><a href="#manage">Managing Content</a>
            </li>
            <li><a href="#receive">Receiving Notifications on Content Changes</a>
            </li>
			<li>Playlist
			<ul class="toc">
				<li><a href="#create">Creating a Playlist</a></li>
				<li><a href="#manage_p">Managing Playlists</a></li>
				<li><a href="#items">Managing Playlist Items</a></li>
			</ul></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
             <li><a href="../../../../../org.tizen.guides/html/web/tizen/content/content_w.htm">Content Guide</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html">Content API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html">Content API for Wearable Web</a></li>			 
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Content: Discovering Multimedia Content (Such as Images, Videos, or Music)</h1>

<p>This tutorial demonstrates how you can retrieve content and manage items in your device local storage.</p>

<p>The Content API is mandatory for both Tizen mobile and wearable profiles, which means that it is supported in all mobile and wearable devices. All mandatory APIs are supported on the Tizen Emulators.</p> 

  <h2 id="warm_up" name="warm_up">Warm-up</h2>
  <p>Become familiar with the Content API basics by learning about:</p>
  <ul>
   <li><a href="#browse">Browsing Content</a> <p>Browse and search for directories and items in directories.</p></li>
   <li><a href="#manage">Managing Content</a> <p>View and update item details.</p></li>
   <li><a href="#receive">Receiving Notifications on Content Changes</a> <p>Receive notifications when a content item is added, updated, or deleted.</p></li>
   <li>Playlist
   <ul>
   <li><a href="#create">Creating a Playlist</a> <p>Create a new playlist and add items. Create a new playlist based on an existing playlist.</p></li>
	<li><a href="#manage_p">Managing Playlists</a> <p>Retrieve all playlists. Remove a playlist.</p></li>
	<li><a href="#items">Managing Playlist Items</a> <p>Add, retrieve, and remove items. Change item position and order.</p></li></ul>
	</li>
  </ul>
  
  <h2 id="task" name="task">Task</h2>
  <p>In the <a href="task_mediacontent_w.htm">Media Content</a> task, we will walk through how to browse and manage the media directories in your application.</p>
     
 <h2 id="browse" name="browse">Browsing Content</h2>
			
  <p>Learning how to browse and search for content directories and content items in directories is a basic content management skill:</p>
  <ol>
   <li><p>Retrieve the <span style="font-family: Courier New,Courier,monospace">ContentManager</span> interface instance (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html#ContentManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html#ContentManager">wearable</a> applications) using the <span style="font-family: Courier New,Courier,monospace">tizen</span> global object:</p> <pre class="prettyprint">var manager = tizen.content;</pre></li>
   <li> <p>To search for the content directories in the local device, use the <span style="font-family: Courier New,Courier,monospace">getDirectories()</span> method of the <span style="font-family: Courier New,Courier,monospace">ContentManager</span> interface. The method returns an array of <span style="font-family: Courier New,Courier,monospace">ContentDirectory</span> objects (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html#ContentDirectory">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html#ContentDirectory">wearable</a> applications).</p> <pre class="prettyprint">function onDirectoryArraySuccess(directories)
{
&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; directories.length; i++)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Retrieve folder-specific information */
&nbsp;&nbsp;&nbsp;}
}

manager.getDirectories(onDirectoryArraySuccess);</pre></li>
   <li>To search for the content items in all directories, use the <span style="font-family: Courier New,Courier,monospace">find()</span> method of the <span style="font-family: Courier New,Courier,monospace">ContentManager</span> interface. The method returns an array of <span style="font-family: Courier New,Courier,monospace">Content</span> objects (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html#Content">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html#Content">wearable</a> applications).<p></p> <pre class="prettyprint">function onContentItemArraySuccess(contents)
{
&nbsp;&nbsp;&nbsp;for (var i=0; i &lt; contents.length; i++)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(i + &quot;:&quot; + contents[i].type + &quot;:&quot; + contents[i].title + &quot;:&quot; + contents[i].mimeType);
&nbsp;&nbsp;&nbsp;}
}

var contentType = &quot;VIDEO&quot;;
var filter = new tizen.AttributeFilter(&quot;type&quot;, &quot;EXACTLY&quot;, contentType);
manager.find(onContentItemArraySuccess, null, null, filter);
</pre>
    <table class="note">
     <tbody>
      <tr>
       <th class="note">Note</th>
      </tr>
      <tr>
       <td class="note">To retrieve a specific set of content items, you can specify a content directory (with the directory ID), filter, and sorting order for the search operation through the <span style="font-family: Courier New,Courier,monospace">directoryId</span>, <span style="font-family: Courier New,Courier,monospace">filter</span> and <span style="font-family: Courier New,Courier,monospace">sortMode</span> parameters (for attributes supported in the filter, see <a href="../../../../../org.tizen.guides/html/web/tizen/tizen/tizen_guide_w.htm#content_filter">Content Filter Attributes</a>). <p>In this example, the directory ID is set to <span style="font-family: Courier New,Courier,monospace">null</span> (which means that all directories are searched), the filter retrieves all content items whose type is VIDEO, and no sorting order is defined (which means that the default sorting order is used).</p> </td>
      </tr>
     </tbody>
    </table> </li>
  </ol>
  
 <h2 id="manage" name="manage">Managing Content</h2>

  <p>Learning how to view content details and update them is a basic content management skill:</p>
  <ol>
   <li><p>Retrieve the<span style="font-family: Courier New,Courier,monospace">ContentManager</span> interface instance (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html#ContentManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html#ContentManager">wearable</a> applications) using the <span style="font-family: Courier New,Courier,monospace">tizen</span> global object, and search for the item whose details you want to update.</p> <p>In the following example, the item whose title is <span style="font-family: Courier New,Courier,monospace">image7.jpg</span> is retrieved.</p> <pre class="prettyprint">var manager = tizen.content();

var filter = new tizen.AttributeFilter(&quot;title&quot;, &quot;EXACTLY&quot;, &quot;image7.jpg&quot;);
manager.find(onMediaItemArraySuccess, null, null, filter);</pre></li>
   <li>In the success event handler of the <span style="font-family: Courier New,Courier,monospace">find()</span> method, view the content item details by displaying them in the console log: <pre class="prettyprint">function onMediaItemArraySuccess(item)
{
&nbsp;&nbsp;&nbsp;if (items.length &gt; 0) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(items[0].type + &quot;: &quot; + items[0].title + &quot;: &quot; + items[0].mimeType);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;geolocation-latitude :&quot; + items[0].geolocation.latitude +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot; longitude:&quot; + items[0].geolocation.longitude);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;update(items[0]);
&nbsp;&nbsp;&nbsp;}
}</pre></li>
   <li><p>To update the editable attributes of the content item, use the <span style="font-family: Courier New,Courier,monospace">update()</span> method. In the example below, the rating of the content item is increased.</p> <pre class="prettyprint">
function update(item)
{
&nbsp;&nbsp;&nbsp;/* Checks whether the attribute is editable */
&nbsp;&nbsp;&nbsp;if (item.editableAttributes.indexOf(&quot;rating&quot;) &gt;= 0)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Changes an attribute */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.rating = 1;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Updates the item */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;manager.update(item);
&nbsp;&nbsp;&nbsp;}
}</pre></li>
   <li><p>To scan for the content item file, use the <span style="font-family: Courier New,Courier,monospace">scanFile()</span> method. Because scanning is not performed automatically when the content file is copied or moved, call the <span style="font-family: Courier New,Courier,monospace">scanFile()</span> method to find the file.</p> <pre class="prettyprint">
/* Assume the images/photo.jpg is copied to the device */
function onScanSuccessCallback(path)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Scanning completed:&quot; + path);
};

tizen.filesystem.resolve(&quot;images/photo.jpg&quot;, function(file)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.content.scanFile(file.toURI(), onScanSuccessCallback);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});
</pre></li>
  </ol>
 
 <h2 id="receive" name="receive">Receiving Notifications on Content Changes</h2>

  <p>To create engaging applications with various content features, you must learn to receive notifications when content items are added, updated, or removed:</p>
  <ol>
   <li><p>Define the event handlers for different notifications using the <span style="font-family: Courier New,Courier,monospace">ContentChangeCallback</span> listener instance (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html#ContentChangeCallback">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html#ContentChangeCallback">wearable</a> applications):</p> <pre class="prettyprint">
var listener =
{
&nbsp;&nbsp;&nbsp;/* When new items are added */
&nbsp;&nbsp;&nbsp;oncontentadded: function(content)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(content.contentURI + &quot; content was added&quot;);
&nbsp;&nbsp;&nbsp;},

&nbsp;&nbsp;&nbsp;/* When items are updated */
&nbsp;&nbsp;&nbsp;oncontentupdated: function(content)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(content.contentURI + &quot; content was updated&quot;);
&nbsp;&nbsp;&nbsp;},

&nbsp;&nbsp;&nbsp;/* When items are deleted */
&nbsp;&nbsp;&nbsp;oncontentremoved: function(id)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(id + &quot; was removed&quot;);
&nbsp;&nbsp;&nbsp;}
};
</pre> </li>
   <li><p>Register the listener to use the defined event handlers:</p> <pre class="prettyprint">
tizen.content.setChangeListener(listener);
</pre> </li>
   <li><p>To stop the notifications, use the <span style="font-family: Courier New,Courier,monospace">unsetChangeListener()</span> method: </p> <pre class="prettyprint">
tizen.content.unsetChangeListener();
</pre> </li>
  </ol>
 
                <h2 id="create" name="create">Creating a Playlist</h2>

<p>Learning how to create a new playlist enables adding a playlist from your application:</p>

<ul>
<li><p>To create a new empty playlist, use the <span style="font-family: Courier New,Courier,monospace">createPlaylist()</span> method of the <span style="font-family: Courier New,Courier,monospace">ContentManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html#ContentManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html#ContentManager">wearable</a> applications):</p>

<pre class="prettyprint">function createSuccess(playlist)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;create SUCCESS&quot;);
}

tizen.content.createPlaylist(&quot;My new playlist&quot;, createSuccess); </pre></li>

<li>To create a new playlist based on an existing one (basically copy the existing playlist content to a new playlist), use the <span style="font-family: Courier New,Courier,monospace">createPlaylist()</span> method, passing the source playlist as an argument:

<pre class="prettyprint">function createSuccess(playlist)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;create SUCCESS&quot;);
}

tizen.content.getPlaylists(function(playlists)
{
&nbsp;&nbsp;&nbsp;var existingPlaylist = playlists[0];
&nbsp;&nbsp;&nbsp;tizen.content.createPlaylist(&quot;My new playlist&quot;, createSuccess, null, existingPlaylist);
});</pre>
</li>
</ul>
          
                <h2 id="manage_p" name="manage_p">Managing Playlists</h2>

<p>Learning how to retrieve and remove playlists is a basic playlist management skill:</p>

<ul>
<li><p>To retrieve a list of all playlists, use the <span style="font-family: Courier New,Courier,monospace">getPlaylists()</span> method of the <span style="font-family: Courier New,Courier,monospace">ContentManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html#ContentManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html#ContentManager">wearable</a> applications):</p>

<pre class="prettyprint">function getPlaylistsSuccess(playlists)
{
&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; playlists.length; i++)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cur = playlists[i];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;[&quot; + i + &quot;] name:&quot; + cur.name + &quot; number of tracks:&quot; + cur.numberOfTracks);
&nbsp;&nbsp;&nbsp;}
}
tizen.content.getPlaylists(getPlaylistsSuccess);</pre></li>

<li>To remove a playlist, use the <span style="font-family: Courier New,Courier,monospace">removePlaylist()</span> method providing the ID of the playlist:

<pre class="prettyprint">function removePlaylistSuccess()
{
&nbsp;&nbsp;&nbsp;console.log(&quot;removePlaylist() is successfully done.&quot;);
}

tizen.content.getPlaylists(function(playlists)
{
&nbsp;&nbsp;&nbsp;var myPlaylist = playlists[0];
&nbsp;&nbsp;&nbsp;tizen.content.removePlaylist(myPlaylist.id, removePlaylistSuccess);
});</pre></li>

</ul>
     
                <h2 id="items" name="items">Managing Playlist Items</h2>

<p>Learning how to manage list items is a basic playlist management skill:</p>

<ul>

<li>To add items to a playlist:

<ol>
<li><p>Retrieve the multimedia content using the <span style="font-family: Courier New,Courier,monospace">find()</span> method of the <span style="font-family: Courier New,Courier,monospace">ContentManager</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html#ContentManager">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html#ContentManager">wearable</a> applications):</p>

<pre class="prettyprint">var myPlaylist;

tizen.content.getPlaylists(function(playlists)
{
&nbsp;&nbsp;&nbsp;myPlaylist = playlists[0];
&nbsp;&nbsp;&nbsp;tizen.content.find(findSuccess, null, null, new tizen.AttributeFilter(&quot;type&quot;, &quot;EXACTLY&quot;, &quot;AUDIO&quot;));
});
</pre></li>

<li>To add multiple items to the retrieved playlist, use the <span style="font-family: Courier New,Courier,monospace">addBatch()</span> method of the <span style="font-family: Courier New,Courier,monospace">Playlist</span> interface (in <a href="../../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html#Playlist">mobile</a> and <a href="../../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/content.html#Playlist">wearable</a> applications):

<pre class="prettyprint">function findSuccess(contents)
{
&nbsp;&nbsp;&nbsp;if (contents.length &gt;= 3)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myPlaylist.addBatch([contents[0], contents[1], contents[2]]);
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;else
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;Not enough items. Need at least 3&quot;);
&nbsp;&nbsp;&nbsp;}
}</pre></li>

<li>To add a single item to the retrieved playlist, use the <span style="font-family: Courier New,Courier,monospace">add()</span> method of the <span style="font-family: Courier New,Courier,monospace">Playlist</span> interface:

<pre class="prettyprint">function findSuccess(contents)
{
&nbsp;&nbsp;&nbsp;if (contents.length &gt; 0)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myPlaylist.add(contents[0]);
&nbsp;&nbsp;&nbsp;}
}</pre>
</li>
</ol></li>
<li>To retrieve items from a playlist, use the <span style="font-family: Courier New,Courier,monospace">get()</span> method of the <span style="font-family: Courier New,Courier,monospace">Playlist</span> interface:

<pre class="prettyprint">function getSuccess(items)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Playlist items:&quot;);
&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; items.length; ++i)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;[&quot; + i + &quot;]: name:&quot; + items[i].name);
&nbsp;&nbsp;&nbsp;}
}

tizen.content.getPlaylists(function(playlists)
{
&nbsp;&nbsp;&nbsp;var myPlaylist = playlists[0];
&nbsp;&nbsp;&nbsp;myPlaylist.get(getSuccess);
});</pre>
</li>

<li>To change the position of a single playlist item (track), use the <span style="font-family: Courier New,Courier,monospace">move()</span> method of the <span style="font-family: Courier New,Courier,monospace">Playlist</span> interface. The 2nd argument indicates how much and in which direction the item is moved.
<p>Note that before moving the item, first you must retrieve it using the <span style="font-family: Courier New,Courier,monospace">get()</span> method.</p>
<pre class="prettyprint">
var myItem; /* Assume that it was retrieved using the get() method */
function moveSuccess()
{
&nbsp;&nbsp;&nbsp;console.log(&quot;move item SUCCESS&quot;);
}

tizen.content.getPlaylists(function(playlists)
{
&nbsp;&nbsp;&nbsp;var myPlaylist = playlists[0];
&nbsp;&nbsp;&nbsp;myPlaylist.move(myItem, -2, moveSuccess);
});</pre>

<p>The example above moves the track 2 positions up on the playlist. The second argument of the <span style="font-family: Courier New,Courier,monospace">move()</span> method can be a negative value, which means moving the track up, or a positive value, which means moving the track down. If the value is greater than number of tracks above or below, the item is accordingly moved to the beginning or end of the playlist.</p>

</li>

<li>To change the order of all items in the playlist, use the <span style="font-family: Courier New,Courier,monospace">setOrder()</span> method. This feature is useful when sorting the playlist.

<p>Following example reverses the order of the playlist items. For the <span style="font-family: Courier New,Courier,monospace">setOrder()</span> method to work, you must pass all items from the playlist. If an item is missing or an item from a different playlist is included, the <span style="font-family: Courier New,Courier,monospace">InvalidValuesError</span> exception is returned in the error callback. </p>

<ol><li>Get all tracks using the <span style="font-family: Courier New,Courier,monospace">get()</span> method.</li>
<li>Within the success callback of the <span style="font-family: Courier New,Courier,monospace">setOrder()</span> method, create an array with the new order:

<pre class="prettyprint">
var items; /* Assume that it was retrieved using the get() method */
var newOrder = items.slice(0);
newOrder.reverse();</pre></li>
<li>Execute the <span style="font-family: Courier New,Courier,monospace">setOrder()</span> method:

<pre class="prettyprint">function setOrderSuccess()
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Set items order SUCCESS&quot;);
}

myPlaylist.setOrder(newOrder, setOrderSuccess); </pre>
</li></ol>
</li>
</ul>
         
			
<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
