<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Event: Managing Events</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#manage">Subscribing to an Event</a></li>
			<li><a href="#broadcast">Publishing an Event</a></li>	 
			<li><a href="#launch">Managing Launch-On-Events</a></li>	 	 		
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.guides/html/native/app/event_n.htm">Event Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__EVENT__MODULE.html">Event API for Mobile Native</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

	<h1>Event: Managing Events</h1>

  
<p>This tutorial demonstrates how you can publish and subscribe to events.</p>

<p>This feature is supported in mobile applications only.</p>
  
<h2>Warm-up</h2>
<p>Become familiar with the Event API basics by learning about:</p>
	<ul>
		<li><a href="#manage">Subscribing to an Event</a>
		<p>Register an event handle to receive events.</p></li>
		<li><a href="#broadcast">Publishing an Event</a>
		<p>Broadcast an application event to all listeners.</p></li>	 
		<li><a href="#launch">Managing Launch-On-Events</a>
		<p>Launch service applications based on specific events.</p></li>	 		 
	</ul>


 <h2 id="manage" name="manage">Subscribing to an Event</h2>

<p>To subscribe to a predefined system event or user-defined event:</p>
<ol>
<li>To use the functions and data types of the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__EVENT__MODULE.html">Event</a> API, include the <span style="font-family: Courier New,Courier,monospace">&lt;app_event.h&gt;</span> header file in your application:
<pre class="prettyprint">
#include &lt;app_event.h&gt; 
</pre> 
</li>
<li>Add an event handler.
<p>One event can have multiple event handlers, and one handler can be registered multiple times.</p>

<ul><li>Add an event handler for a system event:

<pre class="prettyprint">
static void 
battery_event_callback(const char *event_name, bundle *event_data, void *user_data) 
{
&nbsp;&nbsp;&nbsp;// event_name is the event name 
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;event_name is [%s]&quot;, event_name);

&nbsp;&nbsp;&nbsp;// event_data is the event data, its type is bundle
&nbsp;&nbsp;&nbsp;char *battery_level_status = NULL;
&nbsp;&nbsp;&nbsp;battery_level_status = bundle_get_val(event_data, EVENT_KEY_BATTERY_LEVEL_STATUS);
}

event_handler_h handler;

// Register the event handler
int ret = event_add_event_handler(SYSTEM_EVENT_BATTERY_LEVEL_STATUS,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(event_cb)battery_event_cb, user_data, &amp;handler);
if (ret != EVENT_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;err: [%d]&quot;, ret);
</pre>
</li>

<li>Add an event handler for a user-defined event:

<p>When defining an event name for a user event (such as <span style="font-family: Courier New,Courier,monospace">event.org.tizen.senderapp.user_event</span>), the name format is <span style="font-family: Courier New,Courier,monospace">event.{sender appid}.{user-defined name}</span>. The <span style="font-family: Courier New,Courier,monospace">{user-defined name}</span> must:</p>
<ul>
	<li>Contain only the ASCII characters &quot;[A-Z][a-z][0-9]_&quot; and not begin with a digit.</li>
	<li>Not contain the &#39;.&#39; (period) character.</li>
	<li>Not exceed the maximum name length (127 bytes).</li>
	<li>Be at least 1 byte in length.</li>
</ul>
<pre class="prettyprint">
ret = event_add_event_handler(&quot;event.org.tizen.senderapp.user_event&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utc_event_cb_with_valid_check,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;CUSTOM_EVENT_KEY&quot;, &amp;event_handler);

if (ret != EVENT_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;err: [%d]&quot;, ret);
</pre>
</li></ul></li>

<li>When no longer needed, remove the event handler.
<p>A registered handler can be removed when application is running, and all registered handlers are removed when the application is terminated.</p>

<pre class="prettyprint">
ret = event_remove_event_handler(handler);
if (ret != EVENT_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;err: [%d]&quot;, ret);
</pre>
</li>

</ol>


 <h2 id="broadcast" name="broadcast">Publishing an Event</h2>
 
<p>To publish an event to all listeners:</p>

<ol>
<li>To use the functions and data types of the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__EVENT__MODULE.html">Event</a> API, include the <span style="font-family: Courier New,Courier,monospace">&lt;app_event.h&gt;</span> header file in your application:
<pre class="prettyprint">
#include &lt;app_event.h&gt; 
</pre> 
</li>
<li>Create the callback for handling the event:
<pre class="prettyprint">
static void 
user_event_cb(const char *event_name, bundle *event_data, void *user_data)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;user_event_cb: %s \n&quot;, event_name);

&nbsp;&nbsp;&nbsp;return;
}
</pre>
</li>
<li>Register the event handler and create the bundle for handling the event data:
<pre class="prettyprint">
int ret = EVENT_ERROR_NONE;
event_handler_h event_handler;
bundle *event_data = NULL;

ret = event_add_event_handler(&quot;event.org.tizen.senderapp.user_event&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_event_cb, &quot;CUSTOM_EVENT_KEY&quot;, &amp;event_handler);

if (ret != EVENT_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;err: [%d]&quot;, ret);

event_data = bundle_create();

ret = bundle_add_str(event_data, user_data_key, user_data);
</pre>
</li>
<li>Use the <span style="font-family: Courier New,Courier,monospace">event_publish_app_event()</span> function to publish the event:
<pre class="prettyprint">
ret = event_publish_app_event(&quot;event.org.tizen.senderapp.user_event&quot;, event_data);

if (ret != EVENT_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;err: [%d]&quot;, ret);
</pre>
</li>
<li>When no longer needed, free the bundle:
<pre class="prettyprint">
ret = bundle_free(event_data);
</pre>
</li>
</ol>
 
 <h2 id="launch" name="launch">Managing Launch-On-Events</h2>

 <p>To manage a Launch-On-Event:</p>
 
   <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">Only service applications can register and receive Launch-On-Events.</td> 
    </tr> 
   </tbody> 
  </table> 
 
 <ol>
 <li>To register an interest in a Launch-On-Event, define the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/launch_on_event</span> operation in the <span style="font-family: Courier New,Courier,monospace">tizen-manifest.xml</span> file. The URI name for the operation represents the event name in the Launch-On-Event format (<span style="font-family: Courier New,Courier,monospace">event://{Event_Name}</span>).

<pre class="prettyprint">
&lt;app-control&gt;
&nbsp;&nbsp;&nbsp;&lt;operation name=&quot;http://tizen.org/appcontrol/operation/launch_on_event&quot;/&gt;
&nbsp;&nbsp;&nbsp;&lt;uri name=&quot;event://tizen.system.event.battery_charger_status&quot;/&gt;
&lt;/app-control&gt;
</pre>
 
<p>The Launch-On-Event operation cannot be requested using the <span style="font-family: Courier New,Courier,monospace">app_control_send_launch_request()</span> function, unlike other application control operations.</p> 
</li>

<li>Receive the event:

<pre class="prettyprint">
static void 
*app_control(app_control_h app_control, void *data)
{
&nbsp;&nbsp;&nbsp;char *event_uri = &quot;event://tizen.system.event.battery_charger_status&quot;;
&nbsp;&nbsp;&nbsp;char *operation, char *uri, char *event_value;
&nbsp;&nbsp;&nbsp;ret = app_control_get_operation(app_control, &amp;operation);

&nbsp;&nbsp;&nbsp;if (ret == APP_CONTROL_ERROR_NONE &amp;&amp; operation &amp;&amp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcmp(operation, APP_CONTROL_OPERATION_LAUNCH_ON_EVENT) == 0) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret = app_control_get_uri(app_control, &amp;uri);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ret == APP_CONTROL_ERROR_NONE &amp;&amp; uri) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (strncmp(uri, event_uri, strlen(event_uri) + 1) == 0) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret = app_control_get_extra_data(app_control, &quot;battery_charger_status&quot;, &amp;event_value);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ret == APP_CONTROL_ERROR_NONE &amp;&amp; event_value) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(event_value);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Use event_add_event_handler() for further event subscriptions here
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(uri);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(operation);
&nbsp;&nbsp;&nbsp;}
}
</pre>
<p>The application can get the event name and data in the first <span style="font-family: Courier New,Courier,monospace">app_control_cb()</span> callback, which is called after the application state changes to <span style="font-family: Courier New,Courier,monospace">created</span>.</p>
</li>
</ol>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
