<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Notification: Notifying the User of Application Events</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mn_icon.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li>Set-up
				<ul class="toc">
					<li><a class="opensection" href="#init">Initializing Notifications</a></li>
					<li><a class="opensection" href="#create">Creating a Notification</a></li>
					<li><a class="opensection" href="#set">Setting Notification Attributes</a></li>
				</ul>
			</li>
			<li>Management
				<ul class="toc">
					<li><a class="opensection" href="#post">Posting a Notification</a></li>
					<li><a class="opensection" href="#update">Updating Notification Content</a></li>
					<li><a class="opensection" href="#delete">Deleting a Notification</a></li>
				</ul>
			</li>
			<li><a class="opensection" href="#status">Displaying the Notification Status</a></li>
			<li><a class="opensection" href="#bar">Displaying the Progress Bar</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.guides/html/native/app/notification_n.htm">Notification Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__NOTIFICATION__MODULE.html">Notification API</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

	<h1>Notification: Notifying the User of Application Events</h1>
  <div class="cont"><div class="static-cont">
  
<p>This tutorial demonstrates how you can display notifications in your application.</p>

<h2>Warm-up</h2>

<p>Become familiar with the Notification API basics by learning about:</p>
<ul>
 <li>Set-up
   <ul>
	 <li><a href="#init">Initializing Notifications</a>
	 <p>Initialize the notification functionalities for use.</p></li>
	 <li><a href="#create">Creating a Notification</a>
	 <p>Create a notification.</p></li>
	 <li><a href="#set">Setting Notification Attributes</a>
	 <p>Set attributes for a notification.</p></li>
   </ul>
 </li>
 <li>Management
   <ul>
	 <li><a href="#post">Posting a Notification</a>
	  <p>Post a notification.</p></li>
	 <li><a href="#update">Updating Notification Content</a>
	  <p>Update the content of a notification.</p></li>
	 <li><a href="#delete">Deleting a Notification</a>
	  <p>Delete a notification.</p></li>
	</ul>
 </li>
</ul>
<h2>Follow-up</h2> 
<p>Once we have learned the basics of the Notification API, we can now move on to more advanced tasks, including:</p>
<ul>
 <li><a href="#status">Displaying the Notification Status</a>
 <p>Display and track the notification status.</p></li>
 <li><a href="#bar">Displaying the Progress Bar</a>
  <p>Create, display, and update a progress bar.</p>
 </li>
 </ul>

<div class="devicespecs-util mt5 clfix">
		<ul class="dutil">
			<li><a href="#" class="showA">Show All</a></li>
			<li class="none"><a href="#" class="hideA">Hide All</a></li>
		</ul>
	</div>

		<ul class="devicespecifications">
		<li>
			<div class="devicespec-tit">
 <h2 id="init" name="init" class="items-tit-h2">Initializing Notifications</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
			
<p>To initialize notifications:</p>
<ol><li>To use the functions and data types of the <a href="../../../../org.tizen.native.mobile.apireference/group__NOTIFICATION__MODULE.html">Notification</a> API, include the <span style="font-family: Courier New,Courier,monospace">&lt;notification.h&gt;</span> header file in your application:
<pre class="prettyprint">
#include &lt;notification.h&gt;</pre></li>

<li>To follow this tutorial, place a JPEG image file named <span style="font-family: Courier New,Courier,monospace">notification_image.jpg</span> in your device's <span style="font-family: Courier New,Courier,monospace">/tmp</span> directory. The following variables are used in the tutorial code:
<pre class="prettyprint">static const char *image_path = &quot;tmp/notification_image.jpg&quot;;
static notification_h notification = NULL;</pre></li></ol>


	</div>
		</li>			
		<li>
			<div class="devicespec-tit">
 <h2 id="create" name="create" class="items-tit-h2">Creating a Notification</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>To create a notification:</p>
<p>Initialize a notification handle by calling the <span style="font-family: Courier New,Courier,monospace">notification_create()</span> function:</p>
<pre class="prettyprint">notification_h notification_create(notification_type_e type)</pre>

<p>The function takes the following parameters:</p>
<ul class="ul">
 <li>[in] <span style="font-family: Courier New,Courier,monospace">type</span>: Notification type.</li>
</ul>

<p>The possible values for the <span style="font-family: Courier New,Courier,monospace">type</span> parameter are:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TYPE_NOTI</span>: Create a regular notification.</li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TYPE_ONGOING</span>: Create an ongoing notification.</li>
</ul>

<p>The following example code creates an ongoing notification and checks whether the initialization was successful:</p>
<pre class="prettyprint">notification = notification_create(NOTIFICATION_TYPE_ONGOING);
if (notification != NULL)
{
&nbsp;&nbsp;&nbsp;// Notification was initialized successfully
}</pre>
	</div>
		</li>			
		<li>
			<div class="devicespec-tit">
 <h2 id="set" name="set" class="items-tit-h2">Setting Notification Attributes</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>You can set the following attributes for a notification:</p>
<ul class="ul">
 <li><a href="#text">Notification text</a></li>
 <li><a href="#timestamp">Timestamp</a></li>
 <li><a href="#image">Image</a></li>
 <li><a href="#display">Display options</a></li>
 <li><a href="#led">LED options</a></li>
 <li><a href="#prop">Properties</a></li>
</ul>

<h3 id="text" name="text">Setting the Notification Text</h3>

<p>To set the text to display in the notification view, use the <span style="font-family: Courier New,Courier,monospace">notification_set_text()</span> function:</p>

<pre class="prettyprint">notification_set_text (notification_h noti, notification_text_type_e type, const char *text, const char *key, int args_type, ...)</pre>

<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] type</span>: Notification text type.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] text</span>: Text to display in the notification view.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] key</span>: Text key for localization.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] args_type</span>: Variable parameter for a type-value pair.</li>
</ul>

<p>The possible values for the <span style="font-family: Courier New,Courier,monospace">type</span> parameter are:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_TITLE</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_CONTENT</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_CONTENT_FOR_DISPLAY_OPTION_IS_OFF</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_EVENT_COUNT</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_INFO_1</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_INFO_SUB_1</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_INFO_2</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_INFO_SUB_2</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_INFO_3</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_INFO_SUB_3</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_GROUP_TITLE</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_GROUP_CONTENT</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_TEXT_TYPE_GROUP_CONTENT_FOR_DISPLAY_OPTION_IS_OFF</span></li>
</ul>

<p>The <span style="font-family: Courier New,Courier,monospace">notification_set_text()</span> function sets the title and content string. If the text is formatted data (only d, f, and s are supported), set the type-value pair:</p>
<ul class="ul">
 <li>If d, the type is <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_VARIABLE_TYPE_INT</span> and the value is an integer.</li>
 <li>If f, the type is <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_VARIABLE_TYPE_DOUBLE</span> and the value is a double.</li>
 <li>If s, the type is <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_VARIABLE_TYPE_STRING</span> and the value is a string.</li>
</ul>
<p>If the type is <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_VARIABLE_TYPE_COUNT</span>, the notification count is displayed with the text. If the value is <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_COUNT_POS_LEFT</span>, the count is displayed to the left of the text. If the value is <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_COUNT_POS_IN</span>, the count is displayed in the text when the text is of the d format. If the value is <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_COUNT_POS_RIGHT</span>, the count is displayed to the right of the text. Variable parameters should be terminated by <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_VARIABLE_TYPE_NONE</span>.</p>

<p>Check whether the operation was successful by retrieving and comparing the return value of any function to <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_ERROR_NONE</span>:</p>

<pre class="prettyprint">int ret =0;
ret = notification_set_text(notification, NOTIFICATION_TEXT_TYPE_TITLE, &quot;text&quot;, NULL, NOTIFICATION_VARIABLE_TYPE_NONE);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre>

<h3 id="timestamp" name="timestamp">Setting the Notification Timestamp</h3>

<p>To set the timestamp to display in the notification text, use the <span style="font-family: Courier New,Courier,monospace">notification_set_time_to_text()</span> function:</p>

<pre class="prettyprint">notification_set_time_to_text (notification_h noti, notification_text_type_e type, time_t time)</pre>

<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] type</span>: Notification text type. For information about the possible values, see <a href="#text">Setting the Notification Text</a>.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] time_t</span>: Timestamp to display in the notification text.</li>
</ul>

<pre class="prettyprint">ret = notification_set_time_to_text(notification, NOTIFICATION_TEXT_TYPE_CONTENT, time(NULL));
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre>

<h3 id="image" name="image">Setting the Notification Image</h3>

<p>To set the image to display in the notification view, use the <span style="font-family: Courier New,Courier,monospace">notification_set_image()</span> function:</p>

<pre class="prettyprint">notification_set_image (notification_h noti, notification_image_type_e type, const char *image_path)</pre> 

<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] type</span>: Notification image type.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] image_path</span>: Absolute path and file name of the image file.</li>
</ul>

<p>The possible values for the <span style="font-family: Courier New,Courier,monospace">type</span> parameter are:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_ICON</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_ICON_FOR_INDICATOR</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_ICON_FOR_LOCK</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_THUMBNAIL</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_THUMBNAIL_FOR_LOCK</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_ICON_SUB</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_BACKGROUND</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_LIST_1</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_LIST_2</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_LIST_3</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_LIST_4</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_IMAGE_TYPE_LIST_5</span></li>
</ul>

<pre class="prettyprint">ret = notification_set_image(notification, NOTIFICATION_IMAGE_TYPE_ICON, image_path);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre>

<h3 id="display" name="display">Setting the Notification Display Options</h3>

<p>To set how applications display the notification, use the <span style="font-family: Courier New,Courier,monospace">notification_set_display_applist()</span> function:</p>

<pre class="prettyprint">notification_set_display_applist (notification_h noti, int applist)</pre>

<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] applist</span>: Notification display option. You can set multiple options with the &quot;|&quot; pipe operation.</li>
</ul>

<p>The possible values for the <span style="font-family: Courier New,Courier,monospace">applist</span> parameter are:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_DISPLAY_APP_NOTIFICATION_TRAY</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_DISPLAY_APP_TICKER</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_DISPLAY_APP_LOCK</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_DISPLAY_APP_INDICATOR</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_DISPLAY_APP_ALL</span></li>
</ul>

<p>You can combine the flags in the function by using the pipe &quot;|&quot; operation:</p>
<pre class="prettyprint">ret = notification_set_display_applist(notification, NOTIFICATION_DISPLAY_APP_NOTIFICATION_TRAY | NOTIFICATION_DISPLAY_APP_TICKER);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre>

<h3 id="led" name="led">Setting the LED Options</h3>

<p>To set the LED options for a notification, use the <span style="font-family: Courier New,Courier,monospace">notification_set_led()</span> and <span style="font-family: Courier New,Courier,monospace">notification_set_led_time_period()</span> functions:</p>
<pre class="prettyprint">notification_set_led (notification_h noti, notification_led_op_e operation, int led_argb)</pre>
<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] operation</span>: LED notification operation.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] led_argb</span>: Notification LED color.</li>
</ul>
<p>The possible values for the <span style="font-family: Courier New,Courier,monospace">operation</span> parameter are:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_LED_OP_ON</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_LED_OP_ON_CUSTOM_COLOR</span></li>
</ul>

<pre class="prettyprint">notification_set_led_time_period (notification_h noti, int on_ms, int off_ms)</pre>
<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] on_ms</span>: Time for turning on the LED.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] off_ms</span>: Time for turning off the LED.</li>
</ul>

<pre class="prettyprint">ret = notification_set_led(notification, NOTIFICATION_LED_OP_ON, 100);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}
ret = notification_set_led_time_period(notification, 100, 100);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre>

<h3 id="prop" name="prop">Setting Notification Properties</h3>

<p>To set a notification property, use the <span style="font-family: Courier New,Courier,monospace">notification_set_property()</span> function:</p>
<pre class="prettyprint">notification_set_property (notification_h noti, int flags)</pre>

<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
 <li><span style="font-family: Courier New,Courier,monospace">[in] flags</span>: Notification property. You can set multiple properties with the &quot;|&quot; pipe operation.</li>
</ul>

<p>The possible values for the <span style="font-family: Courier New,Courier,monospace">flags</span> parameter are:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_PROP_DISPLAY_ONLY_SIMMODE</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_PROP_DISABLE_APP_LAUNCH</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_PROP_DISABLE_AUTO_DELETE</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_PROP_LAUNCH_UG</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_PROP_DISABLE_TICKERNOTI</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_PROP_DISABLE_UPDATE_ON_INSERT</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_PROP_DISABLE_UPDATE_ON_DELETE</span></li>
 <li><span style="font-family: Courier New,Courier,monospace">NOTIFICATION_PROP_VOLATILE_DISPLAY</span></li>
</ul>

<pre class="prettyprint">ret = notification_set_property(notification, NOTIFICATION_PROP_DISABLE_APP_LAUNCH);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre>
	</div>
		</li>			
		<li>
			<div class="devicespec-tit">
 <h2 id="post" name="post" class="items-tit-h2">Posting a Notification</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>To post a notification to the database, use the <span style="font-family: Courier New,Courier,monospace">notification_post()</span> function:</p>
<pre class="prettyprint">notification_post (notification_h noti)</pre>
<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
</ul>

<pre class="prettyprint">ret = notification_post(notification);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre>
	</div>
		</li>			
		<li>
			<div class="devicespec-tit">
 <h2 id="update" name="update" class="items-tit-h2">Updating Notification Content</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>To update the content of a notification, use the <span style="font-family: Courier New,Courier,monospace">notification_update()</span> function:</p>
<pre class="prettyprint">notification_update (notification_h noti)</pre>
<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
</ul>

<p>The <span style="font-family: Courier New,Courier,monospace">notification_update()</span> function works only for ongoing notifications.</p>
<pre class="prettyprint">ret = notification_update (notification);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre>
	</div>
		</li>			
		<li>
			<div class="devicespec-tit">
 <h2 id="delete" name="delete" class="items-tit-h2">Deleting a Notification</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>To delete a notification:</p>			
<ol><li>To delete a notification from the database, use the <span style="font-family: Courier New,Courier,monospace">notification_delete()</span> function:
<pre class="prettyprint">notification_delete(notification_h noti)</pre>
<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
</ul>

<pre class="prettyprint">ret = notification_delete(notification);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre></li>
<li><p>After deleting the notification, free the internal structure data of the notification handle by calling the <span style="font-family: Courier New,Courier,monospace">notification_free()</span> function:</p>
<pre class="prettyprint">notification_free (notification_h noti)</pre>

<p>The function takes the following parameters:</p>
<ul class="ul">
 <li><span style="font-family: Courier New,Courier,monospace">[in] noti</span>: Notification handle.</li>
</ul>

<pre class="prettyprint">ret = notification_free(notification);
if (ret != NOTIFICATION_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre></li></ol>

	</div>
		</li>	
		<li>
			<div class="devicespec-tit">
 <h2 id="status" name="status" class="items-tit-h2">Displaying the Notification Status</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>To display the notification status:</p>

<ol>
<li><p>Define the message and register the callback for tracking the message status:</p>

<pre class="prettyprint">
notification_status_monitor_message_cb_set(_notification_status_message_cb, NULL);

notification_status_message_post(&quot;Example 2 Msg.&quot;);

notification_status_monitor_message_cb_unset();
</pre></li>

<li><p>When the message is posted on screen, the callback function is invoked:</p>

<pre class="prettyprint">
static void _notification_status_message_cb(const char *message, void *data)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, &quot;NOTIFICATION&quot;, &quot;Callback: %s\n&quot;, message);
}
</pre></li></ol>

    <p class="figure">Figure: Notification status</p> 
  <p style="text-align:center;"><img alt="Notification status" src="../../images/notification_status_sd.png" /></p>
	</div>
		</li>			
		<li>
			<div class="devicespec-tit">
 <h2 id="bar" name="bar" class="items-tit-h2">Displaying the Progress Bar</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 

<p>To display the progress bar:</p>

<ol><li><p>The Notification API provides allows you to create a progress bar, which is initialized by the <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_LY_ONGOING_PROGRESS</span> argument in the <span style="font-family: Courier New,Courier,monospace">GetNewNotification()</span> function.</p>
<p>To set the initial progress:</p>

<pre class="prettyprint">
static GMainLoop* gmainloop = NULL;
mainloop = g_main_loop_new(NULL, FALSE);

GetNewNotification(&amp;notification, &quot;Notification&quot;, NOTIFICATION_LY_ONGOING_PROGRESS);

notification_set_progress(notification, 0);

notification_set_tag(notification, &quot;noti_tag&quot;);

notification_post(notification);

g_timeout_add(1000, timeout_func, gmainloop);
g_main_loop_run(gmainloop);
g_main_loop_unref(gmainloop);

notification_delete(notification);
</pre></li>

<li>To update the progress bar, use the <span style="font-family: Courier New,Courier,monospace">notification_load_by_tag()</span> function for getting the notification handle:

<pre class="prettyprint">
static gboolean timeout_func(gpointer data)
{
&nbsp;&nbsp;&nbsp;static int i = 0;
&nbsp;&nbsp;&nbsp;double percent = 0;
&nbsp;&nbsp;&nbsp;i++;
&nbsp;&nbsp;&nbsp;notification_h notification = notification_load_by_tag(&quot;noti_tag&quot;);
&nbsp;&nbsp;&nbsp;notification_set_progress(notification, ((double) i / 10.0));
&nbsp;&nbsp;&nbsp;notification_get_progress(notification, &amp;percent);
&nbsp;&nbsp;&nbsp;notification_update(notification);

&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, &quot;NOTIFICATION&quot;, &quot;Progress: %f\n&quot;, percent);

&nbsp;&nbsp;&nbsp;if (timeout == i) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_main_loop_quit((GMainLoop*) data);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, &quot;NOTIFICATION&quot;, &quot;End of awaiting!\n&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return FALSE;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return TRUE;
}
</pre></li></ol>

    <p class="figure">Figure: Progress bar</p> 
  <p style="text-align:center;"><img alt="Progress bar" src="../../images/notification_bar_sd.png" /></p>
	</div>
		</li>					
	</ul>	
</div>				
</div>
 
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
