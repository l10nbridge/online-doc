<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Application Manager: Getting Information about Applications</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mn_icon.png"/> <img alt="Wearable native" src="../../images/wn_icon.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#manage_context">Managing the Application Context</a></li>
			<li><a href="#filter">Getting Information on Filtered Applications</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.guides/html/native/app/app_manager_n.htm">Application Manager Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__APPLICATION__MANAGER__MODULE.html">Application Manager API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__APPLICATION__MANAGER__MODULE.html">Application Manager API for Wearable Native</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

	<h1>Application Manager: Getting Information about Applications</h1>


<p>This tutorial demonstrates how you can get information about applications.</p> 

<h2>Warm-up</h2>
<p>Become familiar with the Application Manager API basics by learning about:</p>
<ul>
	<li><a href="#manage_context">Managing the Application Context</a> <p>Retrieve the application context and operate on it.</p></li>
	<li><a href="#filter">Getting Information on Filtered Applications</a> <p>Retrieve information on filtered applications.</p></li>
</ul>

 <h2 id="manage_context" name="manage_context">Managing the Application Context</h2>

<p>To get the running application context and its details, and to operate on the context:</p>

<ol>
<li><p>To use the functions and data types of the Application Manager API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__APPLICATION__MANAGER__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__APPLICATION__MANAGER__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;app_manager.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;app_manager.h&gt;
</pre></li>

<li>Get the context of the currently running application.

<p>When an application is not running, it is impossible to get its context.</p>

<p>Call the <span style="font-family: Courier New,Courier,monospace">app_manager_get_app_context()</span> function with the ID of the application from which the context is being obtained, and the handle (<span style="font-family: Courier New,Courier,monospace">app_context_h*</span>) to the application context which is filled with the received context:</p>


<pre class="prettyprint">
app_context_h app_context = NULL;

int ret = app_manager_get_app_context(Your App ID, &amp;app_context);
</pre>	

<p>This example gets for the context of the Clock application. If the function returns <span style="font-family: Courier New,Courier,monospace">APP_MANAGER_ERROR_NONE</span>, it has executed correctly and the <span style="font-family: Courier New,Courier,monospace">app_context</span> variable now contains the handle to the clock context. To prevent memory leaks, release <span style="font-family: Courier New,Courier,monospace">app_context</span> with the <span style="font-family: Courier New,Courier,monospace">app_context_destroy()</span> function after the work is finished.</p></li>

<li>Operate on the context:
<ul>
<li>Get the application ID and application process ID from the context:

<pre class="prettyprint">
char *app_id;
int pid = 0;

ret = app_context_get_app_id(app_context, &amp;app_id);
ret = app_context_get_pid(app_context, &amp;pid);
</pre>

<p>When <span style="font-family: Courier New,Courier,monospace">app_id</span> is no longer needed, release it using the <span style="font-family: Courier New,Courier,monospace">free()</span> function.</p></li>

<li><p>Check whether the application with the given application context is terminated:</p>
 <pre class="prettyprint">
bool terminated = false;

ret = app_context_is_terminated(app_context, &amp;terminated);

if (false == terminated)
{
&nbsp;&nbsp;&nbsp;// Application is running
} 
else 
{
&nbsp;&nbsp;&nbsp;// Application is terminated
}
</pre>
</li>
<li><p>Clone the given context handle:</p>
 <pre class="prettyprint">
app_context_h app_context_cloned = NULL;

ret = app_context_clone(&amp;app_context_cloned, app_context);
</pre></li>
<li><p>Check whether 2 contexts are equal:</p>
 <pre class="prettyprint">
bool equal = false;

ret = app_context_is_equal(app_context, app_context_cloned, &amp;equal);

if (equal)
{
&nbsp;&nbsp;&nbsp;// Contexts are equal
} 
else 
{
&nbsp;&nbsp;&nbsp;// Contexts are not equal
}
</pre></li>
</ul></li>
<li><p>When working with the application context is finished, call the <span style="font-family: Courier New,Courier,monospace">app_context_destroy()</span> function to remove the handle and release all resources:</p>

<pre class="prettyprint">
if (app_context) 
{
&nbsp;&nbsp;&nbsp;ret = app_context_destroy(app_context);
&nbsp;&nbsp;&nbsp;if (APP_MANAGER_ERROR_NONE != ret) // Error handling 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;app_context = NULL;
}
</pre>	</li>
</ol>

 <h2 id="filter" name="filter">Getting Information on Filtered Applications</h2>
<p>To get information on filtered applications:</p>

<ol>
<li><p>To use the functions and data types of the Application Manager API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__APPLICATION__MANAGER__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__APPLICATION__MANAGER__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;app_manager.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;app_manager.h&gt;
</pre></li>

<li>Create the <span style="font-family: Courier New,Courier,monospace">app_info_filter_h</span> handle using the <span style="font-family: Courier New,Courier,monospace">app_info_filter_create()</span> function:

<pre class="prettyprint">
app_info_filter_h app_info_filter = NULL;

int ret = app_info_filter_create(&amp;app_info_filter);
</pre></li>

<li>Add filter rules:

<pre class="prettyprint">
ret = app_info_filter_add_string(app_info_filter, PACKAGE_INFO_PROP_APP_TYPE, &quot;capp&quot;);
</pre></li>

<li>Use the <span style="font-family: Courier New,Courier,monospace">app_info_filter_cb()</span> callback to retrieve all filtered applications and print their information:

<pre class="prettyprint">
void app_info_filter_cb(app_info_filter_h app_info, void *user_data)
{
&nbsp;&nbsp;&nbsp;int ret;

&nbsp;&nbsp;&nbsp;char *app_id = NULL;

&nbsp;&nbsp;&nbsp;app_info_get_app_id(app_info, &amp;app_id);

&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, TAG, &quot;app_id \t= [%s]\n&quot;, app_id);

&nbsp;&nbsp;&nbsp;free(app_id);
}

ret = app_info_filter_foreach_appinfo(app_info_filter_cb, NULL);
if (ret != APP_MANAGER_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, TAG, &quot;foreach_app_info_filter error : %d&quot;, ret);
}
</pre></li>
<li>When you no longer need the filter, call the <span style="font-family: Courier New,Courier,monospace">app_info_filter_destroy()</span> function to remove the handle and release all resources:

<pre class="prettyprint">
if (app_info_filter_h)
{
&nbsp;&nbsp;&nbsp;ret = app_info_filter_destroy(app_info_filter_h);
&nbsp;&nbsp;&nbsp;if (APP_MANAGER_ERROR_NONE != ret) // Error handling
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;app_info_filter_h = NULL;
}
</pre> </li>
</ol>

 
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
