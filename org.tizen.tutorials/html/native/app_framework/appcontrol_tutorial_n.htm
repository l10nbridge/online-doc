<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>App Control: Launching Applications and Managing Groups</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#use">Running Applications Using Extra Data</a></li>
			<li><a href="#mode">Controlling the Launch Mode</a></li>		
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.guides/html/native/app/appcontrol_n.htm">App Control Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__APP__CONTROL__MODULE.html">App Control API for Mobile Native</a></li> 
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__APP__CONTROL__MODULE.html">App Control API for Wearable Native</a></li> 
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

	<h1>App Control: Launching Applications and Managing Groups</h1>


<p>This tutorial demonstrates how you can launch other applications and manage application groups.</p> 

<h2>Warm-up</h2>
<p>Become familiar with the App Control API basics by learning about:</p>

<ul>
	<li><a href="#use">Running Applications Using Extra Data</a> <p>Run a specific application control with preconfigured parameters.</p></li>
	<li><a href="#mode">Controlling the Launch Mode</a> <p>Set the launch mode when calling for an application through an application control to manage application groups.</p></li>
</ul>

 <h2 id="use" name="use">Running Applications Using Extra Data</h2>

<p>To run a specific application control with some preconfigured parameters:</p>

<ol>
<li><p>To use the functions and data types of the App Control API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__APP__CONTROL__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__APP__CONTROL__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace">&lt;app.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;app.h&gt;
</pre>
</li>

<li>
<p>Prepare the application control:</p>
<pre class="prettyprint">
ret = app_control_create(&amp;app);
if (ret != APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;app_control_create() failed. err = %d&quot;, ret);
</pre>
</li>
<li>
<p>When the <span style="font-family: Courier New,Courier,monospace">app_control</span> instance is created, set the operation and MIME type. In this example, the <span style="font-family: Courier New,Courier,monospace">app_control</span> launches an application which has the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span> operation and the <span style="font-family: Courier New,Courier,monospace">image/jpeg</span> MIME type.</p>
<p>The operation is mandatory information for the launch request. If the operation is not specified, <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_DEFAULT</span> is used for the launch request.</p>
<pre class="prettyprint">
ret = app_control_set_operation(app, APP_CONTROL_OPERATION_VIEW);
if (ret != APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;app_control_set_operation() failed. err = %d&quot;, ret);

ret = app_control_set_mime(app, &quot;image/jpeg&quot;);
if (ret != APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;app_control_set_mime() failed. err = %d&quot;, ret);
</pre>

<p>For more information on the common application services and the extra data related to them, see <a href="../../../../org.tizen.guides/html/native/app/common_appcontrol_n.htm">Common Application Controls</a>.</p>
</li>
<li>
<p>Add extra data to the <span style="font-family: Courier New,Courier,monospace">app_control</span> instance using the <span style="font-family: Courier New,Courier,monospace">app_control_add_extra_data()</span> or <span style="font-family: Courier New,Courier,monospace">app_control_add_extra_data_array()</span> function. In this example, a message is added as extra data:</p>
<pre class="prettyprint">
ret = app_control_add_extra_data(app, Your Message Key, message);
if (ret != APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;app_control_add_extra_data() failed. err = %d&quot;, ret);
</pre>
</li>
<li>
<p>Launch the <span style="font-family: Courier New,Courier,monospace">app_control</span> instance using the <span style="font-family: Courier New,Courier,monospace">app_control_send_launch_request()</span> function:</p>

<pre class="prettyprint">
ret = app_control_send_launch_request(app, NULL, NULL);
if (ret != APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;app_control_send_launch_request() failed. err = %d&quot;, ret);
</pre>
<table class="note">
	<tbody>
	    <tr>
        <th class="note">Note</th>
    </tr>
    <tr>
        <td class="note">Since Tizen 2.4, service applications are only allowed to be launched explicitly and the caller must be an application in the same package. Otherwise, the <span style="font-family: Courier New,Courier,monospace">app_control</span> instance returns an error.</td>
    </tr>
</tbody>
</table>
</li>

<li>
  <p>Read the extra data set to the <span style="font-family: Courier New,Courier,monospace">app_control</span> instance using the <span style="font-family: Courier New,Courier,monospace">app_control_foreach_extra_data()</span> function. The same function used on the <span style="font-family: Courier New,Courier,monospace">app_control_h</span> instance returned by the <span style="font-family: Courier New,Courier,monospace">app_control</span> reply allows you to read the reply message.</p>

  <pre class="prettyprint">
bool
_app_control_extra_data_cb(app_control_h app_control, const char *key, void *user_data)
{
&nbsp;&nbsp;&nbsp;int ret;
&nbsp;&nbsp;&nbsp;char *value;
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;ret = app_control_get_extra_data(app, key, &amp;value);
&nbsp;&nbsp;&nbsp;if (ret != APP_CONTROL_ERROR_NONE) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;app_control_get_extra_data() failed. err = %d&quot;, ret);
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_DEBUG, LOG_TAG, &quot;[value] %s&quot;, value);

&nbsp;&nbsp;&nbsp;return true;
}

ret = app_control_foreach_extra_data(app, _app_control_extra_data_cb, 0);
if (ret != APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;app_control_foreach_extra_data() failed. err = %d&quot;, ret);
</pre>
</li>

<li>
  <p>When your work with the application control is finished, clean up. 
  	To do this, pass the <span style="font-family: Courier New,Courier,monospace">app_control</span> handle to the 
  	<span style="font-family: Courier New,Courier,monospace">app_control_destroy()</span> function.</p>
<pre class="prettyprint">
ret = app_control_destroy(app);
if (ret != APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;app_control_destroy() failed. err = %d&quot;, ret);
</pre>
</li>
</ol>

 <h2 id="mode" name="mode">Controlling the Launch Mode</h2>

<p>In this use case, the caller application has a <strong>Launch</strong> button. When it is clicked, an application control is used to launch a sub application within the same group.</p>
 
<p>To control the launch mode:</p>
<ol>
<li>Create the UI with the <strong>Launch</strong> button:
<pre class="prettyprint">
static void 
create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;Evas_Object *bigbox, *bx, *bt;

&nbsp;&nbsp;&nbsp;ad-&gt;win = elm_win_util_standard_add(PACKAGE, PACKAGE);
&nbsp;&nbsp;&nbsp;elm_win_autodel_set(ad-&gt;win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(ad-&gt;win, &quot;delete,request&quot;, win_delete_request_cb, NULL);
&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;win, EEXT_CALLBACK_BACK, win_back_cb, ad);

&nbsp;&nbsp;&nbsp;bigbox = elm_box_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(bigbox, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;elm_win_resize_object_add(ad-&gt;win, bigbox);
&nbsp;&nbsp;&nbsp;evas_object_show(bigbox);

&nbsp;&nbsp;&nbsp;bx = elm_box_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;elm_box_pack_end(bigbox, bx);
&nbsp;&nbsp;&nbsp;evas_object_show(bx);

&nbsp;&nbsp;&nbsp;bt = elm_label_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;elm_object_text_set(bt, &quot;AGT3&quot;);
&nbsp;&nbsp;&nbsp;elm_box_pack_end(bx, bt);
&nbsp;&nbsp;&nbsp;evas_object_show(bt);

&nbsp;&nbsp;&nbsp;bt = elm_button_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;elm_object_text_set(bt, &quot;Launch&quot;);
&nbsp;&nbsp;&nbsp;elm_box_pack_end(bx, bt);
&nbsp;&nbsp;&nbsp;evas_object_show(bt);
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(bt, &quot;clicked&quot;, button_click_cb, NULL);

&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;win);
}</pre></li>

<li>When the button is clicked, use an application control to launch the sub application.
<p>Define the launch mode for the application to be called using the <span style="font-family: Courier New,Courier,monospace">app_control_set_launch_mode()</span> function. The second parameter defines the launch mode with the <span style="font-family: Courier New,Courier,monospace">app_control_launch_mode_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__APP__CONTROL__MODULE.html#gadf26b03f2f6b18acba4a946e7eb7b31c">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__APP__CONTROL__MODULE.html#gadf26b03f2f6b18acba4a946e7eb7b31c">wearable</a> applications).</p>
<pre class="prettyprint">
static void 
button_click_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;app_control_h h;

&nbsp;&nbsp;&nbsp;app_control_create(&amp;h);
&nbsp;&nbsp;&nbsp;app_control_set_operation(h, &quot;http://tizen.org/appcontrol/operation/view&quot;);
&nbsp;&nbsp;&nbsp;app_control_set_mime(h, &quot;application/pdf&quot;);
&nbsp;&nbsp;&nbsp;app_control_set_launch_mode(h, APP_CONTROL_LAUNCH_MODE_GROUP);
&nbsp;&nbsp;&nbsp;app_control_send_launch_request(h, NULL, NULL);

&nbsp;&nbsp;&nbsp;app_control_destroy(h);
}

static void 
app_control(app_control_h app_control, void *data)
{
&nbsp;&nbsp;&nbsp;// Handle the launch request
}
</pre>
</li>
</ol>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
