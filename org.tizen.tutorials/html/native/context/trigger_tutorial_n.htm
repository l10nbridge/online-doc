<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Contextual Trigger: Using Context-aware Task Automation</title>
 </head>
<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mn_icon.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li>Rule creation
			<ul>
				<li><a href="#create_rule">Creating a Rule</a></li>
				<li><a href="#create_event">Creating an Event</a></li>
				<li><a href="#create_condition">Creating Conditions</a></li>
				<li><a href="#set_action">Setting an Action</a></li>
			</ul>
			</li>
			<li><a href="#manage_rule">Managing Rules</a></li>
			<li><a href="#retrieve_rule">Retrieving Rules</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.guides/html/native/context/trigger_n.htm">Contextual Trigger Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__CONTEXT__TRIGGER__MODULE.html">Contextual Trigger API for Mobile Native</a></li>
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Contextual Trigger: Using Context-aware Task Automation</h1>


  <p>This tutorial demonstrates how you can compose and manage rules based on context states.</p>
  
  <table class="note"> 
<tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">This feature is supported in mobile applications only.</td> 
    </tr> 
   </tbody> 
  </table>
  
  <h2>Warm-up</h2>
  <p>Become familiar with the Contextual Trigger API basics by learning about:</p>
  <ul>
	<li>Rule creation
	<ul>
		<li><a href="#create_rule">Creating a Rule</a><p>Create a new rule and set its description.</p></li>
		<li><a href="#create_event">Creating an Event</a><p>Create an event and add it to the rule.</p></li>
		<li><a href="#create_condition">Creating Conditions</a><p>Create conditions and add them to the rule.</p></li>
		<li><a href="#set_action">Setting an Action</a><p>Set an action, such as a notification posting or application launch.</p></li>
	</ul>
	</li>
	<li><a href="#manage_rule">Managing Rules</a><p>Add, enable, disable, and remove rules.</p></li>
	<li><a href="#retrieve_rule">Retrieving Rules</a><p>Retrieve rules created by your application.</p></li>
  </ul>

<h2 id="create_rule" name="create_rule">Creating a Rule</h2>

<p>To compose a rule:</p>
<ol>
<li>
<p>To use the contextual trigger related features of the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__CONTEXT__TRIGGER__MODULE.html">Contextual Trigger</a> API, include the <span style="font-family: Courier New,Courier,monospace;">&lt;context_trigger.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;context_trigger.h&gt;
</pre>
</li>
<li>Create a rule for &quot;Notify if the battery is not charging and either Wi-Fi or GPS is enabled when the battery level becomes too low&quot;. 
<p>Create a rule handle using the <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_create()</span> function. Because both Wi-Fi and GPS conditions need not be met at the same time, the rule must be created with the <span style="font-family: Courier New,Courier,monospace;">CONTEXT_TRIGGER_LOGICAL_DISJUNCTION</span> operator.</p>
<pre class="prettyprint">
context_trigger_rule_h rule = NULL;
context_trigger_rule_create(CONTEXT_TRIGGER_LOGICAL_DISJUNCTION, &amp;rule);
</pre>
</li>
<li>Set a description, if you want:
<pre class="prettyprint">
context_trigger_rule_set_description(rule, "Notify if the battery is not charging and either Wi-Fi or GPS is enabled when the battery level becomes too low");
</pre>
</li>
</ol>
			
<h2 id="create_event" name="create_event">Creating an Event</h2>

<p>To create a <span style="font-family: Courier New,Courier,monospace;">CONTEXT_TRIGGER_EVENT_BATTERY</span> event to detect battery level changes:</p>
<ol>
<li>
<p>Create an event handle using the <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_event_create()</span> function:</p>
<pre class="prettyprint">
context_trigger_rule_entry_h battery_event = NULL;
context_trigger_rule_event_create(CONTEXT_TRIGGER_EVENT_BATTERY, CONTEXT_TRIGGER_LOGICAL_CONJUNCTION, &amp;battery_event);
</pre>
<p>While creating an event handle, the application chooses the logical operator (logical conjunction or disjunction), which is applied to combine the attribute keys for the event. In case of the <span style="font-family: Courier New,Courier,monospace;">CONTEXT_TRIGGER_EVENT_BATTERY</span> event, 2 types of contextual states are provided: <span style="font-family: Courier New,Courier,monospace;">CONTEXT_TRIGGER_LEVEL</span> and <span style="font-family: Courier New,Courier,monospace;">CONTEXT_TRIGGER_IS_CHARGING</span>. Because the application wants to check both if the battery level becomes too low and if the battery is not charging, <span style="font-family: Courier New,Courier,monospace;">CONTEXT_TRIGGER_LOGICAL_CONJUNCTION</span> must be applied.</p>
</li>
<li>Add the attribute key with the <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_entry_add_key()</span> function.
<p>The attribute key specifies the detailed comparison terms for the event.</p>
<pre class="prettyprint">
// Add a CONTEXT_TRIGGER_LEVEL key
context_trigger_rule_entry_add_key(battery_event, CONTEXT_TRIGGER_LOGICAL_DISJUNCTION, CONTEXT_TRIGGER_LEVEL);

// Add a CONTEXT_TRIGGER_IS_CHARGING key
context_trigger_rule_entry_add_key(battery_event, CONTEXT_TRIGGER_LOGICAL_CONJUNCTION, CONTEXT_TRIGGER_IS_CHARGING);
</pre>
<p>The application wants to check whether the battery level becomes either low, empty, or critical. For this reason, the <span style="font-family: Courier New,Courier,monospace;">CONTEXT_TRIGGER_LEVEL</span> key must be added with the <span style="font-family: Courier New,Courier,monospace;">CONTEXT_TRIGGER_LOGICAL_DISJUNCTION</span> logical operator.</p>
</li>
<li>Add the comparison operators and values for the attribute key. 
<p>Use the <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_entry_add_comparison_int()</span> or <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_entry_add_comparison_string()</span> function, depending on the data type.</p>
<pre class="prettyprint">
// Add the comparison values for the CONTEXT_TRIGGER_LEVEL key
context_trigger_rule_entry_add_comparison_string(battery_event, CONTEXT_TRIGGER_LEVEL, CONTEXT_TRIGGER_EQUAL_TO, CONTEXT_TRIGGER_LOW);
context_trigger_rule_entry_add_comparison_string(battery_event, CONTEXT_TRIGGER_LEVEL, CONTEXT_TRIGGER_EQUAL_TO, CONTEXT_TRIGGER_CRITICAL);
context_trigger_rule_entry_add_comparison_string(battery_event, CONTEXT_TRIGGER_LEVEL, CONTEXT_TRIGGER_EQUAL_TO, CONTEXT_TRIGGER_EMPTY);

// Add a comparison value for the CONTEXT_TRIGGER_IS_CHARGING key
context_trigger_rule_entry_add_comparison_int(battery_event, CONTEXT_TRIGGER_IS_CHARGING, CONTEXT_TRIGGER_EQUAL_TO, CONTEXT_TRIGGER_FALSE);
</pre>
</li>
<li>Add the event entry to the rule: 
<pre class="prettyprint">
context_trigger_rule_add_entry(rule, battery_event);
</pre>
<p>Note that a rule must include only 1 event.</p>
</li>
<li> Free the event:
<pre class="prettyprint">
context_trigger_rule_entry_destroy(battery_event);
</pre>
</li>
</ol>

<h2 id="create_condition" name="create_condition">Creating Conditions</h2>

<p>To create conditions to check Wi-Fi and GPS states:</p>
<ol>
<li>
<p>Create an event handle using the <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_condition_create()</span> function:</p>
<pre class="prettyprint">
// Create a Wi-Fi condition
context_trigger_rule_entry_h wifi_condition = NULL;
context_trigger_rule_condition_create(CONTEXT_TRIGGER_CONDITION_WIFI, CONTEXT_TRIGGER_LOGICAL_CONJUNCTION, &amp;wifi_condition);

// Create a GPS condition
context_trigger_rule_entry_h gps_condition = NULL;
context_trigger_rule_condition_create(CONTEXT_TRIGGER_CONDITION_GPS, CONTEXT_TRIGGER_LOGICAL_CONJUNCTION, &amp;gps_condition);
</pre>
</li>
<li>Add the attribute key with the <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_entry_add_key()</span> function to specify the comparison terms for each condition:
<pre class="prettyprint">
context_trigger_rule_entry_add_key(wifi_condition, CONTEXT_TRIGGER_LOGICAL_CONJUNCTION, CONTEXT_TRIGGER_STATE);
context_trigger_rule_entry_add_key(gps_condition, CONTEXT_TRIGGER_LOGICAL_CONJUNCTION, CONTEXT_TRIGGER_STATE);
</pre>
</li>
<li>Add a comparison operator and value for the attribute key. 
 <p>Use the <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_entry_add_comparison_int()</span>, <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_entry_add_string()</span>, or <span style="font-family: Courier New,Courier,monospace;">context_trigger_rule_entry_add()</span> function, depending on the data type. For more information, see the <a href="../../../../org.tizen.guides/html/native/context/trigger_n.htm">Contextual Trigger</a> guide.</p>
 <p>In the following example, the conditions for Wi-Fi and GPS are that they are enabled.</p>
<pre class="prettyprint">
context_trigger_rule_entry_add_comparison_string(wifi_condition, CONTEXT_TRIGGER_STATE, CONTEXT_TRIGGER_NOT_EQUAL_TO, CONTEXT_TRIGGER_DISABLED);
context_trigger_rule_entry_add_comparison_string(gps_condition, CONTEXT_TRIGGER_STATE, CONTEXT_TRIGGER_NOT_EQUAL_TO, CONTEXT_TRIGGER_DISABLED);
</pre>
</li>
<li>Add the conditions to the rule handle:
<pre class="prettyprint">
context_trigger_rule_add_entry(rule, wifi_condition);
context_trigger_rule_add_entry(rule, gps_condition);
</pre>
<p>Note that a condition is not mandatory and that a rule can have multiple conditions.</p>
</li>
<li> Free the conditions:
<pre class="prettyprint">
context_trigger_rule_entry_destroy(wifi_condition);
context_trigger_rule_entry_destroy(gps_condition);
</pre>
</li>
</ol>

<h2 id="set_action" name="set_action">Setting an Action</h2>
				

<p>If the rule is satisfied, either an application launch or a notification posting is triggered.</p>
<p> To set an action:</p>
<ul>
<li>
<p>To set an application launch request:</p>
<pre class="prettyprint">
app_control_h app;
// Create an app control handle and set the details, such as application ID and operation
context_trigger_rule_set_action_app_control(rule, app);
</pre>
<p>The application launch request is manipulated with an app control handle. For more details, see the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__APP__CONTROL__MODULE.html">App Control</a> API.</p>
</li>
<li>To register a notification posting request:
<pre class="prettyprint">
context_trigger_rule_set_action_notification(rule, &quot;Battery Alert&quot;, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Battery is getting low. To save your battery, you&#39;d better turn off Wi-Fi or GPS&quot;, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL, NULL);
</pre>
<p>The Contextual Trigger API supports the basic form of notifications only.</p>
</li>

</ul>
			
<h2 id="manage_rule" name="manage_rule">Managing Rules</h2>
				
<p>To manage the rules:</p>
<ol>
<li>To register a rule:
<ol type="a">
<li>Register the rule with the <span style="font-family: Courier New,Courier,monospace;">context_trigger_add_rule()</span> function and acquire the rule ID:
<pre class="prettyprint">
int rule_id;
context_trigger_add_rule(rule, &amp;rule_id);
</pre>
<p>The application can manage the rule with its rule ID. If the application adds the same rule with a previously registered rule ID, the same rule ID is acquired.</p>
</li>
<li>Release the rule handle resource:
<pre class="prettyprint">
context_trigger_destroy(rule);
</pre>
</li>
</ol>
</li>
<li>
<p>To enable and disable a rule:</p>
<ul>
<li>				
<p>Enable the rule explicitly with its rule ID:</p>
<pre class="prettyprint">
context_trigger_enable_rule(rule_id);
</pre>
<p>Note that a rule can be managed only by the application that has registered the rule.</p>
</li>		
<li>				
<p>Disable the rule with its rule ID:</p>
<pre class="prettyprint">
context_trigger_disable_rule(rule_id);
</pre>
</li>
</ul>		
</li>

<li>To remove a rule:	
<p>When no longer needed, delete the rule with the <span style="font-family: Courier New,Courier,monospace;">context_trigger_remove_rule()</span> function. Only disabled rules can be deleted.</p>
<pre class="prettyprint">
context_trigger_remove_rule(rule_id);
</pre>
</li>
</ol>

<h2 id="retrieve_rule" name="retrieve_rule">Retrieving Rules</h2>

<p>To retrieve all rules:</p>
<ol>
<li>
<p>Retrieve all the enabled rules registered by the application and disable them. The following example shows how to query the application&#39;s own rule IDs, disable the enabled rules, and remove all the rules.</p>
<p>Only the owner application can enable, disable, remove, and retrieve the rules.</p>
<pre class="prettyprint">
int* enabled_rule_ids;
int enabled_count;

context_trigger_get_own_rule_ids(&amp;enabled_rule_ids, &amp;enabled_count, NULL, NULL);

// Disable the enabled rules
int i = 0;
for (i = 0; i &lt; enabled_count; i++) 
{
&nbsp;&nbsp;&nbsp;context_trigger_disable_rule(enabled_rule_ids[i]);
}
</pre>
</li>
<li> Retrieve all the disabled rules owned by the application to remove them.
<pre class="prettyprint">
int* disabled_rule_ids;
int disabled_count;

context_trigger_get_own_rule_ids(NULL, NULL, &amp;disabled_rule_ids, &amp;disabled_count);

// Remove the disabled rules
for (i = 0; i &lt; disabled_count; i++) 
{
&nbsp;&nbsp;&nbsp;context_trigger_remove_rule(disabled_rule_ids[i]);
}
</pre>
</li>
<li>Free the memory allocated for the enabled and disabled rules:
<pre class="prettyprint">
if (enabled_rule_ids) 
{
&nbsp;&nbsp;&nbsp;free(enabled_rule_ids);
&nbsp;&nbsp;&nbsp;enabled_rule_ids = NULL;
}

if (disabled_rule_ids) 
{
&nbsp;&nbsp;&nbsp;free(disabled_rule_ids);
&nbsp;&nbsp;&nbsp;disabled_rule_ids = NULL;
}
</pre>
</li>
</ol>


<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
