<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

    <title>MIME Type: Mapping MIME Types to and from File Extensions</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#prerequisites">Prerequisites</a></li>
			<li><a href="#get_file_ext">Getting the MIME Type for a File Extension</a></li>
			<li><a href="#get_mime">Getting Extensions for a MIME Type</a></li>
		</ul>        
        <p class="toc-title">Related Info</p>
        <ul class="toc">

             <li><a href="../../../../org.tizen.guides/html/native/content/mime_type_n.htm">MIME Type Guide</a></li>
			 <li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__CONTENT__MIME__TYPE__MODULE.html">MIME Type API for Mobile Native</a></li>
			 <li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__CONTENT__MIME__TYPE__MODULE.html">MIME Type API for Wearable Native</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>MIME Type: Mapping MIME Types to and from File Extensions</h1>

  
 <p>This tutorial demonstrates how you can map MIME types to file extensions and vice versa.</p>

<h2>Warm-up</h2> 
<p>Become familiar with the MIME Type API basics by learning about:</p>
	<ul>
		<li><a href="#prerequisites">Prerequisites</a>
		<p>Prepare your application to use the MIME type functionality.</p></li>
		<li><a href="#get_file_ext">Getting the MIME Type for a File Extension</a>
		<p>Get a MIME type when an extension is known.</p></li>
		<li><a href="#get_mime">Getting Extensions for a MIME Type</a>
		<p>Get extensions mapped to certain MIME types.</p></li>
   </ul>

   
   <h2 id="prerequisites">Prerequisites</h2>
   
<p>To use the functions and data types of the MIME Type API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__CONTENT__MIME__TYPE__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__CONTENT__MIME__TYPE__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace">&lt;mime_type.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;mime_type.h&gt;
</pre>

 <h2 id="get_file_ext" name="get_file_ext">Getting the MIME Type for a File Extension</h2>

<p>To get the MIME types of all files in a directory when the extensions are known:</p>
<ul>
<li>For an individual file extension:
<p>Use the <span style="font-family: Courier New,Courier,monospace;">mime_type_get_mime_type()</span> function. The first parameter is the file extension without the leading dot and the second parameter is the MIME type for the given file extension.</p>
 
<p>The MIME type is <span style="font-family: Courier New,Courier,monospace;">&#39;application/octet-stream&#39;</span> if the given file extension is not associated with any specific file format.</p>

<pre class="prettyprint">
#include &lt;dirent.h&gt;
#include &lt;string.h&gt;

char *mime_type;
int error = mime_type_get_mime_type(&quot;jpg&quot;, &amp;mime_type);
</pre></li>

<li>For the extensions of all files in the resource directory:
<ol>
<li>To get the directory content, use the <span style="font-family: Courier New,Courier,monospace;">dirent</span> structure available in the <span style="font-family: Courier New,Courier,monospace;">&lt;dirent.h&gt;</span> header:

<pre class="prettyprint">
struct dirent *pDirent = NULL;
DIR *dir;
char *res_path = app_get_resource_path();
if (!res_path)
&nbsp;&nbsp;&nbsp;&nbsp;/* Error handling */
dir = opendir(res_path);
if (dir) {
&nbsp;&nbsp;&nbsp;&nbsp;while ((pDirent = readdir(dir)) != NULL) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pDirent-&gt;d_type != DT_REG) /* Only regular files */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;
</pre></li>

<li><p>Get the extension from a file name using the <span style="font-family: Courier New,Courier,monospace;">strrchr()</span> function available in the <span style="font-family: Courier New,Courier,monospace;">&lt;string.h&gt;</span> header. Incrementing the pointer address is necessary, so use the extension without a dot:</p>

<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char *extension = strrchr(pDirent-&gt;d_name, &#39;.&#39;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!extension)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extension++;
</pre></li>

<li><p>Use the <span style="font-family: Courier New,Courier,monospace;">mime_type_get_mime_type()</span> function to get the MIME type of each file using the extension pointer as an extension:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mime_type_get_mime_type(extension, &amp;mime_type);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Here you have a MIME type in its variable */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(mime_type);
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;closedir(dir);
}
</pre></li></ol></li>
</ul>

 <h2 id="get_mime" name="get_mime">Getting Extensions for a MIME Type</h2>

<p>To get a list of extensions associated, for example, with an image or JPEG MIME type, use the <span style="font-family: Courier New,Courier,monospace;">mime_type_get_file_extension()</span> function. </p>
<p>The function takes the MIME type as an input parameter, and fills the array of file extensions and the array length (marked as zero if empty) as the output parameters.</p>
<pre class="prettyprint">
char **extension;
int length;
int error = mime_type_get_file_extension(&quot;image/jpeg&quot;, &amp;extension, &amp;length);

int i;
for (i = 0; i &lt; length; i++)
&nbsp;&nbsp;&nbsp;&nbsp;/* Use extension[i] */

for (i = 0; i &lt; length; i++)
&nbsp;&nbsp;&nbsp;&nbsp;free(extension[i]);
free(extension);
</pre>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
