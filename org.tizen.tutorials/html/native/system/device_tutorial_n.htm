<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Device: Accessing Devices, Such as SB, MMC, Battery, CPU, and Display</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#battery">Retrieving Battery Information</a></li>
			<li>Device control
			<ul class="toc">
			<li><a href="#display">Controlling the Display</a></li>
			<li><a href="#haptic">Controlling Haptic Devices</a></li>
			<li><a href="#led">Controlling LED Devices</a></li>
			<li><a href="#power">Controlling the Power State</a></li>
			</ul></li>
			<li><a href="#changes">Monitoring Device Changes</a></li>
		</ul>		
		<p class="toc-title">Related Info</p>
		<ul class="toc">
            <li><a href="../../../../org.tizen.guides/html/native/system/device_n.htm">Device Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__MODULE.html">Device API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__MODULE.html">Device API for Wearable Native</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Device: Accessing Devices, Such as SB, MMC, Battery, CPU, and Display</h1>


	<p>This tutorial demonstrates how you can manage the display, battery, LED, haptic, and power functions.</p>


  <h2>Warm-up</h2>
    <p>Become familiar with the Device API basics by learning about:</p> 
	<ul>
	<li><a href="#battery">Retrieving Battery Information</a>
	<p>Get battery information.</p></li>
	<li>Device control
	<ul>
	<li><a href="#display">Controlling the Display</a>
	<p>Control display devices.</p></li>
	<li><a href="#haptic">Controlling Haptic Devices</a>
	<p>Control haptic devices.</p></li>
	<li><a href="#led">Controlling LED Devices</a>
	<p>Control LED devices.</p></li>
	<li><a href="#power">Controlling the Power State</a>
	<p>Control the device power state.</p></li>
	</ul></li>
	<li><a href="#changes">Monitoring Device Changes</a>
	<p>Register a callback to monitor device changes.</p></li>
	</ul>

<h2 id="battery" name="battery">Retrieving Battery Information</h2>

		<p>To retrieve battery information:</p>			
	<ol>
	<li>
	<p>To use the functions and data types of the Battery API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__BATTERY__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__BATTERY__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;device/battery.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;device/battery.h&gt;</pre>
		</li>

		<li>To get the battery details:
			<ul>
				<li>Get the battery percentage with the <span style="font-family: Courier New,Courier,monospace;">device_battery_get_percent()</span> function.
				<p>The function returns the current battery percentage as an integer value from 0 to 100 that indicates the remaining battery charge as a percentage of the maximum level.</p>

<pre class="prettyprint">
int error, pct;
error = device_battery_get_percent(&amp;pct);
</pre></li>

		<li>Get the current charging battery state with the <span style="font-family: Courier New,Courier,monospace;">device_battery_is_charging()</span> function:

<pre class="prettyprint">
int error;
bool charging;
error = device_battery_is_charging(&amp;charging);
</pre>
		</li>

		<li>Get the current battery level state with the <span style="font-family: Courier New,Courier,monospace;">device_battery_get_level_status()</span> function.
			<p>The <span style="font-family: Courier New,Courier,monospace;">device_battery_level_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__BATTERY__MODULE.html#ga63913a4983cc34e35dcdd670e8fe99e4">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__BATTERY__MODULE.html#ga63913a4983cc34e35dcdd670e8fe99e4">wearable</a> applications) defines the available battery levels.</p>
<pre class="prettyprint">
int error;
device_battery_level_e level;
error = device_battery_get_level_status(&amp;level);
</pre>
		</li>
		</ul></li>
	</ol> 

	<h2 id="display" name="display">Controlling the Display</h2>

			<p>To control the display:</p>
		<ol>
		<li>
		<p>To use the functions and data types of the Display API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__DISPLAY__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__DISPLAY__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;device/display.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;device/display.h&gt;</pre>
</li>

		<li>To retrieve and set display properties:
		<ul>
		<li>Get the number of display devices with the <span style="font-family: Courier New,Courier,monospace;">device_display_get_numbers()</span> function:
<pre class="prettyprint">
int error, num;
error = device_display_get_numbers(&amp;num);
</pre>
		</li>
		
		<li>Get the maximum brightness with the <span style="font-family: Courier New,Courier,monospace;">device_display_get_max_brightness()</span> function.
		<p>The function returns the maximum brightness value that can be set.</p>

<pre class="prettyprint">
int error, max;
error = device_display_get_max_brightness(0, &amp;max);
</pre>
		</li>
			
		<li>Get and set the display brightness with the <span style="font-family: Courier New,Courier,monospace;">device_display_get_brightness()</span> and <span style="font-family: Courier New,Courier,monospace;">device_display_set_brightness()</span> functions:

<pre class="prettyprint">
int error, brt;
error = device_display_get_brightness(0, &amp;brt);

error = device_display_set_brightness(0, 100);
</pre>
		</li>

		<li>Get and set the display state with the <span style="font-family: Courier New,Courier,monospace;">device_display_get_state()</span> and <span style="font-family: Courier New,Courier,monospace;">device_display_change_state()</span> functions.
<p>The <span style="font-family: Courier New,Courier,monospace;">display_state_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__DISPLAY__MODULE.html#ga93a9434f07b3db52ec85fe58b79c529f">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__DISPLAY__MODULE.html#ga93a9434f07b3db52ec85fe58b79c529f">wearable</a> applications) defines the available display states.</p>
<pre class="prettyprint">
int error;
display_state_e state;
error = device_display_get_state(&amp;state);

error = device_display_change_state(DISPLAY_STATE_NORMAL);
</pre>


		</li>
		</ul></li></ol>
		
<h2 id="haptic" name="haptic">Controlling Haptic Devices</h2>

<p>To control haptic devices:</p>
		<ol>
		<li>
<p>To use the functions and data types of the Haptic API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__HAPTIC__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__HAPTIC__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;device/haptic.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;device/haptic.h&gt;</pre>
</li>

<li>Get the number of haptic devices with the <span style="font-family: Courier New,Courier,monospace;">device_haptic_get_count()</span> function.

<pre class="prettyprint">
int error, num;
error = device_haptic_get_count(&amp;num);
</pre>
</li>
<li>To manage a haptic device:
<ol type="a">
<li>Initialize the haptic device with the <span style="font-family: Courier New,Courier,monospace;">device_haptic_open()</span> function.
<p>The function opens a haptic-vibration device and returns the handle to it. It makes a connection to the vibrator.</p>
<pre class="prettyprint">
int error;
haptic_device_h handle;
error = device_haptic_open(0, &amp;handle);
</pre>
</li>

<li>Play and stop an effect on the device with the <span style="font-family: Courier New,Courier,monospace;">device_haptic_vibrate()</span> and <span style="font-family: Courier New,Courier,monospace;">device_haptic_stop()</span> functions.
<p>The device vibrates during specified time with a constant intensity. The effect handle can be 0.</p>
<pre class="prettyprint">
int error;
haptic_effect_h effect_handle;
error = device_haptic_vibrate(handle, 1000, 100, &amp;effect_handle);

error = device_haptic_stop(handle, &amp;effect_handle);
</pre>
</li>

<li>When no longer needed, uninitialize the haptic device with the <span style="font-family: Courier New,Courier,monospace;">device_haptic_close()</span> function.
<p>The function closes the haptic handle and disconnects the connection to the vibrator.</p>

<pre class="prettyprint">
int error;
error = device_haptic_close(0, handle);
</pre>
</li>
</ol>
</li>
</ol>

<h2 id="led" name="led">Controlling LED Devices</h2>

<p>To control LED devices:</p>
		<ol>
		<li>
<p>To use the functions and data types of the Led API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__LED__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__LED__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;device/led.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;device/led.h&gt;</pre>
</li>
<li>To manage a LED device:
<ul>
<li>Get the maximum brightness value of a torch LED with the <span style="font-family: Courier New,Courier,monospace;">device_flash_get_max_brightness()</span> function.
<p>The function returns the maximum brightness value of the torch LED located next to the camera.</p>
<pre class="prettyprint">
int error, max;
error = device_flash_get_max_brightness(&amp;max);
</pre>
</li>

<li>Get and set the current brightness value of a torch LED with the <span style="font-family: Courier New,Courier,monospace;">device_flash_get_brightness()</span> and <span style="font-family: Courier New,Courier,monospace;">device_flash_set_brightness()</span> functions.

<pre class="prettyprint">
int error, val;
error = device_flash_get_brightness(&amp;val);

error = device_flash_set_brightness(1);
</pre>
</li>

<li>Play and stop a custom effect of the service LED with the <span style="font-family: Courier New,Courier,monospace;">device_led_play_custom()</span> and <span style="font-family: Courier New,Courier,monospace;">device_led_stop_custom()</span> functions.
<p>The <span style="font-family: Courier New,Courier,monospace;">led_custom_flags</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__LED__MODULE.html#ga2065bc82e5ecf7e2acba8629c0d75e3b">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__LED__MODULE.html#ga2065bc82e5ecf7e2acba8629c0d75e3b">wearable</a> applications) defines the available custom effects.</p>
<p>The custom effect plays on the service LED that is located on the front of the device.</p>

<pre class="prettyprint">
int error;
error = device_led_play_custom(1000, 500, 0xFFFF0000, LED_CUSTOM_DEFAULT);

error = device_led_stop_custom();
</pre>
</li>
</ul>
</li>
</ol>

<h2 id="power" name="power">Controlling the Power State</h2>

<p>To control the device power state:</p>
		<ol>
		<li>
<p>To use the functions and data types of the Power API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__POWER__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__POWER__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;device/power.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;device/power.h&gt;</pre>
</li>
<li>To lock and unlock the power state:
<ul>
<li>Lock the power state with the <span style="font-family: Courier New,Courier,monospace;">device_power_request_lock()</span> function.
<p>The function locks the specific lock type for a specified time. After the given timeout, the lock type is unlocked automatically. If the process is destroyed, every lock is removed.</p>

<p>The <span style="font-family: Courier New,Courier,monospace;">power_lock_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__POWER__MODULE.html#gabc47c58cfcfdaaba177f6004d6395af2">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__POWER__MODULE.html#gabc47c58cfcfdaaba177f6004d6395af2">wearable</a> applications) defines the available lock types.</p>

<pre class="prettyprint">
int error;
error = device_power_request_lock(POWER_LOCK_CPU, 0);
</pre>
</li>

<li>Unlock the power state with the <span style="font-family: Courier New,Courier,monospace;">device_power_release_lock()</span> function.
<p>The function releases the specific lock type locked before.</p>
<pre class="prettyprint">
int error;
error = device_power_release_lock(POWER_LOCK_CPU);
</pre>
</li>
</ul>
</li>
</ol>

<h2 id="changes" name="changes">Monitoring Device Changes</h2>

<p>To monitor device changes in, for example, the device display state:</p>
		<ol>
		<li>
<p>To use the functions and data types of the Callback API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__CALLBACK__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__CALLBACK__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;device/callback.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;device/callback.h&gt;</pre>
</li>

<li>Define a callback, which is called when the device status changes.

<p>The <span style="font-family: Courier New,Courier,monospace;">device_callback_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__DEVICE__CALLBACK__MODULE.html#gaa55ba4e8bf4d8877b500686e1d78f2d7">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__DEVICE__CALLBACK__MODULE.html#gaa55ba4e8bf4d8877b500686e1d78f2d7">wearable</a> applications) defines the available callback types.</p>

<pre class="prettyprint">
static void 
changed_cb(device_callback_e type, void *value, void *user_data)
{
&nbsp;&nbsp;&nbsp;int val;
&nbsp;&nbsp;&nbsp;if (type != DEVICE_CALLBACK_DISPLAY_STATE)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;val = (int)value;
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_DEBUG, LOG_TAG, &quot;current display state : %d&quot;, val);
}
</pre>
</li>

<li>Register the callback function.
<p>To monitor the display state changes, use the <span style="font-family: Courier New,Courier,monospace;">DEVICE_CALLBACK_DISPLAY_STATE</span> callback type.</p>
<pre class="prettyprint">
int error;
error = device_add_callback(DEVICE_CALLBACK_DISPLAY_STATE, changed_cb, NULL);
</pre>
</li>

<li>When no longer needed, unregister the callback function:
<pre class="prettyprint">
int error;
error = device_remove_callback(DEVICE_CALLBACK_DISPLAY_STATE, changed_cb);
</pre>
</li>
</ol>
	
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

