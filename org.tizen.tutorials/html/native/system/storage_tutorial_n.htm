<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Storage: Getting Information about Storages</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#statvfs">Using Statvfs Wrapper</a></li>
			<li><a href="#storage">Retrieving Storage Information</a></li>
			<li><a href="#state">Monitoring Storage State Changes</a></li>
			<li><a href="#space">Retrieving Storage Space Information</a></li>			
		</ul>		
		<p class="toc-title">Related Info</p>
		<ul class="toc">
            <li><a href="../../../../org.tizen.guides/html/native/system/storage_n.htm">Storage Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">Storage API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">Storage API for Wearable Native</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Storage: Getting Information about Storages</h1>
	

	<p>This tutorial demonstrates how you can obtain detailed information from the internal and external storage.</p> 
	
  
  <h2>Warm-up</h2>
    <p>Become familiar with the Storage API basics by learning about:</p> 
	<ul>
	<li><a href="#statvfs">Using Statvfs Wrapper</a>
	<p>Retrieve internal and external memory sizes.</p></li>
	<li><a href="#storage">Retrieving Storage Information</a>
	<p>Retrieve information about supported storages and the storage content.</p></li>
	<li><a href="#state">Monitoring Storage State Changes</a>
	<p>Monitor changes in the storage state.</p></li>
	<li><a href="#space">Retrieving Storage Space Information</a>
	<p>Retrieve information about the storage space.</p></li>
	</ul>

<h2 id="statvfs" name="statvfs">Using Statvfs Wrapper</h2>

<p>Use the statvfs wrapper to get memory sizes:</p>
<ol>
<li><p>To use the functions and data types of the Storage API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;storage.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;storage.h&gt;
</pre></li>
<li><p>Get memory sizes:</p>
<ul>
<li>Get internal memory size with the <span style="font-family: Courier New,Courier,monospace;">storage_get_internal_memory_size()</span> function.
<p>The function returns the internal memory size. Use it instead of the statvfs function when you need the internal memory size.</p>
<p>At least a low memory pop-up is launched in case the memory is low, and to do that, a minimum memory is reserved. To allow memory for the pop-up, the function returns a memory size except for a minimum memory size. The minimum memory size depends on the device storage size.</p>
<p>Statvfs structure has a different structure size from the <span style="font-family: Courier New,Courier,monospace;">__USE_FILE_OFFSET64</span> option. If your module defines this option, libstorage changes <span style="font-family: Courier New,Courier,monospace;">storage_get_internal_memory_size()</span> to <span style="font-family: Courier New,Courier,monospace;">storage_get_internal_memory_size64()</span> automatically.</p>
<pre class="prettyprint">
int error;
struct statvfs s;
error = storage_get_internal_memory_size(&amp;s);
</pre>
</li>

<li>Get external memory size with the <span style="font-family: Courier New,Courier,monospace;">storage_get_external_memory_size()</span> function.
<p>The function returns the external memory size. Use it instead of the statvfs function when you need the external memory size.</p>
<p>At least a low memory pop-up is launched in case the memory is low, and to do that, a minimum memory is reserved. To allow memory for the pop-up, the function returns a memory size except for a minimum memory size. The minimum memory size depends on the device storage size.</p>

<p>Statvfs structure has a different structure size from the <span style="font-family: Courier New,Courier,monospace;">__USE_FILE_OFFSET64</span> option. If your module defines this option, libstorage changes <span style="font-family: Courier New,Courier,monospace;">storage_get_external_memory_size()</span> to <span style="font-family: Courier New,Courier,monospace;">storage_get_external_memory_size64()</span> automatically.</p>

<pre class="prettyprint">
int error;
struct statvfs s;
error = storage_get_external_memory_size(&amp;s);
</pre></li>
</ul>
</li>
</ol>  

<h2 id="storage" name="storage">Retrieving Storage Information</h2>

<p>To retrieve storage information:</p>
<ol>
<li><p>To use the functions and data types of the Storage API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;storage.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;storage.h&gt;
</pre></li>
<li><p>Retrieve storage information:</p>
<ul>
<li>Check for supported storages.
<p>Call the <span style="font-family: Courier New,Courier,monospace;">storage_device_supported_cb</span> callback function to get information once for each supported storage. When this function returns <span style="font-family: Courier New,Courier,monospace;">false</span>, the iteration is finished.</p>

<pre class="prettyprint">
static int internal_storage_id;
static bool 
storage_cb(int storage_id, storage_type_e type, storage_state_e state, const char *path, void *user_data)
{
&nbsp;&nbsp;&nbsp;if (type == STORAGE_TYPE_INTERNAL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal_storage_id = storage_id;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return true;
}
</pre>
</li>

<li>Retrieve all storages in a device.
<p>Call the <span style="font-family: Courier New,Courier,monospace;">storage_foreach_device_supported()</span> function to invoke the <span style="font-family: Courier New,Courier,monospace;">storage_device_supported_cb()</span> callback function repeatedly, once for each storage in a device.</p>

<pre class="prettyprint">
int error;
error = storage_foreach_device_supported(storage_cb, NULL);
</pre>
</li>

<li>Get the root directory.
<p>Call the <span style="font-family: Courier New,Courier,monospace;">storage_get_root_directory()</span> function to get the absolute path to the root directory of a given storage. Files saved on the internal and external storage are readable or writeable by all applications. When an application is uninstalled, the files written by that application are not removed from the internal or external storage.</p>

<pre class="prettyprint">
int error;
char *path;
error = storage_get_root_directory(internal_storage_id, &amp;path);

free(path);
</pre>
</li>

<li>Get the media directory.
<p>Call the <span style="font-family: Courier New,Courier,monospace;">storage_get_directory()</span> function to get the absolute path to each directory of the given storage. Files saved on the internal or external storage are readable or writeable by all applications. When an application is uninstalled, the files written by that application are not removed from the internal or external storage.</p>

<p>The second parameter defines the directory type based on the <span style="font-family: Courier New,Courier,monospace;">storage_directory_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html#gaacf2209a06b947c1cee4ba223679383a">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html#gaacf2209a06b947c1cee4ba223679383a">wearable</a> applications).</p>
<pre class="prettyprint">
int error;
char *path;
error = storage_get_directory(internal_storage_id, STORAGE_DIRECTORY_IMAGES, &amp;path);

free(path);
</pre>
</li>

<li>Get the storage type.
<p>Call the <span style="font-family: Courier New,Courier,monospace;">storage_get_type()</span> function to get the type of the given storage.</p>

<p>The <span style="font-family: Courier New,Courier,monospace;">storage_type_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html#gabdf32571260b6c253da5bfcdecaa2f1f">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html#gabdf32571260b6c253da5bfcdecaa2f1f">wearable</a> applications) defines the available storage types.</p>

<pre class="prettyprint">
int error;
storage_type_e type;
error = storage_get_type(internal_storage_id, &amp;type);
</pre>
</li>

<li>Get the storage mount state.
<p>Call the <span style="font-family: Courier New,Courier,monospace;">storage_get_state()</span> function to get the current state of the given storage.</p>

<p>The <span style="font-family: Courier New,Courier,monospace;">storage_state_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html#gac72d0e57e790d888dfd7bd57d52fbfee">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html#gac72d0e57e790d888dfd7bd57d52fbfee">wearable</a> applications) defines the available storage states.</p>

<pre class="prettyprint">
int error;
storage_state_e state;
error = storage_get_state(internal_storage_id, &amp;state);</pre></li></ul>
</li></ol>

<h2 id="state" name="state">Monitoring Storage State Changes</h2>

<p>To monitor storage state changes:</p>

<ol>
<li><p>To use the functions and data types of the Storage API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;storage.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;storage.h&gt;
</pre></li>
<li>Define the storage changed callback, which is called when a storage state changes:
<pre class="prettyprint">
static void 
storage_changed_cb(int storage_id, storage_state_e state, void *user_data)
{
&nbsp;&nbsp;&nbsp;if (storage_id != internal_storage_id)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_DEBUG, LOG_TAG, &quot;state changed to %d&quot;, state);
}
</pre>
</li>

<li>Register the callback:
<pre class="prettyprint">
int error;
error = storage_set_state_changed_cb(internal_storage_id, storage_changed_cb, NULL);
</pre>
</li>

<li>When the callback is no longer needed, unregister it:
<pre class="prettyprint">
int error;
error = storage_unset_state_changed_cb(internal_storage_id, storage_changed_cb);
</pre>
</li></ol>

<h2 id="space" name="space">Retrieving Storage Space Information</h2>

<p>To retrieve storage space information:</p>

<ol>
<li><p>To use the functions and data types of the Storage API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__STORAGE__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;storage.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;storage.h&gt;
</pre></li>
<li><p>Retrieve storage space:</p>
<ul>
<li>Get the total space of the storage using the <span style="font-family: Courier New,Courier,monospace;">storage_get_total_space()</span> function.
<p>The function returns the total space of the given storage in bytes. It invokes the <span style="font-family: Courier New,Courier,monospace;">storage_get_internal_memory_size()</span> or <span style="font-family: Courier New,Courier,monospace;">storage_get_external_memory_size()</span> internally.</p>

<pre class="prettyprint">
int error;
unsigned long long bytes;
error = storage_get_total_space(internal_storage_id, &amp;bytes);
</pre>
</li>

<li>Get the available space of the storage using the <span style="font-family: Courier New,Courier,monospace;">storage_get_available_space()</span> function.
<p>This function returns the available space of the given storage in bytes. This function invokes the <span style="font-family: Courier New,Courier,monospace;">storage_get_internal_memory_size()</span> or <span style="font-family: Courier New,Courier,monospace;">storage_get_external_memory_size()</span> internally.</p>

<pre class="prettyprint">
int error;
unsigned long long bytes;
error = storage_get_available_space(internal_storage_id, &amp;bytes);
</pre></li>
</ul></li>
</ol>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

