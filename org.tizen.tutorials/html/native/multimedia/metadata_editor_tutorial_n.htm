<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
    <title>Metadata Editor: Editing Metadata from an Input Audio File</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mobile_s_n.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#init_metadata">Initializing the Metadata Editor</a></li>
            <li><a href="#edit_metadata">Editing Metadata and Artwork</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.guides/html/native/multimedia/metadata_editor_n.htm">Metadata Editor Guide</a></li>
            <li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__METADATA__EDITOR__MODULE.html">Metadata Editor API for Mobile Native</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Metadata Editor: Editing Metadata from an Input Audio File</h1>

<p>This tutorial demonstrates how you can edit metadata and artwork in audio files.</p>

<p>This feature is supported in mobile applications only.</p>

<h2>Warm-up</h2>

<p>Become familiar with the Metadata Editor API basics by learning about:</p>

<ul>
    <li><a href="#init_metadata">Initializing the Metadata Editor</a>
        <p>Initialize the metadata editor for use.</p></li>
    <li><a href="#edit_metadata">Editing Metadata and Artwork</a>
        <p>Create a metadata editor handle, bind the handle with an audio file, edit the metadata and artwork, and apply the edits to the file.</p></li>
</ul>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">You can use the metadata editor only with audio files. The metadata editor does not support image or video files.</td>
        </tr>
    </tbody>
</table>

<h2 id="init_metadata" name="init_metadata">Initializing the Metadata Editor</h2>

<p>To initialize the metadata editor for use:</p>

<ol>

<li>

<p>To use the functions and data types of the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__METADATA__EDITOR__MODULE.html">Metadata Editor</a> API, include the <span style="font-family: Courier New,Courier,monospace;">&lt;metadata_editor.h&gt;</span> header file in your application:</p>

<pre class="prettyprint">
#include &lt;metadata_editor.h&gt;
</pre>

</li>

<li>

<p>To work with the Metadata Editor API, define a handle variable for the metadata editor:</p>

<pre class="prettyprint">
static metadata_editor_h g_metadata_h = NULL;
</pre>

<p>This tutorial uses a global variable for the handle.</p>

</li>

<li>

<p>Make sure you have access to the file whose metadata and artwork you want to edit.</p>

<p>This tutorial uses an MP3 audio file, which is accessed through its file path. The following example code uses an internal storage, so you must include the <span style="font-family: Courier New,Courier,monospace;">storage.h</span> header file for the code to work.</p>

<pre class="prettyprint">
int internal_storage_id;
char *internal_music_storage_path;
char *music_file_name = &quot;test_music.mp3&quot;;
char *music_test_path;

static bool
storage_cb(int storage_id, storage_type_e type, storage_state_e state,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const char *path, void *user_data)
{
&nbsp;&nbsp;&nbsp;if (type == STORAGE_TYPE_INTERNAL)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal_storage_id = storage_id;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return true;
}

void
_get_internal_storage_path()
{
&nbsp;&nbsp;&nbsp;int error;
&nbsp;&nbsp;&nbsp;char *path = NULL;

&nbsp;&nbsp;&nbsp;error = storage_foreach_device_supported(storage_cb, NULL);
&nbsp;&nbsp;&nbsp;error = storage_get_directory(internal_storage_id, STORAGE_DIRECTORY_MUSIC, &amp;path);
&nbsp;&nbsp;&nbsp;if (error == STORAGE_ERROR_NONE)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal_music_storage_path = strdup(path);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(path);
&nbsp;&nbsp;&nbsp;}
}

void
_make_test_path()
{
&nbsp;&nbsp;&nbsp;int path_len = 0;

&nbsp;&nbsp;&nbsp;path_len = strlen(internal_music_storage_path) + strlen(music_file_name) + 2;
&nbsp;&nbsp;&nbsp;music_test_path = malloc(path_len);
&nbsp;&nbsp;&nbsp;memset(music_test_path, 0x0, path_len);

&nbsp;&nbsp;&nbsp;snprintf(music_test_path, path_len, &quot;%s/%s&quot;, internal_music_storage_path, music_file_name);
}
</pre>

</li>

</ol>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">The metadata editor APIs can use both common content in the device storage (internal or external) and private content in your application data.</td>
        </tr>
    </tbody>
</table>

<h2 id="edit_metadata" name="edit_metadata">Editing Metadata and Artwork</h2>

<p>To edit the metadata and artwork in the file:</p>

<ol>

<li>

<p>Create the metadata editor handle using the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_create()</span> function:</p>

<pre class="prettyprint">
ret = metadata_editor_create(&amp;g_metadata_h);
</pre>

</li>

<li>

<p>Set the path to the file you want to edit using the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_set_path()</span> function:</p>

<pre class="prettyprint">
ret = metadata_editor_set_path(g_metadata_h, music_test_path);
</pre>

<p>The function binds the metadata editor handle (first parameter) with the file specified in the <span style="font-family: Courier New,Courier,monospace;">music_test_path</span> variable (second parameter).</p>

</li>

<li>

<p>Edit the metadata in the file using the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_set_metadata()</span> function. Edit each piece of metadata (each metadata attribute) individually.</p>

<p>As parameters, define the metadata editor handle, the attribute you want to edit, and the new value you want to set to the attribute. The possible attributes are defined in the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__METADATA__EDITOR__MODULE.html#ga1c6a8dcf861f527302e9c55152692df3">metadata_editor_attr_e</a> enumeration.</p>

<p>The following example code edits the title of the audio content. You can edit other attributes by defining a different attribute enumerator (and a corresponding new value).</p>

<pre class="prettyprint">
char *value = &quot;My Song&quot;;

ret = metadata_editor_set_metadata(g_metadata_h, METADATA_EDITOR_ATTR_TITLE, value);
</pre>

<p>After calling the function, check whether the return value is <span style="font-family: Courier New,Courier,monospace;">METADATA_EDITOR_ERROR_NONE</span>. If it is, you can check the updated metadata using the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_get_metadata()</span> function. Otherwise, the function failed because of an error, which you need to handle.</p>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">The updated metadata is applied to the file only after you call the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_update_metadata()</span> function, which is discussed below.</td>
        </tr>
    </tbody>
</table>

</li>

<li>

<p>Add artwork to the file using the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_append_picture()</span> function.</p>

<p>As parameters, define the metadata editor handle and the path of the image file that contains the artwork. The image file must be in the JPEG or PNG format. The image is added to the last image file position. You can add multiple image files to the same audio file.</p>

<pre class="prettyprint">
char *artwork = &quot;append_image.jpg&quot;;

ret = metadata_editor_append_picture(g_metadata_h, artwork);
</pre>

<p>To remove artwork from the file, use the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_remove_picture()</span> function. As parameters, define the metadata editor handle and the index number of the image file you want to remove.</p>

<p>To retrieve the number of images in the file, use the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_get_metadata()</span> function. To retrieve a specific image, use the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_get_picture()</span> function.</p>

<pre class="prettyprint">
int index = 0;

ret = metadata_editor_remove_picture(g_metadata_h, index);
</pre>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">The artwork is added to the file or removed from the file only after you call the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_update_metadata()</span> function, which is discussed below.</td>
        </tr>
    </tbody>
</table>

</li>

<li>

<p>Apply the metadata and artwork edits to the file using the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_update_metadata()</span> function:</p>

<pre class="prettyprint">
ret = metadata_editor_update_metadata(g_metadata_h);
</pre>

</li>

<li>

<p>When no longer needed, destroy the metadata editor handle using the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_destroy()</span> function:</p>

<pre class="prettyprint">
metadata_editor_destroy(g_metadata_h);
</pre>

</li>

</ol>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>