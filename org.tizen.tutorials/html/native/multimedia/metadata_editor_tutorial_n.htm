<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

    <title>Metadata Editor: Editing Metadata from an Input Audio File</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
 		<p class="toc-title">Content</p>
		<ul class="toc">
				<li><a href="#init_metadata">Initializing the Metadata Editor</a></li>
				<li><a href="#edit_metadata">Editing Metadata and Artwork</a></li>
		</ul>  
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.guides/html/native/multimedia/metadata_editor_n.htm">Metadata Editor Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__METADATA__EDITOR__MODULE.html">Metadata Editor API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__METADATA__EDITOR__MODULE.html">Metadata Editor API for Wearable Native</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>Metadata Editor: Editing Metadata from an Input Audio File</h1>
  
<p>This tutorial demonstrates how you can edit metadata in audio files.</p>

<h2>Warm-up</h2>

<p>Become familiar with the Metadata Editor API basics by learning about:</p>

	<ul>
			<li><a href="#init_metadata">Initializing the Metadata Editor</a>
			<p>Initialize the metadata editor for use.</p></li>
			<li><a href="#edit_metadata">Editing Metadata and Artwork</a>
			<p>Create a metadata editor handle, bind the handle with the file, edit metadata and artwork, and apply to the file.</p></li>
	</ul>
	
<table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">The metadata editor can only be used with audio files. It is not supported in the image and video files.</td> 
    </tr> 
   </tbody> 
  </table>  	
        
<h2 id="init_metadata" name="init_metadata">Initializing the Metadata Editor</h2>

<p>To initialize the metadata editor:</p>
 <ol>
<li><p>To use the functions and data types of the Metadata Editor API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__METADATA__EDITOR__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__METADATA__EDITOR__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace;">&lt;metadata_editor.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;metadata_editor.h&gt;
</pre></li><li><p>To work with the Metadata Editor API, create a handle to the metadata editor. A global variable is used in this tutorial.</p>

<pre class="prettyprint">
static metadata_editor_h g_metadata_h = NULL;
</pre></li>

<li><p>Make sure you have access to the file whose metadata is to be edited.</p>
<p>This tutorial uses an audio file in the MP3 format, and the default file path is needed to access the file. The following code snippet uses an internal storage, so the <span style="font-family: Courier New,Courier,monospace;">&lt;storage.h&gt;</span> header file must be included for the code to work.</p>

<pre class="prettyprint">
int internal_storage_id;
char *internal_music_storage_path;
char *music_file_name = &quot;test_music.mp3&quot;;
char *music_test_path;

static bool storage_cb(int storage_id, storage_type_e type, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_state_e state, const char *path, void *user_data)
{
&nbsp;&nbsp;&nbsp;if (type == STORAGE_TYPE_INTERNAL)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal_storage_id = storage_id;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return true;
}

void _get_internal_storage_path()
{
&nbsp;&nbsp;&nbsp;int error;
&nbsp;&nbsp;&nbsp;char *path = NULL;

&nbsp;&nbsp;&nbsp;error = storage_foreach_device_supported(storage_cb, NULL);
&nbsp;&nbsp;&nbsp;error = storage_get_directory(internal_storage_id, STORAGE_DIRECTORY_MUSIC, &amp;path);
&nbsp;&nbsp;&nbsp;if (error != STORAGE_ERROR_NONE) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal_music_storage_path = strdup(path);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(path);
&nbsp;&nbsp;&nbsp;}
} 

void _make_test_path()
{
&nbsp;&nbsp;&nbsp;int path_len = 0;

&nbsp;&nbsp;&nbsp;path_len = strlen(internal_music_storage_path) + strlen(music_file_name) + 1;
&nbsp;&nbsp;&nbsp;music_test_path = malloc(path_len);
&nbsp;&nbsp;&nbsp;memset(music_test_path, 0x0, path_len);

&nbsp;&nbsp;&nbsp;strncat(music_test_path, internal_music_storage_path, strlen(internal_music_storage_path));
&nbsp;&nbsp;&nbsp;strncat(music_test_path, music_file_name, strlen(music_file_name));
}
</pre>
</li></ol>
<p>The metadata editor APIs can use not only common content in the storage (internal or external), but also the private content in your application data.</p>  

<h2 id="edit_metadata" name="edit_metadata">Editing Metadata and Artwork</h2>

<p>To edit metadata in the file:</p>
<ol>
<li>Create the metadata editor handle with the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_create()</span> function:

<pre class="prettyprint">
ret = metadata_editor_create(&amp;g_metadata_h);
</pre></li>
<li>Set the path to the file whose data you want to obtain with the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_set_path()</span> function. 
<p>The function binds the handle with the media file specified in the <span style="font-family: Courier New,Courier,monospace;">music_test_path</span> variable, passed to this function as a second parameter.</p>

<pre class="prettyprint">
ret = metadata_editor_set_path(g_metadata_h, music_test_path);
</pre></li>
<li>Edit the metadata in the file with the <span style="font-family: Courier New,Courier,monospace;">metadata_extractor_set_metadata()</span> function. As parameters, define the metadata editor handle, the wanted data type (a <span style="font-family: Courier New,Courier,monospace;">metadata_editor_attr_e</span> enumeration value (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__METADATA__EDITOR__MODULE.html#ga1c6a8dcf861f527302e9c55152692df3">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__METADATA__EDITOR__MODULE.html#ga1c6a8dcf861f527302e9c55152692df3">wearable</a> applications)), and a pointer to the <span style="font-family: Courier New,Courier,monospace;">char</span> variable which is fulfilled by the function.

<p>The following code snippet edits the title of the audio content. Other metadata attributes can be similarly updated.</p>

<pre class="prettyprint">
char *value = &quot;rename&quot;;

ret = metadata_editor_set_metadata(g_metadata_h, METADATA_EDITOR_ATTR_TITLE, value);
</pre>

<p>After calling the function, check whether the return value is equal to <span style="font-family: Courier New,Courier,monospace;">METADATA_EDITOR_ERROR_NONE</span>. If yes, you can check the updated metadata using the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_get_metadata()</span> function. If not, an error occurred.</p>
<p>Note that the updated information is only applied to the file when you call the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_update_metadata()</span> function later on in this tutorial.</p>

</li>
<li>Append the artwork of the file with the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_append_picture()</span> function. As parameters, define the metadata editor handle and the image path to append.
<p>Artwork is possible in JPG and PNG files only. The image is added to the last position. After appending the image, like after editing the metadata attributes, you have to use the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_update_metadata()</span> function for apply the changes to the file.</p>

<pre class="prettyprint">
char *artwork = &quot;append_image.jpg&quot;;

ret = metadata_editor_append_picture(g_metadata_h, artwork);
</pre>
<p>To remove a picture, use the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_remove_picture()</span> function. The function does not require a path, just an index number. To get the number of images, use the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_get_metadata()</span> function, and to get the image itself, use the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_get_picture()</span> function.</p>

<pre class="prettyprint">
int index = 0;

ret = metadata_editor_remove_picture(g_metadata_h, index);
</pre>
</li>

<li>Apply the updated metadata to the file.
<p>After using the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_set_metadata()</span>, <span style="font-family: Courier New,Courier,monospace;">metadata_editor_append_metadata()</span>, or <span style="font-family: Courier New,Courier,monospace;">metadata_editor_remove_picture()</span> function, call the <span style="font-family: Courier New,Courier,monospace;">metadata_editor_update_metadata()</span> function to apply the changes to the file:</p>
<pre class="prettyprint">
ret = metadata_editor_update_metadata(g_metadata_h);
</pre>
</li>

<li>When no longer needed, free the metadata editor handle: 
<pre class="prettyprint">
metadata_editor_destroy(g_metadata_h);
</pre></li>
</ol>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
