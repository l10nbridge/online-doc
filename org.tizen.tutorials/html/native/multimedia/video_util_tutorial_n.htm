<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
    <title>Video Util: Transcoding Media Files</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mobile_s_n.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#init">Initializing the Video Utilities</a></li>
            <li><a href="#manage">Managing Transcoding</a></li>
            <li><a href="#set">Setting Parameters</a></li>
            <li><a href="#get">Monitoring the Transcoding Progress</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.guides/html/native/multimedia/video_util_n.htm">Video Util Guide</a></li>
            <li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__VIDEO__UTIL__MODULE.html">Video Util API for Mobile Native</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Video Util: Transcoding Media Files</h1>

<p>This tutorial demonstrates how you can transcode video files.</p>

<p>This feature is supported in mobile applications only.</p>

<h2>Warm-up</h2>

<p>Become familiar with the Video Util API basics by learning about:</p>

<ul>
    <li><p><a href="#init">Initializing the Video Utilities</a></p>
        <p>Initialize the video utilities for use.</p></li>
    <li><p><a href="#manage">Managing Transcoding</a></p>
        <p>Manage and monitor the transcoding process.</p></li>
</ul>

<h2>Follow-up</h2>

<p>Once we have learned the basics of the Video Util API, we can now move on to more advanced tasks, including:</p>

<ul>
    <li><p><a href="#set">Setting Parameters</a></p>
        <p>Set parameters for the video utilities.</p></li>
    <li><p><a href="#get">Monitoring the Transcoding Progress</a></p>
        <p>Retrieve progress information about the transcoding process.</p></li>
</ul>

<h2 id="init" name="init">Initializing the Video Utilities</h2>

<p>To initialize the video utilities for use:</p>

<ol>

<li>
<p>To use the functions and data types of the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__VIDEO__UTIL__MODULE.html">Video Util</a> API, include the <span style="font-family: Courier New,Courier,monospace">&lt;video_util.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;video_util.h&gt;
</pre>
</li>

<li>
<p>Create a video util handle for managing the transcoding:</p>
<pre class="prettyprint">
video_util_h video_h = NULL;
ret = video_util_create(&amp;video_h);
</pre>
</li>

<li>
<p>If the video util handle is successfully created, set the input file path using the <span style="font-family: Courier New,Courier,monospace">video_util_set_file_path()</span> function:</p>
<pre class="prettyprint">
ret = video_util_set_file_path(video_h, *path);
</pre>
</li>

<li>
<p>Set the file format using the <span style="font-family: Courier New,Courier,monospace">video_util_set_file_format()</span> function:</p>
<pre class="prettyprint">
ret = video_util_set_file_format(video_h, VIDEO_UTIL_FILE_FORMAT_3GP);
</pre>
<p>The <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__VIDEO__UTIL__MODULE.html#gad9c070cbb59f3107cefd280ec06e2966">video_util_file_format_e</a> enumeration defines the available file formats.</p>
</li>

<li>
<p>Set the audio codec using the <span style="font-family: Courier New,Courier,monospace">video_util_set_audio_codec()</span> function:</p>
<pre class="prettyprint">
ret = video_util_set_audio_codec(video_h, VIDEO_UTIL_AUDIO_CODEC_AAC);
</pre>
<p>The <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__VIDEO__UTIL__MODULE.html#ga48da7f77144a99f5733a90d62805c435">video_util_audio_codec_e</a> enumeration defines the available audio codecs.</p>
</li>

<li>
<p>Set the video codec using the <span style="font-family: Courier New,Courier,monospace">video_util_set_video_codec()</span> function:</p>
<pre class="prettyprint">
ret = video_util_set_video_codec(video_h, VIDEO_UTIL_VIDEO_CODEC_MPEG4);
</pre>
<p>The <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__VIDEO__UTIL__MODULE.html#gabadbb5a64155f42fe180bedac40f289e">video_util_video_codec_e</a> enumeration defines the available video codecs.</p>
</li>

<li>
<p>Enable or disable the accurate seek mode using the <span style="font-family: Courier New,Courier,monospace">video_util_set_accurate_mode()</span> function.</p>
<p>If you enable this mode, you can get an accurate frame for a given duration in the <span style="font-family: Courier New,Courier,monospace">video_util_start_transcoding()</span> function.</p>
<pre class="prettyprint">
ret = video_util_set_accurate_mode(video_h, 0);
</pre>
</li>

<li>
<p>Set the video resolution using the <span style="font-family: Courier New,Courier,monospace">video_util_set_resolution()</span> function:</p>
<pre class="prettyprint">
ret = video_util_set_resolution(video_h, 176, 144);
</pre>
<p>If the transcoding is performed with the original input (&quot;trim&quot;), both the width and height are 0.</p>
</li>

<li>
<p>Set the video frame rate using the <span style="font-family: Courier New,Courier,monospace">video_util_set_fps()</span> function:</p>
<pre class="prettyprint">
ret = video_util_set_fps(video_h, 10);
</pre>
</li>

<li>
<p>When no longer needed, destroy the video util handle using the <span style="font-family: Courier New,Courier,monospace">video_util_destroy()</span> function:</p>
<pre class="prettyprint">
ret = video_util_destroy(video_h);
</pre>
</li>

</ol>

<h2 id="manage" name="manage">Managing Transcoding</h2>

<p>To manage and monitor the transcoding process:</p>

<ol>

<li>
<p>Start the transcoding using the <span style="font-family: Courier New,Courier,monospace">video_util_start_transcoding()</span> function:</p>
<pre class="prettyprint">
ret = video_util_start_transcoding(video_h);
</pre>
</li>

<li>
<p>Monitor and manage the transcoding:</p>
<ul>
<li>
<p>To retrieve the current transcoding progress, use the <span style="font-family: Courier New,Courier,monospace">video_util_get_progress_transcoding()</span> function. The function returns the current transcoding position (second parameter) and the duration of the transcoding (third parameter).</p>
<pre class="prettyprint">
unsigned long current_position;
unsigned long duration;
ret = video_util_get_progress_transcoding(video_h, *current_position, *duration);
</pre>
</li>
<li>
<p>To cancel the transcoding process, use the <span style="font-family: Courier New,Courier,monospace">video_util_cancel_transcoding()</span> function. You must call this function before the transcoding complete callback is invoked.</p>
<pre class="prettyprint">
ret = video_util_cancel_transcoding(video_h);
</pre>
</li>
</ul>
</li>

<li>
<p>After the transcoding complete callback is invoked, destroy the video util handle using the <span style="font-family: Courier New,Courier,monospace">video_util_destroy()</span> function:</p>
<pre class="prettyprint">
ret = video_util_destroy(video_h);
</pre>
<p>The function destroys the handle of a completed transcoding. If the function is called during the transcoding process, the function also cancels the transcoding.</p>
<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">If you do not call the destroy function after the transcoding is complete, you cannot start a new transcoding process, and a memory crash can occur.</td>
        </tr>
    </tbody>
</table>
</li>

</ol>

<h2 id="set" name="set">Setting Parameters</h2>

<p>To set parameters for the video utilities (for other parameters, see <a href="#init">Initializing the Video Utilities</a>):</p>

<ol>
<li>Set the file format:
<ol type="a">
<li>
<p>Check the supported file formats:</p>
<ol type="a">
<li>
<p>Check the supported file formats using the <span style="font-family: Courier New,Courier,monospace">video_util_foreach_supported_file_format()</span> function:</p>
<pre class="prettyprint">
error_code = video_util_foreach_supported_file_format(handle, video_util_file_supported, NULL);
</pre>
<p>The second parameter specifies the callback that is invoked separately for each supported file format.</p>
</li>
<li>
<p>Define the callback:</p>
<pre class="prettyprint">
static bool
video_util_file_supported(video_util_file_format_e format, void *user_data)
{
&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;format %s\n&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format == VIDEO_UTIL_FILE_FORMAT_3GP? &quot;VIDEO_UTIL_FILE_FORMAT_3GP&quot;:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format == VIDEO_UTIL_FILE_FORMAT_MP4? &quot;VIDEO_UTIL_FILE_FORMAT_MP4&quot;:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;VIDEO_UTIL_FILE_FORMAT_MAX&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;return 0;
}
</pre>
<p>The <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__VIDEO__UTIL__MODULE.html#gad9c070cbb59f3107cefd280ec06e2966">video_util_file_format_e</a> enumeration defines the available file formats.</p>
</li>
</ol>
</li>
<li>
<p>Set the file format using the <span style="font-family: Courier New,Courier,monospace">video_util_set_file_format()</span> function:</p>
<pre class="prettyprint">
ret = video_util_set_file_format(video_h, VIDEO_UTIL_FILE_FORMAT_3GP);
</pre>
</li></ol></li>

<li>Set the audio and video codec:
<ol type="a">
<li>
<p>Check the supported audio and video codecs:</p>
<ol type="a">
<li>
<p>Check the supported audio and video codecs using the <span style="font-family: Courier New,Courier,monospace">video_util_foreach_supported_audio_codec()</span> and <span style="font-family: Courier New,Courier,monospace">video_util_foreach_supported_video_codec()</span> functions:</p>
<pre class="prettyprint">
video_util_foreach_supported_audio_codec(handle, video_util_audio_supported, NULL);

video_util_foreach_supported_video_codec(handle, video_util_video_supported, NULL);
</pre>
<p>The second parameter of both functions specifies the callback that is invoked separately for each supported codec.</p>
</li>
<li>
<p>Define the callbacks:</p>
<pre class="prettyprint">
static bool
video_util_audio_supported(video_util_audio_codec_e codec, void *user_data)
{
&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;audio codec %s\n&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;codec==VIDEO_UTIL_AUDIO_CODEC_AAC? &quot;VIDEO_UTIL_AUDIO_CODEC_AAC&quot;:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;codec==VIDEO_UTIL_AUDIO_CODEC_AMRNB? &quot;VIDEO_UTIL_AUDIO_CODEC_AMRNB&quot;:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;VIDEO_UTIL_AUDIO_CODEC_NONE&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;return 0;
}

static bool
video_util_video_supported(video_util_video_codec_e codec, void *user_data)
{
&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;video codec %s\n&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;codec == VIDEO_UTIL_VIDEO_CODEC_MPEG4? &quot;VIDEO_UTIL_VIDEO_CODEC_MPEG4&quot;:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;codec == VIDEO_UTIL_VIDEO_CODEC_H263? &quot;VIDEO_UTIL_VIDEO_CODEC_H263&quot;:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;codec == VIDEO_UTIL_VIDEO_CODEC_H264? &quot;VIDEO_UTIL_VIDEO_CODEC_H264":
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;VIDEO_UTIL_VIDEO_CODEC_NONE&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;return 0;
}
</pre>
<p>The <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__VIDEO__UTIL__MODULE.html#ga48da7f77144a99f5733a90d62805c435">video_util_audio_codec_e</a> and <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__VIDEO__UTIL__MODULE.html#gabadbb5a64155f42fe180bedac40f289e">video_util_video_codec_e</a> enumerations define the available audio and video codecs.</p>
</li>
</ol>
<p>To check the support for a specified codec, such as <span style="font-family: Courier New,Courier,monospace;">VIDEO_UTIL_VIDEO_CODEC_MPEG4</span>:</p>
<pre class="prettyprint">
static bool
video_util_video_supported(video_util_video_codec_e codec, void *user_data)
{
&nbsp;&nbsp;&nbsp;&nbsp;if (codec == VIDEO_UTIL_VIDEO_CODEC_MPEG4)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_data = true;

&nbsp;&nbsp;&nbsp;&nbsp;return 0;
}

bool supported = false;
video_util_foreach_supported_video_codec(handle, video_util_video_supported, &amp;supported);
dlog_print(DLOG_INFO, LOG_TAG, &quot;MPEG4 codec %s&quot;, supported?&quot;supported&quot;:&quot;not supported&quot;);
</pre>
</li>

<li>
<p>Set the audio and video codecs using the <span style="font-family: Courier New,Courier,monospace">video_util_set_audio_codec()</span> and <span style="font-family: Courier New,Courier,monospace">video_util_set_video_codec()</span> functions:</p>
<pre class="prettyprint">
error_code = video_util_set_audio_codec(handle, VIDEO_UTIL_AUDIO_CODEC_AAC);

error_code = video_util_set_video_codec(handle, VIDEO_UTIL_VIDEO_CODEC_MPEG4);
</pre>
</li></ol></li>

<li>
<p>Set the video resolution using the <span style="font-family: Courier New,Courier,monospace">video_util_set_resolution()</span> function:</p>
<pre class="prettyprint">
int error_code = video_util_set_resolution(handle, 640, 480);
</pre>
</li>

<li>
<p>Set the video frame rate using the <span style="font-family: Courier New,Courier,monospace">video_util_set_fps()</span> function:</p>
<pre class="prettyprint">
int error_code = video_util_set_fps(handle, 25);
</pre>
</li>

</ol>

<h2 id="get" name="get">Monitoring the Transcoding Progress</h2>

<p>To retrieve progress information about the transcoding process:</p>

<ol>

<li><p><a href="#init">Initialize the video utilities.</a></p></li>

<li>
<p>Start the transcoding using the <span style="font-family: Courier New,Courier,monospace;">video_util_start_transcoding()</span> function:</p>
<pre class="prettyprint">
error_code = video_util_start_transcoding(handle, start, duration, *out_path, progress_cb, completed_cb, *user_data);
</pre>
<p>The fifth parameter specifies the transcoding progress callback, which is invoked periodically during the transcoding process. The sixth parameter specifies the transcoding complete callback, which is invoked after the transcoding process is complete.</p>
</li>

<li>
<p>Retrieve the current transcoding progress using the <span style="font-family: Courier New,Courier,monospace;">video_util_get_progress_transcoding()</span> function within the transcoding progress callback:</p>
<pre class="prettyprint">
error_code = video_util_get_progress_transcoding(handle, *current_position, *duration);
</pre>
</li>

</ol>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>