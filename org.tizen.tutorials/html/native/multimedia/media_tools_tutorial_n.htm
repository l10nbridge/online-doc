<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

    <title>Media Tool: Managing Media Handles</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mn_icon.png"/> <img alt="Wearable native" src="../../images/wn_icon.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#format">Managing the Media Format Handle</a></li>
			<li><a href="#packet">Managing the Media Packet Handle</a></li>
		</ul>        
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.guides/html/native/multimedia/media_tools_n.htm">Media Tool Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__TOOL__MODULE.html">Media Tool API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__TOOL__MODULE.html">Media Tool API for Wearable Native</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>Media Tool: Managing Media Handles</h1>

  
<p>This tutorial demonstrates how you can create, set, and get media handles.</p>
 
<h2>Warm-up</h2>
<p>Become familiar with the Media Tool API basics by learning about:</p>

<ul><li><a href="#format">Managing the Media Format Handle</a>
<p>Create, set, and get the <span style="font-family: Courier New,Courier,monospace">&lt;media_format_h&gt;</span> handle.</p></li>

<li><a href="#packet">Managing the Media Packet Handle</a>
<p>Create, set, and get the <span style="font-family: Courier New,Courier,monospace">&lt;media_packet_h&gt;</span> handle.</p></li></ul>
  

 <h2 id="format" name="format">Managing the Media Format Handle</h2>

<p>To manage the media format handle:</p>

<ol><li><p>To use the media format handle of the Media Tool API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__TOOL__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__TOOL__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace">&lt;media_format.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;media_format.h&gt;
</pre></li>
<li>Define a handle for <span style="font-family: Courier New,Courier,monospace">media_format_h</span> and pass it to the <span style="font-family: Courier New,Courier,monospace">media_format_create()</span> function, which returns the handle. Set the video (or audio) information with the <span style="font-family: Courier New,Courier,monospace">media_format_set_video_info()</span> function.
<pre class="prettyprint">
media_format_h format;
if (media_format_create(&amp;format) == MEDIA_FORMAT_ERROR_NONE)     
{
&nbsp;&nbsp;&nbsp;if (media_format_set_video_info(format, MEDIA_FORMAT_H264_HP, 480, 640, 10000000, 15000000) != MEDIA_FORMAT_ERROR_NONE)
&nbsp;&nbsp;&nbsp;{             
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;media_format_set_video_info failed!&quot;);         
&nbsp;&nbsp;&nbsp;}
}
else
{         
&nbsp;&nbsp;&nbsp;printf(&quot;media_format_create() failed!&quot;);     
}</pre></li>
 
<li>To get video format information, use the <span style="font-family: Courier New,Courier,monospace">media_format_get_video_info()</span> function: 
<pre class="prettyprint">
media_format_h fmt;

media_format_mimetype_e mime;
int w;
int h;
int avg_bps;
int max_bps;
 
if (media_format_get_video_info(fmt, &amp;mimetype, &amp;w, &amp;h, &amp;avg_bps, &amp;max_bps) == MEDIA_PACKET_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;printf(&quot;media_format_get_video_info success! width = %d, height = %d&quot;, w, h);
}
else
{
&nbsp;&nbsp;&nbsp;print(&quot;media_format_get_video is failed...&quot;);
}</pre></li></ol>

 <h2 id="packet" name="packet">Managing the Media Packet Handle</h2>

<p>To manage the media packet handle:</p>

<ol>
<li><p>To use the media packet handle of the Media Tool API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__TOOL__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__TOOL__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace">&lt;media_packet.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;media_packet.h&gt;
</pre></li>

<li>Define a handle for <span style="font-family: Courier New,Courier,monospace">media_packet_h</span> and pass it to a creation function with an existing <span style="font-family: Courier New,Courier,monospace">media_format_h</span> handle.
<p>To reuse the packet handle, set the return value as <span style="font-family: Courier New,Courier,monospace">MEDIA_PACKET_REUSE</span> of <span style="font-family: Courier New,Courier,monospace">int (*media_packet_finalize_cb)</span> and use <span style="font-family: Courier New,Courier,monospace">media_format_unref(media_format_h fmt)</span> after creating the handle.</p>
<p>The following creation functions are available:</p>
<ul><li>Create a handle and allocate a buffer into the heap or TBM surface with the <span style="font-family: Courier New,Courier,monospace">media_packet_create_alloc()</span> function:
<pre class="prettyprint">
{
&nbsp;&nbsp;&nbsp;media_format_h fmt;
&nbsp;&nbsp;&nbsp;media_packet_h packet;
 
&nbsp;&nbsp;&nbsp;media_format_create(&amp;fmt);
&nbsp;&nbsp;&nbsp;media_format_set_video_info(fmt, MEDIA_FORMAT_H264_HP, 480, 640, 10000000, 15000000);
 
&nbsp;&nbsp;&nbsp;media_packet_create_alloc (fmt, _finalize_callback, fcb_data, &amp;packet);
&nbsp;&nbsp;&nbsp;media_format_unref(fmt);
}
 
int _finalize_callback(media_packet_h packet, int err, void* userdata)
{
&nbsp;&nbsp;&nbsp;return MEDIA_PACKET_REUSE;
}</pre>

</li>
<li>Create only a handle with the <span style="font-family: Courier New,Courier,monospace">media_packet_create()</span> function:
<pre class="prettyprint">{
&nbsp;&nbsp;&nbsp;media_format_h fmt;
&nbsp;&nbsp;&nbsp;media_packet_h packet;
 
&nbsp;&nbsp;&nbsp;media_format_create(&amp;fmt);
&nbsp;&nbsp;&nbsp;media_format_set_video_info(fmt, MEDIA_FORMAT_H264_HP, 480, 640, 10000000, 15000000);
 
&nbsp;&nbsp;&nbsp;media_packet_create (fmt, _finalize_callback, fcb_data, &amp;packet);
&nbsp;&nbsp;&nbsp;media_format_unref(fmt);
}
int _finalize_callback(media_packet_h packet, int err, void* userdata)
{
&nbsp;&nbsp;&nbsp;return MEDIA_PACKET_FINALIZE;
}

</pre>
</li>
<li>Create a handle and store the TBM surface data with the <span style="font-family: Courier New,Courier,monospace">media_packet_create_from_tbm_surface()</span> function:
<pre class="prettyprint">{
&nbsp;&nbsp;&nbsp;media_format_h fmt;
&nbsp;&nbsp;&nbsp;media_packet_h packet;

&nbsp;&nbsp;&nbsp;media_format_create(&amp;fmt);
&nbsp;&nbsp;&nbsp;media_format_set_video_info(fmt, MEDIA_FORMAT_RGBA, 128, 128, 2000000, 15000000);

&nbsp;&nbsp;&nbsp;media_packet_create_from_tbm_surface (fmt, surface, _finalize_callback, fcb_data, &amp;packet);
&nbsp;&nbsp;&nbsp;media_format_unref(fmt);
}
int _finalize_callback(media_packet_h packet, int err, void* userdata)
{
&nbsp;&nbsp;&nbsp;return MEDIA_PACKET_FINALIZE;
}

</pre>
</li></ul></li>
 
<li>Set and get the metadata with the media packet handle: 
<pre class="prettyprint">
int ret = MEDIA_PACKET_ERROR_NONE;

// format1 already exists
 
media_packet_create_alloc(format1, NULL, NULL, &amp;packet);
 
ret = media_packet_set_duration(packet, duration);
 
// After media_packet_get_format(), use media_format_unref()
media_format_h tmp;
media_packet_get_format(packet, &amp;tmp);
media_format_unref(tmp);
 
// Set previously created format2 to packet
// After media_packet_set_format(), use media_format_unref()
media_packet_set_format(packet, format2);
 
// Packet format is format2. If format2 ref_count is 1, format2 is free
// If format2 ref_count is bigger than 1, it is not free
media_packet_destroy(packet);
</pre></li></ol>
  
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
