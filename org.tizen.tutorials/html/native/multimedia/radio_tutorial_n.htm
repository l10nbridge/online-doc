<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

    <title>Radio: Accessing the Radio</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mn_icon.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
 		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a class="opensection" href="#init">Initializing the Radio</a></li>
			<li><a class="opensection" href="#scan">Scanning for All Available Radio Frequencies</a></li>
			<li><a class="opensection" href="#tune">Tuning the Radio and Beginning Listening</a></li>
			<li><a class="opensection" href="#seek">Seeking for a Nearby Channel</a></li>
		</ul> 
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.guides/html/native/multimedia/radio_n.htm">Radio Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__RADIO__MODULE.html">Radio API</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>Radio: Accessing the Radio</h1>
  <div class="cont"><div class="static-cont">
  
<p>This tutorial demonstrates how to create and tune a radio.</p>

<h2>Warm-up</h2>

<p>Become familiar with the Radio API basics by learning about:</p>

<ul>
 <li><a class="opensection" href="#init">Initializing the Radio</a>
 <p>Initialize the radio for use.</p></li>
 <li><a class="opensection" href="#scan">Scanning for All Available Radio Frequencies</a>
 <p>Scan for radio frequencies.</p></li>
 <li><a class="opensection" href="#tune">Tuning the Radio and Beginning Listening</a>
 <p>Tune in to a station and begin listening.</p></li>
 <li><a class="opensection" href="#seek">Seeking for a Nearby Channel</a>
 <p>Look for radio channels nearby.</p></li>
</ul>

<div class="devicespecs-util mt5 clfix">
		<ul class="dutil">
			<li><a href="#" class="showA">Show All</a></li>
			<li class="none"><a href="#" class="hideA">Hide All</a></li>
		</ul>
	</div>

		<ul class="devicespecifications">
		<li>
			<div class="devicespec-tit">
 <h2 id="init" name="init" class="items-tit-h2">Initializing the Radio</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>To initialize the radio for use:</p><ol>
<li><p>To use the functions and data types of the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__RADIO__MODULE.html">Radio</a> API, include the <span style="font-family: Courier New,Courier,monospace">&lt;radio.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;radio.h&gt;
</pre></li>
<li><p>Define a handle for the radio using the <span style="font-family: Courier New,Courier,monospace">radio_create()</span> function:</p>

<pre class="prettyprint">
#define MAX_FREQUENCIES 10
typedef struct radioInfo
{
&nbsp;&nbsp;&nbsp;radio_h radio;
&nbsp;&nbsp;&nbsp;int frequencies[MAX_FREQUENCIES];
&nbsp;&nbsp;&nbsp;int num_freq;
&nbsp;&nbsp;&nbsp;int selected_channel;
} mRadioInfo;

mRadioInfo mRadio;
ret = radio_create(&amp;mRadio.radio);
if (ret != RADIO_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;return false;
}
</pre></li>

<li><p>To receive notifications when your radio playback is interrupted, register the <span style="font-family: Courier New,Courier,monospace">radio_set_interrupted_cb()</span> callback function. When the application disappears into the background, use the following code:</p>

<pre class="prettyprint">ret = radio_set_interrupted_cb(mRadio.radio, on_radio_interrupted, &amp;mRadio);
if (ret != RADIO_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Delete the radio handle before closing the application
&nbsp;&nbsp;&nbsp;return false;
}
</pre></li>
<li>
<p>Implement the callback function:</p>

<pre class="prettyprint">
static void 
on_radio_interrupted(radio_interrupted_code_e code, void* userdata)
{
&nbsp;&nbsp;&nbsp;// Search the radio handle from userdata
&nbsp;&nbsp;&nbsp;mRadioInfo* mRadio = (mRadioInfo *)userdata;
 
&nbsp;&nbsp;&nbsp;switch (code)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;case RADIO_INTERRUPTED_COMPLETED:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// The application, which was the source of conflict, is closed now
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Restart the radio playback here
&nbsp;&nbsp;&nbsp;break;
 
&nbsp;&nbsp;&nbsp;default:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Your radio listening is interrupted
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Release the application resources or save the current state here
&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;}
}
</pre></li></ol>
	</div>
		</li>
		<li>
			<div class="devicespec-tit">
 <h2 id="scan" name="scan" class="items-tit-h2">Scanning for All Available Radio Frequencies</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>To scan for available radio frequencies:</p>
			<ol><li><p>Define and set the callback for the &quot;scan completed&quot; notification:</p>

<pre class="prettyprint">ret = radio_set_scan_completed_cb(mRadio.radio, on_scan_finished, &amp;mRadio);
if (ret != RADIO_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;return false;
}
</pre>
</li>
<li>
<p>Implement the callback function:</p>

<pre class="prettyprint">void 
on_scan_finished(void* userdata)
{
&nbsp;&nbsp;&nbsp;// Frequency scanning is done. Tune into one of the scanned frequencies
&nbsp;&nbsp;&nbsp;// and start listening 
}
</pre>

<p>The callback function returns the available frequencies:</p>

<pre class="prettyprint">
void 
on_scan_updated(int frequency, void* userdata)
{
&nbsp;&nbsp;&nbsp;mRadioInfo* mRadio = (mRadioInfo *)userdata;
&nbsp;&nbsp;&nbsp;// Store the radio channels in the array. Frequency values represent the kHz of the channel
&nbsp;&nbsp;&nbsp;mRadio-&gt;frequencies[mRadio-&gt;num_freq++] = frequency;
}
</pre>
</li>
<li>
<p>Start scanning</p>
<pre class="prettyprint">radio_scan_start(mRadio.radio, on_scan_updated, &amp;mRadio);</pre>

<p>The scanning time depends on your environment (the strength of the radio signal). Cancel the current scan using the <span style="font-family: Courier New,Courier,monospace">radio_scan_stop()</span> function.</p></li></ol>
	</div>
		</li>
		<li>
			<div class="devicespec-tit">
 <h2 id="tune" name="tune" class="items-tit-h2">Tuning the Radio and Beginning Listening</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>To tune in to a frequency:</p>
			<ol><li><p>Select the frequency and tune into it.</p>

<pre class="prettyprint">
ret = radio_set_frequency(mRadio.radio, mRadio.frequencies[mRadio.selected_channel]);
if (ret != RADIO_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;return false;
} 
</pre>
</li>
<li>
<p>Start listening to the radio using the <span style="font-family: Courier New,Courier,monospace">radio_start()</span> function:</p>

<pre class="prettyprint">
ret = radio_start(mRadio.radio);
if (ret != RADIO_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;return false;
}
</pre>

<p>If the radio emits no sound, check the signal strength with the <span style="font-family: Courier New,Courier,monospace">radio_get_signal_strength()</span> function, which returns the current signal strength as a &#39;dbuV&#39; value.</p></li></ol>
	</div>
		</li>
		<li>
			<div class="devicespec-tit">
 <h2 id="seek" name="seek" class="items-tit-h2">Seeking for a Nearby Channel</h2>
<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
  </div>
			<div class="devicespec-con"> 
<p>To seek for a nearby channel:</p>
<ol><li>Use the <span style="font-family: Courier New,Courier,monospace">radio_seek_up()</span> and <span style="font-family: Courier New,Courier,monospace">radio_seek_down()</span> functions to search for an active nearby channel frequency and tune into that frequency. This is very similar to the scanning operation, but only the nearest active frequency is searched for. Once the maximum frequency is reached in any direction, the search is stopped.

<p>To seek down, use the <span style="font-family: Courier New,Courier,monospace">radio_seek_down()</span> function:</p>

<pre class="prettyprint">
ret = radio_seek_down(mRadio.radio, on_seek_completed, &amp;mRadio);
if (ret != RADIO_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;return false;
} 
</pre>

<p>To seek down, use the <span style="font-family: Courier New,Courier,monospace">radio_seek_up()</span> function in a similar fashion.</p>

<p>The <span style="font-family: Courier New,Courier,monospace">on_seek_completed</span> callback returns the nearest available frequency:</p>

<pre class="prettyprint">
void on_seek_completed(int frequency, void* userdata)
{
&nbsp;&nbsp;&nbsp;mRadioInfo *mRadio = (mRadioInfo *)userdata;
&nbsp;&nbsp;&nbsp;int new_frequency = 0;
 
&nbsp;&nbsp;&nbsp;// The seek is done. The radio is tuned into the newly found frequency
&nbsp;&nbsp;&nbsp;// The application sets the new frequency and updates the user interface
&nbsp;&nbsp;&nbsp;radio_get_frequency(mRadio-&gt;radio, &amp;new_frequency);	
}
</pre>
</li></ol>
	</div>
		</li>		
	</ul>	
</div>				
</div> 

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
