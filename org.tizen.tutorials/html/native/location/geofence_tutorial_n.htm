<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Geofence: Using Geofence information and service</title>
 </head>
<body onload="prettyPrint()" style="overflow: auto;">

<div id="navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mn_icon.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#initial">Initializing the Geofence service</a></li>
			<li><a href="#status">Getting the Geofence event status</a></li>
			<li><a href="#alerts">Getting the Geofence alerts</a></li>
			<li><a href="#track">Tracking the user for geofence alerts</a></li>
			<li><a href="#info">Getting the geofence information</a></li>
		</ul>        
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.guides/html/native/location/geofence_n.htm">Geofence Guide</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__GEOFENCE__FRAMEWORK.html">Geofence API</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>Geofence: Using Geofence information and service</h1>
<div class="cont"><div class="static-cont">

<p>This tutorial demonstrates how you can implement the geofence-related information and services.</p>

<h2>Warm-up</h2>
<p>Become familiar with Geofence API basics by learning about:</p>
<ul>
<li><a href="#initial">Initializing the Geofence service</a>
	<p>Fulfill the prerequisites, create the geofence, start the geofence service and stop it when no longer needed.</p></li>
<li><a href="#status">Getting the Geofence event status</a>
	<p>Get the success/failure status of each and every event triggered from the user end for reliability.</p></li>
<li><a href="#alerts">Getting the Geofence alerts</a>
	<p>Define the geofence and keep tracking whenever the status(in/out) is updated.<p></li>
<li><a href="#track">Tracking the user for geofence alerts</a>
	<p>User location will be tracked and updated with the geofence status.<p></li>
<li><a href="#info">Retrieving the geofence information</a>
	<p>Acquire the information on geofence, which connect with the device to the geofence in/out status.</p></li></ul>

<div class="devicespecs-util mt5 clfix">
	<ul class="dutil">
		<li><a href="#" class="showA">Show All</a></li>
		<li class="none"><a href="#" class="hideA">Hide All</a></li>
	</ul>
</div>
	<!-- Folds -->
<ul class="devicespecifications">
	<li>
		<div class="devicespec-tit">
			<h2 id="initial" name="initial" class="items-tit-h2">Initializing the Geofence service</h2>
			<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
		</div>
		<div class="devicespec-con">
<ol><li><p>To use the geofence-related features of the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__GEOFENCE__MANAGER__MODULE.html">Geofence Manager</a> API, include the <span style="font-family: Courier New,Courier,monospace">&lt;geofence_manager.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;geofence_manager.h&gt;
</pre></li>
<li><p>Create a geofence manager handle using the <span style="font-family: Courier New,Courier,monospace">geofence_manager_create()</span> function before you use it.
<pre class="prettyprint">
geofence_manager_h manager;
geofence_manager_create(&amp;manager);
</pre>
<p>Each geofence maanager is an independent service. Callbacks are set for a given location manager and are called depending on whether the service was started for its manager.</p></li>

<li><p>For the particular geofence manager created in step-2, number of places can be created using this manager. Prior to creation of geofences, a place need to be created.
Note: A place is used to accomodate number of geofences and identified by a place id. Each place can have a name. Geofences are identified by geofence id.</p>
<pre class="prettyprint">
int place_id = -1; //This is for creating a place.
geofence_manager_add_place(manager, "place_name", &amp;place_id);
</pre></li>

<li><p>Creation of geofences can be done in the following way.</p>
<pre class="prettyprint">
Geopoint geofence:
double latitude = 12.756738;
double longitude = 77.386474;
int radius = 100;
char* address = "India"; 
geofence_h fence_h;
geofence_create_geopoint(place_id, latitude, longitude, radius, address, &amp;fence_h);

Wifi/BT geofence:
char* bssid = "82:45:67:7E:4A:3B";
char* ssid = "Cafetaria";
geofence_h fence_h;
geofence_create_bluetooth(place_id, bssid, ssid, fence_h);
</pre>	
<p>Add the geofence to the manager</p>
<pre class="prettyprint">
int geofence_id = -1;
geofence_manager_add_fence(manager, fence_h, &amp;geofence_id);
</pre></li>

<li><p>Start the geofence service using the <span style="font-family: Courier New,Courier,monospace">geofence_manager_start()</span> function. This call is asynchronous and only initiates the process of starting the service. Once the service is started, the registered callbacks are invoked when their correspondinf events take place. To know when the service becomes enabled, use the <span style="font-family: Courier New,Courier,monospace">geofence_manager_set_geofence_state_changed_cb()</span> function.</p>
<pre class="prettyprint">
geofence_manager_start(manager);
</pre></li>

<li><p>Using the geofence service for geopoints is power consuming, so if the service is not used, you can stop the status alerts using the <span style="font-family: Courier New,Courier,monospace">geofence_manager_stop()</span> function. Call the <span style="font-family: Courier New,Courier,monospace">geofence manager_start()</span> function again if the alerts are needed.</p>
<pre class="prettyprint">
geofence_manager_stop(manager);
</pre></li>

<li><p>At the end of the application, destroy all used resources, such as <span style="font-family: Courier New,Courier,monospace">geofence_manager(geofence_manager_destroy());</span></p>
<pre class="prettyprint">
geofence_manager_destroy(manager);
manager = NULL;
</pre>
<p>If you destroy the handle, there is no need to call <span style="font-family: Courier New,Courier,monospace">geofence_manager_stop()</span> function to stop the service, the service is automatically stopped. Also, you do not have to unset the previously set callbacks.</p></li></ol>

			</div>
		</li>
		<li>
			<div class="devicespec-tit">
				<h2 id="status" name="status" class="items-tit-h2">Getting the Geofence event status</h2>
				<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
			</div>
			<div class="devicespec-con">
				  <p>You can get the status of every geofence events using the geofence event callback. The geofence event callback is invoked whenever there is any request from the user for example add a geofence, start a geofence service.</p>

<ol>
<li><p>Register the callback using the geofence_manager_set_geofence_event_cb() function.</p>
<pre class="prettyprint">
geofence_manager_set_geofence_event_cb(manager, geofence_event, NULL);
</pre> </li>
<li><p>When the callback is invoked, you can, for example know the success or failure status of the event being triggered.</p>
<pre class="prettyprint">
geofence_manage_e user_action;
geofence_error_e user_error;
void geofence_event(int place_id, int geofence_id, geofence_manager_error_e error, geofence_manage_e manage, void *user_data)
{
	user_action = manage;
	user_error = error;
}
</pre>
<p>Note: This event callback is for letting the user know whether the request is success in the server side or not. This event callback will be invoked only in case of asynchronous API, as in case of synchronous API, the error is immediately returned.</p></li></ol>

			</div>
		</li>
		<li>
			<div class="devicespec-tit">
				<h2 id="alerts" name="alerts" class="items-tit-h2">Getting the Geofence alerts</h2>
				<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
			</div>
			<div class="devicespec-con">
				  <p>You can get the alerts of the geofence status using the geofence status callback. The geofence status callback is invoked whenever there is change in the state for example IN to OUT or OUT to IN, receiving the devices status with every call.</p>
<ol>
<li><p>Register the callback using the <span style="font-family: Courier New,Courier,monospace">geofence_manager_set_geofence_state_changed_cb()</span> function:</p>
<pre class="prettyprint">
geofence_manager_set_geofence_state_changed_cb(manager, geofence_state_changed, NULL);
</pre></li>
	
<li><p>When the alert is received, you can, for example, update the variables that stores the current state:</p>
<pre class="prettyprint">
geofence_state_e received_state;
void geofence_state_changed(int geofence_id, geofence_state_e state, void *user_data)
{
	received_state = state;
}
</pre>
<p>Note: The callback is called only if the geofence service has been started. There is no periodic call but callback will be invoked if there is state change.</p></li></ol>

			</div>
		</li>
		<li>
			<div class="devicespec-tit">
				<h2 id="track" name="track" class="items-tit-h2">Tracking the user for geofence alerts</h2>
				<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
			</div>
			<div class="devicespec-con">
				  <p>To get the information about the IN/OUT status for a geofence.</p>
<ol>
<li>Receive event based notifications
<ol><li><p> You can get the notifications about the IN/OUT status updates using the status update callback. The callback is invoked on an event based, receiving the current status of the user with respect to geofences with each call.</p>
<ul class="ul"><li><p>Register the geofence status update callback using the <span style="font-family: Courier New,Courier,monospace;">geofence_manager_set_geofence_state_changed_cb()</span> function:</p>
<pre class="prettyprint">
geofence_manager_set_geofence_state_changed_cb(manager, geofence_state_changed, NULL);
</pre></li></ul></li>
<li><p> Define the geofence state changed callback functions:</p>
<pre class="prettyprint">
void geofence_state_changed(int geofence_id, geofence_state_e state, void *user_data);
</pre></li></ol>
</li>
<li><p>Receive the current status on request</p>
	<p>You can get the current status of a user with respect to a fence such as IN/OUT and the duration of the current status.</p>
<ul class="ul"><li><p>To get the current status, a status handle has to be created by the user in the following way.</p>
<pre class="prettyprint">
int geofence_id = 1;
geofence_status_h status_h;
geofence_status_create(geofence_id, &amp;status_h);
geofence_status_destroy(status_h);
</pre></li>
<li><p>To get the current status, user has to call the <span style="font-family: Courier New,Courier,monospace;">geofence_status_get_state()</span> function.</p>
<pre class="prettyprint">
geofence_state_e state;
geofence_status_get_state(status_h, &amp;state);
</pre></li>
<li><p>To get the duration of the current state, user has to call the <span style="font-family: Courier New,Courier,monospace;">geofence_status_get_duration()</span> function.</p>
<pre class="prettyprint">
int duration;
geofence_status_get_duration(status_h, &amp;duration);
</pre>
<p>Here the duration is provided in seconds.</p></li></ul>
</li></ol>

			</div>
		</li>
		<li>
			<div class="devicespec-tit">
				<h2 id="info" name="info" class="items-tit-h2">Retrieving the geofence information</h2>
				<span class="fr"><a href="#" class="bt-arr"><em>Hide</em></a></span>
			</div>
			<div class="devicespec-con">
				  <p>After creation of a geofence and adding it, you can get the information about the geofence.</p>

<ol><li><p>Getting the common information among the geofences</p>

<ul class="ul"><li><p>You can get the common information about the geofences by following functions</p>
<pre class="prettyprint">
geofence_type_e type;
int place_id;
geofence_get_geofence_type(fence_h, &amp;type);
geofence_get_place_id(fence_h, &amp;place_id);
</pre></li></ul>
<li><p>Getting the geopoint fence information</p>
<ul class="ul"><li><p>You can retrieve the geopoint fence information by followings functions</p>
<pre class="prettyprint">
double latitude;
double longitude;
int radius;
char *address;
geofence_get_latitude(fence_h, &amp;latitude);
geofence_get_longitude(fence_h, &amp;longitude);
geofence_get_radius(fence_h, &amp;radius);
geofence_get_address(fence_h, &amp;address);
</pre></li></ul>		
<li><p>Getting the WIFI/BT fence information</p>
<ul class="ul"><li><p>You can retrieve the Wifi/Bt fence information by following functions</p>
<pre class="prettyprint">
char *bssid;
char *ssid;
geofence_get_bssid(fence_h, &amp;bssid);
geofence_get_sssid(fence_h, &amp;ssid);
</pre></li></ul></li></ol>
</div></div>			
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>
<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>
<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>
</body>
</html>			
