<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>
  <title>WebGL - Khronos</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../../images/mw_icon.png"/> <img alt="Wearable Web" src="../../../images/ww_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm">WebGL - Khronos Tutorial</a></li> 
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#webgl">WebGL - Khronos API for Mobile Web</a></li>
			<li><a href="../../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_w.html#webgl">WebGL - Khronos API for Wearable Web</a></li>
			</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
   <h1>WebGL - Khronos</h1>
 
  <p>WebGL - Khronos is a graphics library for creating 3D visual elements in Web applications without separate plug-ins.</p>
  <p>WebGL is designed as a rendering context of the <a href="../graphics/canvas_w.htm">HTML5 &lt;canvas&gt; element</a>. The WebGL context is still being developed and has not been standardized. WebGL uses 3D rendering APIs derived from <a href="http://www.opengl.org/documentation/specs/version2.0/glspec20.pdf" target="_blank">OpenGL&reg; ES 2.0</a>, and is realized by binding shaders and <a href="http://www.khronos.org/registry/gles/specs/2.0/GLSL_ES_Specification_1.0.17.pdf" target="_blank">OpenGL&reg; ES Shading Language</a> (GLSL ES) as JavaScript.
</p>
  
  <p>The main features of the WebGL include:</p> 
  <ul> 
   <li>Importing the WebGL context
   <p>You can use the <span style="font-family: Courier New,Courier,monospace">getContext()</span> method of the <span style="font-family: Courier New,Courier,monospace">Canvas</span> object to <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#import">import the WebGL context</a>.</p>
   </li> 
   <li>Using programs and shaders
   <p>You can use shaders, such as the vertex shader and fragment shader, to convert shape data to display it on the screen as pixels. <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#shader">Shaders must be initialized</a> and attached to programs.
The vertex shader sets the final position of a vertex, and the fragment shader sets the final colors of each pixel.</p>

   </li> 
   <li>Using buffers
   <p>A buffer is a memory block for storing temporary data. In WebGL, you must <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#buffer">create a vertex buffer object (VBO) to store vertex attributes</a>, such as location, color, and texture coordinates.</p>

<table class="note"> 
     <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">The <span style="font-family: Courier New,Courier,monospace">deleteBuffer()</span> method can be used to delete the buffer.</td> 
      </tr> 
     </tbody>
</table>

   </li>
   
   <li>Drawing on the screen
   <p>You can use shader attributes to define which buffer to pass to the application, and then record the buffer in the drawing buffer to <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#draw">display the content on the screen</a>.</p>
   </li>
   <li>Applying realistic 3D effects
   <p>To apply a more realistic 3D effect to objects in WebGL, you can use the following features:</p>
   <ul><li><p>Texture</p>
  <p>You can <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#color">set the color value</a> and <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#texture">map an image</a> on the object surface.</p>
  <p>Each vertex can have a unique color. When converting a vertex shader to a fragment shader, all the middle pixels are filled, and through linear interpolation of the vertex attributes, the color differences between vertices are automatically given gradation effects.</p>
  </li>
  <li><p>Animation</p>
  <p>You can apply object and timer coordinate changes to <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#animation">create a moving animation</a>.</p>
  </li>
  <li><p>3D perspective</p>
  <p>You can use Z-index and matrix to <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#threed">create a 3D perspective</a>.</p>
  </li></ul>
  <p>You can also <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#touch">use touch effects</a> with textures and 3D perspectives.</p></li>
  
  <li>WebGL frameworks
<p>Numerous <a href="http://www.khronos.org/webgl/wiki/User_Contributions#Frameworks" target="_blank">frameworks</a> exist to easily import low-level methods to WebGL and to develop WebGL more productively.</p>
<p>The <a href="https://github.com/mrdoob/three.js/" target="_blank">three.js</a> is one of the most widely used WebGL frameworks. It is a lightweight JavapScript library, in which many settings that need to be performed when developing WebGL are already set as basis. Consequently, three.js reduces the overlapping code due to repetitive setting works.</p>
<p>You can use the three.js framework to, for example, <a href="../../../../../org.tizen.tutorials/html/web/w3c/supplement/webgl_tutorial_w.htm#framework">apply light and camera effects</a>.</p></li>
  </ul>
  
<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>