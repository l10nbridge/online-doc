<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Message Port</title>
 </head>
 <body onload="prettyPrint()" style="overflow: auto;">

 <div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../images/mobile_s_w.png"/> <img alt="Wearable Web" src="../../images/wearable_s_w.png"/></p>
    </div>

    <div id="toc_border"><div id="toc">
		<p class="toc-title">Dependencies</p>
		<ul class="toc">
			<li>Tizen Platform 2.4 and Higher for Mobile</li>
			<li>Tizen Platform 2.3.1 and Higher for Wearable</li>
		</ul>
		<p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#Manage_Message_Port">Managing Message Ports</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
			<li><a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/messageport.html">Message Port API for Mobile Web</a></li>
			<li><a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/messageport.html">Message Port API for Wearable Web</a></li>			
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>Message Port</h1>
 
  <p>Tizen Web applications can communicate with other Web or native applications. The message data type for the communication is map data, which consists of a string key and value pair.</p>
  
<p>The Message Port API is mandatory for both Tizen mobile and wearable profiles, which means that it is supported in all mobile and wearable devices. All mandatory APIs are supported on the Tizen Emulators.</p> 
  
  <p>You can send and receive messages through 2 types of message ports:</p>
<ul><li>The <span style="font-family: Courier New,Courier,monospace">LocalMessagePort</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/messageport.html#LocalMessagePort">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/messageport.html#LocalMessagePort">wearable</a> applications) is used to register your message port and prepare to receive messages from other applications.
<p>To receive messages from other applications, you must register a callback to the local message port.</p></li>
<li>The <span style="font-family: Courier New,Courier,monospace">RemoteMessagePort</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/messageport.html#RemoteMessagePort">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/messageport.html#RemoteMessagePort">wearable</a> applications) is used to send messages to other applications.
<p>The local message port information can be sent to another application for bi-directional communication.</p></li></ul>

<p>You can retrieve the instances of the <span style="font-family: Courier New,Courier,monospace">LocalMessagePort</span> and <span style="font-family: Courier New,Courier,monospace">RemoteMessagePort</span> interfaces with the <span style="font-family: Courier New,Courier,monospace">requestLocalMessagePort()</span> and <span style="font-family: Courier New,Courier,monospace">requestRemoteMessagePort()</span> methods of the <span style="font-family: Courier New,Courier,monospace">tizen.messageport</span> object.</p>

<p>A message port supports sending and receiving methods:</p>

<ul><li>A Tizen Web application can <a href="#Manage_Message_Port">send messages to another application</a> using the <span style="font-family: Courier New,Courier,monospace">sendMessage()</span> method of the <span style="font-family: Courier New,Courier,monospace">RemoteMessagePort</span> interface.
<p>To receive response messages from the other application, your application can specify a local message port when it sends the message. You can receive response messages using the callback method which is registered through the <span style="font-family: Courier New,Courier,monospace">addMessagePortListener()</span> method of the <span style="font-family: Courier New,Courier,monospace">LocalMessagePort</span> interface.</p></li>
<li>The application that wants to receive messages from your application can mostly be implemented as a Tizen native or Web application. To implement it as a native application, see the native <a href="../../native/app_management/message_port_n.htm">Message Port Communication</a> guide.</li></ul>

  <p class="figure">Figure: Message port communication</p>
  <p align="center"><img alt="Message port communication" src="../../images/message_port.png" /></p>

<p>You can communicate only with a trusted application that is signed with the same certificate as your application, using the instances of the <span style="font-family: Courier New,Courier,monospace">LocalMessagePort</span> and <span style="font-family: Courier New,Courier,monospace">RemoteMessagePort</span> interfaces that are retrieved by the <span style="font-family: Courier New,Courier,monospace">requestTrustedLocalMessagePort()</span> and <span style="font-family: Courier New,Courier,monospace">requestTrustedRemoteMessagePort()</span> methods of the <span style="font-family: Courier New,Courier,monospace">tizen.messageport</span> object.</p>
  <p class="figure">Figure: Trusted message ports</p>
  <p align="center"><img alt="Trusted message ports" src="../../images/message_port_trusted.png" /></p>

<h2>Warm-up</h2>
      <p>Become familiar with the Message Port API basics by learning about:</p>
      <ul>
       <li><a href="#Manage_Message_Port">Managing Message Ports</a> <p>Send and receive messages.</p> </li>
      </ul>
	
                <h2 id="Manage_Message_Port" name="Manage_Message_Port">Managing Message Ports</h2>
				
  <p>Learning how to send messages to and receive responses from other Tizen applications through message ports is a basic data communication skill:</p> 
  <ol> 
<li><p>To create a local port which receives messages, use the <span style="font-family: Courier New,Courier,monospace">requestLocalMessagePort()</span> method of the <span style="font-family: Courier New,Courier,monospace">LocalMessagePort</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/messageport.html#LocalMessagePort">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/messageport.html#LocalMessagePort">wearable</a> applications):</p>
<pre class="prettyprint">
var localPort = tizen.messageport.requestLocalMessagePort(&quot;SAMPLE_PORT&quot;);
</pre> </li> 
<li><p>To retrieve an instance of the <span style="font-family: Courier New,Courier,monospace">RemoteMessagePort</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/messageport.html#RemoteMessagePort">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/messageport.html#RemoteMessagePort">wearable</a> applications), use the <span style="font-family: Courier New,Courier,monospace">requestRemoteMessagePort()</span> method of the <span style="font-family: Courier New,Courier,monospace">tizen.messageport</span> object. The <span style="font-family: Courier New,Courier,monospace">RemoteMessagePort</span> interface sends messages to the port identified by an <span style="font-family: Courier New,Courier,monospace">ApplicationId</span> and a port name.</p>
<pre class="prettyprint">
var targetApplicationId = tizen.application.getCurrentApplication().appInfo.id;
var remotePort = tizen.messageport.requestRemoteMessagePort(targetApplicationId, &quot;SAMPLE_PORT&quot;);
</pre> </li> 
<li><p>Use the <span style="font-family: Courier New,Courier,monospace">addMessagePortListener()</span> method of the <span style="font-family: Courier New,Courier,monospace">LocalMessagePort</span> interface to add a callback method that is invoked when the message arrives:</p>
<pre class="prettyprint">
var localPortWatchId = localPort.addMessagePortListener(function(data, replyPort) 
{
&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; data.length; i++)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;key:&quot; + data[i].key + &quot; / value:&quot; + data[i].value);
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;if (replyPort) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;replyPort given: &quot; + replyPort.messagePortName);
&nbsp;&nbsp;&nbsp;}
});
</pre> </li> 
<li><p>Use the <span style="font-family: Courier New,Courier,monospace">sendMessage()</span> method of the <span style="font-family: Courier New,Courier,monospace">RemoteMessagePort</span> interface to send a message:</p> <pre class="prettyprint">
var messageData = 
[
&nbsp;&nbsp;&nbsp;{key:&quot;command&quot;, value:&quot;begin&quot;},
&nbsp;&nbsp;&nbsp;{key:&quot;data&quot;, value:&quot;dummy&quot;}
];
remotePort.sendMessage(messageData);
</pre> 
<p>If you expect a response message, pass the instance of the <span style="font-family: Courier New,Courier,monospace">LocalMessagePort</span> interface as a second parameter of <span style="font-family: Courier New,Courier,monospace">sendMessage()</span> method to specify the message port where the response is sent:</p>
<pre class="prettyprint">
remotePort.sendMessage(messageData, localPort);
</pre> </li>
  </ol> 
  
<p>To implement the application receiving the message as a native application, see the mobile native <a href="../../native/app_management/message_port_n.htm">Message Port</a> guide.</p>  

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>