<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Widget Information</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../images/mobile_s_w.png"/> <img alt="Wearable Web" src="../../images/wearable_s_w.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
	<p class="toc-title">Dependencies</p>
		<ul class="toc">
			<li>Tizen Platform 3.0 and Higher for Mobile</li>
			<li>Tizen Platform 2.3.2 and Higher for Wearable</li>
		</ul>
		<p class="toc-title">Content</p>
		<ul class="toc">
				<li><a href="#widget">Retrieving Widgets</a></li>
				<li><a href="#info">Retrieving ID and Size Information</a></li>
				<li><a href="#name">Retrieving the Widget Name</a></li>
				<li><a href="#instances">Retrieving Widget Instances</a></li>
				<li><a href="#variants">Retrieving Widget Variants</a></li>
				<li><a href="#receive">Monitoring Widget Changes</a></li>
				<li><a href="#period">Changing the Update Period</a></li>
				<li><a href="#content">Sending and Getting Content</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html">WidgetService API for Mobile Web</a></li>
			<li><a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html">WidgetService API for Wearable Web</a></li>
			</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Widget Information</h1>

<p>You can manage installed widgets and widget instances in various ways, such as retrieving information about widgets, or getting the widget instances and receiving notifications when the state of the widget changes.</p>

<p>This feature is supported in mobile and wearable applications only.</p>

  <p>The main features of the Widget Service API include:</p>
  <ul>
   <li>Widget retrieval
   <p>Using the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetServiceManager">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetServiceManager">wearable</a> applications), you can:</p>
    <ul>
      <li><a href="#widget">Retrieve a widget or widgets</a> using the <span style="font-family: Courier New,Courier,monospace">getWidgets()</span> method.</li>
      <li><a href="#info">Receive information about the primary widget ID or size</a> related to the specific size type.</li>
    </ul></li>

   <li>Widget management
   <p>Using the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#Widget">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#Widget">wearable</a> applications), you can:</p>
    <ul>
      <li><a href="#name">Get the name of the widget</a> in a given language using the <span style="font-family: Courier New,Courier,monospace">getName()</span> method.</li>
      <li><a href="#instances">Get all instances</a> belonging to the widget using the <span style="font-family: Courier New,Courier,monospace">getInstances()</span> method.</li>
      <li><a href="#variants">Get variants</a> of a specified size type.</li>
      <li><a href="#receive">Monitor state changes</a> in an installed widget.</li>
    </ul></li>

   <li>Widget instance management
   <p>Using the <span style="font-family: Courier New,Courier,monospace">WidgetInstance</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetInstance">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetInstance">wearable</a> applications), you can:</p>
    <ul>
      <li><a href="#period">Change the update period</a> of the instance using the <span style="font-family: Courier New,Courier,monospace">changeUpdatePeriod()</span> method.</li>
      <li><a href="#content">Send or get content</a> to and from the widget instance.</li>
    </ul></li>
	</ul>
	
	 <h2>Warm-up</h2>
  <p>Become familiar with the Widget Service API basics by learning about:</p>
  <ul>
   <li><a href="#widget">Retrieving Widgets</a> <p>Get the installed widgets.</p></li>
   <li><a href="#info">Retrieving ID and Size Information</a> <p>Get information about the primary ID or size.</p></li>
   <li><a href="#name">Retrieving the Widget Name</a> <p>Get the widget name.</p></li>
   <li><a href="#instances">Retrieving Widget Instances</a> <p>Get a list of widget instances.</p></li>
   <li><a href="#variants">Retrieving Widget Variants</a> <p>Get widget variants.</p></li>
   <li><a href="#receive">Monitoring Widget Changes</a> <p>Receive notifications about the widget life-cycle events.</p></li>
   <li><a href="#period">Changing the Update Period</a> <p>Change the instance data update interval.</p></li>
   <li><a href="#content">Sending and Getting Content</a> <p>Manage the instance content.</p></li>
  </ul>
  
<h2 id="widget" name="widget">Retrieving Widgets</h2>

<p>Learning how to retrieve the installed widget list is a basic widget management skill:</p>
  <ol>
   <li><p>Define a success handler implementing the <span style="font-family: Courier New,Courier,monospace">WidgetArraySuccessCallback</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetArraySuccessCallback">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetArraySuccessCallback">wearable</a> applications). Optionally, you can specify an error handler too.</p> 
<pre class="prettyprint">
var successCallback = function(widgets)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;There are &quot; + widgets.length + &quot; installed widgets&quot;);
};

var errorCallback = function(error)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Error &quot; + error.message);
};
</pre></li>
   <li><p>To get a list of all installed widgets, use the <span style="font-family: Courier New,Courier,monospace">getWidgets()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetServiceManager">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetServiceManager">wearable</a> applications). If the optional <span style="font-family: Courier New,Courier,monospace">packageId</span> parameter is given, only the widgets belonging to the given package are returned.</p>
<pre class="prettyprint">
var packageId = &quot;org.tizen.contacts&quot;;
tizen.widgetservice.getWidgets(successCallback, errorCallback, packageId);
</pre>
<p>You can also get a specific widget object by using the <span style="font-family: Courier New,Courier,monospace">getWidget()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface:</p>
<pre class="prettyprint">
var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
</pre></li>
  </ol>

<h2 id="info" name="info">Retrieving ID and Size Information</h2>

<p>Learning how to retrieve the primary widget ID or size makes using the Widget Service API easy and convenient:</p>
  <ul>
   <li><p>To get the primary widget ID of a given application or package ID, use the <span style="font-family: Courier New,Courier,monospace">getPrimaryWidgetId()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetServiceManager">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetServiceManager">wearable</a> applications):</p> 
<pre class="prettyprint">
var widgetId = tizen.widgetservice.getPrimaryWidgetId(&quot;org.tizen.music-player&quot;);
</pre></li>
   <li><p>To get the size of the corresponding size type, use the <span style="font-family: Courier New,Courier,monospace">getSize()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface, specifying the size type:</p> 
<pre class="prettyprint">
var widgetSize = tizen.widgetservice.getSize(&quot;4x4&quot;);
</pre></li>
  </ul>

<h2 id="name" name="name">Retrieving the Widget Name</h2>

<p>To retrieve the widget name:</p>
  <ol>
   <li><p>Retrieve the widget whose name you need:</p>
<pre class="prettyprint">
var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
</pre></li>
   <li><p>To get the widget name, use the <span style="font-family: Courier New,Courier,monospace">getName()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#Widget">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#Widget">wearable</a> applications). If the locale parameter is omitted, the system locale is used.</p>
<pre class="prettyprint">
var name = widget.getName(&quot;en-us&quot;);
</pre></li>
  </ol>

<h2 id="instances" name="instances">Retrieving Widget Instances</h2>

<p>Learning how to retrieve information about installed widget instances makes the Widget Service API more useful:</p>
  <ol>
   <li><p>Define a success handler implementing the <span style="font-family: Courier New,Courier,monospace">WidgetInstancesCallback</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetInstancesCallback">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetInstancesCallback">wearable</a> applications). Optionally, you can specify an error handler too.</p> 
<pre class="prettyprint">
var successCallback = function(instances)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;There are &quot; + instances.length + &quot; instances&quot;);
};

var errorCallback = function(error)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Error &quot; + error.message);
};
</pre></li>

   <li><p>To retrieve a list of all instances belonging to the widget, use the <span style="font-family: Courier New,Courier,monospace">getInstances()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#Widget">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#Widget">wearable</a> applications):</p> 
<pre class="prettyprint">
widget.getInstances(successCallback, errorCallback);
</pre></li>
  </ol>

<h2 id="variants" name="variants">Retrieving Widget Variants</h2>

<p>To retrieve variants representing all of the supported widget size types:</p>
  <ol>
   <li><p>Define a success handler implementing the <span style="font-family: Courier New,Courier,monospace">WidgetVariantsCallback</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetVariantsCallback">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetVariantsCallback">wearable</a> applications). Optionally, you can specify an error handler too.</p> 
<pre class="prettyprint">
var successCallback = function(variants)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;There are &quot; + variants.length + &quot; variants of the widget&quot;);
};

var errorCallback = function(error)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Error &quot; + error.message);
};
</pre></li>
   <li><p>Retrieve the widget whose variants you need:</p>
<pre class="prettyprint">
var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
</pre></li>
   <li><p>To get a list of all variants, use the <span style="font-family: Courier New,Courier,monospace">getVariants()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#Widget">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#Widget">wearable</a> applications):</p>
<pre class="prettyprint">
widget.getVariants(successCallback, errorCallback);
</pre>
<p>You can also get a specific variant by using the <span style="font-family: Courier New,Courier,monospace">getVariant()</span> method with one of the supported size types as a parameter:</p>
<pre class="prettyprint">
var variant = widget.getVariant(&quot;4x4&quot;);
</pre></li>
  </ol>

  <h2 id="receive" name="receive">Monitoring Widget Changes</h2>

<p>Learning to receive notifications when the state of the widget has been changed is a useful widget management skill. There are 4 states that can be noticed: <span style="font-family: Courier New,Courier,monospace">CREATE</span>, <span style="font-family: Courier New,Courier,monospace">DESTROY</span>, <span style="font-family: Courier New,Courier,monospace">PAUSE</span>, and <span style="font-family: Courier New,Courier,monospace">RESUME</span>.</p>
  <ol>
   <li><p>Define the event handler for state notifications using the <span style="font-family: Courier New,Courier,monospace">WidgetChangeCallback</span> listener interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetChangeCallback">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetChangeCallback">wearable</a> applications):</p> 
<pre class="prettyprint">
var WidgetChangeCallback = function(instance, event)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;The instance &quot; + instance + &quot; has state &quot; + event);
};
</pre></li>

   <li><p>Retrieve the widget object using the <span style="font-family: Courier New,Courier,monospace">getWidget()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetServiceManager</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetServiceManager">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetServiceManager">wearable</a> applications):</p> 
<pre class="prettyprint">
var widget = tizen.widgetservice.getWidget(&quot;org.tizen.music-player.widget&quot;);
</pre></li>

   <li><p>Add the listener to use the defined event handler with the <span style="font-family: Courier New,Courier,monospace">addStateChangeListener()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#Widget">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#Widget">wearable</a> applications):</p> 
<pre class="prettyprint">
var watchId = widget.addStateChangeListener(WidgetChangeCallback);
</pre></li>
   <li><p>To stop receiving notifications for the defined listener, use the <span style="font-family: Courier New,Courier,monospace">removeStateChangeListener()</span> method of the <span style="font-family: Courier New,Courier,monospace">Widget</span> interface with the previously obtained listener ID:</p> 
<pre class="prettyprint">
widget.removeStateChangeListener(watchId);
</pre></li>
  </ol>

<h2 id="period" name="period">Changing the Update Period</h2>

<p>To change the update interval for the widget instance:</p>
  <ol>
   <li><p>Retrieve the widget instance with the <span style="font-family: Courier New,Courier,monospace">getInstances()</span> method:</p> 
<pre class="prettyprint">
var instance;
var successCallback = function(instances)
{
&nbsp;&nbsp;&nbsp;instance = instances[0];
};

var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
widget.getInstances(successCallback);
</pre></li>
   <li><p>To change the update interval, use the <span style="font-family: Courier New,Courier,monospace">changeUpdatePeriod()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetInstance</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetInstance">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetInstance">wearable</a> applications) with the new value (in seconds):</p>
<pre class="prettyprint">
instance.changeUpdatePeriod(2);
</pre></li>
  </ol>

<h2 id="content" name="content">Sending and Getting Content</h2>

<p>Learning how to send and get the widget content is a useful widget management skill:</p>
  <ol>
   <li><p>Obtain the widget instance with the <span style="font-family: Courier New,Courier,monospace">getInstances()</span> method:</p> 
<pre class="prettyprint">
var instance;
var successCallback = function(instances)
{
&nbsp;&nbsp;&nbsp;instance = instances[0];
};

var widget = tizen.widgetservice.getWidget(&quot;org.tizen.gallery.widget&quot;);
widget.getInstances(successCallback);
</pre></li>

   <li><p>To send data to the widget, use the <span style="font-family: Courier New,Courier,monospace">sendContent()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetInstance</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetInstance">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetInstance">wearable</a> applications). The second parameter defines whether the instance is updated even if the provider is paused.</p>
<pre class="prettyprint">
instance.sendContent(data, true);
</pre></li>
   <li><p>To retrieve widget instance content, define a success handler implementing the <span style="font-family: Courier New,Courier,monospace">WidgetContentCallback</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/widgetservice.html#WidgetContentCallback">mobile</a> and <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/widgetservice.html#WidgetContentCallback">wearable</a> applications). Optionally, you can specify an error handler too.</p> 
<pre class="prettyprint">
var successCallback = function(object)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Data successfully retrieved&quot;);
};

var errorCallback = function(error)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Error &quot; + error.message);
};
</pre>
<p>Afterwards, use the <span style="font-family: Courier New,Courier,monospace">getContent()</span> method of the <span style="font-family: Courier New,Courier,monospace">WidgetInstance</span> interface:</p>
<pre class="prettyprint">
instance.getContent(successCallback, errorCallback);
</pre></li>
  </ol>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>	
