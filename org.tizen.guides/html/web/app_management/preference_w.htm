<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Application Preferences</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../images/mobile_s_w.png"/> <img alt="Wearable Web" src="../../images/wearable_s_w.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
	<p class="toc-title">Dependencies</p>
		<ul class="toc">
			<li>Tizen Platform 3.0 and Higher for Mobile</li>
			<li>Tizen Platform 2.3.2 and Higher for Wearable</li>
		</ul>
	<p class="toc-title">Content</p>
		<ul class="toc">
        <li><a href="#set_value">Setting up a Preference</a></li>
        <li><a href="#get_value">Getting a Preference Value</a></li>
        <li><a href="#get_all">Getting All Preferences</a></li>
        <li><a href="#remove">Removing Preferences</a></li>
        <li><a href="#exists">Checking Whether a Preference Exists</a></li>
        <li><a href="#set_change_listener">Monitoring Preference Value Changes</a></li>
		</ul>
	<p class="toc-title">Related Info</p>
		<ul class="toc">
		  <li><a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/preference.html">Preference API for Mobile Web</a></li>
		  <li><a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/preference.html">Preference API for Wearable Web</a></li>
			</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Application Preferences</h1>

<p>Preference management allows you to store and retrieve the application preferences. You can create, store, and retrieve all custom preferences needed by your application.</p>

<p>This feature is supported in mobile and wearable applications only.</p>

<p>Each preference has its own key and value. The value can be a string, number, or a boolean value.</p>

<p>The main preference features are:</p>
<ul>
<li>Setting up a preference
<p>You can <a href="#set_value">set up a preference</a> with the <span style="font-family: Courier New,Courier,monospace">setValue()</span> method.  If the preference exists before setting up, its value is set. If the preference does not exist, it is created.</p>
</li>
<li>Getting a preference value
<p>You can get a preference value in 2 ways:</p>
<ul><li><a href="#get_value">Get a value of a single preference</a> using the <span style="font-family: Courier New,Courier,monospace">getValue()</span> method. If the preference exists, its value is returned; otherwise, an exception is thrown. You can <a href="#exists">check whether a preference exists</a> using the <span style="font-family: Courier New,Courier,monospace">exists()</span> method.</li>
<li><a href="#get_all">Get values of all preferences</a> using the asynchronous <span style="font-family: Courier New,Courier,monospace">getAll()</span> method.</li>
</ul>
</li>
<li>Removing a preference
<p>You can <a href="#remove">remove a preference</a> with the <span style="font-family: Courier New,Courier,monospace">remove()</span> and <span style="font-family: Courier New,Courier,monospace">removeAll()</span> functions. The first removes only 1 preference while the second removes them all.</p>
</li>
<li>Monitoring preference value changes
<p>You can provide a listener method which is called every time a given preference&#39;s value changes. <a href="#set_change_listener">Register the listener</a> with the <span style="font-family: Courier New,Courier,monospace">setChangeListener()</span> method. The provided listener is called with a preference key and its new value. If you want to remove the listener, use the <span style="font-family: Courier New,Courier,monospace">unsetChangeListener()</span> method.</p>
</li>
</ul>

<h2>Warm-up</h2>
  <p>Become familiar with the Preference API basics by learning about:</p>
  <ul>
    <li><a href="#set_value">Setting up a Preference</a><p>Create a preference and set its value.</p></li>
    <li><a href="#get_value">Getting a Preference Value</a><p>Get a preference value with a given key.</p></li>
    <li><a href="#get_all">Getting All Preferences</a><p>Get all existing preferences.</p></li>
    <li><a href="#remove">Removing Preferences</a><p>Remove a preference with a given key, or all preferences.</p></li>
    <li><a href="#exists">Checking Whether a Preference Exists</a><p>Check whether the preference with a given key exists.</p></li>
    <li><a href="#set_change_listener">Monitoring Preference Value Changes</a><p>Listen for changes in the preference value with the given key.</p></li>
  </ul>
  
  <h2 id="set_value" name="set_value">Setting up a Preference</h2>
  <p>To create a preference with a given key or to change a value of an existing one, use the <span style="font-family: Courier New,Courier,monospace">setValue()</span> method:</p>
<pre class="prettyprint">
tizen.preference.setValue(&quot;key1&quot;, &quot;New value&quot;);
</pre>
  <p>If the preference with the given key does not exist, it is created with the given value.  If the preference exists, only its new value is assigned.</p>

  <h2 id="get_value" name="get_value">Getting a Preference Value</h2>
  <p>To get the value of a preference with a given key:</p>
  <pre class="prettyprint">
var currentValue = tizen.preference.getValue(&quot;key1&quot;);
console.log(&quot;The current value of the preference key1 is: &quot; + currentValue);
</pre>
  <p>The value returned by the method can be a string, number, or boolean. If the preference with the given key does not exist, an exception is thrown.</p>

  <h2 id="get_all" name="get_all">Getting All Preferences</h2>
  <p>To get all preferences, use the <span style="font-family: Courier New,Courier,monospace">getAll()</span> method. Its callback gets an array of all preferences, where each row of the array
    consists of a field key and value.</p>
  <pre class="prettyprint">
var successCB = function(preferences)
{
&nbsp;&nbsp;&nbsp;var i;
&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; preferences.length; i++)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;The preference - key: &quot; + preferences[i].key + &quot; value: &quot; + preferences[i].value);
&nbsp;&nbsp;&nbsp;}
};

tizen.preference.getAll(successCB);
</pre>

  <h2 id="remove" name="remove">Removing Preferences</h2>
  <p>To remove preferences:</p>
  <ul>
  <li>To remove a single preference with the given key, use the <span style="font-family: Courier New,Courier,monospace">remove()</span> method:
  <pre class="prettyprint">
tizen.preference.remove(&quot;key1&quot;);
</pre>
  <p>If the preference with the given key does not exist, an exception is thrown.</p>
</li>
<li>To remove all existing preferences, use the <span style="font-family: Courier New,Courier,monospace">removeAll()</span> method:
  <pre class="prettyprint">
tizen.preference.removeAll();
</pre>
</li></ul>

  <h2 id="exists" name="exists">Checking Whether a Preference Exists</h2>
  <p>To determine whether a preference with a given key exists, use the <span style="font-family: Courier New,Courier,monospace">exists()</span> method:</p>
  <pre class="prettyprint">
if (tizen.preference.exists(&quot;key1&quot;))
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Preference with the key key1 exists&quot;);
}
else
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Preference with the key key1 doesn't exist&quot;);
}</pre>
  <p>The method returns <span style="font-family: Courier New,Courier,monospace">true</span> if the preference exists and <span style="font-family: Courier New,Courier,monospace">false</span> if it does not.</p>

  <h2 id="set_change_listener" name="set_change_listener">Monitoring Preference Value Changes</h2>
  <p>To start and stop listening for value changes in a preference with a given key:</p>

  <ul>
    <li>
     <p>To start listening, use the <span style="font-family: Courier New,Courier,monospace">setChangeListener()</span> method:</p>
      <pre class="prettyprint">
var listener = function(data)
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Preference with the key: &quot; + data.key + &quot; has a new value: &quot; + data.value);
};

tizen.preference.setChangeListener(&quot;key1&quot;, listener);
</pre>
     <p>The listener callback is called every time the value of the given preference changes. The callback parameter is an object that consists of the <span style="font-family: Courier New,Courier,monospace">key</span> and <span style="font-family: Courier New,Courier,monospace">value</span> fields.</p>
    </li>

    <li>
      <p>To stop listening, use the <span style="font-family: Courier New,Courier,monospace">unsetChangeListener()</span> method:</p>
      <pre class="prettyprint">
var listener = function(data)
{
&nbsp;&nbsp;&nbsp;tizen.preference.unsetChangeListener(data.key);
};

tizen.preference.setChangeListener(&quot;key1&quot;, listener);
</pre>
    </li>
  </ul>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>	
