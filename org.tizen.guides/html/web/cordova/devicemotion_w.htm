<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Device Motions</title>
 </head>
 <body onload="prettyPrint()" style="overflow: auto;">

 <div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile Web" src="../../images/mobile_s_w.png"/> <img alt="Wearable Web" src="../../images/wearable_s_w.png"/> <img alt="TV Web" src="../../images/tv_s_w.png"/></p>
    </div>

    <div id="toc_border"><div id="toc">
			<p class="toc-title">Dependencies</p>
		<ul class="toc">
			<li>Tizen Platform 3.0 and Higher for Mobile</li>
			<li>Tizen Platform 3.0 and Higher for Wearable</li>
			<li>Tizen Platform 3.0 and Higher for TV</li>
		</ul>
		<p class="toc-title">Content</p>
        <ul class="toc">
			<li><a href="#prerequisites">Prerequisites</a></li>
			<li><a href="#getCurrentAcceleration">Getting the Current Acceleration</a></li>
			<li><a href="#monitorAcceleration">Monitoring the Acceleration Values</a></li>   
		</ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/device-motion.html">Device Motion API for Mobile Web</a></li>
            <li><a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/cordova/device-motion.html">Device Motion API for Wearable Web</a></li>
            <li><a href="../../../../org.tizen.web.apireference/html/device_api/tv/tizen/cordova/device-motion.html">Device Motion API for TV Web</a></li>		
            </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

  <h1>Device Motions</h1>

<p>You can access the device accelerometer.</p>

<p>The Device Motion API is mandatory for both Tizen mobile and wearable profiles, which means that it is supported in all mobile and wearable devices. All mandatory APIs are supported on the Tizen Emulators.</p>

 <p>Before you start, remember to <a href="#prerequisites">prepare your application to use the device motion functionality</a>.</p> 

  <p>The main features of the Device Motion API include:</p>
<ul>
    <li>Getting the current acceleration
        <p>You can <a href="#getCurrentAcceleration">get the current acceleration</a> along the X, Y, and Z axes.</p>
    </li>
    <li>Monitoring the acceleration values
        <p>You can <a href="#monitorAcceleration">get the acceleration along the X, Y, and Z axes at regular intervals</a>.</p>
    </li>
</ul>

<h2>Acceleration Values</h2>
<p>The acceleration data is captured into the <span style="font-family: Courier New,Courier,monospace">Acceleration</span> interface (in <a href="../../../../org.tizen.web.apireference/html/device_api/mobile/tizen/cordova/device-motion.html#Acceleration">mobile</a>, <a href="../../../../org.tizen.web.apireference/html/device_api/wearable/tizen/cordova/device-motion.html#Acceleration">wearable</a>, and <a href="../../../../org.tizen.web.apireference/html/device_api/tv/tizen/cordova/device-motion.html#Acceleration">TV</a> applications). The acceleration values include the effect of gravity (9.81 m/s^2), so that when a device lies flat and facing up, the x, y, and z values returned must be 0, 0, and 9.81.</p>

<table>
<caption>Table: Acceleration values</caption>
<tbody>
    <tr>
     <th>Property</th>
     <th>Value</th>
    </tr>
    <tr>
        <td>x</td><td>Amount of acceleration on the X axis (in m/s^2)</td>
    </tr>
    <tr>
        <td>y</td><td>Amount of acceleration on the Y axis (in m/s^2)</td>
    </tr>
    <tr>
        <td>z</td><td>Amount of acceleration on the Z axis (in m/s^2)</td>
    </tr>
    <tr>
        <td>timestamp</td><td>Creation timestamp in milliseconds</td>
    </tr>
</tbody>
</table>

<p>This guide demonstrates how you can get access to the device accelerometer through the <span style="font-family: Courier New,Courier,monospace">navigator.accelerometer</span> object.</p>

<h2 id="warm_up" name="warm_up">Warm-up</h2>
  <p>Become familiar with the Device Motion API basics by learning about:</p>
  <ul>
   <li><a href="#prerequisites">Prerequisites</a> <p>Prepare your application to use the device motion functionality.</p></li>
   <li><a href="#getCurrentAcceleration">Getting the Current Acceleration</a><p>Get the current acceleration along the X, Y, and Z axes.</p></li>
   <li><a href="#monitorAcceleration">Monitoring the Acceleration Values</a><p>Monitor the acceleration by getting the current acceleration at regular intervals.</p></li>   
  </ul>
  
<h2 id="prerequisites">Prerequisites</h2>
<p>To perform any Cordova-related operations, you must wait until Cordova is fully set up (the <span style="font-family: Courier New,Courier,monospace">deviceready</span> event occurs):</p>
	 <pre class="prettyprint">
document.addEventListener(&quot;deviceready&quot;, onDeviceReady, false);

function onDeviceReady()
{
&nbsp;&nbsp;&nbsp;console.log(&quot;Cordova features now available&quot;);
}
</pre>
     
<h2 id="getCurrentAcceleration">Getting the Current Acceleration</h2>
<p>To get the current acceleration along the X, Y, and Z axes:</p>

<ol>
<li><p>Define a callback method to be invoked with the current acceleration values:</p>
<pre class="prettyprint">
function onSuccess(acceleration)
{
&nbsp;&nbsp;&nbsp;console.log(&#39;Acceleration X: &#39; + acceleration.x + &#39;\n&#39; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Acceleration Y: &#39; + acceleration.y + &#39;\n&#39; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Acceleration Z: &#39; + acceleration.z + &#39;\n&#39; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Timestamp: &#39; + acceleration.timestamp);
}
</pre></li>
<li><p>Define a callback method to be invoked when errors occur:</p>
<pre class="prettyprint">
function onError()
{
&nbsp;&nbsp;&nbsp;console.log(&#39;onError!&#39;);
}
</pre></li>
<li><p>Call the <span style="font-family: Courier New,Courier,monospace">getCurrentAcceleration()</span> method and pass the callbacks:</p>
<pre class="prettyprint">
navigator.accelerometer.getCurrentAcceleration(onSuccess, onError);
</pre></li>
</ol>

<h2 id="monitorAcceleration">Monitoring the Acceleration Values</h2>
<p>To retrieve the acceleration along the X, Y, and Z axes at regular intervals:</p>

<ol>
<li><p>Define a callback method to be invoked with the current acceleration values:</p>
<pre class="prettyprint">
function onSuccess(acceleration)
{
&nbsp;&nbsp;&nbsp;console.log(&#39;Acceleration X: &#39; + acceleration.x + &#39;\n&#39; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Acceleration Y: &#39; + acceleration.y + &#39;\n&#39; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Acceleration Z: &#39; + acceleration.z + &#39;\n&#39; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Timestamp: &#39;+ acceleration.timestamp);
&nbsp;&nbsp;&nbsp;console.log(&#39;Please wait 3 seconds for the next measurement...&#39;);
}
</pre></li>
<li><p>Define a callback method to be invoked when errors occur:</p>
<pre class="prettyprint">
function onError()
{
&nbsp;&nbsp;&nbsp;console.log(&#39;onError!&#39;);
}
</pre></li>
<li>
    <p>Specify the interval of calling the <span style="font-family: Courier New,Courier,monospace">onSuccess()</span> callback in milliseconds:</p>
<pre class="prettyprint">
var options = {frequency: 3000}; /* Update every 3 seconds */
</pre>
</li>
<li><p>Call the <span style="font-family: Courier New,Courier,monospace">watchAcceleration()</span> method with options:</p>
<pre class="prettyprint">
var watchID = navigator.accelerometer.watchAcceleration(onSuccess, onError, options);
</pre>
<p>Acceleration is now measured regularly, and each time a callback is called.</p></li>
<li><p>When finished, stop monitoring the acceleration value by calling the <span style="font-family: Courier New,Courier,monospace">clearWatch()</span> method with the <span style="font-family: Courier New,Courier,monospace">watchID</span> as a parameter:</p>
<pre class="prettyprint">
navigator.accelerometer.clearWatch(watchID);
</pre>
</li>
</ol>
 
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>