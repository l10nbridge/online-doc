<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>System Settings</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Dependencies</p>
		<ul class="toc">
			<li>Tizen Platform 2.4 and Higher for Mobile</li>
			<li>Tizen Platform 2.3.1 and Higher for Wearable</li>
		</ul>
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#prerequisites">Prerequisites</a></li>		
			<li><a href="#settings">Managing System Settings</a>
			</li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">	
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__SYSTEM__SETTINGS__MODULE.html">System Settings API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__SYSTEM__SETTINGS__MODULE.html">System Settings API for Wearable Native</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>System Settings</h1>

<p>Tizen provides functions with which you can <a href="#settings">get the system configuration</a> related to user preferences.</p>

<p>The main features of the System Settings API include accessing system-wide configurations, such as ringtone, wallpaper, and font. Before you start, remember to <a href="#prerequisites">prepare your application to use the system settings functionality</a>.</p>

<p>The <span style="font-family: Courier New,Courier,monospace">system_settings_key_e</span> enumerator defines all enumerations that work as arguments for the System Settings API.</p>
<p>The System Settings API provides 2 function types listed in the following table. Certain functions support both types, whereas others only support the getter function.</p>

<table>
<caption>Table: System Settings API function types</caption>
<tbody>
<tr>
 <th>Function type</th>
 <th>Methods</th>
 <th>Description</th>
</tr>
<tr>
 <td><span style="font-family: Courier New,Courier,monospace">GETTER</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">system_settings_get_value_bool</span>
 <p><span style="font-family: Courier New,Courier,monospace">system_settings_get_value_int</span></p>
 <p><span style="font-family: Courier New,Courier,monospace">system_settings_get_value_string</span></p></td>
 <td>Get the user-defined values by data type (bool, int, or string).</td>
</tr>
<tr>
 <td><span style="font-family: Courier New,Courier,monospace">NOTIFIER</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">system_settings_set_changed_cb</span><p><span style="font-family: Courier New,Courier,monospace">system_settings_unset_changed_cb</span></p></td>
 <td>Register and deregister callback functions when the <span style="font-family: Courier New,Courier,monospace">SETTER</span> related to the key is called.</td>
</tr></tbody>
</table>

<p>The following table lists the system settings details.</p>
  <table id="input" border="1"> 
   <caption>
     Table: System settings keys
   </caption>  
   <tbody> 
    <tr> 
     <th>Key</th>
	 <th>Type</th>
	 <th>Supporting API type </th> 
	 <th>Description</th> 
    </tr> 

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_DEFAULT_FONT_TYPE</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER</span></td>
	<td>Current system default font type.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_DEVICE_NAME</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Device name.</td>
	</tr>
	
	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_DISPLAY_SCREEN_ROTATION_AUTO</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">bool</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Indicates whether rotation control is automatic.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_EMAIL_ALERT_RINGTONE</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>File path of the current email alert ringtone.</td>
	</tr>
	
	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_FONT_SIZE</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">int</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Current system font size.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_FONT_TYPE</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Current system font type.</td>
	</tr>	
	
	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_INCOMING_CALL_RINGTONE</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>File path of the current ringtone.</td>
	</tr>	
	
	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_LOCALE_COUNTRY</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Current country setting in the &lt;LANGUAGE&gt;_&lt;REGION&gt; syntax. The country setting is in the ISO 639-2 format, and the region setting is in the ISO 3166-1 alpha-2 format.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_LOCALE_LANGUAGE</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Current language setting in the &lt;LANGUAGE&gt;_&lt;REGION&gt; syntax. The language setting is in the ISO 639-2 format and the region setting is in the ISO 3166-1 alpha-2 format.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_LOCALE_TIMEFORMAT_24HOUR</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">bool</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Indicates whether the 24-hour clock is used. If the value is <span style="font-family: Courier New,Courier,monospace">false</span>, the 12-hour clock is used.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_LOCALE_TIMEZONE</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Current time zone.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_MOTION_ACTIVATION</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">bool</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Indicates whether the motion service is activated.</td>
	</tr>
	
	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_NETWORK_FLIGHT_MODE</span></td> 			
	<td><span style="font-family: Courier New,Courier,monospace">bool</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Indicates whether the device is in the flight mode.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_NETWORK_WIFI_NOTIFICATION</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">bool</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Indicates whether Wi-Fi-related notifications are enabled on the device.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_SOUND_LOCK</span></td>					
	<td><span style="font-family: Courier New,Courier,monospace">bool</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Indicates whether the screen lock sound is enabled on the device (for example, whether the LCD on/off sound is enabled). </td>
	</tr>
	
	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_SOUND_NOTIFICATION</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>File path of the current notification tone set by the user. </td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_SOUND_NOTIFICATION_REPETITION_PERIOD</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">int</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Time period for notification repetitions.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_SOUND_SILENT_MODE</span></td>			
	<td><span style="font-family: Courier New,Courier,monospace">bool</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Indicates whether the device is in the silent mode.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_SOUND_TOUCH</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">bool</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Indicates whether the screen touch sound is enabled on the device.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_TIME_CHANGED</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">int</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">NOTIFIER</span></td>
	<td>Event that occurs when the system changes time to notify you about the time change.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_USB_DEBUGGING_ENABLED</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">bool</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>Indicates whether the USB debugging is enabled.</td>
	</tr>
	
	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_WALLPAPER_HOME_SCREEN</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>File path of the current home screen wallpaper.</td>
	</tr>

	<tr>
	<td><span style="font-family: Courier New,Courier,monospace">SYSTEM_SETTINGS_KEY_WALLPAPER_LOCK_SCREEN</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">string</span></td>
	<td><span style="font-family: Courier New,Courier,monospace">GETTER, NOTIFIER</span></td>
	<td>File path of the current lock screen wallpaper.</td>
	</tr>
   </tbody> 
  </table>

<p>The following example shows a typical use case: An application sees the name of the current wallpaper and you want to print out a message when the wallpaper changes:</p>

<pre class="prettyprint">
void 
_img_cb(system_settings_key_e key, void *user_data)
{
&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;THIS IS CALLED BY USER APPLICATION WHEN THE WALLPAPER CHANGES \n&quot;);
}

/* NOTIFIER 1 - Registering a callback function */
system_settings_set_changed_cb(SYSTEM_SETTINGS_KEY_WALLPAPER_HOME_SCREEN, _img_cb, NULL);
char * path;

/* GETTER */
system_settings_get_value_string(SYSTEM_SETTINGS_KEY_WALLPAPER_HOME_SCREEN, &amp;path);
printf(&quot;path of the current wallpaper is %s \n&quot;, path);

/* NOTIFIER 2 - Deregistering a callback function */
system_settings_unset_changed_cb(SYSTEM_SETTINGS_KEY_WALLPAPER_HOME_SCREEN);
</pre>

<h2>Warm-up</h2>
    <p>Become familiar with the System Settings API basics by learning about:</p>
	<ul>
	<li><a href="#prerequisites">Prerequisites</a>
	<p>Prepare your application to use the system settings functionality.</p></li>
	<li><a href="#settings">Managing System Settings</a>
	<p>Obtain and monitor system setting values.</p>
	</li>
	</ul>

<h2 id="prerequisites">Prerequisites</h2>
<p>To use the functions and data types of the System Settings API (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__SYSTEM__SETTINGS__MODULE.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__SYSTEM__SETTINGS__MODULE.html">wearable</a> applications), include the <span style="font-family: Courier New,Courier,monospace">&lt;system_settings.h&gt;</span> header file in your application:</p>
<pre class="prettyprint">
#include &lt;system_settings.h&gt;
</pre>

<h2 id="settings" name="settings">Managing System Settings</h2>

	<p>To manage system settings, which provide access to system variables:</p>
<ol>
<li><p>Define auxiliary structures:</p>

<pre class="prettyprint">
struct _ret_type_define {
&nbsp;&nbsp;&nbsp;&nbsp;system_settings_key_e key;
&nbsp;&nbsp;&nbsp;&nbsp;int returns;
};

typedef
enum {
&nbsp;&nbsp;&nbsp;&nbsp;_RET_BOOL = 0,
&nbsp;&nbsp;&nbsp;&nbsp;_RET_INT,
&nbsp;&nbsp;&nbsp;&nbsp;_RET_STRING
} _SYSTEM_SETTINGS_TYPES;

struct _ret_type_define
_ret_type[] =
{
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYSTEM_SETTINGS_KEY_INCOMING_CALL_RINGTONE, _RET_STRING
&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYSTEM_SETTINGS_KEY_WALLPAPER_HOME_SCREEN, _RET_STRING
&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYSTEM_SETTINGS_KEY_WALLPAPER_LOCK_SCREEN, _RET_STRING
&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYSTEM_SETTINGS_KEY_FONT_SIZE, _RET_INT
&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYSTEM_SETTINGS_KEY_FONT_TYPE, _RET_STRING
&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYSTEM_SETTINGS_KEY_MOTION_ACTIVATION, _RET_BOOL
&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Others */
&nbsp;&nbsp;&nbsp;&nbsp;}
};

static const char*
_info_key[SYS_INFO_COUNT]=
{
&nbsp;&nbsp;&nbsp;&nbsp;&quot;SYSTEM_SETTINGS_KEY_INCOMING_CALL_RINGTONE&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&quot;SYSTEM_SETTINGS_KEY_WALLPAPER_HOME_SCREEN&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&quot;SYSTEM_SETTINGS_KEY_WALLPAPER_LOCK_SCREEN&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&quot;SYSTEM_SETTINGS_KEY_FONT_SIZE&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&quot;SYSTEM_SETTINGS_KEY_FONT_TYPE&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&quot;SYSTEM_SETTINGS_KEY_MOTION_ACTIVATION&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;/* Others */
};
</pre>
</li>

<li><p>Obtain the setting data.</p>
<p>The available settings are defined in the <span style="font-family: Courier New,Courier,monospace">system_settings_key_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__SYSTEM__SYSTEM__SETTINGS__MODULE.html#ga56c8fa435516884c5648efecdd871eaa">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__SYSTEM__SYSTEM__SETTINGS__MODULE.html#ga56c8fa435516884c5648efecdd871eaa">wearable</a> applications).</p>
 
<p>Read the data using the following functions, according to the data type of the value you want to read:</p>

<ul><li><span style="font-family: Courier New,Courier,monospace">system_settings_get_value_int()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">system_settings_get_value_bool()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">system_settings_get_value_double()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">system_settings_get_value_string()</span></li>
</ul>

<pre class="prettyprint">
#define SYS_INFO_COUNT 6

int i;
for (i = 0; i &lt; SYS_INFO_COUNT; i++) {
&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;%d- System_settings: %s: &quot;, i, _info_key[_ret_type[i].key]);

&nbsp;&nbsp;&nbsp;&nbsp;if (_ret_type[i].returns==_RET_BOOL) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;system_settings_get_value_bool(_ret_type[i].key, &amp;_bool_ret);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;%d&quot;, _bool_ret);
&nbsp;&nbsp;&nbsp;&nbsp;} else if (_ret_type[i].returns==_RET_INT) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;system_settings_get_value_int(_ret_type[i].key, &amp;_int_ret);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;%d&quot;, _int_ret);
&nbsp;&nbsp;&nbsp;&nbsp;} else if (_ret_type[i].returns==_RET_STRING) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;system_settings_get_value_string(_ret_type[i].key, &amp;_string_ret);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;%s&quot;, _string_ret);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(_string_ret);
&nbsp;&nbsp;&nbsp;&nbsp;} else if (_ret_type[i].returns==_RET_DOUBLE) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;system_settings_get_value_double(_ret_type[i].key, &amp;_double_ret);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;%f&quot;, _double_ret);
&nbsp;&nbsp;&nbsp;&nbsp;} else {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;Undefined return type&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}
}
</pre>
</li>


<li><p>Monitor changes in the setting values.</p>
<ol type="a"><li><p>To monitor when a system setting value changes, set a callback using the <span style="font-family: Courier New,Courier,monospace">system_settings_set_changed_cb()</span> function with the appropriate key as the first parameter:</p>

<pre class="prettyprint">
for (i = 0; i &lt; SYS_INFO_COUNT; i++)
&nbsp;&nbsp;&nbsp;&nbsp;system_settings_set_changed_cb(_ret_type[i].key, _system_settings_changed_cb, 0);
</pre></li>

<li><p>Define the callback to be invoked after each change.</p>
<p>The <span style="font-family: Courier New,Courier,monospace">system_settings_key_e</span> key refers to the key that has changed.</p>

<pre class="prettyprint">
static void
_system_settings_changed_cb(system_settings_key_e key, void *user_data)
{
&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;Runtime Info changed: %s&quot;, _info_key[key]);
}
</pre></li>

<li><p>When the callbacks are no longer needed, unset them:</p>

<pre class="prettyprint">
for (i = 0; i &lt; SYS_INFO_COUNT; i++)
&nbsp;&nbsp;&nbsp;&nbsp;system_settings_unset_changed_cb(_ret_type[i].key, _system_settings_changed_cb, 0);
</pre></li></ol>
</li>

</ol>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>