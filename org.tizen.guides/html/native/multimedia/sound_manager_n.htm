<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Sound Manager</title>
 </head>
 <body onload="prettyPrint()" style="overflow: auto;">

 <div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mn_icon.png"/> <img alt="Wearable native" src="../../images/wn_icon.png"/></p>
    </div>

    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
			<li><a href="#volume">Volume Control</a></li>
			<li><a href="#type">Sound Session Types</a></li>
			<li><a href="#stream">Sound Stream Policy</a></li>
			<li><a href="#query">Sound Device Query</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.tutorials/html/native/multimedia/sound_manager_tutorial_n.htm">Sound Manager Tutorial</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__MODULE.html">Sound Manager API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__SOUND__MANAGER__MODULE.html">Sound Manager API for Wearable Native</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>Sound Manager</h1>

<p>The sound manager allows you to control the audio behavior of your application.</p>

<p>The main features of the Sound Manager API include:</p>

<ul>
<li><a href="#volume">Volume control</a>
<p>Control the output volume by managing the sound type and its volume level.</p></li>

<li><a href="#type">Sound session types</a>
<p>Set the sound session type, which specifies the behavior of your application sound across the system (for a substitute, see <a href="#stream">Sound Stream Policy</a>).</p></li>

<li><a href="#stream">Sound stream policy (since 2.4)</a>
<p>Set the attributes of your application&#39;s sound stream, which specify the behavior of the sound stream across the system.</p></li>

<li><a href="#query">Sound device query</a>
<p>Using the query functions, you can get various information, such as the state of the sound devices.</p></li>
</ul>

<h2 id="volume" name="volume">Volume Control</h2>

<p>You can manage the volume level of a particular sound type. With the Sound Manager API, you can set and get a volume level and a maximum volume level of a particular sound type. </p>

<p>Normally, if there is an active output stream, the <span style="font-family: Courier New,Courier,monospace">sound_manager_get_current_sound_type()</span> function returns the sound type of that stream, and if not, it returns an error message. However, you can set a particular sound type as current using the <span style="font-family: Courier New,Courier,monospace">sound_manager_set_current_sound_type()</span> function. This enables other applications, such as a volume application, to manage the volume level of the particular sound type even though it is not currently playing.</p>

 <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">Setting the current sound type affects the entire system. When no longer needed, unset the current sound type using the <span style="font-family: Courier New,Courier,monospace">sound_manager_unset_current_sound_type()</span> function.</td> 
    </tr> 
   </tbody> 
  </table>

<h2 id="type" name="type">Sound Session Types (Deprecated)</h2>

<p>The Sound Manager API offers 5 different sound session types: media, alarm, notification, emergency and VOIP. According to these types, your application&#39;s audio works in a specific way to mix with sounds of other applications or to respond to an audio interruption made by another application.</p>

<p>The alarm, notification, emergency, and VOIP sessions are prioritized over the media session. For example, when an alarm is activated while you are playing a media file, the system pauses the media session, and the alarm session gets the permission to play its sound.</p>

<p>You can set options for how to start a new media session or respond to an audio interruption during an active media session using the <span style="font-family: Courier New, Courier, monospace">sound_session_option_for_start_e</span> (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__SESSION__MODULE.html#ga26a030df874992a461af04255c6c3eef">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__SOUND__MANAGER__SESSION__MODULE.html#ga26a030df874992a461af04255c6c3eef">wearable</a> applications) and <span style="font-family: Courier New, Courier, monospace">sound_session_option_for_during_play_e</span> enumerators (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__SESSION__MODULE.html#ga132bd49bd7d0f5037cc292f9c7ad1c32">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__SOUND__MANAGER__SESSION__MODULE.html#ga132bd49bd7d0f5037cc292f9c7ad1c32">wearable</a> applications). A media session is not able to interrupt or block the other types of sound sessions, no matter what options you have set.</p>

<p>You can also set options for resuming the media session when the interruption ends by using the <span style="font-family: Courier New, Courier, monospace">sound_session_option_for_resumption_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__SESSION__MODULE.html#ga20d1d7fa84dc322f03b58d42806cd9d9">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__SOUND__MANAGER__SESSION__MODULE.html#ga20d1d7fa84dc322f03b58d42806cd9d9">wearable</a> applications). The sound system notifies the media session when the interruption ends, and you are able to resume your session.</p>

<h2 id="stream" name="stream">Sound Stream Policy (Since 2.4)</h2>

<p>The sound stream policy is a new concept that replaces the deprecated the sound session. Instead of sound session types, the sound manager now provides sound stream types, and stream focus to moderate the sound streams.</p>

<h3>Obtaining the Sound Stream Information Handle</h3>

<p>You can use the <span style="font-family: Courier New,Courier,monospace">sound_manager_create_stream_information()</span> function to create a stream info handle, and set the stream type to the handle. Once created, the handle is used throughout the playback or recording stream APIs (such as the Player, WAV Player, and Audio I/O APIs). Your application can have multiple stream info handles and each handle can have multiple sound streams.</p>

<p>There are 8 available sound stream types to define the nature of your sound steam:</p>

<ul><li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_MEDIA</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_SYSTEM</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_ALARM</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_NOTIFICATION</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_EMERGENCY</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_VOICE_INFORMATION</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_VOICE_RECOGNITION</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_RINGTONE_VOIP</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_VOIP</span></li></ul>

<p>Fundamentally, the <span style="font-family: Courier New,Courier,monospace">SYSTEM</span>, <span style="font-family: Courier New,Courier,monospace">ALARM</span>, <span style="font-family: Courier New,Courier,monospace">NOTIFICATION</span>, <span style="font-family: Courier New,Courier,monospace">EMERGENCY</span>, <span style="font-family: Courier New,Courier,monospace">VOICE_INFORMATION</span>, and <span style="font-family: Courier New,Courier,monospace">RINGTONE_VOIP</span> types are considered as a playback stream, and the <span style="font-family: Courier New,Courier,monospace">VOICE_RECOGNITION</span> type as a recording stream. The <span style="font-family: Courier New,Courier,monospace">MEDIA</span> type can be both a playback and recording stream based on your usage, and the <span style="font-family: Courier New,Courier,monospace">VOIP</span> type has the nature of both the playback and recording stream. According to these types, the routing path and sound type are determined internally through the system.</p>

<p>Only the playback stream types are matched to sound types which are used for <a href="#volume">volume control</a>.</p>

<table>
<caption>
Table: Corresponding sound types and playback stream types
</caption>
<tbody>
<tr>
<th>Sound Stream Type</th>
<th>Sound Type</th>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_MEDIA</span></td>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_TYPE_MEDIA</span></td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_SYSTEM</span></td>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_TYPE_SYSTEM</span></td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_ALARM</span></td>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_TYPE_ALARM</span></td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_NOTIFICATION</span></td>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_TYPE_NOTIFICATION</span></td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_VOICE_INFORMATION</span></td>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_TYPE_VOICE</span></td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_RINGTONE_VOIP</span></td>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_TYPE_RINGTONE</span></td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_VOIP</span></td>
<td><span style="font-family: Courier New,Courier,monospace">SOUND_TYPE_VOIP</span></td>
</tr>
</tbody>
</table>

<h3>Managing the Stream Focus</h3>

<p>Unlike the sound session types, the sound stream types and relative focus acquisition give you more independence for your application&#39;s audio behavior. In the sound session concept, it is the system that has the authority whether to stop or play the stream. However, in the stream focus concept, you have the authority to control the steam of sound across the system.</p>

<p>To activate your sound stream, acquire the stream focus. Once acquired, you are free to start playback or record sound. To acquire the stream focus, use the <span style="font-family: Courier New,Courier,monospace">sound_manager_acquire_focus()</span> function. You need to create a stream info handle first, since you need it to specify for which sound stream you want to acquire the focus.</p>

<p>The sound manager offers the stream focus for both playback and recording, meaning that you can independently control the playback and recording stream:</p>

<ul><li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_FOCUS_FOR_PLAYBACK = 0x0001</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_FOCUS_FOR_RECORDING = 0x0002</span></li></ul>

<p>For example: If your stream type is for playback, and 2 different streams are activated, one for playback and another for recording. If you want to activate your playback stream and have no intention to interrupt the current recording stream, you only need to acquire the playback focus, to stop the current playback stream, and start to play the new stream.</p>

<p>Since you can independently control both the playback and recording stream, even though your stream type is playback, you can also at the same time acquire the recording focus. You can use the recording focus to, for example, stop the recording stream while your playback stream is playing.</p>

<p>You can get notifications on the stream focus changes through the <span style="font-family: Courier New,Courier,monospace">sound_stream_focus_state_changed_cb()</span> callback, which you set when creating the stream info handle. If the handle is released, you are obliged to stop your sound stream.</p>

<p>When you no longer need the stream focus, call the <span style="font-family: Courier New,Courier,monospace">sound_manager_release_focus()</span> function to allow other sound streams to resume.</p>

<h2 id="query" name="query">Sound Device Query</h2>
<p>The audio behavior of your application must differ in accordance with the various sound devices that are connected.</p>

<p>Use the <span style="font-family: Courier New,Courier,monospace">sound_manager_get_current_device_list()</span> function to get the list handle of the currently connected sound devices. With the sequential search of this device list, you can get the device handle of each device on the list. You can use the <span style="font-family: Courier New,Courier,monospace">sound_manager_get_next_device()</span> and <span style="font-family: Courier New,Courier,monospace">sound_manager_get_prev_device()</span> functions for a sequential search of the device list.</p>

<p>With the device handle, you can query the sound device information with the following functions:</p>
<ul><li><span style="font-family: Courier New,Courier,monospace">sound_manger_get_device_type()</span>: To get the device type.</li>
<li><span style="font-family: Courier New,Courier,monospace">sound_manager_get_device_io_direction()</span>: To get the device IO direction.</li>
<li><span style="font-family: Courier New,Courier,monospace">sound_manager_get_device_id()</span>: To get the device ID.</li>
<li><span style="font-family: Courier New,Courier,monospace">sound_manager_get_device_name()</span>: To get the device name.</li>
<li><span style="font-family: Courier New,Courier,monospace">sound_manager_get_device_state()</span>: To get the device state.</li></ul>

<p>To get a notification when the sound device connection or information has changed, register the <span style="font-family: Courier New,Courier,monospace">sound_manager_set_device_connected_cb()</span> and <span style="font-family: Courier New,Courier,monospace">sound_manager_set_device_information_changed_cb()</span> callbacks. The initial state of the connected sound device is deactivated.</p>

<p>When getting a sound device list or setting callbacks, use the <span style="font-family: Courier New, Courier, monospace">sound_device_mask_e</span> enumerator (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__DEVICE__MODULE.html#ga5938ab712f44677173b74ec226aa25b3">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__MEDIA__SOUND__MANAGER__DEVICE__MODULE.html#ga5938ab712f44677173b74ec226aa25b3">wearable</a> applications) to specify the sound devices that you want. With a combination of the masks, you can to narrow down the sound devices to those you actually need.</p>   

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>