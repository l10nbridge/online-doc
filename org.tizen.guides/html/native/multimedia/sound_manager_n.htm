<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Sound Manager</title>
 </head>
 <body onload="prettyPrint()" style="overflow: auto;">

 <div id="navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mn_icon.png"/></p>
    </div>

    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
			<li><a href="#volume">Volume Control</a></li>
			<li><a href="#type">Sound Session Types</a></li>
			<li><a href="#stream">Sound Stream Policy</a></li>
			<li><a href="#query">Sound Device Query</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.tutorials/html/native/multimedia/sound_manager_tutorial_n.htm">Sound Manager Tutorial</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__MODULE.html">Sound Manager API</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>Sound Manager</h1>

<p>The sound manager allows you to control the audio behavior of your application.</p>

<p>The main features of the Sound Manager API include:</p>

<ul>
<li><a href="#volume">Volume control</a>
<p>Control the output volume by managing the sound type and its volume level.</p></li>

<li><a href="#type">Sound session types (Deprecated)</a>
<p>Set the sound session type, which specifies the behavior of your application sound across the system. (see <a href="#stream">Sound Stream Policy</a> for substitute)</p></li>

<li><a href="#stream">Sound Stream Policy (Since 2.4)</a>
<p>Set the attributes of your application's sound stream, which specify the behavior of the sound stream across the system.</p></li>

<li><a href="#query">Sound device query</a>
<p>Using the query functions, you can get various information, such as the state of the sound devices.</p></li>
</ul>

<h2 id="volume" name="volume">Volume Control</h2>

<p>You can manage the volume level of a particular sound type. With the Sound Manager API, you can set and get a volume level and a maximum volume level of a particular sound type. </p>

<p>Normally, if there is an active output stream, the <span style="font-family: Courier New,Courier,monospace">sound_manager_get_current_sound_type()</span> function returns the sound type of that stream, and if not, it returns an error message. However, you can set a particular sound type as current using the <span style="font-family: Courier New,Courier,monospace">sound_manager_set_current_sound_type()</span> function. This enables other applications, such as a volume application, to manage the volume level of the particular sound type even though it is not currently playing.</p>

 <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">Setting the current sound type affects the entire system. When no longer needed, unset the current sound type using the <span style="font-family: Courier New,Courier,monospace">sound_manager_unset_current_sound_type()</span> function.</td> 
    </tr> 
   </tbody> 
  </table>

<h2 id="type" name="type">Sound Session Types (Deprecated)</h2>

<p>The Sound Manager API offers 5 different sound session types: media, alarm, notification, emergency and VOIP. According to these types, your application&#39;s audio works in a specific way to mix with sounds of other applications or to respond to an audio interruption made by another application.</p>

<p>The alarm, notification, emergency, and VOIP sessions are prioritized over the media session. For example, when an alarm is activated while you are playing a media file, the system pauses the media session, and the alarm session gets the permission to play its sound.</p>

<p>You can set options for how to start a new media session or respond to an audio interruption during an active media session using the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__SESSION__MODULE.html#ga26a030df874992a461af04255c6c3eef">sound_session_option_for_start_e</a> and <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__SESSION__MODULE.html#ga132bd49bd7d0f5037cc292f9c7ad1c32">sound_session_option_for_during_play_e</a> enumerators. A media session is not able to interrupt or block the other types of sound sessions, no matter what options you have set.</p>

<p>You can also set options for resuming the media session when the interruption ends by using the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__SESSION__MODULE.html#ga20d1d7fa84dc322f03b58d42806cd9d9">sound_session_option_for_resumption_e</a> enumerator. The sound system notifies the media session when the interruption ends, and you are able to resume your session.</p>

<h2 id="stream" name="stream">Sound Stream Policy (Since 2.4)</h2>

<p>Setting sound stream policy is a newly added concept to replace sound session. Instead of sound session types, Sound Manager now provides sound stream types, and stream focus to moderate the sound streams.</p>

<h3>Obtain sound stream informaion handle</h3>

<p>Use the sound_manager_create_stream_information() function to create a stream info handle, and set the stream type to the handle. Once created, this handle will be used throughout the playback or recording stream APIs(e.g., Player, Wave-Player, Audio-Io, etc.). Your application can have multiple stream info handles and each handles can have multiple sound streams.</p>

<p>There are 8 sound stream types to define the nature of your sound steam, and those are:</p>

<ul><li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_MEDIA</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_SYSTEM</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_ALARM</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_NOTIFICATION</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_EMERGENCY</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_VOICE_INFORMATION</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_VOICE_RECOGNITION</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_RINGTONE_VOIP</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_TYPE_VOIP</span></li></ul>

<p>Fundamentally, SYSTEM, ALARM, NOTIFICATION, EMERGENCY, VOICE_INFORMATION and RINGTONE_VOIP types are considered as playback stream, and VOICE_RECOGNITION type as recording stream. MEDIA type can be both playback and recording stream uppon your usage, and VOIP type has the nature of both playback and recording stream. According to these type, the routing path, and sound type are determined internally through the system.</p>

<p>Notice that only playback stream types are matched to sound types which are used for <a href="#volume">Volume control</a>.</p>

<table>
<caption>
Table: Correspoding sound types for playback stream types
</caption>
<tbody>
<tr>
<th>Sound Stream Type</th>
<th>Sound Type</th>
</tr>
<tr>
<td>SOUND_STREAM_TYPE_MEDIA</td>
<td>SOUND_TYPE_MEDIA</td>
</tr>
<tr>
<td>SOUND_STREAM_TYPE_SYSTEM</td>
<td>SOUND_TYPE_SYSTEM</td>
</tr>
<tr>
<td>SOUND_STREAM_TYPE_ALARM</td>
<td>SOUND_TYPE_ALARM</td>
</tr>
<tr>
<td>SOUND_STREAM_TYPE_NOTIFICATION</td>
<td>SOUND_TYPE_NOTIFICATION</td>
</tr>
<tr>
<td>SOUND_STREAM_TYPE_VOICE_INFORMATION</td>
<td>SOUND_TYPE_VOICE</td>
</tr>
<tr>
<td>SOUND_STREAM_TYPE_RINGTONE_VOIP</td>
<td>SOUND_TYPE_RINGTONE</td>
</tr>
<tr>
<td>SOUND_STREAM_TYPE_VOIP</td>
<td>SOUND_TYPE_VOIP</td>
</tr>
</tbody>
</table>

<h3>Managing Stream Focus</h3>

<p>Unlike setting sound session types, setting sound stream types and acquiring focus relatively give you more independence for your application's audio behavior. In sound session concept, it is the system that has the authority whether to stop or play the stream. However, in stream focus concept, you have the authority to control the steam of sound accross the system.</P>

<p>To activate your sound stream, you should acquire stream focus. Once acquired, you are free to start playback or recording sound. Acquiring stream focus is possible anytime after the stream info handle has been creaated.</p>

<p>Sound Manager offers steam focus for both playback and recording, meaning you can independetly control the playback and recording steam.</p>

<ul><li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_FOCUS_FOR_PLAYBACK = 0x0001</span></li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_STREAM_FOCUS_FOR_RECORDING = 0x0002</span></li></ul>

<p>Let's say your stream type is for playback, and there are two different streams are activated, one for playback, the other for recording. If you want to activate your playback stream and has no intention to interrupt the current recording stream, you only need to acquire playback focus, to stop the current playback stream, and start to play yours. And vice versa.</p>

<p>However, don't be misguided that you can only acquire stream focus based on the strem types of yours. Even though your stream type is playback, you can also acquire recording focus if you want to stop recording stream while your stream playing. To long story make short, you can acquire both playback and recording focus for your stream at the same time.</p>

<p>To acquire stream focus, use the sound_manager_acquire_focus()function. You will need a stream info hadle to specify which sound stream you want to acquire the focus.</p>

<p>Don't forget to call the sound_manager_release_focus() function when you no longer need the stream focus, so that the other sound stream might resume.</p>

<p>You are able to get a notice when the sate of stream focus changes through the sound_stream_focus_state_changed_cb() callback you've set when creating the stream info handle. If released, you are obliged to stop your sound stream. If acquired, you might want to resume your stream.</p>

<h2 id="query" name="query">Sound Device Query</h2>
<p>The audio behavior of your application must differ in accordance with the various sound devices that are connected.</p>

<p>Use the <span style="font-family: Courier New,Courier,monospace">sound_manager_get_current_device_list()</span> function to get the list handle of the currently connected sound devices. With the sequential search of this device list, you can get the device handle of each device on the list. You can use the <span style="font-family: Courier New,Courier,monospace">sound_manager_get_next_device()</span> and <span style="font-family: Courier New,Courier,monospace">sound_manager_get_prev_device()</span> functions for a sequential search of the device list.</p>

<p>With the device handle, you can query the sound device information with the following functions:</p>
<ul><li><span style="font-family: Courier New,Courier,monospace">sound_manger_get_device_type()</span>: To get the device type.</li>
<li><span style="font-family: Courier New,Courier,monospace">sound_manager_get_device_io_direction()</span>: To get the device IO direction.</li>
<li><span style="font-family: Courier New,Courier,monospace">sound_manager_get_device_id()</span>: To get the device ID.</li>
<li><span style="font-family: Courier New,Courier,monospace">sound_manager_get_device_name()</span>: To get the device name.</li>
<li><span style="font-family: Courier New,Courier,monospace">sound_manager_get_device_state()</span>: To get the device state.</li></ul>

<p>To get a notification when the sound device connection or information has changed, register the <span style="font-family: Courier New,Courier,monospace">sound_manager_set_device_connected_cb()</span> and <span style="font-family: Courier New,Courier,monospace">sound_manager_set_device_information_changed_cb()</span> callbacks. The initial state of the connected sound device is deactivated.</p>

<p>When getting a sound device list or setting callbacks, use the <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MEDIA__SOUND__MANAGER__DEVICE__MODULE.html#ga5938ab712f44677173b74ec226aa25b3">sound_device_mask_e</a> enumerator to specify the sound devices that you want. With a combination of the masks, you can to narrow down the sound devices to those you actually need.</p>   

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
