<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
    <title>OAuth2</title>
</head>
<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mn_icon.png"/> <img alt="Wearable native" src="../../images/wn_icon.png"/></p>
    </div>

    <div id="toc_border"><div id="toc">
        <p class="toc-title">Related Info</p>
        <ul class="toc">
		<li><a href="../../../../org.tizen.tutorials/html/native/oauth2/oauth2_tutorial_n.htm">OAuth2 Tutorial</a></li>
		<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__OAUTH2__MODULE.html">OAuth2 API for Mobile Native</a></li>
		<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__OAUTH2__MODULE.html">OAuth2 API for Wearable Native</a></li>
            </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
    
<h1>OAuth2</h1> 
  <p>The OAuth 2.0 authorization framework enables a 3<sup>rd</sup>-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the 3<sup>rd</sup>-party application to obtain access on its own behalf.</p> 
  
<p class="figure">Figure: Protocol flow</p> 
<p style="text-align: center;"> <img alt="Protocol flow" src="../../images/oauth2_protocol_flow.png" /></p> 
  
  
  <p>The OAuth 2.0 specification is defined in <a href="http://tools.ietf.org/html/rfc6749" target="_blank">[RFC 6749]</a> and it builds on the OAuth 1.0 <a href="http://tools.ietf.org/html/rfc5849" target="_blank">[RFC 5849]</a> deployment experience, as well as additional use cases and extensibility requirements gathered from the wider IETF community. The OAuth 2.0 protocol is not backward-compatible with OAuth 1.0.</p>
  
<h2 id="grant" name="grant">Authorization Grant</h2> 
  <p>An authorization grant is a credential representing the resource owner&#39;s authorization (to access its protected resources) used by the client to obtain an access token.</p>
<p>The specification defines the following 4 grant types as well as an extensibility mechanism for defining additional types:</p>

<ul><li>Authorization code
  <p>The <a href="../../../../org.tizen.tutorials/html/native/oauth2/oauth2_tutorials_n.htm#req_code">authorization code is obtained</a> by using an authorization server as an intermediary between the client and resource owner. Instead of requesting authorization directly from the resource owner, the client directs the resource owner to an authorization server, which in turn directs the resource owner back to the client with the authorization code.</p>

 <p>The authorization code provides some important security benefits, such as the ability to authenticate the client, as well as the transmission of the access token directly to the client without passing it through the resource owner&#39;s user-agent and potentially exposing it to others, including the resource owner.</p>
<p class="figure">Figure: Authorization code flow</p> 
<p style="text-align: center;"> <img alt="Authorization code flow" src="../../images/oauth2_auth_code.png" /></p>  
 </li>
   
<li>Implicit
  <p>In the implicit flow, the client is issued an access token directly (as a result of the resource owner authorization). The grant type is implicit, as no intermediate credentials (such as an authorization code) are issued.</p>

  <p>Implicit grants improve the responsiveness and efficiency of some clients (such as a client implemented as an in-browser application), since it reduces the number of round trips required to obtain an access token.</p>
<p class="figure">Figure: Implicit grant flow</p> 
<p style="text-align: center;"> <img alt="Implicit grant flow" src="../../images/oauth2_implicit.png" /></p> 
</li>
   
<li>Resource owner password credentials
  <p>The resource owner password credentials (such as username and password) can be used directly as an authorization grant to obtain an access token.</p>

  <p>Even though this grant type requires direct client access to the resource owner credentials, the resource owner credentials are used for a single request and are exchanged for an access token. This grant type can eliminate the need for the client to store the resource owner credentials for future use, by exchanging the credentials with a long-lived access token or refresh token.</p>
<p class="figure">Figure: Resource owner password credentials flow</p> 
<p style="text-align: center;"> <img alt="Resource owner password credentials flow" src="../../images/oauth2_password.png" /></p>  
</li>
   
<li>Client credentials
  <p>The client credentials can be used as an authorization grant when the authorization scope is limited to the protected resources under the control of the client, or to protected resources previously arranged with the authorization server. Client credentials are typically used as an authorization grant when the client is acting on its own behalf (the client is also the resource owner) or is requesting access to protected resources based on an authorization previously arranged with the authorization server.</p>
<p class="figure">Figure: Client credentials flow</p> 
<p style="text-align: center;"> <img alt="Client credentials flow" src="../../images/oauth2_client_credentials.png" /></p>    
</li></ul>
 
  <p>To request an access token for the implicit, resource owner password credentials, or client credentials grant type, follow the <a href="../../../../org.tizen.tutorials/html/native/oauth2/oauth2_tutorials_n.htm#direct_token">direct access token request instructions</a>.</p>
  
  <script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>
<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
