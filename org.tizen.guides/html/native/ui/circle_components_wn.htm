<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Circle Components</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Wearable native" src="../../images/wn_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#datetime">Circle Datetime</a></li>
			<li><a href="#genlist">Circle Genlist</a></li>
			<li><a href="#object">Circle Object</a></li>
			<li><a href="#progressbar">Circle Progressbar</a></li>
			<li><a href="#scroller">Circle Scroller</a></li>
			<li><a href="#slider">Circle Slider</a></li>
			<li><a href="#surface">Circle Surface</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.tutorials/html/native/ui/circle_components_tutorial_wn.htm">Circle Components Tutorial</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__MODULE.html">Efl Extension API for Wearable Native</a></li>	
			</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Circle Components</h1>

<p>Circle components extend the UI features and provide functionalities optimized for the circular UI.</p>

 <table class="note"> 
<tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">This feature is supported in wearable applications only.</td> 
    </tr> 
   </tbody> 
  </table>

<p>Generally, circle components can be added with the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_[component_name]_add()</span> function, which returns a circle object handle. Circle components are shown in a form of an arch with radius, line width, and color. These properties can be set with the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item*</span> APIs. The circle object can also take a rotary event. Generally, a clockwise rotary event increases the value of the rotary event activated by the circle object, and a counter clockwise rotary event decreases the value.</p>

<h2 id="datetime">Circle Datetime</h2>


<p class="figure">Figure: Circle Datetime</p> 
<p align="center"><img alt="Circle Datetime" src="../../images/circle_datetime.png" /></p> 

<p>The circle datetime extends <span style="font-family: Courier New,Courier,monospace">elm_datetime</span> by visualizing the selected field. If a rotary event is activated by <span style="font-family: Courier New,Courier,monospace">eext_rotary_object_event_activated_set()</span>, a circle datetime increases or decreases value of selected field in <span style="font-family: Courier New,Courier,monospace">elm_datetime</span> by the clockwise or counter clockwise rotary event.</p>

<h3>Creating a Circle Datetime</h3>

<p>You can use the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_datetime_add()</span> function to create a circle object. When creating a circle datetime, the <span style="font-family: Courier New,Courier,monospace">elm_datetime</span> handle must be passed as an argument. If a circle surface is passed as an argument, a circle object connected with a circle surface is created, and it is rendered by the circle surface. When <span style="font-family: Courier New,Courier,monospace">NULL</span> is passed as a surface argument, the new circle object is managed and rendered by itself.</p>
<pre class="prettyprint">
Evas_Object *datetime;
Evas_Object *circle_datetime;

datetime = elm_datetime_add(parent);
circle_datetime = eext_circle_object_datetime_add(datetime, surface);
</pre>

<h3>Activating a Rotary Event</h3>

<p>You can activate and deactivate the circle datetime by using the <span style="font-family: Courier New,Courier,monospace">eext_rotary_object_event_activated_set()</span> function. If the second parameter is <span style="font-family: Courier New,Courier,monospace">EINA_TRUE</span>, the circle datetime can receive the rotary event. Otherwise, the circle datetime cannot receive the rotary event.</p>
<pre class="prettyprint">
eext_rotary_object_event_activated_set(circle_datetime, EINA_TRUE);
</pre>

<h3>Using the Circle Object Property</h3>

<p>A circle datetime has the following styles:</p>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">default</span></li>
</ul>
<p>When created, the circle datetime has default style automatically.</p>

<p>The circle datetime objects support the following circle object API calls:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_set()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_get()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_set()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_get()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_set()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_get()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_set()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_get()</span></li>
</ul>
<p>A circle datetime has the following item:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">default</span>: Default circle item that draws a marker.</li>
</ul>

<p>You can change the properties of the items by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item*</span> APIs.</p> 
<p>For more information, see the <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__CIRCLE__DATETIME__MODULE.html">Efl Extension Circle Datetime</a> API.</p>

<h2 id="genlist">Circle Genlist</h2>

<p class="figure">Figure: Circle Genlist</p> 
<p align="center"><img alt="Circle Genlist" src="../../images/circle_genlist.png" /></p> 

<p>Use the circle genlist to visualize and utilize the scroll effect for <span style="font-family: Courier New,Courier,monospace">elm_genlist</span>. While <span style="font-family: Courier New,Courier,monospace">elm_genlist</span> provides a scrollbar with straight horizontal and vertical movement, the circle genlist provides scrollbar with circular movement. It is also operated with rotary events to move to the next or previous item.</p>

<h3>Creating a Circle Genlist</h3>

<p>A genlist and a surface are necessary when creating the circle genlist. The circle genlist is added with the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_genlist_add()</span> function.</p>
<pre class="prettyprint">
Evas_Object *genlist, *circle_genlist, *parent;

genlist = elm_genlist_add(parent);
circle_genlist = eext_circle_object_genlist_add(genlist, surface);
</pre>

<h3>Configuring the Circle Genlist</h3>

<p>You can set the circle genlist scroller policy by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_genlist_scroller_policy_set()</span> function.</p>
<pre class="prettyprint">
eext_circle_object_genlist_scroller_policy_set(circle_genlist, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELM_SCROLLER_POLICY_OFF, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELM_SCROLLER_POLICY_ON);
</pre>
<p>This sets the scrollbar visibility policy of a given scroller. <span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_AUTO</span> indicates the scrollbar is made visible if it is needed, and otherwise is kept hidden. <span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_ON</span> turns the scrollbar on all the time, and <span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_OFF</span> turns it off. This applies to the horizontal and vertical scrollbars respectively.</p>
<p>The following enum values are available for circle genlist.</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_AUTO</span></li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_ON</span></li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_OFF</span></li>
</ul>

<h3>Activating a Rotary Event</h3>

<p>You can activate and deactivate the circle genlist by using the <span style="font-family: Courier New,Courier,monospace">eext_rotary_object_event_activated_set()</span> function. If the second parameter is <span style="font-family: Courier New,Courier,monospace">EINA_TRUE</span>, the circle genlist can receive the rotary event. Otherwise, the circle genlist cannot receive the rotary event.</p>
<pre class="prettyprint">
eext_rotary_object_event_activated_set(circle_genlist, EINA_TRUE);
</pre>

<h3>Using the Circle Object Property</h3>

<p>Circle genlist objects support the following circle object API calls:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_set()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_get()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_set()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_get()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_set()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_get()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_set()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_get()</span></li>
</ul>
<p>A circle genlist has the following item:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">default</span>: Default circle item. It draws vertical scroll bar.</li>
<li><span style="font-family: Courier New,Courier,monospace">vertical,scroll,bg</span>: Vertical scroll background circle item.</li>
</ul>
<p>You can change the properties of the items by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item*</span> APIs.</p>
<p>For more information, see the <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__CIRCLE__GENLIST__MODULE.html">Efl Extension Circle Genlist</a> API.</p>



<h2 id="object">Circle Object</h2>

<p>A circle object extends elementary components in a form of circular design. Sometimes, a circle object merely provides additional UI features to elementary component, and sometimes it works as an independent component with UI and functionalities.</p>

<h3>Creating a Circle Object</h3>

<p>You can use the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_add()</span> function to create a circle object. When creating a circle object, you can choose whether the circle object is rendered by itself or by the circle surface. If the circle surface is passed as an argument, a circle object connected with circle surface is created, and it is rendered by the circle surface.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
</pre>

<p>When <span style="font-family: Courier New,Courier,monospace">NULL</span> is passed as a surface argument, the new circle object is managed and rendered by itself. Here, a circle object without a circle surface is created and showed in a size of 360 x 360.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, NULL);
evas_object_size_hint_min_set(circle_obj, 360, 360);
evas_object_show(circle_obj);
</pre>

<h3>Setting the Line Width</h3>

<p>You can set the line width of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_set()</span> function. Here, circle object with a surface is created and its line width set to 20. You can get the current line width of a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_line_width_set(circle_obj, 20);
</pre>

<p>You can set the line width of a certain item in a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_line_width_set()</span> function. If the name of the item is passed as <span style="font-family: Courier New,Courier,monospace">default</span>, it works the same way as the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_set()</span> function. Similar to the above example, a circle object with a surface is created and its line width is set to 20. You can get the current line width of the item by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_line_width_get()</span> function.</p>
<pre class="prettyprint">Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_item_line_width_set(circle_obj, &quot;default&quot;, 20);
</pre>

<h3>Setting the Angle</h3>

<p>You can set the angle of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_set()</span> function. Here, circle object with surface is created and its angle set to a 45.0 degree angle. You can get the current angle of a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_angle_set(circle_obj, 45.0);
</pre>

<p>You can set the angle of a certain item in a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_angle_set()</span> function. If name of the item is passed as <span style="font-family: Courier New,Courier,monospace">default</span>, it works the same way as <span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_set()</span> function. Similar to the above example, a circle object with surface is created and its angle is set to a 45.0 degree angle. You can get the current angle of the item by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_angle_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_item_angle_set(circle_obj, &quot;default&quot;, 45.0);
</pre>

<h3>Setting the Angle Offset</h3>

<p>You can set the angle offset of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_offset_set()</span> function. Here, a circle object with a 45.0 degree angle is created and its angle offset set to 30.0 degrees. As a result, the circle object has an arch of 45.0 degree angle line starting from 30.0 degrees to 75.0 degrees. You can get the current angle offset of a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_offset_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_angle_set(circle_obj, 45.0);
eext_circle_object_angle_offset_set(circle_obj, 30.0);
</pre>

<p>You can set the angle offset of a certain item in a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_angle_offset_set()</span> function. If name of the item is passed as <span style="font-family: Courier New,Courier,monospace">default</span>, it works the same way as <span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_offset_set()</span> function. The following code works the same way as in the above example. You can get the current angle of the item by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_angle_offset_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_item_angle_set(circle_obj, &quot;default&quot;, 45.0); 
eext_circle_object_item_angle_offset_set(circle_obj, &quot;default&quot;, 30.0);
</pre>

<h3>Setting the Minimum and Maximum Angle</h3>

<p>You can set the minimum and maximum angle of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_min_max_set()</span> function. Here, a circle object with a surface is created and its minimum angle set to 0.0 degrees and maximum angle to 90.0 degrees. You can get the current minimum and maximum angle of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_min_max_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_angle_min_max_set(circle_obj, 0.0, 90.0);
</pre>

<p>You can set the minimum and maximum angles of a certain item in a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_angle_min_max_set()</span> function. If name of the item is passed as <span style="font-family: Courier New,Courier,monospace">default</span>, it works the same way as the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_min_max_set()</span> function. Similar to the above example, a circle object with a minimum and maximum angles of 0.0 and 90.0 is created. You can get the current minimum and maximum angle of the item by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_angle_min_max_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_item_angle_min_max_set(circle_obj, &quot;default&quot;, 0.0, 90.0);
</pre> 

<h3>Setting the Minimum and Maximum Value</h3>

<p>You can set the minimum and maximum values of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_set()</span> function. Here, a circle object with a surface is created and its minimum value is set to 0.0 degrees and maximum value to 10.0 degrees. You can get the current minimum and maximum value of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_value_min_max_set(circle_obj, 0.0, 10.0);
</pre>

<p>You can set the value of a certain item in a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_angle_min_max_set()</span> function. If name of the item is passed as <span style="font-family: Courier New,Courier,monospace">default</span>, it works the same way as the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_set()</span> function. Similar to the above example, a circle object with a minimum and maximum value of 0.0 to 10.0 degrees is created. You can get the current minimum and maximum values of the item by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_value_min_max_get()</span> function.</p>
<pre class="prettyprint"> 
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_item_value_min_max_set(circle_obj, &quot;default&quot;, 0.0, 10.0);
</pre>

<h3>Setting the Value</h3>

<p>You can set the value of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_set()</span> function. Here, a circle object with a surface is created and its value set to 5.0. You can get the current value of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_value_set(circle_obj, 5.0);
</pre>

<p>You can set the value of a certain item in a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_value_set()</span> function. If name of the item is passed as <span style="font-family: Courier New,Courier,monospace">default</span>, it works the same as the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_set()</span> function. Similar to the above example, a circle object with a surface is created and its value is set to 5.0 degree angle. You can get the current value of the item by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_value_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_item_value_set(circle_obj, &quot;default&quot;, 5.0);
</pre>

<table class="note"> 
<tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">The value cannot be lower than the minimum value or higher than the maximum value.</td> 
    </tr> 
   </tbody> 
  </table>  

<h3>Setting the Color</h3>

<p>You can set the color of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_set()</span> function. To set the color, red, green, blue, and alpha values in range from 0 to 255 must  be passed. Here, a circle object with a surface is created and its color set to blue. You can get the current color of circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_color_set(circle_obj, 255, 0, 0, 255);
</pre>

<p>You can set the color of a certain item in a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_color_set()</span> function. If name of the item is passed as <span style="font-family: Courier New,Courier,monospace">default</span>, it works the same way as the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_set()</span> function. Similar to the above example, a circle object with a surface is created and its color is set to red. You can get the current color of the item by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_color_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_item_value_set(circle_obj, &quot;default&quot;, 255, 0, 0, 255);
</pre>

<h3>Setting the Radius</h3> 

<p>You can set the radius of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_set()</span> function. Here, a circle object with radius of 50.0 is created. You can get the current radius of the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_radius_set(circle_obj, 50.0);
</pre>

<p>You can set the radius of a certain item in a circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_radius_set()</span> function. If name of the item is passed as <span style="font-family: Courier New,Courier,monospace">default</span>, it works the same way as the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_set()</span> function. Similar to the above example, a circle object with a radius of 50.0 is created. You can get the current radius of the item by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item_radius_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_item_radius_set(circle_obj, &quot;default&quot;, 50.0);
</pre>

<h3>Disabling a Circle Object</h3>

<p>You can disable the circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_set()</span> function. Here, a circle object is disabled. You can get the current disabled status of circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_get()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_obj;

circle_obj = eext_circle_object_add(parent, surface);
eext_circle_object_disabled_set(circle_obj, EINA_TRUE);
</pre>

<p>You can enable a disabled circle object by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_set()</span> function with <span style="font-family: Courier New,Courier,monospace">EINA_FALSE</span> argument.</p>
<pre class="prettyprint">
eext_circle_object_disabled_set(circle_obj, EINA_FALSE);
</pre>




<h2 id="progressbar">Circle Progressbar</h2>

<p class="figure">Figure: Circle Progressbar</p> 
<p align="center"><img alt="Circle Progressbar" src="../../images/circle_progressbar.png" /></p> 

<p>The circle progressbar aims to show the progress status of a given task with circular design. It visualizes the progress status within a range.</p>

<h3>Creating a Circle Progressbar</h3>

<p>You can create the circle progressbar by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_progressbar_add()</span> function. When creating the circle progressbar, a surface is necessary to render on the surface.</p>
<pre class="prettyprint">
Evas_Object *circle_progressbar, *parent;
circle_progressbar = eext_circle_object_progressbar_add(parent, surface);
</pre>

<h3>Using the Circle Object Property</h3>
<p>Circle progressbar supports the following circle object API calls:</p>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_min_max_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_min_max_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_offset_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_offset_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_get()</span></li>
</ul>
<p>A circle progressbar has the following items:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">default</span>: Default circle item that draws the progressbar.</li>
<li><span style="font-family: Courier New,Courier,monospace">bg</span>: Progress bar background circle item.</li>
</ul>
<p>You can change the properties of the items by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item*</span> APIs.</p>
<p>For more information, see the <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__CIRCLE__PROGRESSBAR__MODULE.html">Efl Extension Circle Progressbar</a> API.</p>

<h3>Configuring Circle Progressbar</h3>

<p>Before using the circle progressbar, its minimum and maximum values are set with the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_set()</span> function. The current value is set with <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_set()</span>.</p>
<p>Here, the minimum value is set to 0.0, the maximum value to 100.0, and the current value to 3.0.</p>
<pre class="prettyprint">
eext_circle_object_value_min_max_set(circle_progressbar, 0.0, 100.0);
eext_circle_object_value_set(circle_progressbar, 3.0);
</pre>

<h2 id="scroller">Circle Scroller</h2> 

<p class="figure">Figure: Circle Scroller</p> 
<p align="center"><img alt="Circle Scroller" src="../../images/circle_scroller.png" /></p> 

<p>The circle scroller changes corresponding to the rotary events. It shows the whole scrollable area with a circular scroll bar. It wraps the <span style="font-family: Courier New,Courier,monospace">elm_scroller</span> internally only to draw a circular scroll bar to the edge of the circular screen. This means you can use <span style="font-family: Courier New,Courier,monospace">elm_scroller</span> callbacks and APIs excluding <span style="font-family: Courier New,Courier,monospace">elm_scroller_policy_set()</span> and <span style="font-family: Courier New,Courier,monospace">elm_scroller_policy_get()</span> APIs.</p>

<h3>Creating a Circle Scroller</h3> 

<p>To create a circle scroller, use the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_scroller_add()</span> function. <span style="font-family: Courier New,Courier,monospace">elm_scroller</span> has to be passed by the first parameter of this function.</p>
<pre class="prettyprint">
Evas_Object *scroller;
Evas_Object *circle_scroller;

scroller = elm_scroller_add(parent);
circle_scroller = eext_circle_object_scroller_add(scroller, surface);
</pre>

<h3>Activating the Rotary Event</h3>

<p>You can activate and deactivate the circle scroller by using the <span style="font-family: Courier New,Courier,monospace">eext_rotary_object_event_activated_set()</span> function. If the second parameter is <span style="font-family: Courier New,Courier,monospace">EINA_TRUE</span>, the circle scroller can receive the rotary event. Otherwise, the circle scroller cannot receive the rotary event.</p>
<pre class="prettyprint">
eext_rotary_object_event_activated_set(circle_scroller, EINA_TRUE);
</pre>

<h3>Using the Circle Object Property</h3>

<p>A circle scroller has the following styles:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">default</span></li>
</ul>
<p>When created, the circle scroller has default style automatically.</p>

<p>Circle scroller objects support the following circle object API calls:</p>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_get()</span></li>
</ul>
<p>A circle slider has the following items:</p>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">default</span>: Default circle item that draws the vertical scroll bar.</li>
	<li><span style="font-family: Courier New,Courier,monospace">vertical,scroll,bg</span>: Vertical scroll background circle item.</li>
	<li><span style="font-family: Courier New,Courier,monospace">horizontal,scroll,bar</span>: Horizontal scroll bar circle item.</li>
	<li><span style="font-family: Courier New,Courier,monospace">horizontal,scroll,bg</span> : Horizontal scroll background circle item.</li>
</ul>
<p>You can change the properties of the items by using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item*</span> APIs.</p>
<p>For more information, see the <a href="../../../..//org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__CIRCLE__SCROLLER__MODULE.html">Efl Extension Circle Scroller</a> API.</p>

<h3>Configuring the Circle Scroller</h3>

<p>You can use <span style="font-family: Courier New,Courier,monospace">elm_scroller</span> APIs to configure a circle scroller, except <span style="font-family: Courier New,Courier,monospace">elm_scroller_policy_set()</span> and <span style="font-family: Courier New,Courier,monospace">elm_scroller_policy_get()</span> APIs.</p>
<p>Instead of excluded APIs, <span style="font-family: Courier New,Courier,monospace">eext_circle_object_scroller_policy_set()</span> and <span style="font-family: Courier New,Courier,monospace">eext_circle_object_scroller_policy_get()</span> functions are provided for the circle scroller.</p>
<p>A policy parameter has the following value.</p>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_AUTO</span>: indicates the scrollbar is made visible if it is needed, and otherwise is kept hidden.</li>
	<li><span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_ON</span>: Turns the scrollbar on all the time.</li>
	<li><span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_OFF</span>: Turns the scrollbar off. This applies to the horizontal and vertical scrollbars respectively.</li>
</ul>
<p>The following example shows how to set the scroll bar visibility policy to <span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_AUTO</span> for horizontal scroll bar and <span style="font-family: Courier New,Courier,monospace">ELM_SCROLLER_POLICY_OFF</span> for vertical scroll bar.</p>
<pre class="prettyprint">
eext_circle_object_scroller_policy_set(circle_scroller, ELM_SCROLLER_POLICY_AUTO, ELM_SCROLLER_POLICY_OFF);
</pre>

<h2 id="slider">Circle Slider</h2> 

<p class="figure">Figure: Circle Slider</p> 
<p align="center"><img alt="Circle Slider" src="../../images/circle_slider.png" /></p> 
 
<p>The circle slider changes corresponding to rotary events. The circle slider not only extends the UI feature of the <span style="font-family: Courier New,Courier,monospace">elm_slider</span>, but also replaces the functionalities of the <span style="font-family: Courier New,Courier,monospace">elm_slider</span> in a circular design.</p>

<h3>Adding an Eext Slider object</h3>

<p>To create a circle slider, use the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_slider_add()</span> function.</p>
<pre class="prettyprint">
Evas_Object *circle_slider = NULL;
circle_slider = eext_circle_object_slider_add(parent, surface);
</pre>

<h3>Activating the Rotary Event</h3>

<p>You can activate or deactivate the circle slider by using the <span style="font-family: Courier New,Courier,monospace">eext_rotary_object_event_activated_set()</span> function. If the second parameter is <span style="font-family: Courier New,Courier,monospace">EINA_TRUE</span>, the circle slider can receive the rotary event. Otherwise, the circle slider cannot receive the rotary event.</p>
<pre class="prettyprint">
eext_rotary_object_event_activated_set(circle_slider, EINA_TRUE);
</pre>

<h3>Using the Circle Slider Property</h3>

<p>A circle slider has the following styles:</p>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">default</span></li>
</ul>

<p>When created, the circle slider has default style automatically.</p>
<p>Circle slider objects support the following circle object API calls:</p>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_min_max_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_min_max_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_offset_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_offset_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_angle_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_line_width_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_radius_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_color_get()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_set()</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">eext_circle_object_disabled_get()</span></li>
</ul>
<p>A circle slider has the following items:</p>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">default</span>: Default circle item, It draws slider bar.</li>
	<li><span style="font-family: Courier New,Courier,monospace">bg</span>: Background circle item.</li>
</ul>
<p>You can change the properties of the items by using <span style="font-family: Courier New,Courier,monospace">eext_circle_object_item*</span> APIs.</p>
<p>For more information, see the <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__CIRCLE__SLIDER__MODULE.html">Efl Extension Circle Slider</a> API.</p>

<h3>Configuring the Circle Slider</h3>

<p>The circle slider step value is used when the rotary event increases or decreases the circle slider value. It can be set with the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_slider_step_set()</span> function.</p>
<p>Here, the step value is set to 0.5.</p>
<pre class="prettyprint">
eext_circle_object_slider_step_set(circle_slider, 0.5);
</pre>
<p>Before using the circle slider, its minimum and maximum values are set with <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_set()</span>. The current value is set with <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_set()</span>.</p>
<p>Here, the minimum value is set to 0.0, the maximum value to 15.0, and the current value to 3.0.</p>
<pre class="prettyprint">
eext_circle_object_value_min_max_set(circle_slider, 0.0, 15.0);
eext_circle_object_value_set(circle_slider, 3.0);
</pre>
<p>You can retrieve the current value of the circle slider with the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_get()</span> function.</p>
<pre class="prettyprint">
double value = eext_circle_object_value_get(circle_slider);
</pre>

<h3>Using Circle Slider Callbacks</h3>

<p>The circle slider emits the following signal:</p>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">value,changed</span>: The rotary event changes the circle slider value.</li>
</ul>
<p>For this signal, <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p>
<p>This is how to register a callback on the <span style="font-family: Courier New,Courier,monospace">value,changed</span> signal.</p>
<pre class="prettyprint">
{
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(slider, &quot;value,changed&quot;, _value_changed_cb, data);
}

// Callback function for the &quot;value,changed&quot; signal
// This callback is called when a value of the circle slider is changed
static void
_value_changed_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Circle slider value changed. \n&quot;);
}
</pre>

<h2 id="surface">Circle Surface</h2>

<p>The circle surface manages and renders circle objects. Multiple circle objects can be connected to one circle surface as candidates of an object to be rendered. When one of circle objects is set as visible, the surface renders the circle object and hides the others.</p> 

<h3>Creating a Circle Surface</h3>

<p>To create a new circle surface:</p>
<pre class="prettyprint">
Eext_Circle_Surface *surface;
Evas_Object *conformant;

conformant = elm_conformant_add(parent);
surface = eext_circle_surface_conformant_add(conformant);
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">eext_circle_surface_conformant_add()</span> function creates a circle surface in the conformant layer. If you want to create a circle surface in the layout layer, use the <span style="font-family: Courier New,Courier,monospace">eext_circle_surface_layout_add()</span> function:</p>
<pre class="prettyprint">
Eext_Circle_Surface *surface;
Evas_Object *layout;

layout = elm_layout_add(parent);
surface = eext_circle_surface_layout_add(layout); 
</pre>

<p>If you want to create a circle surface in the naviframe layer, use the <span style="font-family: Courier New,Courier,monospace">eext_circle_surface_naviframe_add()</span> function:</p>
<pre class="prettyprint">
Eext_Circle_Surface *surface;
Evas_Object *naviframe;

naviframe = elm_naviframe_add(parent);
surface = eext_circle_surface_naviframe_add(naviframe); 
</pre>

<table class="note"> 
<tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">A circle surface is a non-graphical object. It adds no graphics to or around the objects it holds.</td> 
    </tr> 
   </tbody> 
  </table>  

<h3>Adding Circle Objects to the Circle Surface</h3>

<p>You can add any circle object to a circle surface. The following example shows how to create an <span style="font-family: Courier New,Courier,monospace">eext_slider</span> component and add it to a circle surface in conformant layer:</p>
<pre class="prettyprint">
Eext_Circle_Surface *surface;
Evas_Object *slider;

surface = eext_circle_surface_conformant_add(conformant);
slider = eext_circle_object_slider_add(parent, surface);
</pre>

<h3>Deleting Circle Surface</h3>

<p>Deleting an Evas object automatically deletes the circle surface in the same layer. However, you can explicitly use the <span style="font-family: Courier New,Courier,monospace">eext_circle_surface_del()</span> function to delete a circle surface.</p>
<pre class="prettyprint">
eext_circle_surface_del(surface);
</pre>

<table class="note"> 
<tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">The <span style="font-family: Courier New,Courier,monospace">eext_circle_surface_del()</span> function does not delete the connected circle objects.</td> 
    </tr> 
   </tbody> 
  </table>  
  
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>