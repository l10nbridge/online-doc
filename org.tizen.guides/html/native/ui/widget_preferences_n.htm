<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Widget Preferences</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mn_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
	<p class="toc-title">Content</p>
		<ul class="toc">
				<li><a href="#customize">Customizing Widgets</a></li>
				<li><a href="#focus">Managing Widget Focus</a></li>
				<li><a href="#style">Using Widget Styles</a></li>	
				</ul>	
	<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.tutorials/html/native/ui/ui_control_tutorials_n.htm">UI Control Tutorials</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

  <h1>Widget Preferences</h1> 
  
  <h2 id="customize" name="customize">Customizing Widgets</h2> 


<p>Elementary widgets use the Edje library EDC themes to manage their look.</p>

<h3 id="elm_theme" name="elm_theme">Elementary Theme</h3>

<p>An Elementary theme is an Edje EDC file that contains groups composed of parts and programs. For more information about Edje, refer to the <a href="edje_n.htm">Edje</a> guide.</p>

<h4 id="use_theme_styles" name="use_theme_styles">Use Theme Styles</h4>

<p>Elementary widgets provide a way to modify only some parts of the styles using the default theme. A style is a part of the EDC theme (a group) that concerns only one widget. For example, you can create a new style for a button widget to change its appearance without modifying the default theme.</p>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">When creating a new style, knowledge of how each widget is themed is required, because setting another style always replaces the entire group used by the widget. Important signals and parts must be there for the object to behave properly.</td> 
    </tr> 
   </tbody> 
  </table> 

<p>When several styles are loaded in the current theme, you can set a different style to a specific widget using the <span style="font-family: Courier New,Courier,monospace">elm_object_style_set()</span> function. It is also possible to see the current style with the <span style="font-family: Courier New,Courier,monospace">elm_object_style_get()</span> function.</p>

<p>The default theme specifies several styles for the button widget. The code below shows how to set the &quot;anchor&quot; style of a newly created button widget.</p>

<pre class="prettyprint">
Evas_Object *parent, *button;

// Create a button object 
button = elm_button_add(parent);

// Set its style to &quot;anchor"&quot;
elm_object_style_set(button, &quot;anchor&quot;);
</pre>

<h4 id="load_theme_styles" name="load_theme_styles">Load Theme Styles</h4>

<p>Once written and compiled with Edje tools, the Elementary provides two methods to load the style in the application theme:</p>
  <ul>
   <li>overlays</li>
   <li>extensions</li>
  </ul>

<p>When looking for a theme, the Elementary checks the list of overlays, if any are defined. Then it takes the default theme, and if it cannot find a theme for the widget, it looks at the extensions list.</p>

<h5 id="overlay_chapter" name="overlay_chapter">Overlay</h5>

<p>An overlay can replace the look of all widgets by overriding the default style. If we create a new style called &quot;default&quot; for the button widget and add it as an overlay, the Elementary uses the overlay for all button widgets overriding the default theme.</p>

<p>Here is how to add an overlay to your application&#39;s theme.</p>

<pre class="prettyprint">
elm_theme_overlay_add(NULL, &quot;./theme_button.edj&quot;);
</pre>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">Here we assume that the &quot;theme_button.edj&quot; file only contains a new theme for the button widget.</td> 
    </tr> 
   </tbody> 
  </table> 

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">Doing this is not recommended. Adding a file as an overlay makes the Elementary use the new theme for all the button widgets defined in the application. You must make sure that the &quot;theme_button.edj&quot; file reimplements everything that was previously defined in the default theme concerning the button widget.</td> 
    </tr> 
   </tbody> 
  </table>  

<p>This is how to remove the previously added overlay to return to the default theme.</p>

<pre class="prettyprint">
elm_theme_overlay_del(NULL, &quot;./theme_button.edj&quot;);
</pre>

<h5 id="extension" name="extension">Extension</h5>

<p>With extensions, we can write styles that we can apply to some widgets (not all of them) by using the <span style="font-family: Courier New,Courier,monospace">elm_object_style_set()</span> function.</p>

<p>The application adds a theme to the list of extensions with the following call.</p>

<pre class="prettyprint">
elm_theme_extension_add(NULL, &quot;./theme_button_style_custom.edj&quot;);
</pre>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">Here we assume that the &quot;theme_button_style_custom.edj&quot; file contains a new button style called &quot;custom&quot;.</td> 
    </tr> 
   </tbody> 
  </table> 

<p>This is how to use the new &quot;custom&quot; style on a button widget.</p>

<pre class="prettyprint">
Evas_Object *parent, *button;

// Create a button object 
button = elm_button_add(parent);

// Set its style to &quot;custom&quot; 
elm_object_style_set(button, &quot;custom&quot;);
</pre>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">When using <span style="font-family: Courier New,Courier,monospace">elm_theme_extension_add</span> or <span style="font-family: Courier New,Courier,monospace">elm_theme_overlay_add</span> to add a new theme extension or overlay to a Theme object (here called the default theme), the Elementary calls the <span style="font-family: Courier New,Courier,monospace">elm_theme_flush</span> function to flush Elementary theme caches. Thus, the theme of all widgets that use the default theme is reloaded.</td> 
    </tr> 
   </tbody> 
  </table> 

<h4 id="create_new_theme" name="create_new_theme">Create a New Theme</h4>

<p>This is how to create a new theme object.</p>

<pre class="prettyprint">
Elm_Theme *new_theme = elm_theme_new();
</pre>

<p>This function creates an empty specific theme that only uses the default theme. It has its own private set of extensions and overlays (which are empty by default). Specific themes do not fall back to the themes of parent objects. They are not intended for this use.</p>

<p>This is how to apply this theme to a widget and its children (a button, for example).</p>

<pre class="prettyprint">
// Create a button widget 
Evas_Object *button = elm_button_add();

// Set the new theme to the button widget 
elm_object_theme_set(button, new_theme);
</pre>

<h3 id="customizing_widget_style" name="customizing_widget_style">Customizing a Widget Style</h3>

<p>Widget themes are written in Edje EDC source files (.edc). These files are compiled with Edje tools to make an .edj file that is used by the application. For more information on using the EDC language, see the <a href="edje_n.htm">Edje</a> guide.</p>

<p>A new Edje style can be added for a widget. The best way is to copy the existing &quot;default&quot; style, rename it, and update it to your needs.</p>

<h4 id="check_widget_custom_style" name="check_widget_custom_style">Create a Customized Style for the Check Widget</h4>

<p>As an example, we show how to create a new style for the <span style="font-family: Courier New,Courier,monospace">check</span> widget. The aim is to update the background and the main pictures of this widget with custom pictures.</p>

<p>The EDC source file concerning the check widget (check.edc file) is composed of several groups.</p>

<pre class="prettyprint">
group 
{
&nbsp;&nbsp;&nbsp;name: &quot;elm/check/base/default&quot;;
}

group 
{
&nbsp;&nbsp;&nbsp;name: &quot;elm/check/base/toggle&quot;;
}
</pre>

<p>Those two groups define two different styles for the check widget (the &quot;default&quot; style and the &quot;toggle&quot; style).</p>

<p>We copy the group corresponding to the &quot;default&quot; style in a new file to create a new style called &quot;custom&quot;. This new style is saved in the &quot;check_custom.edc&quot; file.</p>

<pre class="prettyprint">
group 
{
&nbsp;&nbsp;&nbsp;name: &quot;elm/check/base/custom&quot;;
&nbsp;&nbsp;&nbsp;// Here is the copy of the content of &quot;default&quot; style 
}
</pre>

<p>In the new group (&quot;elm/check/base/custom&quot;), we have to find the parts we want to modify. Here, the appropriate parts are &quot;bg&quot; and &quot;check&quot; parts.</p>

<pre class="prettyprint">
part 
{
&nbsp;&nbsp;&nbsp;name: &quot;bg&quot;;
&nbsp;&nbsp;&nbsp;mouse_events: 0;
&nbsp;&nbsp;&nbsp;scale: 1;
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1.offset: 1 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2.relative: 0.0 1.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2.offset: 1 -2;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;align: 0.0 0.5;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min: 16 16;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max: 16 16;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aspect: 1.0 1.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aspect_preference: VERTICAL;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;normal: &quot;check_base.png&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;border: 5 5 5 5;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle: 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill.smooth: 0;
&nbsp;&nbsp;&nbsp;}
}
part 
{
&nbsp;&nbsp;&nbsp;name: &quot;check&quot;;
&nbsp;&nbsp;&nbsp;mouse_events: 0;
&nbsp;&nbsp;&nbsp;scale: 1;
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &quot;bg&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;offset: 1 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &quot;bg&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;offset: -2 -2;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 255 255 255 255;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image.normal: &quot;check.png&quot;;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;visible&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherit: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 1;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;disabled&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherit: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 128 128 128 128;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;disabled_visible&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherit: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 128 128 128 128;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 1;
&nbsp;&nbsp;&nbsp;}
}
</pre>

<p>We do not detail all the options that can be modified here, but assume that the user is familiar with <a href="edje_n.htm">Edje</a> and knows Edje basics.</p>

<p>Our custom pictures filenames are:</p>
  <ul>
   <li>check_base_custom.png for the bg part</li>
   <li>check_custom.png for the check part</li></ul>

<p>We must update the image.normal attribute in both parts with our custom pictures filenames to modify the pictures of this style.</p>

<pre class="prettyprint">
part 
{
&nbsp;&nbsp;&nbsp;name: &quot;bg&quot;;   
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;default&quot; 0.0;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;normal: &quot;check_base_custom.png&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;border: 5 5 5 5;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle: 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
                
&nbsp;&nbsp;&nbsp;}
}
part 
{
&nbsp;&nbsp;&nbsp;name: &quot;check&quot;;
        
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;default&quot; 0.0;
            
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image.normal: &quot;check_custom.png&quot;;
&nbsp;&nbsp;&nbsp;}
        
}
</pre>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">Here, we assume that the custom images are the same size as the &quot;default&quot; images.</td> 
    </tr> 
   </tbody> 
  </table> 

<h4 id="add_theme_to_project" name="add_theme_to_project">Add the Theme File to Your Project</h4>

<p>Once written, the check_custom.edc file is put in the <span style="font-family: Courier New,Courier,monospace">/res/edje/</span>. directory of the application project in the SDK.</p>

<p>When building the application, the SDK calls the Edje tools automatically to build the final <span style="font-family: Courier New,Courier,monospace">check_custom.edj</span> file. This file can be loaded from our application.</p>

<h4 id="use_new_style" name="use_new_style">Use the New Style</h4>

<p>This is how to add the new theme file as an extension in the application.</p>

<pre class="prettyprint">
char edj_path[PATH_MAX] = {0, };

// Get the full path of the edj file 
app_get_resource(&quot;/edje/check_custom.edj&quot;, edj_path, (int)PATH_MAX);

// Load check custom style as an extension 
elm_theme_extension_add(NULL, edj_path);
</pre>

<p>Use the &quot;custom&quot; style on a new check widget.</p>

<pre class="prettyprint">
Evas_Object *parent, *check;

// Create a check object 
check = elm_check_add(parent);

// Set its style to &quot;custom&quot; 
elm_object_style_set(check, &quot;custom&quot;);
</pre>

<h4 id="special_theme_parts" name="special_theme_parts">Special Theme Parts</h4>

<p>Some parts of the EDC file can be interacted with the Elementary. The content of parts of the type <span style="font-family: Courier New,Courier,monospace">TEXT</span> are modified using the <span style="font-family: Courier New,Courier,monospace">elm_object_part_set_text()</span> function. The content of <span style="font-family: Courier New,Courier,monospace">SWALLOW</span> parts is updated using the <span style="font-family: Courier New,Courier,monospace">elm_object_part_content_set()</span> function.</p>

<h5 id="swallow_parts" name="swallow_parts">Swallow Parts</h5>

<p>In the previous example (the check widget &quot;default&quot; style), there is a part called &quot;elm.swallow.content&quot; that is of the type <span style="font-family: Courier New,Courier,monospace">SWALLOW</span>.</p>

<pre class="prettyprint">
part 
{
&nbsp;&nbsp;&nbsp;name: &quot;elm.swallow.content&quot;;
&nbsp;&nbsp;&nbsp;type: SWALLOW;
&nbsp;&nbsp;&nbsp;scale: 1;
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fixed: 1 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;align: 0.0 0.5;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1.to_x: &quot;bg&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1.relative: 1.0 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1.offset: 1 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2.to_x: &quot;bg&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2.offset: 1 -2;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2.relative: 1.0 1.0;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;description
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;visible&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherit: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fixed: 1 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aspect: 1.0 1.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min: 16 16;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;disabled&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherit: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 255 255 255 128;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;disabled_visible&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherit: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 255 255 255 128;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fixed: 1 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aspect: 1.0 1.0;
&nbsp;&nbsp;&nbsp;}
}
</pre>

<p>We can push content (Evas_Object) to this part from the application anytime. The size and position of the content pushed is controlled by the EDC theme.</p>

<pre class="prettyprint">
Evas_Object *parent, *check1, *content;

// Create a check object 
check1 = elm_check_add(parent);

// Set the content of the check object 
elm_object_part_content_set(check1, &quot;elm.swallow.content&quot;, content);
</pre>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">We can add new <span style="font-family: Courier New,Courier,monospace">SWALLOW</span> parts when customizing a widget&#39;s style, if we want to be able to control more content from the application. Note that removing existing <span style="font-family: Courier New,Courier,monospace">SWALLOW</span> parts changes the widget&#39;s behavior.</td> 
    </tr> 
   </tbody> 
  </table> 

<h5 id="text_parts" name="text_parts">Text Parts</h5>

<p>The same is done with parts of the type <span style="font-family: Courier New,Courier,monospace">TEXT</span>. The check &quot;default&quot; style contains a part named &quot;elm.text&quot;.</p>

<pre class="prettyprint">
part 
{
&nbsp;&nbsp;&nbsp;name: &quot;elm.text&quot;;
&nbsp;&nbsp;&nbsp;type: TEXT;
&nbsp;&nbsp;&nbsp;mouse_events: 0;
&nbsp;&nbsp;&nbsp;scale: 1;
&nbsp;&nbsp;&nbsp;description
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1.to_x: &quot;elm.swallow.content&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1.relative: 1.0 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1.offset: 1 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2.relative: 1.0 1.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2.offset: -2 -2;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 0 0 0 255;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;font: &quot;Sans,Edje-Vera&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size: 10;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min: 0 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;align: -1.0 0.5;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;description
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;visible&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherit: "default" 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text.min: 1 1;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;disabled&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherit: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 0 0 0 128;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color3: 0 0 0 0;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;description
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;disabled_visible&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherit: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 0 0 0 128;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color3: 0 0 0 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible: 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text.min: 1 1;
&nbsp;&nbsp;&nbsp;}
}
</pre>

<p>This is how to modify the content of the &quot;elm.text&quot; part from the application. The position of the text, its size, color, look and feel are managed by the EDC theme.</p>

<pre class="prettyprint">
Evas_Object *parent, *check2;

// Create a check object 
check2 = elm_check_add(parent);

// Set the text of the check object 
elm_object_part_text_set(check2, &quot;elm.text&quot;, &quot;Test text&quot;);
</pre>
  
   <h2 id="focus" name="focus">Managing Widget Focus</h2>
  
<h3 id="Presentation" name="Presentation">Focus Presentation</h3>

<h4>Concept of Focus</h4>
<p>Focus is a graphical user interface concept. A component, for example, a widget, has a focus when it is selected to receive input from the user. The input can be an event, such as mouse button click or key press.</p>

<h4>Giving Focus</h4>

<p>Focusing can be immediate (selected by the touchscreen or mouse) or relative (selected by a key press).</p>

<p>There are mainly two ways to set focus on a graphical elements:</p>

<ul>
<li>Direct selection: this is done by clicking on the element.</li>
<li>Relative selection: this is done by moving the selection from a widget to another, such as going to the previous or next one; this is done with a keyboard.</li>
</ul>

<p>Direct selection does not really need any kind of special treatment as the user explicitly selects the widget to interact with.</p>

<p>Relative selection&#39; default order is the one the widgets have been added to the canvas. That may not be appropriate, if they are added programmatically in different order than they appear on-screen.</p>
  
<h3 id="Movement" name="Movement">Moving Focus</h3>

<h4>Concept of Focus Chain</h4>
<p>The order the focus goes from a widget to another is called the focus chain. As said before, the default focus chain is set to the order the widgets have been added to the canvas.</p>

<h4>Focusable Objects</h4>
<p>An object can be focused if the following conditions apply:</p>

<ul>
<li>object is visible</li>
<li>object is enabled</li>
<li>object accepts focus</li>
<li>object&#39;s subtree (if any) is focusable</li>
<li>all of object&#39;s parents have their subtrees focusable</li>
</ul>

<p>If any of these conditions do not apply, the object is unfocusable.</p>

<h4>Handling Key Input</h4>

<p>Handling of the keys is done automatically by Elementary. According to which key the user pressed, Elementary switches the focus in the selected direction. For example, using the <span style="font-family: Courier New,Courier,monospace;">Tab</span> key the focus goes to the next object in the natural order, whereas using the direction keys the focus goes to the next object in the requested direction.</p>

<h4>Hiding, Deleting or Disabling a Focused Object</h4>

<p>When a widget is hidden, deleted, or disabled, it becomes unfocusable.</p>

<p>When a focused object is unfocusable, the focus is moved to another object.</p>

<h4>Selecting Next Object</h4>

<p>When the user wants to switch the focus to the next object (i.e. cycle focus), Elementary searches the first object which is focusable.</p>

<p>If there is a disabled or read-only object in the focus chain, the focus goes to the following object in the requested direction.</p>

<h3 id="Customization" name="Customization">Customizing Focus</h3>

<p>There are several reasons why to customize the focus chain of an application, for example:</p>

<ul>
<li>If you have created a form with labels and text entries next to them, the focus moves to the entry field when the user clicks on the associated label.</li>
<li>If you have created an interface with several columns (table), set the focus chain as you wish, for example, going horizontally instead of going vertically, regardless whatever the order the widgets are added.</li>
</ul>

<h4>Customizing Object&#39;s Focus Exit Chain </h4>

<p>Set the object to focus after other object in a specific direction using <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_next_object_set(object, next, direction)</span>. Use the following directions:</p>

<ul>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_NEXT</span>: next widget in natural order</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_PREVIOUS</span>: previous widget in natural order</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_UP</span>: widget to focus when going up</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_DOWN</span>: widget to focus when going down</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_RIGHT</span>: widget to focus when going right</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_LEFT</span>: widget to focus when going left</li>
</ul>

<p>Set the object next to another in a specific direction using <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_next_object_get(object, direction)</span>.</p>

<h4>Customizing Whole Application&#39;s Focus Chain</h4>

<p>To customize the application&#39;s custom chain:</p>

<pre class="prettyprint">
Evas_Object *main, obj1, obj2, obj3, obj4, obj5;

Eina_List *focus_chain = NULL;
focus_chain = eina_list_append(focus_chain, obj3);
focus_chain = eina_list_append(focus_chain, obj2);
// The chain is obj3, then obj2. We set it.
elm_object_focus_custom_chain_set(main, focus_chain);
// Here we prepend obj5 at the beginning of the chain.
elm_object_focus_chain_prepend(main, NULL, obj5);
// We append obj1 after obj3.
elm_object_focus_chain_append(main, obj3, obj1);
// We prepend obj4 before obj1.
elm_object_focus_chain_prepend(main, obj1, obj4);
</pre>

<p>The focus chain is <span style="font-family: Courier New,Courier,monospace;">obj5, obj3, obj4, obj1, obj2</span>.</p>

<p>This actually applies to any container: it is possible to set the focus chain of, for example, a box.</p>

<h4>Customizing Collision of Both</h4>

<p>If an object is part of a focus chain and has the next focused object defined, the next object takes precedence over the focus chain.</p>

<p>Following on the previous example, if <span style="font-family: Courier New,Courier,monospace;">obj4</span> has <span style="font-family: Courier New,Courier,monospace;">obj5</span> defined as its next object, the actual focus chain is <span style="font-family: Courier New,Courier,monospace;">obj5, obj3, obj4</span>, and loop back to <span style="font-family: Courier New,Courier,monospace;">obj5</span>.</p>

<h3 id="On_Widget" name="On_Widget">Focus on Widget </h3>

<p>If your Evas object has several sub-objects, set its focus chain using the same functions as for the application. Elementary first follows the main focus chain, and then the focus chain of each widget if applicable.</p>

<p>Use <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_get(object)</span> to set whether a specific object has the focus. Set the focus to an object using <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_set(object, set)</span>, where <span style="font-family: Courier New,Courier,monospace;">set</span> is a Boolean value. If it is set to <span style="font-family: Courier New,Courier,monospace;">EINA_TRUE</span>, the focus is set to that given object. If it is set to <span style="font-family: Courier New,Courier,monospace;">EINA_False</span>, the focus is unset and passed back to the previous element in the focus chain. Set the focus only after the object is shown, that is, after <span style="font-family: Courier New,Courier,monospace;">evas_object_show(object)</span> has been called. Call the function back when the object receives or loses focus by registering on smart event &quot;focused&quot; or &quot;unfocused&quot;</p>

<p>Use <span style="font-family: Courier New,Courier,monospace;">elm_object_tree_focus_allow_set(object, focusable)</span> to tell Elementary whether an object and its children are focusable, where <span style="font-family: Courier New,Courier,monospace;">focusable</span> is a Boolean value. Get the current value using <span style="font-family: Courier New,Courier,monospace;">elm_object_tree_focus_allow_get(object)</span>.</p>

<p>The similar functions for a specific object are <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_allow_set(object, focusable)</span> and <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_allow_get(object)</span>. </p>
  
  
  <h2 id="style" name="style">Using Widget Styles</h2>

<p>For each winset, there are many styles supported in the native framework. Following the concept of the native framework in EFL, apply styles using the <span style="font-family: Courier New,Courier,monospace">elm_object_style_set</span> function.</p>

<p>The following tables list the styles for each winset, including the names of the styles, and the name of the part where to set text or some other <span style="font-family: Courier New,Courier,monospace">Evas_Object</span> in the widget.</p>

<table>
<caption>Table: Button styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Text part</th>
 <th>Swallow part</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>elm/button/base/default</td>
 <td><img src="../../images/button_default.png" /> </td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td></td>
 </tr>
 <tr>
 <td>elm/button/base/anchor</td>
 <td><img src="../../images/button_anchor.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/bottom</td>
 <td><img src="../../images/bottom.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td>This style is used widely at the bottom of the screen.</td>
 </tr>
  <tr>
 <td>elm/button/base/circle</td>
 <td><img src="../../images/button_circle.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/dropdown</td>
 <td><img src="../../images/button_dropdown.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/hoversel_horizontal/default</td>
 <td><img src="../../images/button_hoversel.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/hoversel_horizontal_entry/default</td>
 <td><img src="../../images/button_hoversel_entry.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/hoversel_vertical/default</td>
 <td><img src="../../images/button_hover_v.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/hoversel_vertical_entry/default</td>
 <td><img src="../../images/button_hover_v_entry.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/icon_reorder</td>
 <td><img src="../../images/button_recorder.png" /></td>
 <td></td>
 <td></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/naviframe/drawers</td>
 <td><img src="../../images/button_drawers.png" /></td>
 <td></td>
 <td></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/naviframe/title_cancel</td>
 <td><img src="../../images/button_title_cancel.png" /></td>
 <td></td>
 <td></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/naviframe/title_done</td>
 <td><img src="../../images/button_title_done.png" /></td>
 <td></td>
 <td></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/button/base/option</td>
 <td><img src="../../images/button_option.png" /></td>
 <td></td>
 <td></td>
 <td></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Check styles</caption>
<col width="20%"/>
<col width="80%"/>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
</tr>
 <tr>
 <td>elm/check/base/default</td>
 <td><img src="../../images/check_default.png" /></td>
 </tr>
 <tr>
 <td>elm/check/base/favorite</td>
 <td><img src="../../images/check_favorite.png" /></td>
 </tr>
  <tr>
 <td>elm/check/base/on&amp;off</td>
 <td><img src="../../images/check_on_off.png" /></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Colorselector styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>elm/colorselector/item/color/colorplane</td>
 <td><img src="../../images/color_colorplane.png" /></td>
 <td>Use the following command: <span style="font-family: Courier New,Courier,monospace">elm_colorselector_mode_set(colorselector, ELM_COLORSELECTOR_PALETTE);</span></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Progressbar styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/progressbar_default.png" /></td>
 </tr>
 <tr>
 <td>wheel</td>
 <td><img src="../../images/progressbar_wheel.png" /></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Radio styles</caption>
<col width="20%"/>
<col width="80%"/>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/radio_default.png" /></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: List styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Text part</th>
 <th>Swallow part</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/styleguide_genlist_def.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span>: for the icon on the left.
 <p><span style="font-family: Courier New,Courier,monospace">elm.swallow.end</span>: for the icon on the right.</p></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Multi Button Entry styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Text part</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>elm/multibuttonentry/base/default</td>
 <td><img src="../../images/multi_button_default.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span>, guide</td>
 <td>The guide text part is used when there is no item in the Multi Button Entry. It is removed automatically when an item is appended in the Multi Button Entry.</td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Toolbar styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Text part</th>
 <th>Swallow part</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>elm/toolbar/base/default</td>
 <td><img src="../../images/toolbar_default.png" /></td>
 <td></td>
 <td></td>
 <td></td>
 </tr>
 <tr>
 <td>elm/toolbar/base/navigationbar</td>
 <td><img src="../../images/toolbar_navigation.png" /></td>
 <td></td>
 <td></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/toolbar/base/tabbar_with_title</td>
 <td><img src="../../images/toolbar_tabbar.png" /></td>
 <td></td>
 <td></td>
 <td></td>
 </tr>
  <tr>
 <td>elm/toolbar/item/default</td>
 <td></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td>This style is for the toolbar&#39;s item. Check the <span style="font-family: Courier New,Courier,monospace">elm_toolbar_item_append</span> API to set the text and the icon.</td>
 </tr>
  <tr>
 <td>elm/toolbar/item/navigationbar</td>
 <td></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td></td>
 <td>This style is for the toolbar&#39;s item. Check the <span style="font-family: Courier New,Courier,monospace">elm_toolbar_item_append</span> API to set the text and the icon.</td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Flipselector styles</caption>
<col width="20%"/>
<col width="80%"/>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/flipsel_default.png" /></td>
 </tr>
 </tbody>
</table>

<p>The style of the genlist&#39;s item is not set by external APIs. Check the guide of Genlist to check how to use the item class to set the item&#39;s style.</p>
<table>
<caption>Table: Genlist styles</caption>

<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Text part</th>
 <th>Swallow part</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/styleguide_genlist_def.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span>: for the icon on the left. 
 <p><span style="font-family: Courier New,Courier,monospace">elm.swallow.end</span>: for the icon on the right.</p></td>
 <td></td>
 </tr>
 <tr>
 <td>default_style</td>
 <td><img src="../../images/styleguide_genlist_defstyle.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span>: for the icon on the left. 
 <p><span style="font-family: Courier New,Courier,monospace">elm.swallow.end</span>: for the icon on the right.</p></td>
 <td></td>
 </tr>
  <tr>
 <td>double_label</td>
 <td><img src="../../images/styleguide_genlist_doublelabel.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span>: for the main text. 
 <p><span style="font-family: Courier New,Courier,monospace">elm.text.sub</span>: for the sub text.</p></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span>: for the icon on the left. 
 <p><span style="font-family: Courier New,Courier,monospace">elm.swallow.end</span>: for the icon on the right.</p></td>
 <td></td>
 </tr>
  <tr>
 <td>end_icon</td>
 <td><img src="../../images/styleguide_genlist_end.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td></td>
 </tr>
  <tr>
 <td>full</td>
 <td><img src="../../images/styleguide_genlist_full.png" /></td>
 <td></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td>The swallow part is the full size of the item. There is no padding in the item.</td>
 </tr>
  <tr>
 <td>group_index</td>
 <td><img src="../../images/styleguide_genlist_group.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span>: for the icon on the left. 
 <p><span style="font-family: Courier New,Courier,monospace">elm.swallow.end</span>: for the icon on the right.</p></td>
 <td></td>
 </tr>
  <tr>
 <td>one_icon</td>
 <td><img src="../../images/styleguide_genlist_oneicon.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td></td>
 </tr>
  <tr>
 <td>message</td>
 <td><img src="../../images/styleguide_genlist_message.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span>: for the text on the top. 
 <p><span style="font-family: Courier New,Courier,monospace">elm.title.1</span>: for the text in the middle.</p>
<p><span style="font-family: Courier New,Courier,monospace">elm.title.2</span>: for the text on the bottom.</p></td>
 <td></td>
 <td></td>
 </tr>
 </tbody>
</table>

<p>The style of the gengrid&#39;s item is not set by external APIs. For more information on using the item class to set the item&#39;s style, see the guide of gengrid.</p>
<table>
<caption>Table: Gengrid styles</caption>

<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Text part</th>
 <th>Swallow part</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/gengrid_default.png" /></td>
 <td></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td></td>
</tr>
 <tr>
 <td>album-preview</td>
 <td><img src="../../images/gengrid_album_pre.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td></td>
</tr>
 <tr>
 <td>block</td>
 <td><img src="../../images/gengrid_block.png" /></td>
 <td></td>
 <td></td>
 <td>This style is used to show an empty area.</td>
</tr>
 <tr>
 <td>group_index</td>
 <td><img src="../../images/gengrid_grp_index.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td></td>
</tr>
 <tr>
 <td>default_grid</td>
 <td><img src="../../images/gengrid_def.png" /></td>
 <td></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td></td>
 </tr>
<tr>
 <td>default_gridtext2</td>
 <td><img src="../../images/gengrid_def_gridtext2.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td></td>
 </tr>
 <tr>
 <td>default_gridtext</td>
 <td><img src="../../images/gengrid_def_gridtext.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td></td>
 </tr>
 <tr>
 <td>default_style</td>
 <td><img src="../../images/gengrid_def_style.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.text</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 <td></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Segmentation Control styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/segm_control_default.png" /></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Index styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/index_default.png" /></td>
 <td>This style is for supporting the vertical style.</td>
 </tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/index_default02.png" /></td>
 <td>This style is for supporting the horizontal style. To set a horizontal index, use the <span style="font-family: Courier New,Courier,monospace">elm_index_horizontal_set</span>.</td>
 </tr>
  <tr>
 <td>pagecontrol</td>
 <td><img src="../../images/index_pagecontrol.png" /></td>
 <td>This style is used for the &quot;page control&quot; layout. For more information, refer to the Core Control sample application.</td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Contextual Popup (Ctxpopup) styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/ctxpopup_default.png" /></td>
 <td></td>
 </tr>
 <tr>
 <td>dropdown/list</td>
 <td><img src="../../images/ctxpopup_dropdown.png" /></td>
 <td>The size of the item and the ctxpopup follow the size of the screen.</td>
 </tr>
  <tr>
 <td>dropdown/label</td>
 <td><img src="../../images/ctxpopup_dropdown_label.png" /></td>
 <td>The size of the item and the ctxpopup follow the maximum length of the item.</td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Icon styles</caption>
<col width="20%"/>
<col width="80%"/>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
</tr>
 <tr>
 <td>apps</td>
 <td><img src="../../images/icon_apps.png" /></td>
 </tr>
 <tr>
 <td>arrow_down</td>
 <td><img src="../../images/icon_arrowdown.png" /></td>
 </tr>
  <tr>
 <td>arrow_left</td>
 <td><img src="../../images/icon_arrowleft.png" /></td>
 </tr>
  <tr>
 <td>arrow_right</td>
 <td><img src="../../images/icon_arrowright.png" /></td>
 </tr>
  <tr>
 <td>arrow_up</td>
 <td><img src="../../images/icon_arrowup.png" /></td>
 </tr>
  <tr>
 <td>chat</td>
 <td><img src="../../images/icon_chat.png" /></td>
 </tr>
 <tr>
 <td>clock</td>
 <td><img src="../../images/icon_clock.png" /></td>
 </tr>
 <tr>
 <td>close</td>
 <td><img src="../../images/icon_close.png" /></td>
 </tr>
 <tr>
 <td>delete</td>
 <td><img src="../../images/icon_delete.png" /></td>
 </tr>
 <tr>
 <td>edit</td>
 <td><img src="../../images/icon_edit.png" /></td>
 </tr>
 <tr>
 <td>file</td>
 <td><img src="../../images/icon_file.png" /></td>
 </tr>
 <tr>
 <td>home</td>
 <td><img src="../../images/icon_home.png" /></td>
 </tr>
 <tr>
 <td>media_player/forward</td>
 <td><img src="../../images/icon_forward.png" /></td>
 </tr>
 <tr>
 <td>media_player/info</td>
 <td><img src="../../images/icon_info.png" /></td>
 </tr>
 <tr>
 <td>media_player/next</td>
 <td><img src="../../images/icon_next.png" /></td>
 </tr>
 <tr>
 <td>media_player/pause</td>
 <td><img src="../../images/icon_pause.png" /></td>
 </tr>
 <tr>
 <td>media_player/play</td>
 <td><img src="../../images/icon_play.png" /></td>
 </tr>
 <tr>
 <td>media_player/prev</td>
 <td><img src="../../images/icon_prev.png" /></td>
 </tr>
 <tr>
 <td>media_player/rewind</td>
 <td><img src="../../images/icon_rewind.png" /></td>
 </tr>
 <tr>
 <td>media_player/stop</td>
 <td><img src="../../images/icon_stop.png" /></td>
 </tr>
 <tr>
 <td>menu/apps</td>
 <td><img src="../../images/icon_menu_apps.png" /></td>
 </tr>
 <tr>
 <td>menu/arrow_down</td>
 <td><img src="../../images/icon_menu_arrdown.png" /></td>
 </tr>
 <tr>
 <td>menu/arrow_left</td>
 <td><img src="../../images/icon_menu_arrleft.png" /></td>
 </tr>
 <tr>
 <td>menu/arrow_right</td>
 <td><img src="../../images/icon_menu_arrright.png" /></td>
 </tr>
 <tr>
 <td>menu/arrow_up</td>
 <td><img src="../../images/icon_menu_arrup.png" /></td>
 </tr>
 <tr>
 <td>menu/chat</td>
 <td><img src="../../images/icon_menu_chat.png" /></td>
 </tr>
 <tr>
 <td>menu/clock</td>
 <td><img src="../../images/icon_menu_clock.png" /></td>
 </tr>
 <tr>
 <td>menu/close</td>
 <td><img src="../../images/icon_menu_close.png" /></td>
 </tr>
 <tr>
 <td>menu/delete</td>
 <td><img src="../../images/icon_menu_delete.png" /></td>
 </tr>
 <tr>
 <td>menu/edit</td>
 <td><img src="../../images/icon_menu_edit.png" /></td>
 </tr>
 <tr>
 <td>menu/file</td>
 <td><img src="../../images/icon_menu_file.png" /></td>
 </tr>
 <tr>
 <td>menu/folder</td>
 <td><img src="../../images/icon_menu_folder.png" /></td>
 </tr>
 <tr>
 <td>menu/home</td>
 <td><img src="../../images/icon_menu_home.png" /></td>
 </tr>
 <tr>
 <td>menu/refresh</td>
 <td><img src="../../images/icon_menu_refresh.png" /></td>
 </tr>
 <tr>
 <td>no_photo</td>
 <td><img src="../../images/icon_menu_nophoto.png" /></td>
 </tr>
 <tr>
 <td>photo/no_photo</td>
 <td><img src="../../images/icon_photo_nophoto.png" /></td>
 </tr>
 <tr>
 <td>refresh</td>
 <td><img src="../../images/icon_refresh.png" /></td>
 </tr>
 <tr>
 <td>toolbar/apps</td>
 <td><img src="../../images/icon_toolbar_apps.png" /></td>
 </tr>
 <tr>
 <td>toolbar/arrow_down</td>
 <td><img src="../../images/icon_toolbar_arrdown.png" /></td>
 </tr>
 <tr>
 <td>toolbar/arrow_left</td>
 <td><img src="../../images/icon_toolbar_arrleft.png" /></td>
 </tr>
 <tr>
 <td>toolbar/arrow_right</td>
 <td><img src="../../images/icon_toolbar_arrright.png" /></td>
 </tr>
 <tr>
 <td>toolbar/arrow_up</td>
 <td><img src="../../images/icon_toolbar_arrup.png" /></td>
 </tr>
 <tr>
 <td>toolbar/chat</td>
 <td><img src="../../images/icon_toolbar_chat.png" /></td>
 </tr>
 <tr>
 <td>toolbar/clock</td>
 <td><img src="../../images/icon_toolbar_clock.png" /></td>
 </tr>
 <tr>
 <td>toolbar/close</td>
 <td><img src="../../images/icon_toolbar_close.png" /></td>
 </tr>
 <tr>
 <td>toolbar/delete</td>
 <td><img src="../../images/icon_toolbar_delete.png" /></td>
 </tr>
 <tr>
 <td>toolbar/edit</td>
 <td><img src="../../images/icon_toolbar_edit.png" /></td>
 </tr>
 <tr>
 <td>toolbar/file</td>
 <td><img src="../../images/icon_toolbar_file.png" /></td>
 </tr>
 <tr>
 <td>toolbar/folder</td>
 <td><img src="../../images/icon_toolbar_folder.png" /></td>
 </tr>
 <tr>
 <td>toolbar/home</td>
 <td><img src="../../images/icon_home.png" /></td>
 </tr>
 <tr>
 <td>toolbar/more_menu</td>
 <td><img src="../../images/icon_toolbar_moremenu.png" /></td>
 </tr>
 <tr>
 <td>toolbar/refresh</td>
 <td><img src="../../images/icon_toolbar_refresh.png" /></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Entry styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Text part</th>
 <th>Swallow part</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/entry_default.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.guide</span>: for the guide text. 
 <p><span style="font-family: Courier New,Courier,monospace">elm.text</span>: for the main text.</p></td>
 <td></td>
 <td>The guide text is automatically erased when the main text is entered.</td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Datetime styles</caption>
<col width="20%"/>
<col width="80%"/>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
</tr>
 <tr>
 <td>date_layout</td>
 <td><img src="../../images/datetime_date_layout.png" /></td>
 </tr>
 <tr>
 <td>time_layout</td>
 <td><img src="../../images/datetime_time_layout.png" /></td>
 </tr>
  <tr>
 <td>time_layout_24hr</td>
 <td><img src="../../images/datetime_time_24h.png" /></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Panel (drawer) styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Swallow part</th>
 <th>Notes</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/panel_default.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.content</span></td>
 <td>For more information on the drawer, see the [UI Sample] Core Control guide.</td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Slider styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Swallow part</th>

</tr>
 <tr>
 <td>horizontal/default</td>
 <td><img src="../../images/slider_hor.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 </tr>
 <tr>
 <td>horizontal/center_point</td>
 <td><img src="../../images/slider_hor_center.png" /></td>
 <td><span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span></td>
 </tr>
  <tr>
 <td>vertical/center_point</td>
 <td><img src="../../images/slider_ver_center.png" /></td>
 <td></td>
 </tr>
  <tr>
 <td>vertical/default</td>
 <td><img src="../../images/slider_ver.png" /></td>
 <td></td>
 </tr>
 </tbody>
</table>

<table>
<caption>Table: Popup styles</caption>
<col width="20%"/>
<col width="80%"/>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
</tr>
 <tr>
 <td>default</td>
 <td><img src="../../images/popup_default.png" /></td>
 </tr>
 <tr>
 <td>toast</td>
 <td><img src="../../images/popup_toast.png" /></td>
 </tr>
 </tbody>
</table>
 
 <table>
<caption>Table: Spinner styles</caption>
<col width="20%"/>
<col width="80%"/>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
</tr>
 <tr>
 <td>base/horizontal</td>
 <td><img src="../../images/spinner_hor.png" /></td>
 </tr>
  <tr>
 <td>base/vertical</td>
 <td><img src="../../images/spinner_ver.png" /></td>
 </tr>
 </tbody>
</table>
  
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer"> 
<p class="footer">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p> 
</div> 

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>