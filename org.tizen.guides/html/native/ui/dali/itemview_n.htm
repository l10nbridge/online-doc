<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

	<title>ItemView</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../../images/mobile_s_n.png"/></p>
	</div>
		<div id="toc_border"><div id="toc">
		<p class="toc-title">Dependencies</p>
		<ul class="toc">
			<li>Tizen Platform 2.4 and Higher for Mobile</li>
		</ul>
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#factory">Implementing ItemFactory</a></li>
			<li><a href="#create">Creating an ItemView</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1ItemFactory.html">Dali::Toolkit::ItemFactory API for Mobile Native</a></li>
			<li><a href="../../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1ItemLayout.html">Dali::Toolkit::ItemLayout API for Mobile Native</a></li>
			<li><a href="../../../../../org.tizen.native.mobile.apireference/structDali_1_1Toolkit_1_1ItemRange.html">Dali::Toolkit::ItemRange API for Mobile Native</a></li>
			<li><a href="../../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1ItemView.html">Dali::Toolkit::ItemView API for Mobile Native</a></li>
			<li><a href="../../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1Scrollable.html">Dali::Toolkit::Scrollable API for Mobile Native</a></li>	
			<li><a href="https://developer.tizen.org/development/sample/native/UI/%28DALi%29_ItemView" target="_blank">(DALi) ItemView Sample Description</a></li>
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>ItemView</h1>

<p>The <span style="font-family: Courier New,Courier,monospace;">Dali::Toolkit::ItemView</span> class is a scrollable container that can contain many items. It provides several scrollable layouts, as illustrated in the following figure.</p>


<p class="figure">Figure: ItemView layouts</p>  

	<table >
   <tbody>
    <tr>
     <td style="text-align:center; border:none;">Grid</td>
     <td style="text-align:center; border:none;">Spiral</td>
	 <td style="text-align:center; border:none;">Depth</td>
    </tr>
	<tr>
     <td style="text-align:center; border:none;"><img alt="captured screen2" src="../../../images/grid.png" /></td>
     <td style="text-align:center; border:none;"><img alt="captured screen2" src="../../../images/spiral.png" /></td>
	 <td style="text-align:center; border:none;"><img alt="captured screen2" src="../../../images/depth.png" /></td>
    </tr>
   </tbody>
  </table>
<p>You can also create your own custom layout by inheriting from the <span style="font-family: Courier New,Courier,monospace;">Dali::Toolkit::ItemLayout</span> class.</p>

<h2 id="factory" name="factory">Implementing ItemFactory</h2>

<p>To create a <span style="font-family: Courier New,Courier,monospace;">Dali::Toolkit::ItemView</span> instance, you must create your own <span style="font-family: Courier New,Courier,monospace;">ItemFactory</span> class by deriving from the <span style="font-family: Courier New,Courier,monospace;">Dali::Toolkit::ItemFactory</span> class and providing its instance to the <span style="font-family: Courier New,Courier,monospace;">ItemView::New()</span> function. <span style="font-family: Courier New,Courier,monospace;">ItemFactory</span> is an abstract class having 2 pure virtual member functions to create items and get the number of created items. The following basic example shows how to implement an <span style="font-family: Courier New,Courier,monospace;">ItemFactory</span> class:</p>

<pre class="prettyprint">
class MyFactory : public ItemFactory
{
&nbsp;&nbsp;public:  
&nbsp;&nbsp;&nbsp;&nbsp;virtual unsigned int GetNumberOfItems()
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Return the number of items
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return MY_ITEM_COUNT;
&nbsp;&nbsp;&nbsp;&nbsp;} 
 
&nbsp;&nbsp;&nbsp;&nbsp;virtual Actor NewItem( unsigned int itemId ) 
&nbsp;&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Create the actor representing the item based on the itemId
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ImageView::New( MY_IMAGE_PATHS[itemId] );
&nbsp;&nbsp;&nbsp;&nbsp;}
};
</pre>

<p>The overridden functions in the derived class are called by the <span style="font-family: Courier New,Courier,monospace;">ItemView</span> object.</p>

<h2 id="create" name="create">Creating an ItemView</h2>

<p>The following basic example shows how to create a <span style="font-family: Courier New,Courier,monospace;">Dali::Toolkit::ItemView</span> object:</p>

<pre class="prettyprint">
// This sample code is for the HelloWorldExample class
// in <a href="dali_overview_n.htm#create">Creating a DALi Application</a>
class HelloWorldExample : public ConnectionTracker
{
&nbsp;&nbsp;// Store a factory as a member variable
&nbsp;&nbsp;MyFactory mFactory; 
};

void HelloWorldExample::Create( Application&amp; application )
{
&nbsp;&nbsp;// Create an ItemView with the factory
&nbsp;&nbsp;ItemView itemView = ItemView::New( mFactory ); 
&nbsp;&nbsp;itemView.SetParentOrigin( ParentOrigin::CENTER );

&nbsp;&nbsp;// Create a layout
&nbsp;&nbsp;ItemLayoutPtr spiralLayout = DefaultItemLayout::New( DefaultItemLayout::SPIRAL );

&nbsp;&nbsp;// Add the layout to the itemView
&nbsp;&nbsp;itemView.AddLayout( *spiralLayout );
&nbsp;&nbsp;// More layouts can be created and added to the itemView

&nbsp;&nbsp;// Activate the layout
&nbsp;&nbsp;itemView.ActivateLayout( 0, Vector3( Stage::GetCurrent().GetSize() ), 0 );

&nbsp;&nbsp;// Add the itemView to the stage
&nbsp;&nbsp;Stage::GetCurrent().Add( itemView );
}
</pre>

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

