<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>
  <title>Edje Animations</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../../images/wearable_s_n.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
	<p class="toc-title">Dependencies</p>
	<ul class="toc">
		<li>Tizen Platform 2.4 and Higher for Mobile</li>
		<li>Tizen Platform 2.3.1 and Higher for Wearable</li>
	</ul>
	<p class="toc-title">Content</p>
		<ul class="toc">
				<li><a href="#Signals">Starting an Animation</a></li>
				<li><a href="#Actions">Using Program Actions</a></li>
				<li><a href="#Transitions">Using Program Transitions</a></li>
				<li><a href="#Chaining">Chaining Multiple Programs Together</a></li>			
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../../org.tizen.native.wearable.apireference/group__Edje__Group.html">Edje API for Wearable Native</a></li>
			</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

  <h1>Edje Animations</h1> 

<p>One of the greatest strengths of EFL and Edje is the ability to create animations. You can <a href="elementary_animation_n.htm">use predefined animations</a> through <span style="font-family: Courier New,Courier,monospace;">Elm_Transit</span>, or create your own animations with the Edje library.</p>
  
<p>The Edje animations are based on a simple principle of moving from one state to another. To animate something with Edje:</p>
<ol>
<li>Define 2 states for a part with description blocks.</li>
<li>Define a program block with both an action that sets a new state and the details of the state transition.</li>
<li>Manage the signal that starts the program (and consequently the animation).</li>
</ol>

<h2 id="Signals" name="Signals">Starting an Animation</h2>

<p>To start an animation, a program must receive a signal from a source. Edje handles many kinds of signals, including mouse events.</p>

<table class="note">
<tbody>
<tr>
<th class="note">Note</th>
</tr>
<tr>
<td class="note">To show the signals used in a specific EDJ file, use the <span style="font-family: Courier New,Courier,monospace;">edje_player -p &lt;filename&gt;.edj</span> command.</td>
</tr>
</tbody>
</table> 

<p id="create_animation">For example, to start an animation to change the color and position of a rectangle when the rectangle is clicked, the program must receive a <span style="font-family: Courier New,Courier,monospace;">mouse,clicked,1</span> signal. To create this animation:</p>
<ol>
<li>Define a new state that changes the color and position of the rectangle:

<pre class="prettyprint">
/* Within the rectangle part */
description
{
&nbsp;&nbsp;&nbsp;state: &quot;color&quot; 0.0;
&nbsp;&nbsp;&nbsp;rel1 {relative: 0.3 0.3;}
&nbsp;&nbsp;&nbsp;rel2 {relative: 0.7 0.4;}
&nbsp;&nbsp;&nbsp;color: 255 0 0 255;
}
</pre>
</li>
<li>Create a program to start when the rectangle is clicked.
<p>The program changes the state of the rectangle part to <span style="font-family: Courier New,Courier,monospace;">&quot;color&quot;</span>, and performs the change using a 2-second sinusoidal transition. For more information on transitions, see <a href="#Transitions">Using Program Transitions</a>.</p>

<pre class="prettyprint">
program
{
&nbsp;&nbsp;&nbsp;name: &quot;animation,color&quot;;
&nbsp;&nbsp;&nbsp;source: &quot;rectangle&quot;;
&nbsp;&nbsp;&nbsp;signal: &quot;mouse,clicked,1&quot;;
&nbsp;&nbsp;&nbsp;action: STATE_SET &quot;color&quot; 0.0;
&nbsp;&nbsp;&nbsp;target: &quot;rectangle&quot;;
&nbsp;&nbsp;&nbsp;transition: SIN 2;
}
</pre>
</li>
</ol>
<p>To use signals to start animations, you need to both send a signal from your application and create a program that waits for that signal. For example:</p>
<ul>
<li>
<p>Create a program that changes the state of the <span style="font-family: Courier New,Courier,monospace;">menu/side</span> target to <span style="font-family: Courier New,Courier,monospace;">&quot;default&quot; 1.0</span>. The program waits for the <span style="font-family: Courier New,Courier,monospace;">hide,sidemenu</span> signal emitted by a <span style="font-family: Courier New,Courier,monospace;">MenuButton</span> source.</p>
<pre class="prettyprint">
program
{
&nbsp;&nbsp;&nbsp;name: &quot;animation,menu_side,hide&quot;;
&nbsp;&nbsp;&nbsp;source: &quot;MenuButton&quot;;
&nbsp;&nbsp;&nbsp;signal: &quot;hide,sidemenu&quot;;
&nbsp;&nbsp;&nbsp;action: STATE_SET &quot;default&quot; 1.0;
&nbsp;&nbsp;&nbsp;target: &quot;menu/side&quot;;
&nbsp;&nbsp;&nbsp;transition: LINEAR 0.2;
}
</pre>
</li>
<li>
<p>Send the signal from the application using the <span style="font-family: Courier New,Courier,monospace;">edje_object_signal_emit()</span> function, which emits a signal to an <span style="font-family: Courier New,Courier,monospace;">Evas_Object</span> part of the application. The following code sends a <span style="font-family: Courier New,Courier,monospace;">hide,sidemenu</span> signal with a <span style="font-family: Courier New,Courier,monospace;">MenuButton</span> source to the layout object:</p>
<pre class="prettyprint">
edje_object_signal_emit(layout, &quot;hide,sidemenu&quot;, &quot;MenuButton&quot;);
</pre>

<p>If you use the Elementary library in the application, you can use the <span style="font-family: Courier New,Courier,monospace;">elm_object_signal_emit()</span> function. It works the same way as the <span style="font-family: Courier New,Courier,monospace;">edje_object_signal_emit()</span> function with the same parameters.</p>
</li>
</ul>


<h2 id="Actions" name="Actions">Using Program Actions</h2>

<p>The Edje programs are not designed only for state change animations. You can use the programs to perform other actions as well, such as stopping a program or emitting a signal:</p>
<ul>
<li>
<p>The <span style="font-family: Courier New,Courier,monospace;">STATE_SET</span> action (the usual animation action) changes the state of the part specified by the <span style="font-family: Courier New,Courier,monospace;">target</span> property.</p>

<p>In the following example, the state of the <span style="font-family: Courier New,Courier,monospace;">&quot;image&quot;</span> part changes to <span style="font-family: Courier New,Courier,monospace;">&quot;default&quot; 0.0</span>:</p>

<pre class="prettyprint">
program
{
&nbsp;&nbsp;&nbsp;name: &quot;animate&quot;;
&nbsp;&nbsp;&nbsp;signal: &quot;animate&quot;;
&nbsp;&nbsp;&nbsp;action: STATE_SET &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;transition: LINEAR 3.0;
&nbsp;&nbsp;&nbsp;target: &quot;image&quot;;
}
</pre>
</li>
<li>
<p>The <span style="font-family: Courier New,Courier,monospace;">ACTION_STOP</span> action stops the program specified by the <span style="font-family: Courier New,Courier,monospace;">target</span> property.</p>
<p>The following example stops the <span style="font-family: Courier New,Courier,monospace;">animate_loop</span> program, and runs when receiving the <span style="font-family: Courier New,Courier,monospace;">animate_stop</span> signal:</p>

<pre class="prettyprint">
program
{
&nbsp;&nbsp;&nbsp;name: &quot;animate_stop&quot;;
&nbsp;&nbsp;&nbsp;signal: &quot;animate_stop&quot;;
&nbsp;&nbsp;&nbsp;action: ACTION_STOP;
&nbsp;&nbsp;&nbsp;target: &quot;animate_loop&quot;;
}
</pre>


</li>
<li>
<p>The <span style="font-family: Courier New,Courier,monospace;">SIGNAL_EMIT</span> action emits a signal that is used to communicate with the application directly from the theme.</p>

<p>The following example emits a <span style="font-family: Courier New,Courier,monospace;">&quot;frame_move&quot; &quot;start&quot;</span> signal when it receives the <span style="font-family: Courier New,Courier,monospace;">mouse,down,*</span> signal from the <span style="font-family: Courier New,Courier,monospace;">video_mover</span> part. In other words, it sends the <span style="font-family: Courier New,Courier,monospace;">&quot;frame_move&quot; &quot;start&quot;</span> signal when the user presses the mouse in the <span style="font-family: Courier New,Courier,monospace;">video_mover</span> part.</p>

<pre class="prettyprint">
program
{
&nbsp;&nbsp;&nbsp;name: &quot;video_move_start&quot;;
&nbsp;&nbsp;&nbsp;signal: &quot;mouse,down,*&quot;;
&nbsp;&nbsp;&nbsp;source: &quot;video_mover&quot;;
&nbsp;&nbsp;&nbsp;action: SIGNAL_EMIT &quot;frame_move&quot; &quot;start&quot;;
}
</pre>
</li>
</ul>

<h2 id="Transitions" name="Transitions">Using Program Transitions</h2>

<p>The following types of transitions can be added to the programs to create effects for the state changes:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">LIN</span> or <span style="font-family: Courier New,Courier,monospace;">LINEAR</span>: Makes a linear transition and takes the duration in seconds as a parameter</li>
<li><span style="font-family: Courier New,Courier,monospace;">SIN</span> or <span style="font-family: Courier New,Courier,monospace;">SINUSOIDAL</span>: Makes a sinusoidal transition and takes the duration in seconds as a parameter</li>
<li><span style="font-family: Courier New,Courier,monospace;">ACCEL</span> or <span style="font-family: Courier New,Courier,monospace;">ACCELERATE</span>: Makes an accelerated transition and takes the duration in seconds as a parameter</li>
<li><span style="font-family: Courier New,Courier,monospace;">DECEL</span> or <span style="font-family: Courier New,Courier,monospace;">DECELERATE</span>: Makes a decelerated transition and takes the duration in seconds as a parameter</li>
<li><span style="font-family: Courier New,Courier,monospace;">ACCEL_FAC</span> or <span style="font-family: Courier New,Courier,monospace;">ACCELERATE_FACTOR</span>: Makes an accelerated transition and takes the duration and the factor as a parameters</li>
<li><span style="font-family: Courier New,Courier,monospace;">DECEL_FAC</span> or <span style="font-family: Courier New,Courier,monospace;">DECELERATE_FACTOR</span>: Makes a decelerated transition and takes the duration and the factor as a parameters</li>
<li><span style="font-family: Courier New,Courier,monospace;">SIN_FAC</span> or <span style="font-family: Courier New,Courier,monospace;">SINUSOIDAL_FACTOR</span>: Makes a sinusoidal transition and takes the duration and the factor as a parameters</li>
<li><span style="font-family: Courier New,Courier,monospace;">DIVIS</span> or <span style="font-family: Courier New,Courier,monospace;">DIVISOR_INTERP</span>: Makes an interpolated transition and takes 3 parameters:
	<ul>
		<li>Duration</li>
        <li>Initial gradient start (for example, 0.0 is horizontal, 1.0 is diagonal (linear), and 2.0 is twice the gradient of linear)</li>
        <li>Integer factor that defines how much the value swings outside the gradient to come back to the final resting spot at the end. 0.0 is equivalent to linear interpolation. Note that DIVIS can exceed 1.0.</li>
	</ul>
</li>
<li><span style="font-family: Courier New,Courier,monospace;">BOUNCE</span>: Makes a bounce transition and takes 3 parameters:
	<ul>
        <li>Duration</li>
        <li>Bounce decay, with 0.0 giving a linear decay per bounce, and higher values giving more decay</li>
        <li>Number of bounces (rounded down to the nearest integer value)</li>
	</ul>
</li>
<li><span style="font-family: Courier New,Courier,monospace;">SPRING</span>: Makes a spring transition and takes 3 parameters:
	<ul>
        <li>Duration</li>
        <li>Decay, with the level exceeding 1.0 on the outer swings</li>
        <li>Number of spring swings</li>
	</ul>
</li>
</ul>

<p>For graphical representations of these effects, see the <a href="ecore_animation_n.htm#position_mappings">position mappings in Ecore animations</a>.</p>

<h2 id="Chaining" name="Chaining">Chaining Multiple Programs Together</h2>

<p>To perform multiple animations in a sequence, chain Edje programs together so that they are executed one after another.</p>
<p>The following example uses the <a href="#create_animation">same rectangle as before</a>. The original program changed to the rectangle state to <span style="font-family: Courier New,Courier,monospace;">&quot;color&quot; 0.0</span>. This example adds a new program that returns the state to <span style="font-family: Courier New,Courier,monospace;">&quot;default&quot; 0.0</span> and chains the 2 programs together.</p>
<p>To chain programs:</p>
<ol>
<li>
<p>Define the first program block, and use the <span style="font-family: Courier New,Courier,monospace;">after</span> property to define the name of the program that must be run when the first program is finished:</p>

<pre class="prettyprint">
program
{
&nbsp;&nbsp;&nbsp;name: &quot;animation,color&quot;;
&nbsp;&nbsp;&nbsp;source: &quot;rectangle&quot;;
&nbsp;&nbsp;&nbsp;signal: &quot;mouse,clicked,1&quot;;
&nbsp;&nbsp;&nbsp;action: STATE_SET &quot;color&quot; 0.0;
&nbsp;&nbsp;&nbsp;target: &quot;rectangle&quot;;
&nbsp;&nbsp;&nbsp;transition: SIN 2;
&nbsp;&nbsp;&nbsp;<span class="highlight">after: &quot;animation,state0&quot;;</span>
}

</pre>
</li>
<li>
<p>Define the second program block that returns the rectangle to its original position and color using a bounce transition with a decay factor of 1.8 and 6 bounces. Since this program is only used in a chain at the end of the first program, it has no <span style="font-family: Courier New,Courier,monospace;">signal</span> or <span style="font-family: Courier New,Courier,monospace;">source</span> property.</p>

<pre class="prettyprint">
program
{
&nbsp;&nbsp;&nbsp;<span class="highlight">name: &quot;animation,state0&quot;;</span>
&nbsp;&nbsp;&nbsp;source: &quot;&quot;;
&nbsp;&nbsp;&nbsp;signal: &quot;&quot;;
&nbsp;&nbsp;&nbsp;action: STATE_SET &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;target: &quot;rectangle&quot;;
&nbsp;&nbsp;&nbsp;transition: BOUNCE 5 1.8 6;
}
</pre>
</li>
</ol>




<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>  
  
<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>