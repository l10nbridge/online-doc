<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

	<title>Genlist</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../../images/mobile_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Dependencies</p>
		<ul class="toc">
			<li>Tizen Platform 2.4 and Higher for Mobile</li>
		</ul>
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#add">Adding a Genlist Component</a></li>
			<li><a href="#styles">Using the Genlist and Item Styles</a></li>
			<li><a href="#items">Defining the Genlist Item Class</a></li>
			<li><a href="#manage">Managing Genlist Items</a></li>
			<li><a href="#selection">Selecting Genlist Items</a></li>
			<li><a href="#callback">Using the Genlist Callbacks</a></li>
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>			
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Genlist</h1>

<p>This feature is supported in mobile applications only.</p>

<p>Genlist is a UI component that displays a scrollable list of items. It allows you to manage a lot of items while still being fast and having a low memory footprint, as only the visible items are allocated in the memory.</p>

<p>For more information, see <a href="genlist_tutorial_mn.htm">Creating Mobile Genlists</a> and the <a href="../../../../../org.tizen.native.mobile.apireference/group__Genlist.html">Genlist</a> API.</p>

<p class="figure">Figure: Genlist component</p> 
<p align="center"><img alt="Genlist component" src="../../../images/genlist_screen.png" /> <img alt="Genlist component" src="../../../images/genlist.png" /></p> 

<p class="figure">Figure: Genlist hierarchy</p> 
<p align="center"> <img alt="Genlist hierarchy" src="../../../images/genlist_htree.png" /> </p> 

<h2 id="add">Adding a Genlist Component</h2>

<p>To add a genlist component, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_add()</span> function:</p>
<pre class="prettyprint">
Evas_Object *genlist;
Evas_Object *parent;

genlist = elm_genlist_add(parent);
</pre>

<h2 id="styles">Using the Genlist and Item Styles</h2>
<p>The genlist has a separate style for itself or for its items:</p>

<ul><li>
<p>The genlist style determines the characteristics of the entire scrollable area. The following genlist styles are available:</p>

<ul>
	<li><span style="font-family: Courier New,Courier,monospace">default</span>
	<p>Same as <span style="font-family: Courier New,Courier,monospace">effect</span>.</p></li>
	<li><span style="font-family: Courier New,Courier,monospace">effect</span>
	<p>When the genlist reaches its edge during scrolling, it shows an effect.</p></li>
	<li><span style="font-family: Courier New,Courier,monospace">no_effect</span>
	<p>The genlist has no effect when it reaches an edge.</p></li>
	<li><span style="font-family: Courier New,Courier,monospace">handler</span>
	<p>Enables a scrollbar that eases scrolling through the whole list.</p></li>
	<li><span style="font-family: Courier New,Courier,monospace">solid/default</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">solid/effect</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">solid/no_effect</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">solid/handler</span></li>
</ul>

<p>In Tizen 2.4, the genlist items have a gradient opacity from the top to the bottom rather than an explicit divider. Each item is identified by its color made by blending its opacity and background color (or image). The <span style="font-family: Courier New,Courier,monospace">solid</span> prefix in a genlist style name means that genlist items have an explicit divider and background color. To set a genlist with a solid background color:</p>
<pre class="prettyprint">
elm_object_style_set(genlist, &quot;solid/default&quot;);
</pre></li>

<li>
<p>The genlist item style determines the number of parts for text and content, and their arrangement within the item. For example, a default style item has 1 text part (<span style="font-family: Courier New,Courier,monospace">elm.text</span>), and 2 content parts (<span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span> and <span style="font-family: Courier New,Courier,monospace">elm.swallow.end</span>).</p>

<p>The following item styles are available:</p>
  <ul>
	<li><span style="font-family: Courier New,Courier,monospace">default</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">full</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">one_icon</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">end_icon</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">group_index</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">double_label</span></li>
  </ul>

<p>The following item styles are supported since Tizen 2.4:</p>
  <ul>
	<li><span style="font-family: Courier New,Courier,monospace">type1</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">type2</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">multiline</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">group_index/expandable</span></li></ul>
  
  
<p>The following figures show examples of the item styles.</p>

<p class="figure">Figure: Default item style</p> 
<p align="center"> <img alt="Default item style" src="../../../images/gl-default.png" /> </p> 

<p class="figure">Figure: end_icon item style</p> 
<p align="center"> <img alt="end_icon item style" src="../../../images/gl-end-icon.png" /> </p> 

<p class="figure">Figure: double_label item style</p> 
<p align="center"> <img alt="double_label item style" src="../../../images/gl-double-label.png" /> </p> 

<p class="figure">Figure: type1 item style</p> 
<p align="center"> <img alt="type1 item style" src="../../../images/gl-type1.png" /> </p>

<p class="figure">Figure: type2 item style</p> 
<p align="center"> <img alt="type2 item style" src="../../../images/gl-type2.png" /> </p>

<p class="figure">Figure: multiline item style</p> 
<p align="center"> <img alt="multiline item style" src="../../../images/gl-multiline.png" /> </p>

<p class="figure">Figure: group_index item style</p> 
<p align="center"> <img alt="group_index item style" src="../../../images/gl-group_index.png" /> </p>


<p>For more information on creating a new genlist item style, see <a href="component_custom_n.htm">Customizing Components</a>.</p>
</li></ul>


<h2 id="items">Defining the Genlist Item Class</h2>

<p>To save up memory and speed up processing when many items exist, the genlist has the concept of &quot;realization&quot; when managing items. It means that a genlist item creates its text and content when the user scrolls the list and the item shows up on the display (realize), and frees them when the item is scrolled out of the screen (unrealize). To enable the item realization, you must create and fill an <span style="font-family: Courier New,Courier,monospace">Elm_Genlist_Item_Class</span> structure (genlist item class) that informs the genlist component which callbacks to call when an item is created or deleted. When the item is created, the text and content are retrieved by calling the <span style="font-family: Courier New,Courier,monospace">text_get()</span> and <span style="font-family: Courier New,Courier,monospace">content_get()</span> functions defined in the genlist item class.</p>

<p>You can use the genlist item class for the following purposes:</p>
<ul><li>Setting the item style</li>
<li>Registering callback functions for item realization</li>
<li>Registering a callback function for item deletion</li></ul>

<pre class="prettyprint">
Elm_Genlist_Item_Class *itc = elm_genlist_item_class_new();
int i;

itc-&gt;item_style = &quot;default&quot;;
itc-&gt;func.text_get = _item_label_get;
itc-&gt;func.content_get = _item_content_get;
itc-&gt;func.del = _item_del;

for (i = 0; i &lt; 10; i++) {
&nbsp;&nbsp;&nbsp;&nbsp;elm_genlist_item_append(genlist, /* Genlist object */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itc, /* Genlist item class */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(void *)i, /* Item data */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL, /* Parent item */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELM_GENLIST_ITEM_NONE, /* Item type */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_item_select, /* Select callback */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(void *)i); /* Callback data */
}
elm_genlist_item_class_free(itc);
</pre>


<p>The <span style="font-family: Courier New,Courier,monospace">func</span> structure contains pointers to functions that are called when an item is going to be realized or deleted. All of them receive item data (third parameter of the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_append()</span> function) as their first parameter and the genlist object itself as the second parameter.</p>

  <ul>
   <li><span style="font-family: Courier New,Courier,monospace">text_get()</span>
   <p>When a genlist item becomes realized, the <span style="font-family: Courier New,Courier,monospace">text_get()</span> function is called repeatedly for all text parts in that item. This function can return text with the <span style="font-family: Courier New,Courier,monospace">strdup()</span> function when the desired part is found. After the text is set to the part, it is freed automatically (do not free it manually).</p>

<pre class="prettyprint">
static char*
_item_label_get(void *data, Evas_Object *obj, const char *part)
{
&nbsp;&nbsp;&nbsp;&nbsp;if (!strcmp(part, &quot;elm.text&quot;))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return strdup(&quot;text&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NULL;
}
</pre></li>

<li><span style="font-family: Courier New,Courier,monospace">content_get()</span>
<p>As the <span style="font-family: Courier New,Courier,monospace">text_get()</span> function, the <span style="font-family: Courier New,Courier,monospace">content_get()</span> function is also called repeatedly for all swallow parts in the item. It must return a valid object handle to be set or <span style="font-family: Courier New,Courier,monospace">NULL</span> (when no content is desired). The object is deleted by the genlist on its deletion or when the item is unrealized.</p>

<pre class="prettyprint">
static Evas_Object*
_item_content_get(void *data, Evas_Object *obj, const char *part)
{
&nbsp;&nbsp;&nbsp;&nbsp;if (!strcmp(part, &quot;elm.swallow.icon&quot;)) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Evas_Object *img = elm_image_add(obj);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_image_file_Set(img, &quot;sample.png&quot;, NULL);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return img;
&nbsp;&nbsp;&nbsp;&nbsp;} else {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NULL;
&nbsp;&nbsp;&nbsp;&nbsp;}
} 
</pre></li>
   <li><span style="font-family: Courier New,Courier,monospace">del()</span>
<p>This function is called when the genlist item is deleted. It deletes any data that has been allocated at the item creation.</p>

<pre class="prettyprint">
static void
_item_del(void *data, Evas_Object *obj)
{
&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;item(%d) is now deleted&quot;, (int) data);
}
</pre></li>
</ul>

<p>The genlist item class must be freed manually with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_class_free()</span> function after all items are appended.</p>

<h2 id="manage">Managing Genlist Items</h2>

<p>To manage items:</p>
<ul>
<li>Add items:
<ul><li>To add an item to the end of the list (or if there is a parent list, to the end of all the child items of the parent list), use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_append()</span> function.</li>
<li>To add an item to the beginning of the list or parent list, use the similar <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_prepend()</span> function.</li>
<li>To insert an item before the indicated item, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_insert_before()</span> function.</li>
<li>To insert an item after the indicated item, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_insert_after()</span> function.</li>
</ul>

<p>The functions take one of the following <span style="font-family: Courier New,Courier,monospace">type</span> parameters:</p>
  <ul>
   <li><span style="font-family: Courier New,Courier,monospace">ELM_GENLIST_ITEM_NONE</span></li>
   <li><span style="font-family: Courier New,Courier,monospace">ELM_GENLIST_ITEM_TREE</span>
   <p>The item is displayed as being able to expand and have child items.</p>
   <p class="figure">Figure: Genlist tree</p>
   <p align="center"> <img alt="Genlist tree" src="../../../images/genlist_tree.png" /> </p></li>
   <li><span style="font-family: Courier New,Courier,monospace">ELM_GENLIST_ITEM_GROUP</span>
   <p>The item is a group index item that is displayed at the top until the next group appears.</p></li>
  </ul>

</li>
<li>Delete items and clear the list:
<ul><li>To delete a single genlist item, use the <span style="font-family: Courier New,Courier,monospace">elm_object_item_del()</span> function.</li>
<li>To clear the list and delete all items, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_clear()</span> function.</li>
<li>To delete all items that are children of the indicated parent item, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_subitems_clear()</span> function.</li>
</ul>
<p>If a genlist object is deleted by the <span style="font-family: Courier New,Courier,monospace">evas_object_del()</span> function, all items are deleted automatically. On item deletion, the <span style="font-family: Courier New,Courier,monospace">del()</span> function in the item class is called.</p>
</li>
<li>Inspect list elements:
<p>To help inspect the list items, move to the item at the top of the list with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_first_item_get()</span> function, which returns the item pointer. The <span style="font-family: Courier New,Courier,monospace">elm_genlist_last_item_get()</span> function moves to the item at the end of the list. The <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_next_get()</span> and <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_prev_get()</span> functions move to the next and previous items relative to the indicated item. Using these calls you can go through the entire item list or tree.</p>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">As a tree, the items are flattened on the list, so the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_parent_get()</span> function gives you the name of the parent item (even to skip them if needed).</td> 
    </tr> 
   </tbody> 
  </table>  

<p>The <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_show()</span> function scrolls the genlist to the desired item.</p>
<p>The <span style="font-family: Courier New,Courier,monospace">elm_object_item_data_get()</span> function returns the data pointer set by the item creation functions.</p>
</li>
<li>Update items:
<p>If an item changes (text or content change), use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_update()</span> function for the genlist to update the item. The genlist re-realizes the item and calls the functions in the <span style="font-family: Courier New,Courier,monospace">_Elm_Genlist_Item_Class</span> class for it.</p>

<p>You can also use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_fields_update()</span> function to update only specific parts:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">ELM_GENLIST_ITEM_FIELD_TEXT</span></li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_GENLIST_ITEM_FIELD_CONTENT</span></li></ul>
</li>
<li>Change the genlist and item size:
<p>The genlist and item size can be managed through the mode set by the <span style="font-family: Courier New,Courier,monospace">elm_genlist_mode_set()</span> function:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">ELM_LIST_COMPRESS</span>
<p>The genlist respects its container&#39;s geometry. Even if there are any items exceeding the genlist in the transverse axis, the genlist is not scrollable in that direction.</p></li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_LIST_SCROLL</span>
<p>Same as <span style="font-family: Courier New,Courier,monospace">ELM_LIST_COMPRESS</span>, but if there are any items exceeding the genlist in the transverse axis, the genlist is scrollable in that direction.</p></li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_LIST_LIMIT</span>
<p>Sets a minimum size hint on the list object, so that containers can respect it. A minimum size hint is set for its transverse axis, so that the largest item in that direction fits well.</p></li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_LIST_EXPAND</span>
<p>Besides setting a minimum size on the transverse axis, like <span style="font-family: Courier New,Courier,monospace">ELM_LIST_LIMIT</span>, the list sets a minimum size on the longitudinal axis, trying to reverse space to all its children to be visible at a time.</p></li></ul>

<p>The <span style="font-family: Courier New,Courier,monospace">elm_genlist_homogeneous_set()</span> function makes all items the same height, and increases the performance by reducing size calculation during genlist item creation.</p>
</li>
</ul>

<h2 id="selection">Selecting Genlist Items</h2>

<p>To select or deselect items manually, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_selected_set()</span> function. To expand or contract a tree item, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function.</p>

<p>To prevent a selection, you can disable an item with the <span style="font-family: Courier New,Courier,monospace">elm_object_item_disabled_set()</span> function.</p>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">The item selection comes with a highlight effect. If the user wants to cancel the highlight by touch off, you must cancel the select operation in the select callback:
<pre class="prettyprint">
static void
select_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;&nbsp;Elm_Object_Item *it = (Elm_Object_Item *)event_info;
&nbsp;&nbsp;&nbsp;&nbsp;/* Cancel select and highlight when item is selected */
&nbsp;&nbsp;&nbsp;&nbsp;elm_genlist_item_selected_set(it, EINA_FALSE);
}
</pre>	 

<p>Calling this function does not show or hide any child of an item (if it is a parent). You must manually delete and create them on the callbacks of the <span style="font-family: Courier New,Courier,monospace">expanded</span> or <span style="font-family: Courier New,Courier,monospace">contracted</span> signals.</p></td> 
    </tr> 
   </tbody> 
  </table>  

<p>By default, the genlist is in a single-selection mode: only one item can be selected at a time and you can use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_selected_item_get()</span> function to retrieve the selected item.</p>
<p>To activate the multi-selection mode, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_multi_select_set()</span> function. If several items are selected, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_selected_items_get()</span> function to return a list of the currently selected items.</p>

<p>In the following figure, the third item is disabled and the fifth and sixth item are selected in the multi-selection mode. (The check component works independently of the genlist item; unless it receives an event directly, you must change its state manually in the <span style="font-family: Courier New,Courier,monospace">selected</span> callback of the genlist item.)</p>

<p class="figure">Figure: Genlist item selection highlight</p> 
<p align="center"> <img alt="Genlist item selection highlight" src="../../../images/genlist_multi.png"/> </p> 

<h2 id="callback">Using the Genlist Callbacks</h2>

<p>To receive notifications about the genlist events, listen to the following signals:</p>
   <ul> 
   <li><span style="font-family: Courier New,Courier,monospace">activated</span>: The item is double-clicked or pressed (enter | return | spacebar). 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the activated item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">clicked,double</span>: The item is double-clicked.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the double-clicked item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">selected</span>: The item is selected.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the selected item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">unselected</span>: The item is unselected.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the unselected item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">expanded</span>: The item is to be expanded with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function. The callback fills in the child items.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the item to be expanded.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">contracted</span>: The item is to be contracted with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function. The callback deletes the child items.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the item to be contracted.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">expand,request</span>: The user wants to expand a tree branch item. The callback decides whether the item can expand (if it has any children) and calls the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function to set the state.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the item to be expanded.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">contract,request</span>: The user wants to contract a tree branch item. The callback decides whether the item can contract (if it has any children) and calls the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function to set the state.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the item to be contracted.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">realized</span>: The item is created as a real evas object.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the item to be created.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">unrealized</span>: An item is going to be unrealized. Provided content objects are deleted and the item object is deleted or put into a floating cache.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the item to be deleted.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,up</span>: The item in the list is dragged (not scrolled) up.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the dragged item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,down</span>: The item in the list is dragged (not scrolled) down.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the dragged item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,left</span>: The item in the list is dragged (not scrolled) left.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the dragged item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,right</span>: The item in the list is dragged (not scrolled) right.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the dragged item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,stop</span>: The item in the list has stopped being dragged.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the dragged item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag</span>: The item in the list is being dragged.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the dragged item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">longpressed</span>: The item is pressed for a certain amount of time. The default specified time is 1 second.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the pressed item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">scroll,anim,start</span>: The scrolling animation is started.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">scroll,anim,stop</span>: The scrolling animation is stopped.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">scroll,drag,start</span>: Dragging the content is started.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">scroll,drag,stop</span>: Dragging the content is stopped.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">scroll</span>: The scrolling is ongoing.</li>
   <li><span style="font-family: Courier New,Courier,monospace">edge,top</span>: The genlist is scrolled to the top edge.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,bottom</span>: The genlist is scrolled to the bottom edge.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,left</span>: The genlist is scrolled to the left edge.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,right</span>: The genlist is scrolled to the right edge.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">multi,swipe,left</span>: The genlist is multi-touch-swiped left.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the swiped item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">multi,swipe,right</span>: The genlist is multi-touch-swiped right.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the swiped item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">multi,swipe,up</span>: The genlist is multi-touch-swiped up.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the swiped item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">multi,swipe,down</span>: The genlist is multi-touch-swiped down.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the swiped item.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">multi,pinch,out</span>: The genlist is multi-touch-pinched out.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the pinched item.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">multi,pinch,in</span>: The genlist is multi-touch-pinched in.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the pinched item.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">swipe</span>: The genlist is swiped.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the swiped item.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">moved</span>: A genlist item is moved in the reorder mode.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the moved item.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">moved,after</span>: A genlist item is moved after another item in the reorder mode. To access the relative previous item, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_prev_get()</span> function. This signal is called along with the <span style="font-family: Courier New,Courier,monospace">moved</span> signal.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the moved item.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">moved,before</span>: A genlist item is moved before another item in the reorder mode. To access the relative next item, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_next_get()</span> function. This signal is called along with the <span style="font-family: Courier New,Courier,monospace">moved</span> signal.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the moved item.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">language,changed</span> The program language is changed.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">tree,effect,finished</span>: A genlist tree effect is finished.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">pressed</span>: The genlist item is pressed by mouse down.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the pressed item.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">released</span>: The genlist item is released by mouse up.  
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the released item.</p></li>
  </ul>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">The signal list in the API reference can be more extensive, but only the above signals are actually supported in Tizen.</td>
        </tr>
    </tbody>
</table>
  
<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

