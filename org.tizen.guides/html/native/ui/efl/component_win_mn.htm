<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

	<title>Win</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../../images/mobile_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Dependencies</p>
		<ul class="toc">
			<li>Tizen Platform 2.4 and Higher for Mobile</li>
		</ul>
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#basic">Basic Usage</a></li>
			<li><a href="#callback">Callbacks</a></li>
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>			
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Win</h1>

<p>Win stands for window, and the win component is a graphical control element containing the graphical user interface of a program. The window component is the bottom-most UI component in an EFL application. In most cases, when an application is launched, a window that fits into the device screen is created and shown. For more information, see the <a href="../../../../../org.tizen.native.mobile.apireference/group__Win.html">Win</a> API.</p>
<p>This feature is supported in mobile applications only.</p>

<h2 id="basic">Basic Usage</h2>
<p>A window is created automatically when you create a Tizen native UI application project with a template. The following example is a part of the template code handling a window component and the corresponding screenshot.</p>
<table border="0">
<caption>Example: Win use case</caption>
   <tbody>
      <tr>
         <td>
 <pre class="prettyprint">
static void
create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;&nbsp;/* Window */
&nbsp;&nbsp;&nbsp;&nbsp;/*
&nbsp;&nbsp;&nbsp;&nbsp;   Create and initialize elm_win,
&nbsp;&nbsp;&nbsp;&nbsp;   which is mandatory to manipulate the window
&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;ad-&gt;win = elm_win_util_standard_add(PACKAGE, PACKAGE);
&nbsp;&nbsp;&nbsp;&nbsp;elm_win_autodel_set(ad-&gt;win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;&nbsp;if (elm_win_wm_rotation_supported_get(ad-&gt;win)) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rots[4] = {0, 90, 180, 270};
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_win_wm_rotation_available_rotations_set(ad-&gt;win, (const int *)(&amp;rots), 4);
&nbsp;&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(ad-&gt;win, &quot;delete,request&quot;, win_delete_request_cb, NULL);
&nbsp;&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;win, EEXT_CALLBACK_BACK, win_back_cb, ad);

&nbsp;&nbsp;&nbsp;&nbsp;/* Conformant */
&nbsp;&nbsp;&nbsp;&nbsp;/*
&nbsp;&nbsp;&nbsp;&nbsp;   Create and initialize elm_conformant,
&nbsp;&nbsp;&nbsp;&nbsp;   which is mandatory for the base GUI to have a proper size
&nbsp;&nbsp;&nbsp;&nbsp;   when the indicator or virtual keypad is visible
&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;ad-&gt;conform = elm_conformant_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;&nbsp;elm_win_indicator_mode_set(ad-&gt;win, ELM_WIN_INDICATOR_SHOW);
&nbsp;&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(ad-&gt;conform, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;&nbsp;elm_win_resize_object_add(ad-&gt;win, ad-&gt;conform);
&nbsp;&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;conform);

&nbsp;&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;win);
}

static void
win_delete_request_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;&nbsp;ui_app_exit();
}

static void
win_back_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;&nbsp;appdata_s *ad = data;
&nbsp;&nbsp;&nbsp;&nbsp;/* Let the window go to the hide state */
&nbsp;&nbsp;&nbsp;&nbsp;elm_win_lower(ad-&gt;win);
}
</pre>
         </td>
         <td>
            <p align="center"><img alt="Window" src="../../../images/window_mn.png" /></p>
         </td>
      </tr>
   </tbody>
</table>
 
<p>The basic template code includes the following steps:</p>
<ol>
<li>Add a window with the <span style="font-family: Courier New,Courier,monospace">elm_win_util_standard_add()</span> function.
<p>The first parameter is the name of the window used by the window manager for identifying the window uniquely amongst all the windows within the application (and all instances of the application). The second parameter is the title of the window.</p>

<p>The <span style="font-family: Courier New,Courier,monospace">elm_win_util_standard_add()</span> function is a shortcut of the <span style="font-family: Courier New,Courier,monospace">elm_win_add()</span>, <span style="font-family: Courier New,Courier,monospace">elm_win_title_set()</span>, and <span style="font-family: Courier New,Courier,monospace">elm_bg_add()</span> functions. It creates a basic window with a title and adds a standard background to the window.</p>
<pre class="prettyprint">
Evas_Object *win;
Evas_Object *bg;

/* Add a window */
win = elm_win_add(NULL, &quot;name&quot;, ELM_WIN_BASIC);
/* Set a title to the window */
elm_win_title_set(win, &quot;title&quot;);
/* Add a background and set it as the contents of the window */
bg = elm_bg_add(win);
evas_object_size_hint_weight_set(bg, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
elm_win_resize_object_add(win, bg);
evas_object_show(bg);
</pre>
</li>
<li>Enable auto deletion with the <span style="font-family: Courier New,Courier,monospace">elm_win_autodel_set()</span> function.
<p>When closing the window in any way outside the program control, a <span style="font-family: Courier New,Courier,monospace">delete,request</span> signal is emitted to indicate that this event occurred. If you enable auto deletion, the window is automatically destroyed after the signal is emitted. If auto deletion is disabled, the window is not destroyed and the program has to handle it.</p>
</li>
<li>Register a callback function connected to the <span style="font-family: Courier New,Courier,monospace">delete,request</span> signal. You can register extra <a href="#callback">callback</a> functions, if necessary.</li>
<li>Show or hide an indicator with the <span style="font-family: Courier New,Courier,monospace">elm_win_indicator_mode_set()</span> function.</li>
<li>Add a conformant to the window with the <span style="font-family: Courier New,Courier,monospace">elm_win_resize_object_add()</span> function.
<p>In most cases, you want the content of the window to be resized every time the window is resized due to rotation. To match the content size with the window size, make the content expand to fit the container size with the <span style="font-family: Courier New,Courier,monospace">evas_object_size_hint_weight_set()</span> function and add it to the window with the <span style="font-family: Courier New,Courier,monospace">elm_win_resize_object_add()</span> function.</p>
 <pre class="prettyprint">
Evas_Object *win;
Evas_Object *obj;

evas_object_size_hint_weight_set(obj, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
elm_win_resize_object_add(win, obj);
</pre>
</li>
<li>Call the <span style="font-family: Courier New,Courier,monospace">evas_object_show()</span> function after all the properties are set.</li>
</ol>

<h2 id="callback">Callbacks</h2>

<p>You can register callback functions connected to the following signals for a win object.</p>

<table border="1">
   <caption>Table: Win callback signals</caption> 
   <tbody>
      <tr>
         <th>Signal</th> 
         <th>Description</th> 
         <th><span style="font-family: Courier New,Courier,monospace">event_info</span></th> 
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">delete,request</span></td>
         <td>The window is deleted.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">focused</span></td>
         <td>The window received focus.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">unfocused</span></td>
         <td>The window lost focus.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">moved</span></td>
         <td>The window that holds the canvas is moved.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">withdrawn</span></td>
         <td>The window is managed normally but is removed from the view.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">iconified</span></td>
         <td>The window is minimized (for example, into an icon or taskbar).</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
        <td><span style="font-family: Courier New,Courier,monospace">normal</span></td>
         <td>The window is in the normal state (not withdrawn or iconified).</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">stick</span></td>
         <td>The window shows on all desktops.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">unstick</span></td>
         <td>The window shows only on 1 desktop.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">fullscreen</span></td>
         <td>The window is fullscreen.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">unfullscreen</span></td>
         <td>The window stops being fullscreen.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">maximized</span></td>
         <td>The window is maximized.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">unmaximized</span></td>
         <td>The window is diminished.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">ioerr</span></td>
         <td>A low-level I/O error occurred in the display system.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">wm,rotation,changed</span></td>
         <td>The rotation of the window is changed by the Windows Manager.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">indicator,prop,changed</span></td>
         <td>The property, or indicator mode and indicator opacity are changed.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">rotation,changed</span></td>
         <td>The rotation of the window is changed.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">profile,changed</span></td>
         <td>The profile of the window is changed.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">aux,hint,allowed</span></td>
         <td>The window auxiliary hint is allowed.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
   </tbody>
</table>
 
<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">The signal list in the API reference can be more extensive, but only the above signals are actually supported in Tizen.</td>
        </tr>
    </tbody>
</table>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

