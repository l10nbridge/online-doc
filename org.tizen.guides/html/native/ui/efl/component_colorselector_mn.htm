<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>

	<title>Colorselector</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../../images/mobile_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Dependencies</p>
		<ul class="toc">
			<li>Tizen Platform 2.4 and Higher for Mobile</li>
		</ul>
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#basic">Basic Usage</a></li>
			<li><a href="#style">Styles</a></li>
			<li><a href="#callback">Callbacks</a></li>
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>Colorselector</h1>


<p>The colorselector UI component allows users to select a color. For more information, see the <a href="../../../../../org.tizen.native.mobile.apireference/group__Colorselector.html">Colorselector</a> API.</p>
   <p>This feature is supported in mobile applications only.</p>
 
<h2 id="basic">Basic Usage</h2>
 
<p>To use a colorselector component in your application:</p>
<ol>
   <li>Add a colorselector with the <span style="font-family: Courier New,Courier,monospace">elm_colorselector_add()</span> function:
<pre class="prettyprint">
Evas_Object *colorsel;

colorsel = elm_colorselector_add(parent);
</pre>
   </li>
   <li>Set a mode to the colorselector with the <span style="font-family: Courier New,Courier,monospace">elm_colorselector_mode_set()</span> function. Currently, only the palette mode is available in Tizen.
<pre class="prettyprint">
elm_colorselector_mode_set(colorsel, ELM_COLORSELECTOR_PALETTE);
</pre>
   </li>
   <li>Set a name to the palette with the <span style="font-family: Courier New,Courier,monospace">elm_colorselector_palette_name_set()</span> function. If you use the default palette, you can skip this step.</li>
   <li>Add colors to the palette. If you use the default style, you can skip this step, since the default palette already has the colors selected.
<p>The new palette is saved by the elementary configuration and you can load it again later.</p>
<p>The palette mode displays several color items for the user to select from. It is possible to add new items, or to update the color of the current item. The list of color items is called a palette, and it is associated with a unique identifier. You can create a new series of colors (a new palette) and save it under another identifier. By default, the palette mode uses the <span style="font-family: Courier New,Courier,monospace">default</span> palette, which contains 14 colors.</p>
   
   </li>
   <li>Register the <a href="#callback">callback</a> functions.
   <p>When a color in the colorselector is clicked, the color set to the colorselector component changes.
   Retrieve the currently selected color with the <span style="font-family: Courier New,Courier,monospace">elm_colorselector_color_set()</span> function.</p>
   <p>The following example shows how to define and register a callback for the <span style="font-family: Courier New,Courier,monospace">changed</span> signal:</p>
<pre class="prettyprint">
evas_object_smart_callback_add(colorselector, &quot;changed&quot;, changed_cb, data);

void
changed_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;The color has changed\n&quot;);
}
</pre> 
   
   </li>
</ol>

<p>The following example shows a simple use case of the colorselector component.</p>
<table border="0">
   <caption>Example: Colorselector use case</caption> 
   <tbody>
      <tr>
         <td>
<pre class="prettyprint">
Evas_Object *win;
Evas_Object *conf;
Evas_Object *nf;
Evas_Object *colsel;
Elm_Object_Item *nf_it;

/* Starting right after <a href="ui_layouts_n.htm#code">the basic EFL UI layout code</a> */
/* win - conformant - naviframe */

colsel = elm_colorselector_add(nf);
elm_colorselector_mode_set(colsel, ELM_COLORSELECTOR_PALETTE);
evas_object_show(colsel);

elm_naviframe_item_push(nf, &quot;Colorselector&quot;, NULL, NULL, colsel, NULL);
</pre>
         </td>
         <td>
            <p align="center"><img alt="Colorselector" src="../../../images/colorselector1.png" /></p>
         </td>
      </tr>
   </tbody>
</table>
 
<p>The following example shows how to add a new palette called <span style="font-family: Courier New,Courier,monospace">mypalette</span>, with 3 colors (red, green, and blue).</p>
 
<table border="0">
   <caption>Example: Customized colorselector</caption> 
   <tbody>
      <tr>
         <td>
<pre class="prettyprint">
Evas_Object *win;
Evas_Object *conf;
Evas_Object *nf;
Evas_Object *colsel;
Elm_Object_Item *nf_it;
 
/* Starting right after <a href="ui_layouts_n.htm#code">the basic EFL UI layout code</a> */
/* win - conformant - naviframe */

colsel = elm_colorselector_add(nf);
elm_colorselector_mode_set(colsel, ELM_COLORSELECTOR_PALETTE);
evas_object_show(colsel);

elm_naviframe_item_push(nf, &quot;Colorselector&quot;, NULL, NULL, colsel, NULL);
 
elm_colorselector_palette_name_set(colorsel, &quot;mypalette&quot;);
elm_colorselector_palette_color_add(colorsel, 255, 0, 0, 255);
elm_colorselector_palette_color_add(colorsel, 0, 255, 0, 255);
elm_colorselector_palette_color_add(colorsel, 0, 0, 255, 255);
</pre>
         </td>
         <td>
            <p align="center"><img alt="Colorselector" src="../../../images/colorselector2.png" /></p>
         </td>
      </tr>
   </tbody>
</table>
 
<h2 id="style">Styles</h2>

<p>The following table lists the available component styles.</p>

<table>
<caption>Table: Colorselector styles</caption>
<tbody>
<tr>
 <th>Style</th>
 <th>Sample</th>
 <th>Notes</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">elm/colorselector/item/color/colorplane</span></td>
 <td align="center"><img alt="elm/colorselector/item/color/colorplane" src="../../../images/color_colorplane.png" /></td>
 <td>Use the following command: <span style="font-family: Courier New,Courier,monospace">elm_colorselector_mode_set(colorselector, ELM_COLORSELECTOR_PALETTE);</span></td>
 </tr>
 </tbody>
</table>
 
<h2 id="callback">Callbacks</h2>

<p>You can register callback functions connected to the following signals for a colorselector object.</p>

<table border="1">
   <caption>Table: Colorselector callback signals</caption> 
   <colgroup> 
      <col /><col />
   </colgroup> 
   <tbody>
      <tr>
         <th>Signal</th> 
         <th>Description</th> 
         <th><span style="font-family: Courier New,Courier,monospace">event_info</span></th> 
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">changed</span></td>
         <td>The color value changes on the selector.</td>
         <td><span style="font-family: Courier New,Courier,monospace">NULL</span></td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">color,item,selected</span></td>
         <td>The color item is pressed.</td>
         <td>The pressed color item</td>
      </tr>
      <tr>
         <td><span style="font-family: Courier New,Courier,monospace">color,item,longpressed</span></td>
         <td>The color item is long-pressed.</td>
         <td>The long-pressed color item</td>
      </tr>
   </tbody> 
</table>
 
<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">The signal list in the API reference can be more extensive, but only the above signal is actually supported in Tizen.</td>
        </tr>
    </tbody>
</table>
 



<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

