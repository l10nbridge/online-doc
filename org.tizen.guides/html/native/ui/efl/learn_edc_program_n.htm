<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../../css/snippet.css" />
	<script type="text/javascript" src="../../../scripts/snippet.js"></script>
	<script type="text/javascript" src="../../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../../scripts/search.js" charset="utf-8"></script>
  <title>Program Block</title>
 </head>
 <body onload="prettyPrint()" style="overflow: auto;">

 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../../images/wearable_s_n.png"/></p>
	</div>

	<div id="toc_border"><div id="toc">
	<p class="toc-title">Dependencies</p>
	<ul class="toc">
		<li>Tizen Platform 2.4 and Higher for Mobile</li>
		<li>Tizen Platform 2.3.1 and Higher for Wearable</li>
	</ul>
	<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="learn_edc_collections_n.htm">Collections Block</a></li>
			<li><a href="learn_edc_group_n.htm">Group Block</a></li>
			<li><a href="learn_edc_part_n.htm">Part Block</a></li>
			<li><a href="learn_edc_images_n.htm">Images Block</a></li>
			<li><a href="learn_edc_fonts_n.htm">Fonts Block</a></li>
			<li><a href="learn_edc_data_n.htm">Data Block</a></li>
			<li><a href="learn_edc_color_classes_n.htm">Color Classes Block</a></li>
			<li><a href="learn_edc_styles_n.htm">Styles Block</a></li>
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1 id="program1" name="program1">Program Block</h1>

<p id="program">The <span style="font-family: Courier New,Courier,monospace;">program</span> block defines how your interface reacts to events. Programs can change the part state or trigger other events.</p>


<p class="figure">Figure: Program block</p>
<p align="center"><img alt="Program block" src="../../../images/diagram_program.png"/></p>

<pre class="prettyprint">
program {
&nbsp;&nbsp;&nbsp;/* Set the name of the program */
&nbsp;&nbsp;&nbsp;<a href="#program_name">name</a>: &quot;programname&quot;;
&nbsp;&nbsp;&nbsp;/* Set the signals which trigger the program */
&nbsp;&nbsp;&nbsp;<a href="#signal">signal</a>: &quot;signalname&quot;;
&nbsp;&nbsp;&nbsp;/* Filter incoming signals depending on the sender name */
&nbsp;&nbsp;&nbsp;<a href="#program_source">source</a>: &quot;partname&quot;;
&nbsp;&nbsp;&nbsp;/* Filter incoming signals depending on the part&#39;s state */
&nbsp;&nbsp;&nbsp;<a href="#filter">filter</a>: &quot;partname&quot; &quot;statename&quot;;
&nbsp;&nbsp;&nbsp;/* Delay the program by X seconds plus a random time between 0 and Y */
&nbsp;&nbsp;&nbsp;<a href="#in">in</a>: 0.3 0.0;
&nbsp;&nbsp;&nbsp;/* Set the action to perform */
&nbsp;&nbsp;&nbsp;<a href="#action">action</a>: STATE_SET &quot;statename&quot; state_value;
&nbsp;&nbsp;&nbsp;/* If the action is STATE_SET, define a transition from the current to the target state */
&nbsp;&nbsp;&nbsp;<a href="#transition">transition</a>: LINEAR 0.5;
&nbsp;&nbsp;&nbsp;/* If the action is SIGNAL_EMIT, set the name of the part which receives the signal */
&nbsp;&nbsp;&nbsp;<a href="#target">target</a>: &quot;partname&quot;;
&nbsp;&nbsp;&nbsp;/* Run another program after the current one is done */
&nbsp;&nbsp;&nbsp;<a href="#after">after</a>: &quot;programname&quot;;
&nbsp;&nbsp;&nbsp;<a href="#after">after</a>: &quot;anotherprogram&quot;;
}
</pre>

<ul>

<li id="program_name"><span style="font-family: Courier New,Courier,monospace;">name [program name]</span>
<p>Sets the symbolic name of the program as a unique identifier.</p>
</li>

<li id="signal"><span style="font-family: Courier New,Courier,monospace;">signal [signal name]</span>
<p>Sets the signals that cause the program to run. The signal received must match the specified source to run. There can be several signals, but only one signal keyword per program can be used. Also, there are some predefined signals for touch event handling. The predefined signals are:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">hold,on</span>: Holding on the mouse event matching the source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">hold,off</span>: Holding off the mouse event matching the source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">focus,part,in</span>: Focusing in the matching source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">focus,part,out</span>: Focusing out of the matching source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">mouse,in</span>: Moving the mouse into the matching source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">mouse,out</span>: Moving the mouse out of the matching source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">mouse,move</span>: Moving the mouse in the matching source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">mouse,down,*</span>: Pressing the mouse button in the matching source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">mouse,up,*</span>: Releasing the mouse button in the matching source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">mouse,clicked,*</span>: Clicking any mouse button in the matching source that starts the program</li>
<li><span style="font-family: Courier New,Courier,monospace;">mouse,wheel,0,*</span>: Moving the mouse wheel in the matching source that starts the program. A positive number moves up and a negative number moves down.</li>
<li><span style="font-family: Courier New,Courier,monospace;">drag,start</span>: Starting a drag of the mouse in the matching source that starts the program. This signal works only in the <span style="font-family: Courier New,Courier,monospace;">draggable</span> part.</li>
<li><span style="font-family: Courier New,Courier,monospace;">drag,stop</span>: Stopping a drag of the mouse in the matching source that starts the program. This signal works only in the <span style="font-family: Courier New,Courier,monospace;">draggable</span> part.</li>
<li><span style="font-family: Courier New,Courier,monospace;">drag</span>: Dragging the mouse in the matching source that starts the program. This signal works only in the <span style="font-family: Courier New,Courier,monospace;">draggable</span> part.</li>
</ul>
</li>

<li id="program_source"><span style="font-family: Courier New,Courier,monospace;">source [source name]</span>
<p>Sets the source of an accepted signal. There can be several signals, but only one source keyword per program can be used. For example, <span style="font-family: Courier New,Courier,monospace;">source: button-*</span> means that signals from any part or program named <span style="font-family: Courier New,Courier,monospace;">button-*</span> are accepted.</p>
</li>

<li id="filter"><span style="font-family: Courier New,Courier,monospace;">filter [part] [state]</span>
<p>Filters the signals to be only accepted if the part is in the <span style="font-family: Courier New,Courier,monospace;">[state]</span> state. Only 1 filter per program can be used. If the <span style="font-family: Courier New,Courier,monospace;">[state]</span> parameter is not given, the source of the event is used instead.</p>
</li>

<li id="in"><span style="font-family: Courier New,Courier,monospace;">in [from] [range]</span>
<p>Waits <span style="font-family: Courier New,Courier,monospace;">[from]</span> seconds before executing the program and add a random number of seconds (from 0 to <span style="font-family: Courier New,Courier,monospace;">[range]</span>) to the total waiting time.</p>
</li>

<li id="action"><span style="font-family: Courier New,Courier,monospace;">action [type] (param1) (param2) (param3) (param4)</span>
<p>Sets the action to be performed by the program. The valid actions (only 1 can be specified) are:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">STATE_SET</span>: Set the <span style="font-family: Courier New,Courier,monospace;">target part</span> state as <span style="font-family: Courier New,Courier,monospace;">target state</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">ACTION_STOP</span>: Stop the ongoing transition</li>
<li><span style="font-family: Courier New,Courier,monospace;">SIGNAL_EMIT</span>: Emit a signal to the application level. The application can register a callback for handling actions based on the EDC state.</li>
<li><span style="font-family: Courier New,Courier,monospace;">DRAG_VAL_SET</span>: Set a value for the <span style="font-family: Courier New,Courier,monospace;">draggable</span> part (x, y values)</li>
<li><span style="font-family: Courier New,Courier,monospace;">DRAG_VAL_STEP</span>: Set a step for the <span style="font-family: Courier New,Courier,monospace;">draggable</span> part (x, y values)</li>
<li><span style="font-family: Courier New,Courier,monospace;">DRAG_VAL_PAGE</span>: Set a page for the <span style="font-family: Courier New,Courier,monospace;">draggable</span> part (x, y values)</li>
<li><span style="font-family: Courier New,Courier,monospace;">FOCUS_SET</span>: Set the focus to the target group</li>
<li><span style="font-family: Courier New,Courier,monospace;">PLAY_SAMPLE &quot;sample name&quot; speed (channel)</span>: Play a music sample clip

<p><span style="font-family: Courier New,Courier,monospace;">PLAY_SAMPLE</span>&#39;s (optional) channel can be one of:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">EFFECT/FX</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">BACKGROUND/BG</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">MUSIC/MUS</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">FOREGROUND/FG</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">INTERFACE/UI</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">INPUT</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">ALERT</span></li>
</ul>
</li>

<li><span style="font-family: Courier New,Courier,monospace;">PLAY_TONE &quot;tone name&quot; duration_in_seconds (Range 0.1 to 10.0)</span>: Play a predefined tone of a specific duration</li>
<li><span style="font-family: Courier New,Courier,monospace;">PLAY_VIBRATION &quot;sample name&quot; repeat (repeat count)</span></li>
</ul></li>


<li id="transition"><span style="font-family: Courier New,Courier,monospace;">transition [type] [length] (interp val 1) (interp val 2) (option)</span>
<p>Determines how transitions occur using the <span style="font-family: Courier New,Courier,monospace;">STATE_SET</span> action. The <span style="font-family: Courier New,Courier,monospace;">[type]</span> parameter is the style of the transition and the <span style="font-family: Courier New,Courier,monospace;">[length]</span> parameter is a double specifying the number of seconds in which to perform the transition. The valid types are:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">LIN</span> or <span style="font-family: Courier New,Courier,monospace;">LINEAR</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">SIN</span> or <span style="font-family: Courier New,Courier,monospace;">SINUSOIDAL</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">ACCEL</span> or <span style="font-family: Courier New,Courier,monospace;">ACCELERATE</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">DECEL</span> or <span style="font-family: Courier New,Courier,monospace;">DECELERATE</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">ACCEL_FAC</span> or <span style="font-family: Courier New,Courier,monospace;">ACCELERATE_FACTOR</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">DECEL_FAC</span> or <span style="font-family: Courier New,Courier,monospace;">DECELERATE_FACTOR</span></li>
    <li><span style="font-family: Courier New,Courier,monospace;">SIN_FAC</span> or <span style="font-family: Courier New,Courier,monospace;">SINUSOIDAL_FACTOR</span></li>
    <li><span style="font-family: Courier New,Courier,monospace;">DIVIS</span> or <span style="font-family: Courier New,Courier,monospace;">DIVISOR_INTERP</span></li>
    <li><span style="font-family: Courier New,Courier,monospace;">BOUNCE</span></li>
    <li><span style="font-family: Courier New,Courier,monospace;">SPRING</span></li>
</ul>
<p>The types have the following requirements:</p>
<ul>

<li><span style="font-family: Courier New,Courier,monospace;">ACCEL_FAC</span>, <span style="font-family: Courier New,Courier,monospace;">DECEL_FAC</span>, and <span style="font-family: Courier New,Courier,monospace;">SIN_FAC</span> need the extra optional <span style="font-family: Courier New,Courier,monospace;">interp val 1</span> to determine the <span style="font-family: Courier New,Courier,monospace;">factor</span> of curviness. 1.0 is the same as their non-factor counterparts and 0.0 is equal to linear. Numbers higher than 1.0 make the curve angles steeper with a more pronounced curve point.</li>

<li><span style="font-family: Courier New,Courier,monospace;">DIVIS</span>, <span style="font-family: Courier New,Courier,monospace;">BOUNCE</span>, and <span style="font-family: Courier New,Courier,monospace;">SPRING</span> also require <span style="font-family: Courier New,Courier,monospace;">interp val 2</span> in addition to <span style="font-family: Courier New,Courier,monospace;">interp val 1</span>.</li>

<li><span style="font-family: Courier New,Courier,monospace;">DIVIS</span> uses <span style="font-family: Courier New,Courier,monospace;">[val 1]</span> as the initial gradient start (for example, 0.0 is horizontal, 1.0 is diagonal (linear), and 2.0 is twice the gradient of linear). <span style="font-family: Courier New,Courier,monospace;">[val 2]</span> is interpreted as an integer factor defining how much the value swings outside the gradient before going back to the final resting spot at the end. 0.0 for <span style="font-family: Courier New,Courier,monospace;">[val 2]</span> is equivalent to a linear interpolation. Note that <span style="font-family: Courier New,Courier,monospace;">DIVIS</span> can exceed 1.0.</li>

<li><span style="font-family: Courier New,Courier,monospace;">BOUNCE</span> uses <span style="font-family: Courier New,Courier,monospace;">[val 2]</span> as the number of bounces (so it is rounded down to the nearest integer value), with <span style="font-family: Courier New,Courier,monospace;">[val 1]</span> determining how much the bounce decays; 0.0 gives a linear decay per bounce and higher values give much more decay.</li>

<li><span style="font-family: Courier New,Courier,monospace;">SPRING</span> is similar to bounce; <span style="font-family: Courier New,Courier,monospace;">[val 2]</span> specifies the number of spring swings and <span style="font-family: Courier New,Courier,monospace;">[val 1]</span> specifies the decay, but it can exceed 1.0 on the outer swings.</li>

<li>The valid options are:
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">CURRENT</span>: Causes the object to move from its current position. Can be used as the last parameter of any transition type.</li>
</ul>
</li>
</ul>
</li>
<li id="target"><span style="font-family: Courier New,Courier,monospace;">target [target]</span>
<p>Sets the program or part on which the specified action acts.</p>
</li>

<li id="after"><span style="font-family: Courier New,Courier,monospace;">after [after]</span>
<p>Determines the program that is run after the current program completes. The source and signal parameters of a program run as an <span style="font-family: Courier New,Courier,monospace;">after</span> are ignored. Multiple <span style="font-family: Courier New,Courier,monospace;">after</span> statements can be specified per program.</p>
</li>
</ul>

 <table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
