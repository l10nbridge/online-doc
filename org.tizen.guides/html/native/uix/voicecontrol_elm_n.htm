<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Voice control elementary</title>
 </head>
 <body onload="prettyPrint()" style="overflow: auto;">

 <div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
    </div>

    <div id="toc_border"><div id="toc">
        <p class="toc-title">Related Info</p>
        <ul class="toc">
			<li><a href="../../../../org.tizen.tutorials/html/native/uix/voicecontrol_elm_tutorial_n.htm">Voice control elementary Tutorial</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__VOICE__CONTROL__ELEMENTARY__MODULE.html">Voice control elementary API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__VOICE__CONTROL__ELEMENTARY__MODULE.html">Voice control elementary API for Wearable Native</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
 
<h1>Voice control elementary</h1>

  <p>You can register voice commands for EFL-supported UI components to allow the user to interact with visible UI components inside the application using their voice. The Voice control elementary library recognizes spoken commands from registered UI components. </p>
  
  <p>The following figure illustrates the application screen when the Voice control elementary features are enabled. When the screen is updated, any UI components that have a registered command and hint are shown with a tooltip (hint). When the user speaks the hint, the callback function of the action related to the UI component is executed.</p>
<p class="figure">Figure: Voice command hints on the screen</p>
			<p align="center"><img alt="Voice command hints on the screen" src="../../images/voice_control_elm_screen.png" /></p> 
  
 <p>You have no need to consider how to recognize voice commands or start and stop the recognition process. A preloaded voice application handles the process automatically. You just need to set the command and hint on every EFL elementary component on which you want to use the voice command.</p>

<p>When the user speaks a command corresponding to a visible EFL elementary component on the screen, the recognized command is sent to the Voice control elementary library from the Voice control service, and the action mapped to the component is executed. For example, if the component is a button, the action can be a button click.</p> 
 
 
			<p class="figure">Figure: Voice command process</p>
			<p align="center"><img alt="Voice command process" src="../../images/voice_control_elm.png" /></p> 
  
  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">The detailed implementation of the preloaded voice application (how to trigger and recognize the user speaking) can differ according to the device (mobile, wearable, or TV).</td> 
    </tr> 
   </tbody> 
  </table>    
  
  
<p>The main features of the Voice control elementary API include:</p>  
<ul>  
<li>Managing commands and hints
	<p>You can set commands and hints for visible UI components on the application screen. The hint message shows the user which command must be spoken to interact with that UI component. When the user speaks a command, the command is executed.</p></li>
<li>Retrieving information
	<p>You can get various information from the Voice control elementary API:</p>
	<ul><li>Default language
<p>You can start the recognition with any language you want. However, if you do not set a specific language, the Voice control elementary library start recognizing voice commands with the default language.</p></li>
<li>Supported language
<p>You can retrieve a list of supported languages to check whether the language that you want is supported.</p></li>
<li>Supported UI components, actions, and commands
<p>You can retrieve a list of supported UI components that can be interacted with using the voice commands. You can also retrieve a list of supported actions and their commands for each UI component type.</p></li></ul>
</li>
</ul>  

 
<p>The following table lists the EFL UI components that support voice commands, and the actions supported by each component and already defined in the configuration file. Note that the label component only supports the hint without any action command.</p>  
<table>
<caption>Table: UI components and their actions</caption>
<tbody>
<tr>
 <th rowspan="2">UI component</th>
 <th colspan="5">Action/command</th>
</tr>
<tr>
 <th>click/()</th>
 <th>up/up</th>
 <th>down/down</th>
 <th>left/left</th>
 <th>right/right</th>
</tr>
 <tr>
 <td>Button</td>
 <td>Yes</td>
 <td>No</td>
 <td>No</td>
 <td>No</td>
 <td>No</td> 
 </tr>
 <tr>
 <td>Check</td>
 <td>Yes</td>
 <td>No</td>
 <td>No</td>
 <td>No</td>
 <td>No</td> 
 </tr>
 <tr>
 <td>Ctxpopup</td>
 <td>Yes</td>
 <td>No</td>
 <td>No</td>
 <td>No</td>
 <td>No</td> 
 </tr>
 <tr>
 <td>Entry</td>
 <td>Yes</td>
 <td>No</td>
 <td>No</td>
 <td>No</td>
 <td>No</td> 
 </tr>
 <tr>
 <td>Gengrid</td>
 <td>No</td>
 <td>Yes</td>
 <td>Yes</td>
 <td>Yes</td>
 <td>Yes</td> 
 </tr>
 <tr>
 <td>Genlist</td>
 <td>No</td>
 <td>Yes</td>
 <td>Yes</td>
 <td>No</td>
 <td>No</td> 
 </tr>
 <tr>
 <td>Label</td>
 <td>No</td>
 <td>No</td>
 <td>No</td>
 <td>No</td>
 <td>No</td> 
 </tr>
 <tr>
 <td>Radio</td>
 <td>Yes</td>
 <td>No</td>
 <td>No</td>
 <td>No</td>
 <td>No</td> 
 </tr>
 <tr>
 <td>Slider</td>
 <td>No</td>
 <td>Yes</td>
 <td>Yes</td>
 <td>Yes</td>
 <td>Yes</td> 
 </tr>
 <tr>
 <td>Spinner</td>
 <td>No</td>
 <td>Yes</td>
 <td>Yes</td>
 <td>Yes</td>
 <td>Yes</td> 
 </tr>
 <tr>
 <td>Toolbar</td>
 <td>No</td>
 <td>Yes</td>
 <td>Yes</td>
 <td>Yes</td>
 <td>Yes</td> 
 </tr> 
 </tbody></table>  
  
  
  
<p>To use the voice commands:</p>

<ol><li>Initialize the Voice control elementary library and create a handle.
<p>The Voice control elementary handle is used to set user-defined commands and hints for the corresponding UI component in the application.</p></li>
<li>Set commands and hints.
<p>With a handle related to the individual UI component in the application screen, you can specify a command used to distinguish that component from others.</p>
<p>Along with the command, you can set a hint message. The command and hint can be different, but consistency tends to create a better user experience. You can also set a hint without a command simply to provide information to the user.</p>
</li>
<li>When no longer needed, destroy the handle and deinitialize the Voice control elementary library.</li></ol>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">Set the commands and hints on visible EFL elementary UI components only. When the visible components on the screen change, the commands and hints must also change.</td> 
    </tr> 
   </tbody> 
  </table>   
  
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer"> 
<p class="footer">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p> 
</div> 

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
