<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Widget Application</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mn_icon.png"/> <img alt="Wearable native" src="../../images/wn_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
			<ul class="toc">
				<li><a href="#app">Widget Application States and Events</a></li>
				<li><a href="#instance">Widget Instance States and Events</a></li>
			</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.tutorials/html/native/app_framework/widget_tutorial_n.htm">Widget Application Tutorial</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__WIDGET__APP__MODULE.html">Widget Application API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__WIDGET__APP__MODULE.html">Widget Application API for Wearable Native</a></li>

			</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Widget Application</h1>
<p>Widget applications are Tizen native applications shown on the home screen. They are launched by the home screen when the user selects them in the <strong>Add Widget</strong> menu.</p>

  <p>The main features of the Widget Application API include:</p>
  <ul>
	<li>Managing multiple widget instances
	<p>Each widget application usually has 1 process for maintaining the main loop. Within that process, the application can create multiple widget instances that can share the same resources.</p></li>
	<li>Managing the life-cycle
	<p>You can manage the widget application and widget instance life-cycles through callbacks that are triggered as the application or instance state changes.</p>
	<p>The widget application starts with the <span style="font-family: Courier New,Courier,monospace">main()</span> function, which initializes the application. The <span style="font-family: Courier New,Courier,monospace">widget_app_main()</span> function is used to start the application event loop. Before calling this function, set up the <span style="font-family: Courier New,Courier,monospace">widget_app_lifecycle_callback_s</span> structure variable, which is passed to the function.</p>
	<p>To ensure that the application runs smoothly, you must <a href="../../../../org.tizen.devtools/html/native_tools/manifest_text_editor_n.htm#widget_app">edit the application manifest file</a> to define the widget settings.</p>
	</li>
	<li>Creating the widget UI
	<p>The widget application can draw a UI on the home screen. To do this, you must get the window object of the home screen and attach UI components to it. You can use the <span style="font-family: Courier New,Courier,monospace">widget_app_get_elm_win()</span> function to <a href="../../../../org.tizen.tutorials/html/native/app_framework/widget_tutorial_n.htm#get_window">create an EFL object for widget window</a>.</p></li>
	</ul>

<h2 id="app" name="app">Widget Application States and Events</h2>

<p>The following figure illustrates the widget application states during the application life-cycle:</p>
<ul>
<li>When the application is launched, it is in the Ready state.</li>
<li>When the application is running on the background, it is in the Running state.</li>
<li>When the application exits, it is in the Terminated state.</li>
</ul>
       <p class="figure">Figure: Widget application life-cycle</p>
       <p align="center"><img alt="Widget application life-cycle" src="../../images/widget_app_lifecycle.png" /></p>


<p>The following table lists the callbacks you can use as the application state changes.</p>

<table>
	   <caption>
			   Table: Application state change callbacks
	   </caption>
	   <tbody>
	  <tr>
			   <th>Callback</th>
			   <th>Description</th>
	   </tr>
	   <tr>
			   <td><span style="font-family: Courier New,Courier,monospace">widget_app_create_cb()</span></td>
			   <td>Called before the main loop of the application starts.</td>
	   </tr>
	   <tr>
			   <td><span style="font-family: Courier New,Courier,monospace">widget_app_terminate_cb()</span></td>
			   <td>Called after the main loop of the application exits.</td>
	   </tr>
	   </tbody>
</table>
	
<h2 id="instance" name="instance">Widget Instance States and Events</h2>

<p>The following figure illustrates the widget instance states during the instance life-cycle:</p>
<ul>
<li>When the application is in the Ready state, the instance does not exist.</li>
<li>When the instance is created, it is in the Created state.</li>
<li>When the instance is visible, it is in the Running state.</li>
<li>When the instance is invisible, it is in the Paused state.</li>
<li>When the instance is destroyed, it is in the Destroyed state.</li>
</ul>
       <p class="figure">Figure: Widget instance life-cycle</p>
       <p align="center"><img alt="Widget instance life-cycle" src="../../images/widget_instance_lifecycle.png" /></p>


<p>The following table lists the callbacks you can use as the instance state changes.</p>

<table>
	   <caption>
			   Table: Instance state change callbacks
	   </caption>
	   <tbody>
	  <tr>
			   <th>Callback</th>
			   <th>Description</th>
	   </tr>
	   <tr>
			   <td><span style="font-family: Courier New,Courier,monospace">widget_instance_create_cb()</span></td>
			   <td>Called after the widget instance is created.</td>
	   </tr>
	   <tr>
			   <td><span style="font-family: Courier New,Courier,monospace">widget_instance_destroy_cb()</span></td>
			   <td>Called before the widget instance is destroyed.</td>
	   </tr>

	   <tr>
			   <td><span style="font-family: Courier New,Courier,monospace">widget_instance_pause_cb()</span></td>
			   <td>Called when the widget is invisible.</td>
	   </tr>
	   <tr>
			   <td><span style="font-family: Courier New,Courier,monospace">widget_instance_resume_cb()</span></td>
			   <td>Called when the widget is visible.</td>
	   </tr>

	   <tr>
			   <td><span style="font-family: Courier New,Courier,monospace">widget_instance_resize_cb()</span></td>
			   <td>Called before the widget size is changed.</td>
	   </tr>

	   <tr>
			   <td><span style="font-family: Courier New,Courier,monospace">widget_instance_update_cb()</span></td>
			   <td>Called when an event for updating the widget is received.</td>
	   </tr>
	   </tbody>
</table>	
	
<p>To register widget instance callbacks, use the <span style="font-family: Courier New,Courier,monospace">widget_app_class_create()</span> function within the <span style="font-family: Courier New,Courier,monospace">widget_app_create_cb()</span> callback function:</p>	

<pre class="prettyprint">
static widget_class_h
widget_app_create(void *user_data)
{
&nbsp;&nbsp;&nbsp;widget_instance_lifecycle_callback_s ops = 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.create = widget_instance_create,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.destroy = widget_instance_destroy,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.pause = widget_instance_pause,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.resume = widget_instance_resume,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.update = widget_instance_update,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.resize = widget_instance_resize,
&nbsp;&nbsp;&nbsp;};

&nbsp;&nbsp;&nbsp;return widget_app_class_create(ops, user_data);
}
</pre>


<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>	