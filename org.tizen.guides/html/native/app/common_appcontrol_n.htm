<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Common Application Controls</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
        <ul class="toc">
			<li><a href="#browser">Browser</a></li>
			<li><a href="#calendar">Calendar</a></li>
			<li><a href="#call">Call</a></li>
			<li><a href="#camera">Camera</a></li>
			<li><a href="#contact">Contact</a></li>
			<li><a href="#email">Email</a></li>
			<li><a href="#file">File Storage</a></li>
			<li><a href="#map">Map</a></li>
			<li><a href="#message">Message</a></li>
			<li><a href="#multimedia">Multimedia</a></li>
			<li><a href="#settings_main">System Settings</a></li>
			<ul>
				<li><a href="#settings_bluetooth">System Settings for Bluetooth</a></li>
				<li><a href="#settings_location">System Settings for Location</a></li>
				<li><a href="#settings_nfc">System Settings for NFC</a></li>
				<li><a href="#settings_wifi">System Settings for Wi-Fi</a></li>
			</ul>
			<li><a href="#voice">Voice Recorder</a></li>
        </ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.tutorials/html/native/app_framework/appcontrol_tutorial_n.htm">App Control Tutorial</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__APP__CONTROL__MODULE.html">App Control API for Mobile Native</a></li>   
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__APP__CONTROL__MODULE.html">App Control API for Wearable Native</a></li> 
			</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>Common Application Controls</h1> 

<p>The following sections introduce the common application controls.</p>

<h2 id="browser" name="browser">Browser</h2>

<h3>Performing a Web Search</h3>

<p>To find what you are looking for on the Web, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SEARCH</span> operation.</p>
<p class="figure">Figure: Performing a Web search</p>
<p align="center"><img width = "240" heiht = "480" src="../../images/common_appcontrol_browser.png" alt="Performing a Web search" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SEARCH</span></p>
<h4>URI</h4>
	<p>N/A</p>
<h4>MIME Type</h4>
	<p>N/A</p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TEXT</span></td>
				<td>The text to search. This key must be passed as a string.</td>
				<td>This key is mandatory.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
	<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
app_control_h app_control;
app_control_create(&amp;app_control);
app_control_set_operation(app_control, APP_CONTROL_OPERATION_SEARCH);
app_control_add_extra_data(app_control, APP_CONTROL_DATA_TEXT, &quot;tizen&quot;);

app_control_send_launch_request(app_control, NULL, NULL);
app_control_destroy(app_control);
</pre>

<h3>Loading a Web Page</h3>

<p>To open a web page, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span> operation and specify the Web URL in the URI.</p>
<table class="note">
  <tbody>
    <tr>
      <th class="note">Note</th>
    </tr>
    <tr>
      <td class="note">Tizen mobile platform provides this application control by default. </td>
    </tr>
  </tbody>
</table>
<p class="figure">Figure: Loading a Web page</p>
<p align="center"><img width = "240" heiht = "480" src="../../images/common_appcontrol_browser2.png" alt="Loading a Web page" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span></p>
<h4>URI (Mandatory)</h4>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">http:&lt;path&gt;</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">https:&lt;path&gt;</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">file:&lt;path&gt;</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">javascript:&lt;path&gt;</span></li>
</ul>
<h4>MIME Type (Optional)</h4>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">image/svg+xml</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">text/html</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">application/xml</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">application/xhtml+xml</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">text/plain</span></li>
</ul>
<h4>Extra Input</h4>
	<p>N/A</p>
<h4>Extra Output</h4>
	<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
app_control_h app_control;
app_control_create(&amp;app_control);
app_control_set_operation(app_control, APP_CONTROL_OPERATION_VIEW);
app_control_set_uri(app_control, &quot;https://www.tizen.org&quot;);

app_control_send_launch_request(app_control, NULL, NULL);
app_control_destroy(app_control);
</pre>

<h2 id="calendar" name="calendar">Calendar</h2>

<h3>Adding a Calendar Event</h3>

<p>To add a new event to the user&#39;s calendar, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_ADD</span> operation with the <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.calendar</span> MIME type. To specify various event details, refer to the extras defined below.</p>

<p class="figure">Figure: Adding a calendar event</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_calendar.png" alt="Adding a calendar event" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_ADD</span></p>
<h4>URI</h4>
	<p>N/A</p>
<h4>MIME Type (Mandatory)</h4>
	<p><span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.calendar</span></p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_CALENDAR_ALLDAY</span></td>
				<td>The string to indicate if an event applies to all day. Available values are <span style="font-family: Courier New,Courier,monospace">true</span> or <span style="font-family: Courier New,Courier,monospace">false</span>. This key must be passed as a string.</td>
				<td rowspan="5" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_CALENDAR_START_TIME</span></td>
				<td>The start time of the event (format: YYYY-MM-DD HH:MM:SS). This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_CALENDAR_END_TIME</span></td>
				<td>The end time of the event (format: YYYY-MM-DD HH:MM:SS). This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TITLE</span></td>
				<td>The title of the event. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TEXT</span></td>
				<td>The description of the event. This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The database record ID of the event (ID in the <span style="font-family: Courier New,Courier,monospace">_calendar_event</span> view). This key must be passed as a string. </td>
			</tr>
		</tbody>
	</table>
	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&amp;service);

app_control_set_operation(service, APP_CONTROL_OPERATION_ADD);
app_control_set_mime(service, "application/vnd.tizen.calendar");
app_control_add_extra_data(service, APP_CONTROL_DATA_TITLE, "My event");
app_control_add_extra_data(service, APP_CONTROL_DATA_TEXT, "My event text");
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
</pre>

<h3>Editing a Calendar Event</h3>

<p>To edit an existing event in the user&#39;s calendar, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_EDIT</span> operation with the <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.calendar</span> MIME type. To specify various event details, refer to the extras defined below.</p>

<p class="figure">Figure: Editing a calendar event</p>
<p align="center"><img width = "240" height = "400" src="../../images/common_appcontrol_calendar4.png" alt="Editing a calendar event" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_EDIT</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type (Mandatory)</h4>
	<p><span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.calendar</span></p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The database record ID of the event (ID in the <span style="font-family: Courier New,Courier,monospace">_calendar_event</span> view). This key must be passed as a string.</td>
				<td>This key is mandatory.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_CALENDAR_ALLDAY</span></td>
				<td>The string to indicate if an event applies to all day. Available values are <span style="font-family: Courier New,Courier,monospace">true</span> or <span style="font-family: Courier New,Courier,monospace">false</span>. This key must be passed as a string.</td>
				<td rowspan="5" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_CALENDAR_START_TIME</span></td>
				<td>The start time of event (format: YYYY-MM-DD HH:MM:SS). This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_CALENDAR_END_TIME</span></td>
				<td>The end time of event (format: YYYY-MM-DD HH:MM:SS). This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TITLE</span></td>
				<td>The title of event. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TEXT</span></td>
				<td>The description of event. This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The database record ID of the event (ID in the <span style="font-family: Courier New,Courier,monospace">_calendar_event</span> view). This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&amp;service);

app_control_set_operation(service, APP_CONTROL_OPERATION_EDIT);
app_control_set_mime(service, "application/vnd.tizen.calendar");
app_control_add_extra_data(service, APP_CONTROL_DATA_ID, &quot;42&quot;);
app_control_add_extra_data(service, APP_CONTROL_DATA_TITLE, "Edited Title");
app_control_add_extra_data(service, APP_CONTROL_DATA_CALENDAR_ALL_DAY, "true");
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
</pre>

<h3>Viewing a Calendar Event</h3>

<p>To display a specified event in the user&#39;s calendar, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span> operation. To specify various event details, refer to the extras defined below.</p>
<p>To display a specified event from vcalendar file, use file: URI. To display a specified event using calendar id, use application/vnd.tizen.calendar MIME type with APP_CONTROL_DATA_ID.</p>

<p class="figure">Figure: Viewing a calendar event</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_calendar2.png" alt="Viewing a calendar event" /></p>

<h4>Operation</h4>
<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span></p>
<h4>URI</h4>
<p><span style="font-family: Courier New,Courier,monospace">file:&lt;path&gt;</span></p>
<p>For example: <span style="font-family: Courier New,Courier,monospace">file://&lt;media storage path&gt;/file.vcs</span></p>
<h4>MIME Type</h4>
	<ul>
		<li><span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.calendar</span>
		<p>In case of viewing an event by an event ID, the event ID (ID in the <span style="font-family: Courier New,Courier,monospace">_calendar_event</span> view) extra data and <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.calendar</span> MIME type must be specified.</p>
		</li>		
		<li><span style="font-family: Courier New,Courier,monospace">text/x-vcalendar (for vcalendar file)</span></li>
		<li><span style="font-family: Courier New,Courier,monospace">text/vcalendar (for vcalendar file)</span></li>
	</ul>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The database record ID of the event (ID in the <span style="font-family: Courier New,Courier,monospace">_calendar_event</span> view). This key must be passed as a string.</td>
				<td>This key is mandatory when the MIME type is set to <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.calendar</span>.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
// To view a calendar event from a vcs file
app_control_h service;
app_control_create(&amp;service);
app_control_set_operation(service, APP_CONTROL_OPERATION_VIEW);
app_control_set_uri(service, &quot;file://&lt;app&#39;s shared path&gt;/Calendar3.vcs&quot;);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
app_control_destroy(service);

// To view a calendar event from a calendar event ID
app_control_h service;
app_control_create(&amp;service);
app_control_set_operation(service, APP_CONTROL_OPERATION_VIEW);
app_control_set_mime(service, &quot;application/vnd.tizen.calendar&quot;);
app_control_add_extra_data(service, APP_CONTROL_DATA_ID, &quot;42&quot;);

app_control_send_launch_request(service, NULL, NULL);
app_control_destroy(service);
</pre>

<h3>Selecting a Calendar Event</h3>

<p>To select a specified event in the user&#39;s calendar, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span> operation with the <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.calendar</span> MIME type. To specify various event details, refer to the extras defined below.</p>
<p class="figure">Figure: Selecting a calendar event</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_calendar3.png" alt="Selecting a calendar event" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type (Mandatory)</h4>
	<p><span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.calendar</span></p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TYPE</span></td>
				<td>The type of items to be delivered. The available values are <span style="font-family: Courier New,Courier,monospace">id</span> and <span style="font-family: Courier New,Courier,monospace">vcs</span> (<span style="font-family: Courier New,Courier,monospace">id</span> is the default, if not presented). This key must be passed as a string.</td>
				<td rowspan="3" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTION_MODE</span></td>
				<td>The selection mode of the PICK operation. The available values are <span style="font-family: Courier New,Courier,monospace">single</span> and <span style="font-family: Courier New,Courier,monospace">multiple</span> (<span style="font-family: Courier New,Courier,monospace">single</span> is the default, if not presented). This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_COUNT</span></td>
				<td>The total number of events to be returned. This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4> 
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TYPE</span></td>
				<td>The type of items to be delivered. The available values are <span style="font-family: Courier New,Courier,monospace">id</span> and <span style="font-family: Courier New,Courier,monospace">vcs</span>. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTED</span></td>
				<td>The database record ID of the event (ID in the <span style="font-family: Courier New,Courier,monospace">_calendar_event</span> view) or the paths of the vcs files. This key must be passed as an array.</td>
			</tr>
		</tbody>
	</table>
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&amp;service);

app_control_set_operation(service, APP_CONTROL_OPERATION_PICK);
app_control_set_mime(service, "application/vnd.tizen.calendar");
app_control_add_extra_data(service, APP_CONTROL_DATA_TYPE, &quot;id&quot;);
app_control_add_extra_data(service, APP_CONTROL_ SELECTION_MODE, &quot;single&quot;);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
</pre>

<h2 id="call" name="call">Call</h2>

<h3>Making a Phone Call</h3>
<p>To directly initiate a phone call, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_CALL</span> operation with a phone number URI scheme.</p>
<p class="figure">Figure: Making a phone call</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_call1.png" alt="Making a phone call" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_CALL</span></p>
	<p>To request this operation, the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/call</span> privilege is needed.</p>
<h4>URI (Mandatory)</h4>
	<p><span style="font-family: Courier New,Courier,monospace">tel:&lt;number&gt;</span></p>
	<p>For example: <span style="font-family: Courier New,Courier,monospace">tel:+821234567890</span></p>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Extra Output</h4>
<p>N/A</p>
<h4>Code Example</h4>
<pre class="prettyprint">
void launchCall()
{
&nbsp;&nbsp;&nbsp;app_control_h request = NULL;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;request);
&nbsp;&nbsp;&nbsp;app_control_set_operation(request, APP_CONTROL_OPERATION_CALL);
&nbsp;&nbsp;&nbsp;app_control_set_uri(request, "tel:0123456789");

&nbsp;&nbsp;&nbsp;app_control_send_launch_request(request, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(request);
}
</pre>


<h3>Launching a Call Application with a Phone Number</h3>

<p>To open a call application and display a predefined a phone number, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_DIAL</span> action with a phone number URI scheme. When the call application opens, it displays the phone number, but the user must press the <strong>Call</strong> button to initiate the phone call.</p>
<p class="figure">Figure: Launching a Call application</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_call2.png" alt="Launching a Call application" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_DIAL</span></p>
<h4>URI (Optional)</h4>
	<p><span style="font-family: Courier New,Courier,monospace">tel:&lt;number&gt;</span></p>
	<p>If empty, a dialler UI without number will be presented.</p>
	<p>For example: <span style="font-family: Courier New,Courier,monospace">tel:+821234567890</span></p>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Extra Output</h4>
<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
void launchCall()
{
&nbsp;&nbsp;&nbsp;app_control_h request = NULL;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;request);
&nbsp;&nbsp;&nbsp;app_control_set_operation(request, APP_CONTROL_OPERATION_DIAL);
&nbsp;&nbsp;&nbsp;app_control_set_uri(request, "tel:0123456789");

&nbsp;&nbsp;&nbsp;app_control_send_launch_request(request, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(request);
}
</pre>


<h2 id="camera" name="camera">Camera</h2>

<h3>Capture a picture or video</h3>
<p>To take picture or record video, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_CREATE_CONTENT</span> operation with the MIME type. To specify an option, refer to the extras defined below.</p>
<p class="figure">Figure: Taking pictures (Left) and recording videos (Right)</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_camera.png" alt="Taking picture" /> <img width="240" height="400" src="../../images/common_appcontrol_camera2.png" alt="Recording video" /></p>
<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_CREATE_CONTENT</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type (Mandatory)</h4>
	<p><span style="font-family: Courier New,Courier,monospace">image/*</span></p>
	<p><span style="font-family: Courier New,Courier,monospace">video/*</span></p>

<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_SIZE</span></td>
				<td>The total size of items to be returned in bytes. This key must be passed as a string.</td>
				<td>This key is optional.</td>
			</tr>			
		</tbody>
	</table>
<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTED</span></td>
				<td>The path of the created image or video file. This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&service);

app_control_set_operation(service, APP_CONTROL_OPERATION_CREATE_CONTENT);
app_control_set_mime(service, “image/png”);
app_control_send_launch_request(service, NULL, NULL);

app_control_destory(service);
</pre>

<h3>Capture a picture</h3>
<p>To capture still image, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_IMAGE_CAPTURE</span> operation. To specify an option, refer to the extras defined below.</p>
<p class="figure">Figure: Taking a picture</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_camera.png" alt="Taking picture" /></p>
<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_IMAGE_CAPTURE</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type</h4>
<p>N/A</p>

<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_SIZE</span></td>
				<td>The total size of items to be returned in bytes. This key must be passed as a string.</td>
				<td>This key is optional.</td>
			</tr>			
		</tbody>
	</table>
<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTED</span></td>
				<td>The path of the created file. This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&service);

app_control_set_operation(service, APP_CONTROL_OPERATION_IMAGE_CAPTURE);
app_control_send_launch_request(service, NULL, NULL);

app_control_destory(service);

</pre>

<h3>Capture a video</h3>
<p>To record video, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIDEO_CAPTURE</span> operation. To specify an option, refer to the extras defined below.</p>
<p class="figure">Figure: Record a video</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_camera2.png" alt="Recording video" /></p>
<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIDEO_CAPTURE</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type</h4>
<p>N/A</p>

<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_SIZE</span></td>
				<td>The total size of items to be returned in bytes. This key must be passed as a string.</td>
				<td>This key is optional.</td>
			</tr>			
		</tbody>
	</table>
<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTED</span></td>
				<td>The path of the created file. This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&service);

app_control_set_operation(service, APP_CONTROL_OPERATION_VIDEO_CAPTURE);
app_control_send_launch_request(service, NULL, NULL);

app_control_destory(service);


</pre>

<h2 id="contact" name="contact">Contact</h2>
<h3>Adding a Contact</h3>

<p>To add a new contact, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_ADD</span> operation with the <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.contact</span> MIME type. To specify various contact details, refer to the extras defined below.</p>
<p class="figure">Figure: Adding a contact</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_contact_add.png" alt="Adding a contact" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_ADD</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type (Mandatory)</h4>
	<p><span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.contact</span></p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PHONE</span></td>
				<td>The phone number. This key must be passed as a string.</td>
				<td rowspan="4" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_EMAIL</span></td>
				<td>The email address. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_URL</span></td>
				<td>The homepage URL. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_NAME</span></td>
				<td>The contact&#39;s name. This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The database record ID of the added person (ID in the <span style="font-family: Courier New,Courier,monospace">_contacts_person</span> view). This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>
<h4>Example Code</h4>
<pre class="prettyprint">

&nbsp;&nbsp;&nbsp;app_control_h request;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;request);
&nbsp;&nbsp;&nbsp;app_control_set_operation(request, APP_CONTROL_OPERATION_ADD);
&nbsp;&nbsp;&nbsp;app_control_set_mime(request, &quot;application/vnd.tizen.contact&quot;);
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(request, APP_CONTROL_DATA_PHONE, "0123456789");
   app_control_add_extra_data(request, APP_CONTROL_DATA_EMAIL, "tizen@tizen.org");
   app_control_add_extra_data(request, APP_CONTROL_DATA_NAME, "Tizen User");

&nbsp;&nbsp;&nbsp;app_control_set_launch_mode(request, APP_CONTROL_LAUNCH_MODE_GROUP);

&nbsp;&nbsp;&nbsp;int result = app_control_send_launch_request(request, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(request);

</pre>


<h3>Editing a Contact</h3>

<p>To edit a known contact, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_EDIT</span> operation with the <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.contact</span> MIME type. To specify various contact details, refer to the extras defined below.</p>

<p class="figure">Figure: Editing a contact</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_contact_edit.png" alt="Editing a contact" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_EDIT</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type (Mandatory)</h4>
	<p><span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.contact</span></p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The database record ID of the person to be edited (ID in the <span style="font-family: Courier New,Courier,monospace">_contacts_person</span> view). This key must be passed as a string.</td>
				<td>This key is mandatory.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PHONE</span></td>
				<td>The phone number that is added to the contact. This key must be passed as a string.</td>
				<td rowspan="3" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_EMAIL</span></td>
				<td>The email address that is added to the contact. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_URL</span></td>
				<td>The homepage URL that is added to the contact. This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>

<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The database record ID of the person to be edited (ID in the <span style="font-family: Courier New,Courier,monospace">_contacts_person</span> view). This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>
<h4>Example Code</h4>
<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;app_control_h request;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;request);
&nbsp;&nbsp;&nbsp;app_control_set_operation(request, APP_CONTROL_OPERATION_EDIT);
&nbsp;&nbsp;&nbsp;app_control_set_mime(request, &quot;application/vnd.tizen.contact&quot;);

&nbsp;&nbsp;&nbsp;app_control_add_extra_data(request, APP_CONTROL_DATA_ID, personId);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(request, APP_CONTROL_DATA_PHONE, "0987654321");
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(request, APP_CONTROL_DATA_EMAIL, "2nd Email");


&nbsp;&nbsp;&nbsp;app_control_set_launch_mode(request, APP_CONTROL_LAUNCH_MODE_GROUP);

&nbsp;&nbsp;&nbsp;int result = app_control_send_launch_request(request, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(request);
</pre>

<h3>Viewing a Contact</h3>

<p>To display a specified contact in the contact database, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span> operation. To specify various contact details, refer to the extras defined below.</p>
<p>To display a specified contact from vcard file, use file: URI. To display a specified contact with person id, use application/vnd.tizen.contact MIME type with APP_CONTROL_DATA_ID.</p>

<p class="figure">Figure: Viewing a contact from ID (Left) and from v-card file (Right)</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_contact_view1.png" alt="Viewing a contact" /> <img width="240" height="400" src="../../images/common_appcontrol_contact_view2.png" alt="Viewing a contact" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span></p>
<h4>URI</h4>
	<p><span style="font-family: Courier New,Courier,monospace">file:&lt;path&gt;</span></p>
<h4>MIME Type</h4>
<ul>
	<li><span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.contact</span>
	<p>In case of viewing a contact by a person ID, the person ID (ID in the <span style="font-family: Courier New,Courier,monospace">_contact_person</span> view) extra data and <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.contact</span> MIME type must be specified.</p>
	</li>
	<li><span style="font-family: Courier New,Courier,monospace">text/vcard</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">text/x-vcard</span></li>
</ul>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The database record ID of the edited person (ID in the <span style="font-family: Courier New,Courier,monospace">_contacts_person</span> view). This key must be passed as a string.</td>
				<td>This key is mandatory when the MIME type is set to <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.contact</span>.</td>
			</tr>
		</tbody>
	</table>

<h4>Example Code</h4>
<pre class="prettyprint">
int 
launchContactDetails(const char* personId)
{
&nbsp;&nbsp;&nbsp;app_control_h request;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;request);
&nbsp;&nbsp;&nbsp;app_control_set_operation(request, APP_CONTROL_OPERATION_VIEW);
&nbsp;&nbsp;&nbsp;app_control_set_mime(request, &quot;application/vnd.tizen.contact&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(request, APP_CONTROL_DATA_ID, personId);

&nbsp;&nbsp;&nbsp;app_control_set_launch_mode(request, APP_CONTROL_LAUNCH_MODE_GROUP);

&nbsp;&nbsp;&nbsp;int result = app_control_send_launch_request(request, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(request);

&nbsp;&nbsp;&nbsp;return result;
}

int launchViewVcard(const char *uri)
{
&nbsp;&nbsp;&nbsp;app_control_h request;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;request);
&nbsp;&nbsp;&nbsp;app_control_set_operation(request, APP_CONTROL_OPERATION_VIEW);
&nbsp;&nbsp;&nbsp;app_control_set_mime(request, &quot;text/vcard&quot;);
&nbsp;&nbsp;&nbsp;app_control_set_uri(request, uri);

&nbsp;&nbsp;&nbsp;app_control_set_launch_mode(request, APP_CONTROL_LAUNCH_MODE_GROUP);

&nbsp;&nbsp;&nbsp;int result = app_control_send_launch_request(request, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(request);

&nbsp;&nbsp;&nbsp;return result;
}
</pre>

<h3>Selecting a Contact</h3>

<p>To select a specified contact in the user&#39;s contacts, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span> operation with the <span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.contact</span> MIME type. To specify various contact details, refer to the extras defined below.</p>

<p class="figure">Figure: Selecting a contact</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_contact_select.png" alt="Selecting a contact" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type (Mandatory)</h4>
	<p><span style="font-family: Courier New,Courier,monospace">application/vnd.tizen.contact</span></p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTION_MODE</span></td>
				<td>The selection mode of the PICK operation. The available values are <span style="font-family: Courier New,Courier,monospace">single</span> and <span style="font-family: Courier New,Courier,monospace">multiple</span> (<span style="font-family: Courier New,Courier,monospace">single</span> is the default, if not presented). This key must be passed as a string.</td>
				<td rowspan="3" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TYPE</span></td>
				<td>The type of items to be delivered. The available values are <span style="font-family: Courier New,Courier,monospace">id</span>, <span style="font-family: Courier New,Courier,monospace">phone</span>, <span style="font-family: Courier New,Courier,monospace">email</span>, and <span style="font-family: Courier New,Courier,monospace">vcf</span> (<span style="font-family: Courier New,Courier,monospace">id</span> is the default, if not presented). This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_COUNT</span></td>
				<td>The total number of events to be returned. This key must be passed as a string.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TYPE</span></td>
				<td>The type of items to be delivered. The available values are <span style="font-family: Courier New,Courier,monospace">id</span>, <span style="font-family: Courier New,Courier,monospace">phone</span>, <span style="font-family: Courier New,Courier,monospace">email</span>, and <span style="font-family: Courier New,Courier,monospace">vcf</span>. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTED</span></td>
				<td>The extra field to get the return information. The content of this key depends on its type: 
				<ul>
				<li><span style="font-family: Courier New,Courier,monospace">id</span> – The database record ID of the selected person (ID in the <span style="font-family: Courier New,Courier,monospace">_contacts_person</span> view).</li>
				<li><span style="font-family: Courier New,Courier,monospace">phone</span> – The database record ID of the number of the selected person (ID in the <span style="font-family: Courier New,Courier,monospace">_contacts_number</span> view).</li>
				<li><span style="font-family: Courier New,Courier,monospace">email</span> – The database record ID of the email of the selected person (ID in the <span style="font-family: Courier New,Courier,monospace">_contacts_email</span> view).</li>
				<li><span style="font-family: Courier New,Courier,monospace">vcf</span> – The path to the vCard file.</li>
			</ul>
			<p>This key must be passed as an array.</p>
				</td>
			</tr>
		</tbody>
	</table>

<h4>Example Code</h4>
<pre class="prettyprint">
int 
launchContactPick(const char *selectionMode, const char *resultType,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;app_control_reply_cb replyCallback, void *userData)
{
&nbsp;&nbsp;&nbsp;app_control_h request;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;request);
&nbsp;&nbsp;&nbsp;app_control_set_operation(request, APP_CONTROL_OPERATION_PICK);
&nbsp;&nbsp;&nbsp;app_control_set_mime(request, &quot;application/vnd.tizen.contact&quot;);

&nbsp;&nbsp;&nbsp;app_control_add_extra_data(request, APP_CONTROL_DATA_SELECTION_MODE, selectionMode);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(request, APP_CONTROL_DATA_TYPE, resultType);

&nbsp;&nbsp;&nbsp;int result = app_control_send_launch_request(request, replyCallback, userData);
&nbsp;&nbsp;&nbsp;app_control_destroy(request);

&nbsp;&nbsp;&nbsp;return result;
}
</pre>

<h3>Sharing a Contact</h3>

<p>To share a single contact, use <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE</span> operation with MIME-type “application/vnd.tizen.contact”. To specify various contact details, refer to the extras defined below.</p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE</span></p>
<h4>URI</h4>
	<p>N/A</p>

<h4>MIME Type (Mandatory)</h4>
	<p>application/vnd.tizen.contact</p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The DB record ID of the person (id in _contacts_person view) when <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TYPE</span> is set <span style="font-family: Courier New,Courier,monospace">to <span style="font-family: Courier New,Courier,monospace">person</span>.
				The DB record ID of the my profile (id in _contacts_my_profile view) when <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TYPE</span> is set to <span style="font-family: Courier New,Courier,monospace">my_profile</span>. This key MUST be passed as a string.</p></td>
				<td rowspan="2" style="vertical-align:middle">This key is mandatory.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TYPE</span></td>
				<td>The type of contact. Available values are <span style="font-family: Courier New,Courier,monospace">my_profile</span> and <span style="font-family: Courier New,Courier,monospace">person</span>. This key MUST be passed as a string.</td>				
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
<p>N/A</p>	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&amp;service);

app_control_set_operation(service, APP_CONTROL_OPERATION_SHARE);
app_control_set_mime(service,"application/vnd.tizen.contact");
app_control_add_extra_data(service, APP_CONTROL_DATA_TYPE, "person");
app_control_add_extra_data(service, APP_CONTROL_DATA_ID, person_id);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
app_control_destroy(service);
</pre>

<h3>Sharing Multiple Contacts</h3>

<p>To share a set of contacts, use <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_MULTI_SHARE</span> operation with MIME-type “application/vnd.tizen.contact”. To specify various contact details, refer to the extras defined below.</p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_MULTI_SHARE</span></p>
<h4>URI</h4>
	<p>N/A</p>

<h4>MIME Type (Mandatory)</h4>
	<p>application/vnd.tizen.contact</p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_ID</span></td>
				<td>The DB record IDs of the person (id in _contacts_person view). This key MUST be passed as an array.</td>
				<td>This key is mandatory.</td>
			</tr>			
		</tbody>
	</table>
<h4>Extra Output</h4>
<p>N/A</p>	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;
char* contacts[3] = {contact1, contact2, contact3}; // contact1, contact2, contact3 is person id.
app_control_h service;
app_control_create(&amp;service);

app_control_set_operation(service, APP_CONTROL_OPERATION_MULTI_SHARE);
app_control_set_mime(service,"application/vnd.tizen.contact");
app_control_add_extra_data_array(service, APP_CONTROL_DATA_ID, contacts, 3);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
app_control_destroy(service);
</pre>

<h2 id="email" name="email">Email</h2>

<h3>Composing an Email</h3>

<p>To compose an email with optional recipients, subject, and body text, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_COMPOSE</span> operation.</p>

<p class="figure">Figure: Composing an email</p>
<p align="center"><img src="../../images/common_appcontrol_email.png" alt="Composing an email" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_COMPOSE</span></p>
<h4>URI (Mandatory)</h4>
<p><span style="font-family: Courier New,Courier,monospace">mailto:&lt;email address&gt;</span></p>
<p>If the <span style="font-family: Courier New,Courier,monospace">mailto:</span> field is empty, it filters out all but email applications in the system, and you can use the extra data only to pass optional parameters.</p>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TO</span></td>
				<td>The Email address of main recipient(s). This key MUST be passed as an array.</td>
				<td rowspan="6" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_CC</span></td>
				<td>The Email address of recipient(s) that should be carbon copied. This key MUST be passed as an array.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_BCC</span></td>
				<td>The Email address of recipient(s) that should be blind carbon copied. This key MUST be passed as an array.</td>
			</tr>			
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SUBJECT</span></td>
				<td>The subject of an email message. This key MUST be passed as a string.</td>
			</tr>			
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TEXT</span></td>
				<td>The body of the email to be sent. This key MUST be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PATH</span></td>
				<td>The list of multiple file paths to be shared in an email message. This key must be passed as an array.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
app_control_h service;
app_control_create(&amp;service);

char* cc[2] = {"cc@tizen.org", "cc2@tizen.org"};
char* bcc[2] = {"bcc@tizen.org", "bcc2@tizen.org"};
app_control_set_operation(service, APP_CONTROL_OPERATION_COMPOSE);
app_control_set_uri(service, "mailto:to@tizen.org");
app_control_add_extra_data_array(service, APP_CONTROL_DATA_CC, cc, 2);
app_control_add_extra_data_array(service, APP_CONTROL_DATA_BCC, bcc, 2);
app_control_add_extra_data(service, APP_CONTROL_DATA_SUBJECT, &quot;test subject&quot;);
app_control_add_extra_data(service, APP_CONTROL_DATA_TEXT, "line1\nline2");

app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);
app_control_send_launch_request(service, NULL, NULL);

app_control_destroy(service);
</pre>

<h3>Sharing a Single File using an Email Message</h3>

<p>To share a single file of any MIME type using an email message, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE</span> operation.</p>

<p class="figure">Figure: Sharing a single file</p>
<p align="center"><img src="../../images/common_appcontrol_email2.png" alt="Sharing a single file" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE</span></p>
<h4>URI (Mandatory)</h4>
	<ul><li><span style="font-family: Courier New,Courier,monospace">file:&lt;path&gt;</span>
	<li><span style="font-family: Courier New,Courier,monospace">mailto:</span>
<p>Only an empty <span style="font-family: Courier New,Courier,monospace">mailto:</span> field is allowed. This can be used to filter-out all email applications available in the system.</p></li>
	</ul>

<h4>MIME Type</h4>
	<p>Any MIME type that your application needs, such as <span style="font-family: Courier New,Courier,monospace">image/jpg</span>, <span style="font-family: Courier New,Courier,monospace">video/*</span>, or <span style="font-family: Courier New,Courier,monospace">*/*</span></p>
	<p>In case of sharing a single item through APP_CONTROL_DATA_PATH and URI specified with mailto:, MIME-type MUST be explicitly set. </p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PATH</span></td>
				<td>When the URI is set to <span style="font-family: Courier New,Courier,monospace">mailto</span>, a path to a single file to be shared must be provided using this key. Otherwise, the key is ignored. This key must be passed as a string.</td>
				<td>This key is mandatory when the URI is set to <span style="font-family: Courier New,Courier,monospace">mailto:</span>.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
#define PATH_MAX 128

char *shared_res_path = app_get_shared_resource_path();
char img_path[PATH_MAX] = {0,};
snprintf(img_path, PATH_MAX, &quot;%s/image.jpg&quot;, shared_res_path);
free(shared_res_path);

app_control_h service;
app_control_create(&amp;service);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);
app_control_set_operation(service, APP_CONTROL_OPERATION_SHARE);
app_control_set_uri(service, &quot;mailto:&quot;);
app_control_set_mime(service,"image/*");
app_control_add_extra_data(service, APP_CONTROL_DATA_PATH, img_path);

app_control_send_launch_request(service, NULL, NULL);
app_control_destroy(service);
</pre>

<h3>Sharing Multiple Items using an Email Message</h3>

<p>To share multiple files of any MIME type using an email message, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_MULTI_SHARE</span> operation.</p>

<p class="figure">Figure: Sharing multiple items</p>
<p align="center"><img src="../../images/common_appcontrol_email3.png" alt="Sharing multiple items" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_MULTI_SHARE</span></p>
<h4>URI (Optional)</h4>
<p><span style="font-family: Courier New,Courier,monospace">mailto:</span></p>
<p>Only an empty <span style="font-family: Courier New,Courier,monospace">mailto:</span> field is allowed. This can be used to filter-out all email applications available in the system.</p>

<h4>MIME Type (Mandatory)</h4>
	<p>Any MIME type that your application needs, such as <span style="font-family: Courier New,Courier,monospace">image/jpg</span>, <span style="font-family: Courier New,Courier,monospace">video/*</span>, or <span style="font-family: Courier New,Courier,monospace">*/*</span></p>
	<p>If you try to share a set of files with different MIME types, use <type>/* or */*. For example, if you send video/mp4 and audio/ogg, the MIME type MUST be */*.</p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PATH</span></td>
				<td>The list of multiple file paths to be shared in an email message. This key must be passed as an array.</td>
				<td>This key is mandatory.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
#define PATH_MAX 128

char *shared_res_path = app_get_shared_resource_path();
char img1_path[PATH_MAX] = {0,};
char img2_path[PATH_MAX] = {0,};
const char *path_array[2] = {img1_path, img2_path};
snprintf(img1_path, PATH_MAX, &quot;%s/image.jpg&quot;, shared_res_path);
snprintf(img2_path, PATH_MAX, &quot;%s/image2.jpg&quot;, shared_res_path);
free(shared_res_path);

app_control_h service;
app_control_create(&amp;service);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);
app_control_set_operation(service, APP_CONTROL_OPERATION_MULTI_SHARE);
app_control_set_uri(service, &quot;mailto:&quot;);
app_control_set_mime(service,"image/*");
app_control_add_extra_data_array(service, APP_CONTROL_DATA_PATH, path_array, 2);

app_control_send_launch_request(service, NULL, NULL);
app_control_destroy(service);
</pre>

<h3>Sharing Text in an Email</h3>

<p>To share any text with an email message, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE_TEXT</span> operation. You can also define the message subject and a list of file attachments.</p>

<p class="figure">Figure: Sharing text</p>
<p align="center"><img src="../../images/common_appcontrol_email4.png" alt="Sharing text" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE_TEXT</span></p>
<h4>URI (Mandatory)</h4>
<p><span style="font-family: Courier New,Courier,monospace">mailto:</span></p>
<p>Only an empty <span style="font-family: Courier New,Courier,monospace">mailto:</span> field is allowed. It filters out all but email applications in the system.</p>
<h4>MIME Type</h4>
<p>N/A</p>
	
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TEXT</span></td>
				<td>The body of the message to be sent. This key must be passed as a string.</td>
				<td>This key is mandatory.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SUBJECT</span></td>
				<td>The subject of an email message. This key must be passed as a string.</td>
				<td rowspan="2" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PATH</span></td>
				<td>The list of multiple file paths to be shared using an email message. This key must be passed as an array.</td>
			</tr>			
		</tbody>
	</table>
	
<h4>Example Code</h4>
<pre class="prettyprint">
#define PATH_MAX 128

char *shared_res_path = app_get_shared_resource_path();
char img1_path[PATH_MAX] = {0,};
char img2_path[PATH_MAX] = {0,};
const char *path_array[2] = {img1_path, img2_path};
snprintf(img1_path, PATH_MAX, &quot;%s/image.jpg&quot;, shared_res_path);
snprintf(img2_path, PATH_MAX, &quot;%s/image2.jpg&quot;, shared_res_path);
free(shared_res_path);

app_control_h service;
app_control_create(&amp;service);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);
app_control_set_operation(service, APP_CONTROL_OPERATION_SHARE_TEXT);
app_control_set_uri(service, &quot;mailto:&quot;);
app_control_add_extra_data_array(service, APP_CONTROL_DATA_PATH, path_array, 2);
app_control_add_extra_data(service, APP_CONTROL_DATA_SUBJECT, &quot;test subject&quot;);
app_control_add_extra_data(service, APP_CONTROL_DATA_TEXT, &quot;line1\nline2&quot;);

app_control_send_launch_request(service, NULL, NULL);
app_control_destroy(service);
</pre>

<h2 id="file" name="file">File Storage</h2>

<h3>Retrieve a specific type of file</h3>

<p>To select any kind of file from the storage, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span> operation with the corresponding MIME type. To give options for pick operation, refer to the extras defined below.</p>
<table class="note">
  <tbody>
    <tr>
      <th class="note">Note</th>
    </tr>
    <tr>
      <td class="note">Tizen mobile platform provides this application control by default. </td>
    </tr>
  </tbody>
</table>
<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type (Optional)</h4>
<p>*/*</p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTION_MODE</span></td>
				<td>The selection mode of the PICK operation. The available values are <span style="font-family: Courier New,Courier,monospace">single</span> and <span style="font-family: Courier New,Courier,monospace">multiple</span> (single is the default, if not presented). This key must be passed as a string.</td>
				<td rowspan="3" style="vertical-align:middle">This key is optional</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_COUNT</span></td>
				<td>The total number of items to be returned. This key must be passed as a string.</td>
				
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_SIZE</span></td>
				<td>The total size of items to be returned in bytes. This key must be passed as a string.</td>
				
			</tr>
		</tbody>
	</table>

<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Value Description</th>				
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTED</span></td>
				<td>The list of selected file paths. This key must be passed as an array.</td>				
			</tr>			
		</tbody>
	</table>	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&service);

app_control_set_operation(service, APP_CONTROL_OPERATION_PICK);
app_control_add_extra_data(service, APP_CONTROL_ SELECTION_MODE, "single");
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
</pre>

<h3>Download a file</h3>

<p>To download a file, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_DOWNLOAD</span> operation and specify the URL in the URI.</p>
<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_DOWNLOAD</span></p>
	<p>To request this operation, the http://tizen.org/privilege/download privilege is needed since 2.4</p>
<h4>URI</h4>
	<ul>
	<li>http:&lt;path&gt;</li>
	<li>https:&lt;path&gt;</li>
	</ul>
<h4>MIME Type</h4>
	<p>N/A</p>
<h4>Extra Input</h4>
	<p>N/A</p>
<h4>Extra Output</h4>
	<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
app_control_h app_control;
app_control_create(&amp;app_control);
app_control_set_operation(app_control, APP_CONTROL_OPERATION_DOWNLOAD);
app_control_set_uri(app_control, "http://PATH_TO_FILE");
app_control_send_launch_request(app_control, NULL, NULL);
app_control_destroy(app_control);

</pre>



<h2 id="map" name="map">Map</h2>

<h3>Showing a Location on a Map</h3>

<p>To open a map to show a location, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span> operation with an URI. To specify various map details, refer to the extras defined below.</p>


<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span></p>
<h4>URI (Mandatory)</h4>
	<ul><li><span style="font-family: Courier New,Courier,monospace">geo:latitude,longitude</span>
	<p>Show the map with 2 values that represent the latitude and longitude. For example: <span style="font-family: Courier New,Courier,monospace">geo:50.1,-50.1</span></p></li>
	<li><span style="font-family: Courier New,Courier,monospace">geo:0,0?q=keyword</span>
	<p>Show the map at the location of a given keyword (address or POI). For example: <span style="font-family: Courier New,Courier,monospace">geo:0,0?q=Eiffel%20Tower</span></p><br>
	<p>All strings passed in the geo: URI must be encoded.</p></li>
	</ul>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Extra Output</h4>
<p>N/A</p>	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;
#include &lt;dlog.h&gt;

int 
show_maps_operation(void)
{
&nbsp;&nbsp;&nbsp;int ret = 0;

&nbsp;&nbsp;&nbsp;app_control_h service = NULL;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;service);
   
&nbsp;&nbsp;&nbsp;if (service == NULL)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to create app control handler&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}
   
&nbsp;&nbsp;&nbsp;app_control_set_operation(service, APP_CONTROL_OPERATION_VIEW);
&nbsp;&nbsp;&nbsp;app_control_set_uri(service, &quot;geo:50.1,-50.1&quot;); 
  
&nbsp;&nbsp;&nbsp;ret = app_control_send_launch_request(service, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(service);
   
&nbsp;&nbsp;&nbsp;if (ret == APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Succeeded to request!\n&quot;);
	  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;else
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to request!\n&quot;);
	  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return 0;
}
</pre>

<h3>Picking a Location from the Map</h3>

<p>To pick  a location from the map, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span> operation. To specify various map details, refer to the extras defined below.</p>


<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span></p>
<h4>URI (Mandatory)</h4>
	<ul><li><span style="font-family: Courier New,Courier,monospace">geo:0,0?q=keyword</span>
	<p>If only "geo:" is used, it filters out all but map applications in the system, and you can use the extra data only to pass optional parameters.</p><br/>
	<p>Show the map at the location of a given keyword (address or POI). For example: <span style="font-family: Courier New,Courier,monospace">geo:0,0?q=Eiffel%20Tower</span></p>
	<p>All strings passed in the geo: URI must be encoded.</p></li>
	</ul>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TYPE</span></td>
				<td>The type of items to be delivered. Available values are <span style="font-family: Courier New,Courier,monospace">address</span>, <span style="font-family: Courier New,Courier,monospace">image</span>, or <span style="font-family: Courier New,Courier,monospace">all</span> (<span style="font-family: Courier New,Courier,monospace">address</span> is default if not presented). This key MUST be passed as a string.</td>
				<td>This key is optional.</td>
			</tr>
		</tbody>
	</table>

<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTED</span></td>
				<td>The address of the selected location. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PATH</span></td>
				<td>The file path of the image showing the selected location. This key must be passed as a string.</td>
			</tr>			
		</tbody>
	</table>	
	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;
#include &lt;dlog.h&gt;

int 
pick_location_operation(void)
{
&nbsp;&nbsp;&nbsp;int ret = 0;

&nbsp;&nbsp;&nbsp;app_control_h service = NULL;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;service);
   
&nbsp;&nbsp;&nbsp;if (service == NULL)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to create app control handler&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}
   
&nbsp;&nbsp;&nbsp;app_control_set_operation(service, APP_CONTROL_OPERATION_PICK);
&nbsp;&nbsp;&nbsp;app_control_set_uri(service, &quot;geo:0,0?q=”Eiffel Tower&quot;);
&nbsp;&nbsp;&nbsp;app_control_set_extra_data(service, APP_CONTROL_DATA_TYPE, &quot;poi&quot;);

&nbsp;&nbsp;&nbsp;app_control_send_launch_request(service, pick_reply_cb, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(service);

&nbsp;&nbsp;&nbsp;return 0;
}

void 
pick_reply_cb(app_control_h request, app_control_h reply, app_control_result_e result, void *user_data)
{
&nbsp;&nbsp;&nbsp;char *address = NULL;
&nbsp;&nbsp;&nbsp;char *path = NULL;

&nbsp;&nbsp;&nbsp;if (result == APP_CONTROL_RESULT_SUCCEEDED)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;app_control_get_extra_data(reply, APP_CONTROL_DATA_SELECTED, &amp;address);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;app_control_get_extra_data(reply, APP_CONTROL_DATA_PATH, &amp;path);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Selected address: %s&quot;, address);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Map image path: %s&quot;, path);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(address);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(path);
&nbsp;&nbsp;&nbsp;}
}
</pre>

<h2 id="message" name="message">Message</h2>

<h3>Composing a Message</h3>

<p>To compose a new message, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_COMPOSE</span> operation. To specify various message details, refer to the extras defined below.</p>

<p class="figure">Figure: Composing a message</p>
<p align="center"><img width="240" hegith="400" src="../../images/common_appcontrol_message.png" alt="Composing a message" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_COMPOSE</span></p>
<h4>URI (Mandatory)</h4>
	<ul><li><span style="font-family: Courier New,Courier,monospace">sms:&lt;phone-number&gt;</span>
	<p>For example: <span style="font-family: Courier New,Courier,monospace">sms:+17913331234</span></p></li>
	<li><span style="font-family: Courier New,Courier,monospace">mmsto:&lt;phone-number&gt;</span>
	<p>For example: <span style="font-family: Courier New,Courier,monospace">mmsto:+17913331234</span></p></li>
	</ul>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TO</span></td>
				<td>The phone numbers of recipients. This key must be passed as an array.</td>
				<td rowspan="4" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TEXT</span></td>
				<td>The body of the message to be sent. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SUBJECT</span></td>
				<td>The subject of an MMS message. If this value is set for an SMS message, the message is automatically converted to MMS. This key must be passed as a string.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PATH</span></td>
				<td>The list of multiple file paths to be shared in a multimedia message. This key must be passed as an array.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&amp;service);

app_control_set_operation(service, APP_CONTROL_OPERATION_COMPOSE);
app_control_set_uri(service, &quot;mmsto:1234567890&quot;);         
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);
app_control_add_extra_data(service,APP_CONTROL_DATA_TEXT,"My text");
app_control_add_extra_data(service,APP_CONTROL_DATA_SUBJECT,"My subject");

app_control_send_launch_request(service, NULL, NULL);
</pre>

<h3>Sharing a Single Item using a Message</h3>

<p>To share a single item using an MMS message, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE</span> operation.</p>

<p class="figure">Figure: Sharing a single item</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_message2.png" alt="Sharing a single item" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE</span></p>
<h4>URI (Mandatory)</h4>
	<ul><li><span style="font-family: Courier New,Courier,monospace">mmsto:</span>
	<p>Only an empty mmsto: field is allowed. This can be used to filter-out all message applications available in the system.</p>
	<li><span style="font-family: Courier New,Courier,monospace">file:&lt;path&gt;</span>
	<p>For example: <span style="font-family: Courier New,Courier,monospace">file://&lt;media storage path&gt;/item.jpg</span></p></li>
	</ul>

<h4>MIME Type</h4>
	<p>Any MIME type that your application needs, such as <span style="font-family: Courier New,Courier,monospace">image/jpg</span>, <span style="font-family: Courier New,Courier,monospace">video/*</span>, or <span style="font-family: Courier New,Courier,monospace">*/*</span></p>
	<p>In case of sharing a single item through APP_CONTROL_DATA_PATH and URI specified with mmsto, MIME-type MUST be explicitly set. </p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PATH</span></td>
				<td>When the URI is set to <span style="font-family: Courier New,Courier,monospace">mmsto</span>, a path to a single file to be shared must be provided using this key. Otherwise, the key is ignored. This key must be passed as a string.</td>
				<td>This key is mandatory when the URI is set to <span style="font-family: Courier New,Courier,monospace">mmsto</span>.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
<p>N/A</p>	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&amp;service);

app_control_set_operation(service, APP_CONTROL_OPERATION_SHARE);
app_control_add_extra_data(service, APP_CONTROL_DATA_PATH, IMAGE_PATH);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
</pre>

<h3>Sharing Multiple Items using a Message</h3>

<p>To share multiple items using an MMS message, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_MULTI_SHARE</span> operation.</p>

<p class="figure">Figure: Sharing multiple items</p>
<p align="center"><img src="../../images/common_appcontrol_message3.png" alt="Sharing multiple items" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_MULTI_SHARE</span></p>
<h4>URI (Optional)</h4>
<p><span style="font-family: Courier New,Courier,monospace">mmsto:</span></p>
	<p><p>Only an empty mmsto: field is allowed. This can be used to filter-out all message applications available in the system.</p></p>

<h4>MIME Type (Mandatory)</h4>
	<p>Any MIME type that your application needs, such as <span style="font-family: Courier New,Courier,monospace">image/jpg</span>, <span style="font-family: Courier New,Courier,monospace">video/*</span>, or <span style="font-family: Courier New,Courier,monospace">*/*</span></p>
	<p>If you try to share a set of files with different MIME types, use <type>/* or */*. For example, if you send video/mp4 and audio/ogg, the MIME type MUST be */*.</p>
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PATH</span></td>
				<td>The list of multiple file paths to be shared in a multimedia message. This key must be passed as an array.</td>
				<td>This key is mandatory.</td>
			</tr>
		</tbody>
	</table>
<h4>Extra Output</h4>
<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&amp;service);

const char* paths[] = {IMAGE_PATH1,IMAGE_PATH2};

app_control_set_operation(service, APP_CONTROL_OPERATION_MULTI_SHARE);
app_control_set_uri(service,"mmsto:");
app_control_add_extra_data_array(service, APP_CONTROL_DATA_PATH, paths, 2);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
</pre>

<h3>Sharing Text in a Message</h3>

<p>To share any text with an SMS or MSM message, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE_TEXT</span> operation.</p>

<p class="figure">Figure: Sharing text</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_message4.png" alt="Sharing text" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SHARE_TEXT</span></p>
<h4>URI (Mandatory)</h4>
	<ul><li><span style="font-family: Courier New,Courier,monospace">sms:</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">mmsto:</span></li>
	<p>Only an empty sms: or mmsto: field is allowed. This can be used to filter-out all message applications available in the system.</p></li>
	</ul>

	
<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TEXT</span></td>
				<td>The body of the message to be sent. This key must be passed as a string.</td>
				<td>This key is mandatory.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SUBJECT</span></td>
				<td>The subject of an MMS message. If it is set for an SMS message, the message is automatically converted to MMS. This key must be passed as a string.</td>
				<td rowspan="2" style="vertical-align:middle">This key is optional.</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_PATH</span></td>
				<td>The list of multiple file paths to be shared in a multimedia message. This key must be passed as an array.</td>
			</tr>			
		</tbody>
	</table>
	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&amp;service);

app_control_set_operation(service, APP_CONTROL_OPERATION_SHARE_TEXT);
app_control_set_uri(service,"mmsto:");
app_control_add_extra_data(service, APP_CONTROL_DATA_TEXT, "Hello, My name is Tizy.");
app_control_add_extra_data(service, APP_CONTROL_DATA_SUBJECT, "My subject");
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);
</pre>

<h2 id="multimedia" name="multimedia">Multimedia</h2>
<h3>Play an audio/video file</h3>
<p> You can play an audio/video file by using <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span> operation with an URI. URI and MIME type are defined below.
<table class="note">
  <tbody>
    <tr>
      <th class="note">Note</th>
    </tr>
    <tr>
      <td class="note">Tizen mobile platform provides this application control by default. </td>
    </tr>
  </tbody>
</table>
<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span></p>
<h4>URI (Mandatory)</h4>
	<ul>
	<li><span style="font-family: Courier New,Courier,monospace">http:&lt;path&gt;</span>
	<li><span style="font-family: Courier New,Courier,monospace">https:&lt;path&gt;</span>
	<li><span style="font-family: Courier New,Courier,monospace">file:&lt;path&gt;</span>
	<li><span style="font-family: Courier New,Courier,monospace">rtsp:&lt;path&gt;</span>
	<li><span style="font-family: Courier New,Courier,monospace">rtp:&lt;path&gt;</span>
	</ul>

<h4>MIME Type (Optional)</h4>
	<ul>
	<li><span style="font-family: Courier New,Courier,monospace">audio/*</span>
	<li><span style="font-family: Courier New,Courier,monospace">video/*</span>
	<li><span style="font-family: Courier New,Courier,monospace">text/x-iMelody</span>
	<li><span style="font-family: Courier New,Courier,monospace">application/vnd.apple.mpegurl</span>
	<li><span style="font-family: Courier New,Courier,monospace">application/x-mpegurl</span>
	<li><span style="font-family: Courier New,Courier,monospace">application/sdp</span>
	<li><span style="font-family: Courier New,Courier,monospace">application/ogg</span>
	<li><span style="font-family: Courier New,Courier,monospace">application/x-smaf</span>
	<li><span style="font-family: Courier New,Courier,monospace">application/vnd.smaf</span>
	</ul>

<h4> Extra Input</h4>
<p>N/A</p>
<h4> Extra Output</h4>
<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;
#include &lt;dlog.h&gt;


int play_audio_operation(const char* audio_uri)
{
   int ret = 0;

   app_control_h service = NULL;
   app_control_create(&service);
   
   if (service == NULL)
   {
      dlog_print(DLOG_INFO, LOG_TAG, "service_create failed!\n");
      return -1;
   }
   
   app_control_set_operation(service, APP_CONTROL_OPERATION_VIEW);
   app_control_set_uri(service, audio_uri);
   ret = app_control_send_launch_request(service, NULL, NULL);
   app_control_destroy(service);
   
   if (ret == APP_CONTROL_ERROR_NONE)
   {
      dlog_print(DLOG_INFO, LOG_TAG, "Succeeded to request!\n");
      return 0;
   }
   else
   {
      dlog_print(DLOG_INFO, LOG_TAG, "Failed to request!\n");
      return -1;
   }

   return 0;
}

</pre>

<h3>View an image file</h3>
<p> You can display an image file by using <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span> operation with an URI. URI and MIME type are defined below.</p>
<table class="note">
  <tbody>
    <tr>
      <th class="note">Note</th>
    </tr>
    <tr>
      <td class="note">Tizen mobile platform provides this application control by default. </td>
    </tr>
  </tbody>
</table>
<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_VIEW</span></p>
<h4>URI (Mandatory)</h4>
	<ul>
	<li><span style="font-family: Courier New,Courier,monospace">http:&lt;path&gt;</span>
	<li><span style="font-family: Courier New,Courier,monospace">https:&lt;path&gt;</span>
	<li><span style="font-family: Courier New,Courier,monospace">file:&lt;path&gt;</span>
	</ul>

<h4>MIME Type (Optional)</h4>
	<ul>
	<li><span style="font-family: Courier New,Courier,monospace">image/*</span>
	</ul>

<h4> Extra Input</h4>
<p>N/A</p>
<h4> Extra Output</h4>
<p>N/A</p>
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;
#include &lt;dlog.h&gt;


int view_image_operation(const char* image_uri)
{
   int ret = 0;

   app_control_h service = NULL;
   app_control_create(&service);
   
   if (service == NULL)
   {
      dlog_print(DLOG_INFO, LOG_TAG, "service_create failed!\n");
      return -1;
   }
   
   app_control_set_operation(service, APP_CONTROL_OPERATION_VIEW);
   app_control_set_uri(service, image_uri);
   ret = app_control_send_launch_request(service, NULL, NULL);
   app_control_destroy(service);
   
   if (ret == APP_CONTROL_ERROR_NONE)
   {
      dlog_print(DLOG_INFO, LOG_TAG, "Succeeded to request!\n");
      return 0;
   }
   else
   {
      dlog_print(DLOG_INFO, LOG_TAG, "Failed to request!\n");
      return -1;
   }

   return 0;
}
</pre>


<h3>Retrieve a media file</h3>
<p> You can retrieve a specific type of media file by using <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span> operation. URI, MIME type, and extra for input and output are defined below.</p>
<table class="note">
  <tbody>
    <tr>
      <th class="note">Note</th>
    </tr>
    <tr>
      <td class="note">Tizen mobile platform provides this application control by default. </td>
    </tr>
  </tbody>
</table>
<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_PICK</span></p>
<h4>URI</h4>
<p>N/A</p>

<h4>MIME Type (Optional)</h4>
	<ul>
	<li><span style="font-family: Courier New,Courier,monospace">audio/*</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">image/*</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">video/*</span></li>	
	</ul>

<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTION_MODE</span></td>
				<td>The selection mode of the PICK operation. The available values are <span style="font-family: Courier New,Courier,monospace">single</span> and <span style="font-family: Courier New,Courier,monospace">multiple</span> (single is the default, if not presented). This key must be passed as a string.</td>
				<td>This key is optional</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_COUNT</span></td>
				<td>The total number of items to be returned. This key must be passed as a string.</td>
				<td>This key is optional</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_SIZE</span></td>
				<td>The total size of items to be returned in bytes. This key must be passed as a string.</td>
				<td>This key is optional</td>
			</tr>
		</tbody>
	</table>

<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Value Description</th>				
			</tr>
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTED</span></td>
				<td>The path(s) of the selected file(s). This key must be passed as an array.</td>				
			</tr>			
		</tbody>
	</table>	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;
#include &lt;dlog.h&gt;

int retrieve_media_operation(const char* mime_type)
{
   int ret = 0;

   app_control_h service = NULL;
   app_control_create(&service);
   
   if (service == NULL)
   {
      dlog_print(DLOG_INFO, LOG_TAG, "service_create failed!\n");
      return -1;
   }
   
   app_control_set_operation(service, APP_CONTROL_OPERATION_PICK);
   app_control_set_mime(service, mime_type);
   ret = app_control_send_launch_request(service, NULL, NULL);
   app_control_destroy(service);
   
   if (ret == APP_CONTROL_ERROR_NONE)
   {
      dlog_print(DLOG_INFO, LOG_TAG, "Succeeded to request!\n");
      return 0;
   }
   else
   {
      dlog_print(DLOG_INFO, LOG_TAG, "Failed to request!\n");
      return -1;
   }

   return 0;
}

</pre>


<h2 id="settings_main" name="settings_main">System Settings</h2>

<h3>Showing System Settings</h3>

<p>To display various setting menus for, for example, Connections, Devices, and System Information, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING</span> operation.</p>
<p class="figure">Figure: Showing system settings</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_system_setting.png" alt="Showing system settings" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Extra Output</h4>
<p>N/A</p>	
<h4>Example Code</h4>
<pre class="prettyprint">
int 
launch_setting(void)
{
&nbsp;&nbsp;&nbsp;int ret = 0;
&nbsp;&nbsp;&nbsp;app_control_h service = NULL;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;service);
 
&nbsp;&nbsp;&nbsp;if (service == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to create app control handler&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp;app_control_set_operation(service, APP_CONTROL_OPERATION_SETTING);

&nbsp;&nbsp;&nbsp;ret = app_control_send_launch_request(service, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(service);
 
&nbsp;&nbsp;&nbsp;if (ret == APP_CONTROL_ERROR_NONE) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Succeeded to launch settings!\n&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to launch settings!\\n&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return 0;
}
</pre>

<h2 id="settings_bluetooth" name="settings_bluetooth">Settings for Bluetooth</h2>

<h3>Showing Bluetooth Settings to Activate Bluetooth</h3>

<p>To launch the Bluetooth setting application to allow the user to activate or deactivate Bluetooth, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_BT_ENABLE</span> operation.</p>

<p class="figure">Figure: Showing Bluetooth activation settings</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_system_bluetooth.png" alt="Showing Bluetooth activation settings" /> <img width="240" height="400" src="../../images/common_appcontrol_system_bluetooth2.png" alt="Showing Bluetooth activation settings" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_BT_ENABLE</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Extra Output</h4>
<p>N/A</p>	
	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;
 
int 
bt_enable_operation(void)
{
&nbsp;&nbsp;&nbsp;int ret = 0;
&nbsp;&nbsp;&nbsp;app_control_h service = NULL;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;service);
 
&nbsp;&nbsp;&nbsp;if (service == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to create app control handler&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp;app_control_set_operation(service, APP_CONTROL_OPERATION_SETTING_BT_ENABLE);

&nbsp;&nbsp;&nbsp;ret = app_control_send_launch_request(service, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(service);
 
&nbsp;&nbsp;&nbsp;if (ret == APP_CONTROL_ERROR_NONE) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Succeeded to launch!\n&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to launch!\n&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return 0;
}
</pre>

<h3>Showing Bluetooth Settings to Configure Visibility</h3>

<p>To launch the Bluetooth setting application to allow the user to configure the visibility of the device, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_BT_VISIBILITY</span> operation.</p>

<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_system_bluetooth_visibility.png" alt="Showing location settings" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_BT_VISIBILITY</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Extra Output</h4>
<p>N/A</p>	
	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;
 
int 
bt_visibility_operation(void)
{
&nbsp;&nbsp;&nbsp;int ret = 0;
&nbsp;&nbsp;&nbsp;app_control_h service = NULL;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;service);
 
&nbsp;&nbsp;&nbsp;if (service == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to create app control handler&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp;app_control_set_operation(service, APP_CONTROL_OPERATION_SETTING_BT_VISIBILITY);

&nbsp;&nbsp;&nbsp;ret = app_control_send_launch_request(service, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(service);
 
&nbsp;&nbsp;&nbsp;if (ret == APP_CONTROL_ERROR_NONE) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Succeeded to launch!\n&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to launch!\n&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return 0;
}
</pre>

<h2 id="settings_location" name="settings_location">Settings for Location</h2>

<h3>Showing Location Settings</h3>

<p>To launch the location setting application to allow the user to configure the source of the location information, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_LOCATION</span> operation.</p>
<p>If the location service is not active when an application tries to use the Location Manager (in <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__LOCATION__MANAGER__MODULE.html">mobile</a> or <a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__LOCATION__MANAGER__MODULE.html">wearable</a> applications) or Geolocation APIs, an error occurs. To solve the problem, the application can try to launch the location setting application to let the user enable the location service. The user can activate the GPS, network positioning using the Wi-Fi Positioning System (WPS) and cellular network, or both.</p>
<p class="figure">Figure: Showing location settings</p>
<p align="center"><img width="240" height="400" src="../../images/common_appcontrol_system_location.png" alt="Showing location settings" /> <img width="240" height="400" src="../../images/common_appcontrol_system_location2.png" alt="Showing location settings" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_LOCATION</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Extra Output</h4>
<p>N/A</p>	
	
<h4>Example Code</h4>
<pre class="prettyprint">
int 
location_setting(void)
{
&nbsp;&nbsp;&nbsp;int ret = 0;
&nbsp;&nbsp;&nbsp;app_control_h service = NULL;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;service);
 
&nbsp;&nbsp;&nbsp;if (service == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to create app control handler&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}
 
&nbsp;&nbsp;&nbsp;app_control_set_operation(service, APP_CONTROL_OPERATION_SETTING_LOCATION);

&nbsp;&nbsp;&nbsp;ret = app_control_send_launch_request(service, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(service);
 
&nbsp;&nbsp;&nbsp;if (ret == APP_CONTROL_ERROR_NONE) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Succeeded to launch location settings!\n&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to launch location settings!\\n&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return 0;
}
</pre>

<h2 id="settings_nfc" name="settings_nfc">Settings for NFC</h2>

<h3>Showing NFC Settings</h3>

<p>To launch the NFC setting application to allow the user to activate or deactivate NFC, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_NFC</span> operation.</p>
<p class="figure">Figure: Showing NFC settings</p>
<p align="center"><img width = "450" height="400" src="../../images/common_appcontrol_system_nfc.png" alt="Showing NFC settings" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_NFC</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Extra Output</h4>
<p>N/A</p>	
	
<h4>Example Code</h4>
<pre class="prettyprint">
#include &lt;app_control.h&gt;
#include &lt;dlog.h&gt;

int 
nfc_setting(void)
{
&nbsp;&nbsp;&nbsp;int ret = 0;

&nbsp;&nbsp;&nbsp;app_control_h service = NULL;
&nbsp;&nbsp;&nbsp;app_control_create(&amp;service);
   
&nbsp;&nbsp;&nbsp;if (service == NULL)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to create app control handler&quot;);
	  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}
   
&nbsp;&nbsp;&nbsp;app_control_set_operation(service, APP_CONTROL_OPERATION_SETTING_NFC);

&nbsp;&nbsp;&nbsp;ret = app_control_send_launch_request(service, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(service);
   
&nbsp;&nbsp;&nbsp;if (ret == APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Succeeded to launch NFC settings app!\n&quot;);
	  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;else
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to launch NFC settings app!\n&quot;);
	  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return 0;
}
</pre>

<h2 id="settings_wifi" name="settings_wifi">Settings for Wi-Fi</h2>

<h3>Showing Wi-Fi Settings</h3>

<p>To launch the Wi-Fi setting application to allow the user to activate and configure (or deactivate) Wi-Fi connections, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_WIFI</span> operation.</p>
<p class="figure">Figure: Showing Wi-Fi settings</p>
<p align="center"><img widt="240" height="400" src="../../images/common_appcontrol_system_wifi.png" alt="Showing Wi-Fi settings" /></p>

<h4>Operation</h4>
	<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_SETTING_WIFI</span></p>
<h4>URI</h4>
<p>N/A</p>
<h4>MIME Type</h4>
<p>N/A</p>
<h4>Extra Input</h4>
<p>N/A</p>
<h4>Extra Output</h4>
<p>N/A</p>	
	
<h4>Example Code</h4>
<pre class="prettyprint">
int 
wifi_launch_operation(void)
{
&nbsp;&nbsp;&nbsp;int ret = 0;
&nbsp;&nbsp;&nbsp;app_control_h service = NULL;
	
&nbsp;&nbsp;&nbsp;ret = app_control_create(&amp;service);
	 
&nbsp;&nbsp;&nbsp;if (ret != APP_CONTROL_ERROR_NONE || service == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to create app control handler&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}
	
&nbsp;&nbsp;&nbsp;app_control_set_operation(service,  APP_CONTROL_OPERATION_SETTING_WIFI);

&nbsp;&nbsp;&nbsp;ret = app_control_send_launch_request(service, NULL, NULL);
&nbsp;&nbsp;&nbsp;app_control_destroy(service);
	   
&nbsp;&nbsp;&nbsp;if (ret != APP_CONTROL_ERROR_NONE) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Failed to launch Wi-Fi setting application&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return 0;
}
</pre>

<h2 id="voice" name="voice">Voice Recorder</h2>

<h3>Record audio</h3>

<p>To record audio, use the <span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_CREATE_CONTENT</span> operation with the audio MIME type. To give an option for recording audio, refer to the extras defined below.</p>

<h4>Operation</h4>
<p><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_OPERATION_CREATE_CONTENT</span></p>

<h4>URI</h4>
<p>N/A</p>
	
<h4>MIME Type (Mandatory)</h4>
<p>Audio MIME-type such as audio/m4a, audio/ogg, and audio/*</p>

<h4>Extra Input</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Note</th>
			</tr>			
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_TOTAL_SIZE</span></td>
				<td>The total size of items to be returned in bytes. This key must be passed as a string.</td>
				<td>This key is optional</td>
			</tr>			
		</tbody>
	</table>

<h4>Extra Output</h4>
	<table>
		<tbody>
			<tr>
				<th>Key</th>
				<th>Value Description</th>				
			</tr>			
			<tr>
				<td><span style="font-family: Courier New,Courier,monospace">APP_CONTROL_DATA_SELECTED</span></td>
				<td>The path of the created audio file. This key must be passed as a string.</td>				
			</tr>			
		</tbody>
	</table>	
	
<pre class="prettyprint">
#include &lt;app_control.h&gt;

app_control_h service;
app_control_create(&service);

app_control_set_operation(service, APP_CONTROL_OPERATION_CREATE_CONTENT);
app_control_set_mime(service, “audio/m4a”);
app_control_set_launch_mode(service, APP_CONTROL_LAUNCH_MODE_GROUP);

app_control_send_launch_request(service, NULL, NULL);

</pre>


<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>	
