<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Web Application Development Process</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../images/mw_icon.png"/> <img alt="Wearable Web" src="../../images/ww_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#plan">Planning and Designing</a></li>
			<li><a href="#create">Creating the Project</a></li>
			<li><a href="#set">Setting Properties</a></li>
			<li><a href="#design">Designing the UI</a></li>
			<li><a href="#code">Coding</a></li>
			<li><a href="#build">Building</a></li>
			<li><a href="#run">Running and Debugging</a></li>
			<li><a href="#package">Packaging</a></li>
			<li><a href="#multi">Developing Multi-projects</a></li>
			<li><a href="#cert">Certifying and Publishing</a></li>
			<li><a href="#upgrade">Upgrading</a></li>
		</ul>
</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

<h1>Web Application Development Process</h1>

  <p>The following figure illustrates the process of developing a Tizen Web application. Tizen provides the tools required to manage your application&#39;s life-cycle from product conception, through development and release, to end-of-life application retirement.</p> 
  <p class="figure">Figure: Web application development process</p> 
  <p align="center"><img alt="Web application development process" src="../../images/app_dev_process_mw.png" /></p> 
  <p>To develop an application with Tizen:</p> 
  
<h2 id="plan" name="plan">Planning and Designing the Application</h2>

<p>The first step in creating a Tizen Web application is planning and designing it using the design tools of your choice.</p> 
  <p>For information on planning and designing your applications, see <a href="../../../../org.tizen.guides/html/web/guides_w.htm">Tizen Web Guides</a> and <a href="../../../../org.tizen.web.apireference/html/web_api_reference.htm">Tizen Web API References</a>.</p> 
  <p>Once you have finished the application plan and design, you are ready to create the application project.</p> 

<h2 id="create" name="create">Creating the Application Project</h2>

<p>After you have planned and designed your application, you are ready to <a href="creating_app_project_w.htm">create the application project</a> in the Tizen IDE.</p> 
  <p>When creating the application project, use an applicable project template or sample. Based on the selection, the Tizen Web <a href="../../../../org.tizen.devtools/html/web_tools/project_wizard_w.htm">Project Wizard</a> automatically creates basic functionalities that the application has to implement to be able to run. You can select from a variety of templates and samples. You can also create <a href="creating_app_project_w.htm#user">custom user templates</a>.</p> 

<h2 id="set" name="set" >Setting Project Properties</h2>

 <p>After creating the application project, you can <a href="setting_properties_w.htm">configure the properties of the project and the Web application</a> to achieve the required functionality and features for your application.</p>  

<h2 id="design" name="design" >Designing the Application UI</h2>

<p>You can design the application UI using the UI components defined in the <a href="../../../../org.tizen.web.apireference/html/ui_fw_api/ui_fw_api_cover.htm">Tizen Advanced UI Framework</a>.</p>

<h2 id="code" name="code">Coding the Application</h2>

<p><a href="coding_app_w.htm">Code your application</a> in the IDE using the APIs defined in the Web <a href="../../../../org.tizen.web.apireference/html/web_api_reference.htm">API References</a>.</p>
 <p>Once you have finished coding your application, you are ready to build your application.</p> 

<h2 id="build" name="build" >Building the Application</h2>

  <p>When the IDE builds an application, the following process is executed:</p>
  <ol><li>Validation check for:
  <ul><li>JavaScript</li>
  <li>CSS</li></ul></li>
  <li>Compile for:
        <ul><li>Coffeescript</li>
		<li>Less</li></ul></li></ol>
   <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">About the output files: 
      <ul> 
       <li>Compiled coffeescript output file name is <span style="font-family: Courier New,Courier,monospace">&lt;file name&gt;.js</span>. This file is used when the project is packed to the WGT package file, but the script tag&#39;s reference path must be changed manually.</li> 
       <li>Compiled less output file name is <span style="font-family: Courier New,Courier,monospace">&lt;file name&gt;.css</span>. This file is used when the project is packed to the WGT package file, but the script tag&#39;s reference path must be changed manually.</li> 
      </ul></td> 
    </tr> 
   </tbody> 
  </table> 
  <p>If the project has errors, they are shown in the <strong>Problems</strong> and <strong>Project Explorer</strong> views after the build.</p>

  <p>You can build a Web application automatically or manually:</p> 
  <ul> 
   <li>Automatic build: <p>In the IDE menu, select <strong>Project &gt; Build Automatically</strong>.</p> <p>If you select this option, whenever the source or a resource is changed and saved, the IDE automatically recognizes any saved changes and rebuilds the project source.</p> </li> 
   <li>Manual build: <p>In the IDE menu, select <strong>Project &gt; Build Project</strong>.</p> <p>You can build your project at your convenience. If you want to use the manual build, ensure that the <strong>Project &gt; Build Automatically</strong> option is not selected.</p> </li> 
  </ul> 
  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">In the manual build mode: 
      <ul> 
       <li>Ensure that you have the latest build output before you run or debug a project.</li> 
       <li>To remove a project build output, select <strong>Project &gt; Clean</strong> in the IDE menu.</li> 
      </ul></td> 
    </tr> 
   </tbody> 
  </table> 

  <p>To customize the application, set the build properties:</p> 
  <ul><li>JS validation
  <p>Set the options in the IDE menu: <strong>Window &gt; Preferences &gt; Tizen SDK &gt; Web &gt; Editor &gt; JavaScript Editor</strong>.</p></li>
  <li>CSS validation
  <p>Set the options in IDE menu: <strong>Window &gt; Preferences &gt; Tizen SDK &gt; Web &gt; Editor &gt; Css Editor</strong>.</p></li></ul>

<h2 id="run" name="run">Running and Debugging the Application</h2>

  <p>When the IDE runs or debugs the application, the following process is executed:</p>
  <ol><li>Build automatically if no build has been created yet.</li>
  <li>Package.
<p>The optimization process is only executed when you execute the packaging process.</p></li>
  <li>Execute the application to the Emulator or target device.</li></ol>

  <p>You can run your application in one of the following environments:</p> 
  <ul>  
   <li><a href="run_debug_app_w.htm#emulator">Emulator</a> <p>The device Emulator, provided with the Tizen SDK, imitates the target environment running Tizen Web applications. Using this replicated environment, you can test your application before deploying it to the real target device.</p></li> 
   <li><a href="run_debug_app_w.htm#target">Target Device</a> <p>Running your application on a target device allows you to debug and test your application in a real-time environment.</p></li>
   <li><a href="run_debug_app_w.htm#simulator">Simulator</a> <p>The Tizen Web simulator allows you to run application that use the Tizen Web APIs.</p></li>  
  </ul> 

  <p>You can run the application smartly:</p>
  <ul><li>You can use the <a href="run_debug_app_w.htm#rds">Rapid Development Support (RDS)</a> mode to run or test faster.</li>
  <li>You can use the live editing mode to test faster (debug mode does not support it).</li></ul>
  <p>For more information about the debugging process and tools, see <a href="run_debug_app_w.htm#debug">Debugging Web Applications</a>.</p>

<h2 id="package" name="package">Packaging the Application</h2>

  <p>When the IDE packages the application, the following process is executed:</p>
  <ol><li>Build automatically if no build has been created yet</li>
  <li>Optimize resources:
  <ul><li>Obfuscation (for JavaScript)</li>
  <li>Minification (for HTML, JavaScript, CSS, and PNG)</li></ul></li>
  <li>Create the frame structure (for hybrid core applications).</li>
  <li>Make up resources (for hybrid core, font, and UI framework applications).</li>
  <li>Handle signing.</li></ol>
  <p>Web application packaging process is based on the W3C packaging and configuration.</p>
  <p>You can package a Web application using the <span style="font-family: Courier New,Courier,monospace">web-packaging</span> command in the <a href="../../../../org.tizen.devtools/html/web_tools/command_line_interface_w.htm">Command Line Interface (CLI)</a>, which is an IDE functional tool in the Tizen SDK:</p>
  <pre class="prettyprint">web-packaging project.wgt project/</pre>

  <p>The Tizen Web SDK provides the functionality to package a Web application quickly in the required format and to set the package properties.</p>

  <p>In the IDE menu, you can set the package properties in <strong>Project &gt;  Properties &gt;  Tizen SDK &gt;  Package</strong> by selecting the resources to be included in the package. For a Web application, you can set the properties in <strong>Project &gt; Properties &gt; Tizen SDK &gt; Package &gt; Web</strong>:</p>
  <ul>
  <li><strong>Set excluding optimization resources</strong>
  <p>You can minify your JavaScript, CSS, HTML, and PNG resources and put in an exclude file pattern that you do not want to optimize.</p></li>
  <li><strong>Set hybrid application&#39;s main service application</strong></li></ul>

  <p>By default, the Web application package is created once. You can view the package content at any point of the application development process by double-clicking the project <span style="font-family: Courier New,Courier,monospace">.wgt</span> file in the <strong>Project Explorer</strong> view. All the files present in the application project are displayed in a list.</p> 

  <p>Any changes made to the files in the package content list, such as deleting files or dragging and dropping files, are not reflected in the actual project files.</p> 
  <p class="figure">Figure: Viewing the Web application package</p> 
 <p align="center"><img alt="Viewing the Web application package" src="../../images/view_package_mw.png" style="display: block; text-align: center; margin-left: auto; margin-right: auto" /></p> 
  
  
   <p>Additionally, you can <a href="setting_properties_w.htm#localization">localize the Web application</a> to support different languages and environments.</p>   
  
<h2 id="multi" name="multi" >Developing Multiple Projects as a Combined Package</h2>

<p>Tizen supports multi-project applications that combine different types of application templates in hybrid and companion applications.</p>

  <h3 id="hybrid">Packaging Hybrid Applications</h3> 
  
  <p>A hybrid application package combines a Web application and 1 or more native service applications.</p>
  <p>To create and run a hybrid application:</p> 
  <ol> 
   <li>Create a project for a <a href="creating_app_project_w.htm">Web UI application</a> and <a href="../../native/process/app_dev_process_n.htm#creating">native service application</a>.</li> 
   <li>To establish a project reference between a UI and service application:
	<ul>
		<li>In the Web UI application project context menu, select <strong>Properties &gt; Project References</strong>.</li>
		<li>Select the check box for the service application, and click <strong>OK</strong>.</li>
	</ul>
    In the <strong>Project Explorer</strong> view, a <strong>with &lt;Web UI application&gt;</strong> message appears next to the service application project name for each application you have added to the package.
   </li> 
   <li><a href="app_dev_process_w.htm#build">Build</a> and <a href="app_dev_process_w.htm#run">run</a> the Web UI application. The service application is built and executed automatically at the same time, and you can find a WGT file (hybrid application package) under the Web UI application project in the <strong>Project Explorer</strong> view.
   
   <p>To modify the build configuration of the service application, see <a href="../../native/process/app_dev_process_n.htm#build">Building the Application</a>.</p></li>
   </ol>
   <p>With a hybrid application package, you can register the included applications in the Tizen Store and install, upgrade, and uninstall them using the single hybrid package. When a hybrid application package is installed, the Web application is installed by the Web installer, followed by the native installer installing native service applications.</p>
  <p>A hybrid application package is very useful to Web applications that need background processing or monitoring. A native service application does not have a UI and can be run in the background.</p>
  
  <p>The Web application and native service applications within a hybrid application package share the same package ID and data folder. Sharing application data between them is easy. Many useful inter-application APIs, such as <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__MESSAGE__PORT__MODULE.html">Message Port</a> and <a href="../../../../org.tizen.native.mobile.apireference/group__CAPI__APP__CONTROL__MODULE.html">AppControl</a>, can be used in a hybrid application package.</p>
   <p>For more information on hybrid applications and their package structure, see <a href="https://developer.tizen.org/downloads/sample-applications/sample-mobile-applications" target="blank">HybridWebApp and HybridServiceApp</a>, and <a href="../app_model/application_model_w.htm#hap">Hybrid Application Package</a>.</p> 

<h2 id="cert" name="cert" >Certifying and Publishing the Application</h2>

<p>After you have packaged your application, you are ready to certify and publish your application.</p> 
  <p>To certify and publish your application:</p> 
  <ul>
	<li>Upload your mobile Web application to the Tizen Store or  your wearable Web application to the Samsung Galaxy Apps Store for certification.
		<p>After the application is uploaded, the application is signed as a certified application installer package and the <span style="font-family: Courier New,Courier,monospace">&lt;Application_name&gt;.wgt</span> archive format, which contains the distributor signature, is added by the Tizen Store or Samsung Galaxy Apps Store.</p>
	</li>
	<li>Check your application to the Tizen Store or Samsung Galaxy Apps Store for selling.
		<p>The Tizen Store or Samsung Galaxy Apps Store checks whether your application functions properly.</p>
	</li>
  </ul>
  <p>You can also upgrade your application after certification. If you want to withdraw your application from distribution and operation, you need to request for application retirement from the Tizen Store or Samsung Galaxy Apps Store.</p> 
  
<h2 id="upgrade" name="upgrade">Upgrading the Application</h2>

<p>You can upgrade your application even after you have certified and made it available for sale at the Tizen Store or Samsung Galaxy Apps Store.</p> 
  <p>To upgrade your application:</p> 
  <ol>
	<li>Update your application version, and if needed the privileges, in the <span style="font-family: Courier New,Courier,monospace">config.xml</span> configuration file in the IDE.</li>
	<li>Update the application code as needed.</li>
	<li>If needed, update the privileges in the <span style="font-family: Courier New,Courier,monospace">config.xml</span> configuration file in the IDE.</li>
	<li>Build, test, and repackage the application.</li>
	<li>Register the upgraded application on the Tizen Store or Samsung Galaxy Apps Store.</li>
  </ol>

  <p>When a previously installed application is upgraded on a device, you can decide which data files from the old version are retained and which are deleted. The common Tizen upgrade policy is to overwrite all the application package files, while keeping the user-created files and directories unchanged.</p>
  
  <p>Once your application has reached the end of its life-cycle, you can remove it from the Tizen Store or Samsung Galaxy Apps Store.</p> 


<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>
  <!--start--> 
  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
  <!--end-->  
 </body>
</html>