<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>Creating Application UIs with UI Builder</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mw_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#project">Creating a UI Builder Project</a></li>
			<li><a href="#layout">Creating and Designing Page Layouts</a></li>
			<li><a href="#event">Handling Events and Testing</a></li>
			<li><a href="#migration">Migrating UI Builder Projects</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
  <h1>Creating Application UIs with UI Builder</h1>   
  <p>Tizen provides a WYSIWYG (What You See Is What You Get) <a href="../../../org.tizen.devtools/html/web_tools/uibuilder_w.htm">UI Builder</a> tool in the IDE for creating application UIs. The UI Builder includes the following features:</p> 
  <ul> 
   <li><a href="#project">Creating a UI Builder project</a></li> 
   <li><a href="#layout">Creating and designing page layouts</a></li> 
   <li><a href="#event">Handling events and testing</a></li> 
   <li><a href="#migration">Migrating UI Builder projects</a></li>    
  </ul>

<h2 name="project" id="project">Creating a UI Builder Project</h2> 
  <p>A UI Builder project creates source code and required files and folders in the IDE workspace for building a Tizen Web application using the UI Builder. You can use the UI Builder to create and modify the page layout using a graphical user interface. The project uses the <a href="#frame">Web UI Builder framework</a> as a guide for the programming model.</p> 
  <p>To create a Web UI Builder project:</p> 
  <ol> 
   <li>In the IDE, select <strong>File &gt; New &gt; Tizen Web Project</strong>. <p>If the project option you want is not visible, make sure that you are using the correct perspective (Tizen Web). To switch perspectives, go to <strong>Window &gt; Open Perspective &gt; Other</strong> and select the perspective you need.</p></li> 
   <li>In the <strong>New Tizen Web Project</strong> window, select the <strong>Template</strong> tab and define the project details: 
    <ol> 
     <li>Select the <strong>Tizen Web UI Builder</strong> project type.</li> 
     <li>Define the name of your project. <p>The default location for your application project is defined.</p>
     <table class="note"> 
      <tbody> 
       <tr> 
        <th class="note">Note</th> 
       </tr> 
       <tr> 
        <td class="note">The Tizen API names cannot be used as project names. The project name must be more than 2 characters and is restricted to the following regular expression: [a-z OR A-Z][a-z OR A-Z OR 0-9]{2,49}.</td> 
       </tr> 
      </tbody> 
     </table> </li> 
    </ol> </li> 
   <li>Click <strong>Finish</strong>.</li> 
  </ol> 
  <p>The new application project is shown in the <strong>Project Explorer</strong> view of the IDE, with default content in the <span style="font-family: Courier New,Courier,monospace">config.xml</span> file as well as in <a href="#structure">several project folders</a>.</p>

<h3 name="frame" id="frame">UI Builder Framework</h3> 
  <p>The Tizen Web UI Builder framework consists of a set of managed code as a guide for the programming model using event handlers.</p> 
  <p>An application consists of pages and the transition between pages. A page is a set of widgets and event handlers. To develop each element of an application, the Web UI Builder provides several components.</p> 
  <p class="figure">Figure: Relationship between application elements and UI Builder components</p> 
  <p style="text-align:center;"><img alt="Relationship between application elements and UI Builder components" src="../images/uibuilder_components.png" /></p> 
  <p>The Web UI Builder framework provides the following abstract objects to handle the events of application, pages and widgets:</p> 
  <ul> 
   <li><a href="#app">App Object</a></li> 
   <li><a href="#page">Page Object</a></li> 
  </ul>
  
<h3 name="app" id="app">App Object</h3> 
  <p>The app object is an abstraction of the application. It contains the runtime information and event handler of the application life-cycle.</p> 
  <p>The app object is declared in the <span style="font-family: Courier New,Courier,monospace">page-system.js</span> file. As the app object is a global object, it is accessible in every JavaScript file.</p> 
  <pre class="prettyprint">/* page-system.js */
window.app = new _app();</pre> 
  <p>When the application is running, the app object always exists and has a valid value. The following tables list the available member objects and event handlers.</p> 
  <table border="1"> 
   <caption>
     Table: App objects 
   </caption> 
   <tbody> 
    <tr> 
     <th>Method</th> 
     <th>Description</th> 
     <th>Example</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">setCurrentPageId()</span></td> 
     <td>Sets the current page ID</td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.setCurrentPageId(&quot;page1&quot;);</span></td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">getCurrentPageId()</span></td> 
     <td>Returns the current page ID</td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.getCurrentPageId();</span></td> 
    </tr>  
   </tbody> 
  </table> 
  <table border="1"> 
   <caption>
     Table: Event handlers 
   </caption> 
   <tbody> 
    <tr> 
     <th>Event</th> 
     <th>Handler</th> 
     <th>Reference</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">load</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.onload</span></td> 
     <td>When the document is ready</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">unload</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.onunload</span></td> 
     <td>When the window is unloaded</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">show</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.onshow</span></td> 
     <td>When the window is shown</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">hide</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.onhide</span></td> 
     <td>When the window is hidden</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pagebeforechange</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.onpagebeforechange</span></td> 
     <td>Before switching from the current page</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pagechange</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.onpagechange</span></td> 
     <td>After switching from the current page to the new page</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pagechangefailed</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.onpagechangefailed</span></td>
     <td>When the page switching fails</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pagebeforeload</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.onpagebeforeload</span></td> 
     <td>Before an external page is loaded</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pageload</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">app.onpageload</span></td>  
     <td>After an external page is loaded</td> 
    </tr>
	
   </tbody> 
  </table> 
  <p>The prototype of the event handler is declared in the <span style="font-family: Courier New,Courier,monospace">app.js</span> file.</p> 
  <pre class="prettyprint">
app.onload = function() 
{
&nbsp;&nbsp;&nbsp;/* App initialization */
&nbsp;&nbsp;&nbsp;console.log(&quot;loaded&quot;);	
};

app.onunload = function() 
{
&nbsp;&nbsp;&nbsp;/* App termination */
&nbsp;&nbsp;&nbsp;console.log(&quot;unloaded&quot;);
};

app.onshow = function() 
{
&nbsp;&nbsp;&nbsp;/* App is shown */
&nbsp;&nbsp;&nbsp;console.log(&quot;shown&quot;);
};

app.onhide = function() 
{
&nbsp;&nbsp;&nbsp;/* App is hidden */
&nbsp;&nbsp;&nbsp;console.log(&quot;hidden&quot;);
};

app.onpagebeforechange= function() 
{
&nbsp;&nbsp;&nbsp;/* Before switching from the current page */
&nbsp;&nbsp;&nbsp;console.log(&quot;onpagebeforechange &quot;);
};

app.onpagechange = function() 
{
&nbsp;&nbsp;&nbsp;/* After switching from the current page to the new page */
&nbsp;&nbsp;&nbsp;console.log(&quot;onpagechange &quot;);
};

app.onpagechangefailed = function() 
{
&nbsp;&nbsp;&nbsp;/* When the page switching fails */
&nbsp;&nbsp;&nbsp;console.log(&quot;onpagechangefailed &quot;);
};

app.onpagebeforeload = function() 
{
&nbsp;&nbsp;&nbsp;/* Before an external page is loaded */
&nbsp;&nbsp;&nbsp;console.log(&quot;onpagebeforeload &quot;);
};

app.onpageload = function() 
{
&nbsp;&nbsp;&nbsp;/* After an external page is loaded */
&nbsp;&nbsp;&nbsp;console.log(&quot;onpageload &quot;);
};
</pre>

<h3 name="page" id="page">Page Object</h3> 
  <p>The page object is an abstraction object of each page. It contains the layout information of the widget and the event handler of the page or widget event.</p> 
  <p>In the event handler of pages or widgets, you can access the corresponding page object using the <span style="font-family: Courier New,Courier,monospace">this</span> keyword.</p> 
  <pre class="prettyprint">/* index.js */
page1_page.prototype.onpageinit = function(event) 
{
&nbsp;&nbsp;&nbsp;console.log(&#39;HTML: &#39; + this.pageID);
};

page1_page.prototype.button1_ontap = function(event) 
{
&nbsp;&nbsp;&nbsp;this.headingone1.innerText = &#39;Hello World!&#39;;
};
</pre> 
  <p class="figure">Figure: Page object</p> 
  <p style="text-align:center;"><img alt="Page object" src="../images/page_object.png" /></p> 
  <p>The page object exists when a page is being loaded, and has a valid value only when the page is shown. You cannot access the event handler in other pages. The following table lists the available member objects.</p> 
  <table border="1"> 
   <caption>
     Table: Page member objects 
   </caption> 
   <tbody> 
    <tr> 
     <th>Member</th> 
     <th>Type</th> 
     <th>Description</th> 
     <th>Value</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pageID</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">string</span></td> 
     <td>Page ID</td> 
     <td><span style="font-family: Courier New,Courier,monospace">&quot;page1&quot;</span></td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">obj</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">HTML element</span></td> 
     <td>HTML element of page</td> 
     <td><span style="font-family: Courier New,Courier,monospace">&lt;div data-role=&quot;page&quot; id=&quot;page1&quot;&gt;...&lt;/div&gt;</span></td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">tauObj</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">object</span></td> 
     <td>Advanced page object</td> 
     <td><span style="font-family: Courier New,Courier,monospace">{id: &quot;page1&quot;, name: &quot;Page&quot;, namespace: &quot;mobile&quot;, widgetName: &quot;page&quot;, ...}</span></td> 
    </tr> 
   </tbody> 
  </table> 
  <p>You can access the widget of the page as a member variable of the page object.</p> 
  <pre class="prettyprint">/* index.js */
page1_page.prototype.button1_ontap = function(event)
{
&nbsp;&nbsp;&nbsp;this.headingone1.innerText = &#39;Hello World!&#39;; 
};
</pre> 
  <p class="figure">Figure: Widget object</p> 
  <p style="text-align:center;"><img alt="Widget object" src="../images/widget_object.png" /></p> 
  <p>The following table lists the available events of the page.</p> 
  <table border="1"> 
   <caption>
     Table: Page events 
   </caption> 
   <tbody> 
    <tr> 
     <th>Event</th> 
     <th>Handler</th> 
     <th>Occurred time</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pagebeforecreate</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.onpagebeforecreate</span></td> 
     <td>Before the page is initialized</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pagecreate</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.onpagecreate</span></td> 
     <td>After the page is added to DOM</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pageinit</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.onpageinit</span></td> 
     <td>After the page is initialized</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pagebeforehide</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.onpagebeforehide</span></td> 
     <td>Before the page is hidden</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pagehide</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.onpagehide</span></td> 
     <td>After the page is hidden</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pagebeforeshow</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.onpagebeforeshow</span></td> 
     <td>Before the page is shown</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pageshow</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.onpageshow</span></td> 
     <td>After the page is shown</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">pageremove</span></td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.onpageremove</span></td> 
     <td>Before the page is removed from DOM</td> 
    </tr> 
   </tbody> 
  </table> 
  <p>The following figure describes the sequence of events and the life-cycle of pages when there is a page transition. Currently, this also applies to the JQM page transition scheme.</p> 
  <p class="figure">Figure: Page event sequence</p> 
  <p style="text-align:center;"><img alt="Page event sequence" src="../images/page_event_sequence.png" /></p> 
  <p>You can add a page event handler using the <a href="../../../org.tizen.devtools/html/web_tools/uibuilder_w.htm">UI Builder</a>.</p> 
  <p class="figure">Figure: Page event handler</p> 
  <p style="text-align:center;"><img alt="Page event handler" src="../images/page_event_handler.png" /></p> 
  <p class="figure">Figure: Page event handler code</p> 
  <p style="text-align:center;"><img alt="Page event handler code" src="../images/page_event_handler2.png" /></p> 
  <p>Every widget has some event of its own. The following table list the events of button widgets.</p> 
  <table border="1"> 
   <caption>
     Table: Button widget events 
   </caption> 
   <tbody> 
    <tr> 
     <th>Event</th> 
     <th>Handler</th> 
    </tr> 
    <tr> 
     <td>Tap</td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.{buttonID}_ontap</span></td> 
    </tr> 
    <tr> 
     <td>Tap hold</td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.{buttonID}_ontaphold</span></td> 
    </tr> 
    <tr> 
     <td>Swipe</td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.{buttonID}_onswipe</span></td> 
    </tr> 
    <tr> 
     <td>Swipe left</td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.{buttonID}_onswipeleft</span></td> 
    </tr> 
    <tr> 
     <td>Swipe right</td> 
     <td><span style="font-family: Courier New,Courier,monospace">{page_class}.prototype.{buttonID}_onswiperight</span></td> 
    </tr> 
   </tbody> 
  </table>

<h3 name="structure" id="structure">Structure of a UI Builder Project</h3> 
  <p>The following figure illustrates the default project folder structure for Tizen UI Builder applications.</p> 
  <p class="figure">Figure: Default project folder structure</p> 
  <p style="text-align:center;"><img alt="Default project folder structure" src="../images/uibuilder_files_folders.png" /></p> 
  <p>The following table describes the contents of the default project folders.</p> 
  <table border="1" style="width: 100%"> 
   <caption>
     Table: Default project folder contents 
   </caption> 
   <colgroup> 
    <col width="50%" /> 
    <col width="50%" /> 
   </colgroup> 
   <tbody> 
    <tr> 
     <th>File or folder</th> 
     <th>Content</th> 
    </tr> 
    <tr> 
     <td><img alt="Default project folder structure" src="../images/uibuilder_folder.png" /><span style="font-family: Courier New,Courier,monospace">lib</span></td> 
     <td>UI framework</td> 
    </tr>
	<tr> 
     <td><img alt="Default project folder structure" src="../images/uibuilder_folder.png" /><span style="font-family: Courier New,Courier,monospace">res</span></td> 
     <td>Icons</td> 
    </tr>
	<tr> 
     <td><img alt="Default project folder structure" src="../images/uibuilder_folder.png" /><span style="font-family: Courier New,Courier,monospace">tizen-ui-builder-fw</span></td> 
     <td>UI Builder framework</td> 
    </tr>
	<tr> 
     <td><img alt="Default project folder structure" src="../images/uibuilder_folder.png" /><span style="font-family: Courier New,Courier,monospace">tizen-ui-builder-tool</span></td> 
     <td>UI Builder Tool framework</td> 
    </tr>
	<tr>
	  <td><img alt="Default project folder structure" src="../images/uibuilder_xml.png" /><span style="font-family: Courier New,Courier,monospace">config.xml</span></td> 
     <td>Tizen Web application configuration file</td> 
    </tr>
	<tr>
	  <td><img alt="Default project folder structure" src="../images/uibuilder_indexxml.png" /><span style="font-family: Courier New,Courier,monospace">index.config.xml</span></td> 
     <td>UI Builder project configuration file</td> 
    </tr>	
	<tr> 
     <td><img alt="Default project folder structure" src="../images/uibuilder_html.png" /><span style="font-family: Courier New,Courier,monospace">index.html</span></td> 
     <td>Application master HTML file</td> 
    </tr>
	  <tr> 
     <td><img alt="Default project folder structure" src="../images/uibuilder_js.png" /><span style="font-family: Courier New,Courier,monospace">index.js</span></td> 
     <td>Application, page, and widgets event handler file</td> 
    </tr> 
    <tr> 
     <td><img alt="Default project folder structure" src="../images/uibuilder_css.png" /><span style="font-family: Courier New,Courier,monospace">index.managed.css</span></td> 
     <td>Automatically generated file for multi screen</td> 
    </tr> 
    <tr> 
     <td><img alt="Default project folder structure" src="../images/uibuilder_js.png" /><span style="font-family: Courier New,Courier,monospace">index.managed.js</span></td> 
     <td>Automatically generated file for app and page initialization</td> 
    </tr> 
	<tr> 
     <td><img alt="Default project folder structure" src="../images/uibuilder_css.png" /><span style="font-family: Courier New,Courier,monospace">page1_common.css</span></td> 
     <td>Automatically generated page style file</td> 
    </tr> 
   </tbody> 
  </table> 

<h2 name="layout" id="layout">Creating and Designing Page Layouts</h2> 
  <p>You can create and design Web <a href="../../../org.tizen.devtools/html/web_tools/uibuilder_w.htm">UI Builder</a> application pages in the <strong>Page Designer</strong> view.</p> 
  <h3 id="newpage" name="newpage">Creating a New Web UI Builder Application Page</h3> 
  <p>You can create multiple pages for a Web UI Builder application. To add a new page:</p> 
  <ol> 
   <li>In the IDE, select <strong>File &gt; New &gt; Other</strong>.</li> 
   <li>In the <strong>New</strong> window, select <strong>Tizen &gt; Tizen Web UI Builder Page</strong> and click <strong>Next</strong>.</li> 
   <li>Select a project to be added and click <strong>Next</strong>.</li> 
   <li>Select a page template and enter the new page ID.</li>
   <li>Click <strong>Finish</strong>. <p>The new page appears in the <strong>Page Designer</strong> view.</p></li> 
  </ol> 
  <h3 id="design" name="design">Using the Page Designer View</h3> 
  <p>You can configure the design area in the <strong>Page Designer</strong> view by managing the display resolution, changing the orientation, zooming in and out, and scaling the design area to available screen space.</p> 
  <p>You can add a UI widget in the <strong>Page Designer</strong> view and set its properties:</p> 
  <ol> 
   <li>In the <strong>Project Explorer</strong> view, double-click the page file to which you want to add widgets. <p>The page file displays a design area in the <strong>Page Designer</strong> view.</p></li> 
   <li>Drag the widget from the <strong>Palette</strong> area to the design area. <p style="text-align:center;"><img alt="Designing page layout" src="../images/design_page_layout.png" /></p></li> 
   <li>Select the widget in the design area or in the <strong>Outline</strong> view.</li> 
   <li>In the <strong>Properties</strong> view, set the widget properties.</li> 
  </ol> 
  <p>You can move the widgets around in the design area.</p> 
  <h3 id="widget" name="widget">Placing Widgets</h3> 
  <p>You can place a variety of widgets in the <strong>Page Designer</strong>.</p> 
  <p>To place a widget, drag the widget from the <strong>Palette</strong> area to the design area. The next empty position in the design area is marked with a dotted rectangle. The parent widget or content object is blue in color.</p> 
  <p>You can add child widgets in a container, such as a <strong>List</strong>. For example, you can add a set of <strong>ListItem</strong> widgets in a <strong>List</strong> container widget. If the design area <strong>List</strong> container widget does not contain any <strong>ListItem</strong> widgets, the <strong>List</strong> widget displays a &quot;Drop a List Item&quot; message.</p> 
  <p>You can only add widgets of a fixed type in container widgets. For example, you can add a <strong>ListItem</strong> widget only to a <strong>List</strong> widget. If you try to add a <strong>ListItem</strong> widget to a wrong widget, the design area changes to red color, which implies that the widget cannot be placed. If you add the widget to the correct container widget, the design area changes to blue color, which implies that the widget can be placed.</p>
  
<h2 name="event" id="event">Handling Events and Testing</h2> 
  <p>You can select a UI widget from the design area of the <strong>Page Designer</strong> view and add event handlers for it.</p> 
  <p>To add an event handler for the selected widget:</p> 
  <ol> 
   <li>In the <strong>Properties</strong> view, select the <strong>Event</strong> sub-tab.</li>
   <li>Click the <strong>+</strong> button on the right side of the <strong>Tap</strong> label.</li>
   <li>Click the combo on the right side of <strong>Action</strong>.</li>
   <li>In the <strong>Add</strong> drop-down list, select the event to which you want to add an event handler. <p>The event handler for the selected event is displayed.</p></li> 
   <li>Define a name for the event handler, and click the play button next to it. <p>The UI Builder generates a skeleton code for the event handler.</p></li> 
   <li>Enter the application-specific event handler-related code.</li> 
  </ol> 
  <p>All widgets have their own unique ID in a specific page, and you can access the widgets in the event handler code using the ID. You can view and edit the widget ID in the <strong>Outline</strong> view. </p> 
  <p>For example, if your page has a button (with the <span style="font-family: Courier New,Courier,monospace">button1</span> ID) and a heading (with the <span style="font-family: Courier New,Courier,monospace">heading1</span> ID), you can create an event handler for the button tap that changes the heading text:</p> 
  <pre class="prettyprint">
page1.button1_tap = function(event) 
{ 
&nbsp;&nbsp;&nbsp;this.heading1.text(&quot;Hello World!&quot;);
};
</pre> 
  <h3 id="test" name="test">Testing a UI Builder Project</h3> 
  <p>To test the UI Builder project:</p> 
  <ol> 
   <li>Select the project in the <strong>Project Explorer</strong> view.</li> 
   <li>In the IDE menu, select one of the following: 
    <ul> 
     <li><strong>Run &gt; Run as &gt; Tizen Web Application</strong> to test the project on the Emulator or target device.</li> 
     <li><strong>Run &gt; Run as &gt; Tizen Web Simulator Application</strong> to test the project on the Web Simulator.</li> 
    </ul> </li> 
  </ol>

  <h2 id="migration" name="migration">Migrating UI Builder Projects</h2> 

<p>You can migrate your UI Builder project from the Tizen 2.2.1 SDK to the 2.3 version to keep your old files and settings:</p>

<ol><li>In the <strong>Project Explorer</strong> view, right-click the project and select <strong>Import</strong>.</li>
<li>Select <strong>Tizen &gt; Tizen Web UI Builder Project with Migration</strong> and click <strong>Next</strong>.</li>
<li>Select the project whose version is &quot;tizen 2.2.1&quot;.</li>
<li>Enter the migration project name and click <strong>Finish</strong>.</li>

<li>Implement project changes required by the migration:
<ol><li>Copy the original project under the new name.</li>
<li>Generate new files (&quot;page#&quot; refers to the ID of each page):
<ul><li><span style="font-family: Courier New,Courier,monospace;">.tizen-ui-builder-tool.xml</span>: Contains the version information.</li>
<li><span style="font-family: Courier New,Courier,monospace;">index.html</span>: Generated with reference to the following:
<ul><li><span style="font-family: Courier New,Courier,monospace;">app.xml</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">page#.page</span></li></ul></li>
<li><span style="font-family: Courier New,Courier,monospace;">index.meta.xml</span>: Generated with reference to the following:
<ul><li><span style="font-family: Courier New,Courier,monospace;">page#.page</span></li></ul></li>
<li><span style="font-family: Courier New,Courier,monospace;">index.js</span>
<ul><li><span style="font-family: Courier New,Courier,monospace;">app.js</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">page#.js</span></li></ul></li>
<li><span style="font-family: Courier New,Courier,monospace;">page#_common.css</span>
<ul><li><span style="font-family: Courier New,Courier,monospace;">page#.managed.css</span></li></ul></li></ul></li>
<li>Copy the old CSS files:
<ul><li><span style="font-family: Courier New,Courier,monospace;">page#.css</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">app.css</span></li></ul></li>
<li>Edit the <span style="font-family: Courier New,Courier,monospace;">config.xml</span> file
<p>Content: <span style="font-family: Courier New,Courier,monospace;">app.xml</span> &gt; <span style="font-family: Courier New,Courier,monospace;">index.html</span></p></li>
<li>Generate code:
<ul><li><span style="font-family: Courier New,Courier,monospace;">index.managed.js</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">index.managed.css</span></li></ul></li>
<li>Replace:
<ul><li>UI frameworks</li>
<li>UI Builder frameworks</li>
<li>UI Builder Tool frameworks</li>
<li><span style="font-family: Courier New,Courier,monospace;">/res</span> folder</li>
<li><span style="font-family: Courier New,Courier,monospace;">icon.png</span></li></ul></li>
<li>Delete files that are no longer needed.</li></ol></li></ol>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">While every effort has been made to avoid breakage, some incompatibility areas with the new APIs must be checked.
	 <p>Check the <span style="font-family: Courier New,Courier,monospace;">href</span> attribute, since it is not automatically translated with the href URL. For example:</p>
<pre class="prettyprint">&lt;a href=&quot;page1.html&quot;&gt;LINK&lt;/a&gt;</pre></td> 
    </tr> 
   </tbody> 
  </table>  

  
  
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>
  <!--start--> 
  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
  <!--end-->  
 </body>
</html>