<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>MetalDetector Sample Overview</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Wearable Web" src="../images/wearable_s_w.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
		   <li><a href="../../../org.tizen.guides/html/web/tizen/system/sensor_w.htm">Sensor Guide</a></li> 
		   <li><a href="../../../org.tizen.web.apireference/html/device_api/wearable/tizen/sensor.html">Sensor API</a></li>		   
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
  <h1>MetalDetector Sample Overview</h1> 
<p>The MetalDetector sample application demonstrates how you can use the magnetic sensor. You can monitor the strength of the magnetic field and the direction where the presence of metal was recognized using the Gear device.</p> 
<p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p> 
 <p>The following figure illustrates the main screen of the MetalDetector.</p> 
  <p class="figure">Figure: MetalDetector screen</p> 
  <p align="center"><img alt="MetalDetector screen" src="../images/metaldetector_ww.png" /></p>
<p align="center"><img alt="MetalDetector error" src="../images/metaldetector_error_ww.png" /></p> 
  
  <p>The application opens with the main screen that displays example values and directions of the measured magnetic field.</p>

  <h2>Prerequisites</h2>
<p>For this sample application, you need a device with a magnetic sensor.</p>

  <h2>Source Files</h2> 
  <p>You can create and view the sample application project including the source files in the IDE.</p> 
  <table border="1"> 
  <caption>Table: Source files</caption>
   <tbody> 
    <tr> 
     <th>File name</th> 
     <th>Description</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">config.xml</span></td> 
     <td>This file contains the application information for the platform to install and launch the application, including the view mode and the icon to be used in the device menu.</td> 
    </tr> 
	<tr>
    <td><span style="font-family: Courier New,Courier,monospace">css/style.css</span></td>
    <td>This file contains the CSS styling for the application UI.</td>
  </tr>	
     <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">images/</span></td> 
     <td>This directory contains the images used to create the user interface.</td> 
    </tr>   
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">index.html</span></td> 
     <td>This is a starting file from which the application starts loading. It contains the layout of the application screens.</td> 
    </tr> 
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.js</span></td> 
     <td>This file contains the functions responsible for back key and low battery handling.</td> 
    </tr>	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/core/</span></td> 
     <td>This directory contains the application framework.</td> 
    </tr> 	
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/helpers/calculations.js</span></td> 
     <td>This file contains the helper for necessary calculations.</td> 
    </tr>  
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/models/magnetic.js</span></td> 
     <td>This file contains the module for managing the magnetic sensor.</td> 
    </tr> 

    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/views/main.js</span></td> 
     <td>This file contains the functions for implementing the application views and handling the application events.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">lib/tau/</span></td> 
     <td>This directory contains the external libraries (TAU library).</td> 
    </tr> 	
   </tbody> 
  </table> 
  
<h2>Implementation</h2>

<h3>Application Layout</h3> 

<p>The MetalDetector sample application defines the main screen layout with the main working space and an error popup that can be displayed when the application has no access to the magnetic Sensor API:</p>

<ul><li>Main working space
<p>The main working space contains 3 elements. To be positioned centrally to the UI, each of them is wrapped by a <span style="font-family: Courier New,Courier,monospace">div</span> element with the <span style="font-family: Courier New,Courier,monospace">frame</span> class:</p>
<ul>
<li>The <span style="font-family: Courier New,Courier,monospace">div</span> element with the <span style="font-family: Courier New,Courier,monospace">pointer</span> ID is responsible for showing the direction from which the presence of metal was recognized. This element can be rotated. The rotation angle depends on the current values of the magnetic sensor.</li>
<li>The <span style="font-family: Courier New,Courier,monospace">div</span> element with the <span style="font-family: Courier New,Courier,monospace">border</span> ID is responsible for the graphical presentation of the strength of the detected magnetic field. In fact, the <span style="font-family: Courier New,Courier,monospace">pointer div</span> element is covered by a <span style="font-family: Courier New,Courier,monospace">border</span> element with a variable thickness of the border that depends on the current values of the magnetic sensor. The greater the value, the thinner the border.</li>
<li>The <span style="font-family: Courier New,Courier,monospace">div</span> element with the <span style="font-family: Courier New,Courier,monospace">info</span> ID is responsible for displaying the calculated value of the strength of the detected magnetic field.</li>
</ul>
<pre class="prettyprint">
&lt;!--index.html--&gt;
&lt;div class=&quot;ui-page&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;section class=&quot;ui-content&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;frame&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;pointer&quot; class=&quot;flex-center&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;cover&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;frame&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;border&quot; class=&quot;flex-center&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;frame&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;flex-center&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span id=&quot;info&quot;&gt;&lt;/span&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&micro;T
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;/section&gt;
&lt;/div&gt;
</pre></li>
<li>Error popup

<p>The error popup is defined according to the TAU library popup template. It contains an error message in the content area and an <strong>OK</strong> button in the footer:</p>
<pre class="prettyprint">
&lt;!--index.html--&gt;
&lt;div class=&quot;ui-page&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;div id=&quot;error-popup&quot; class=&quot;ui-popup&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-popup-content&quot; id=&quot;error-popup-message&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-popup-footer&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id=&quot;error-ok-button&quot; href=&quot;#&quot; class=&quot;ui-btn ui-btn-footer-icon btn-icon-check&quot; data-rel=&quot;back&quot;&gt;OK&lt;/a&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&lt;/div&gt;
</pre>
  
<p>The popup can be displayed at the application start if the magnetic sensor is not supported on the device, or when an error occurs after the magnetic sensor has started. The application closes automatically when the <strong>OK</strong> button is pressed.</p></li></ul>


<h3>Accessing Sensor Data</h3>

<p>The MetalDetector application uses the magnetic sensor to indicate the value and direction of the measured magnetic field. Access to the data from the magnetic sensor is essential for proper application operation.</p>

<p>To access the sensor data:</p>
<ol>
<li>Initialize the application.
<p>The following code snippet shows how the application gains access to the magnetic sensor data.</p>
<pre class="prettyprint">
/* js/models/sensor.js */
var sensorService = null,
&nbsp;&nbsp;&nbsp;&nbsp;sensor = null,
&nbsp;&nbsp;&nbsp;&nbsp;SENSOR_TYPE = &#39;MAGNETIC&#39;;

function init() 
{
&nbsp;&nbsp;&nbsp;sensorService = tizen.sensorservice ||
&nbsp;&nbsp;&nbsp;(window.webapis &amp;&amp; window.webapis.sensorservice) || null;

&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sensor = sensorService.getDefaultSensor(SENSOR_TYPE);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(&#39;API is not supported!&#39;, error.message);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.fire(&#39;not.supported&#39;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;startSensor();
}
</pre>

<p>The application tries to access the sensor service. The <span style="font-family: Courier New,Courier,monospace">sensorService</span> interface provides methods to access the different types of sensors supported by device. If the sensor service is available, the application calls the <span style="font-family: Courier New,Courier,monospace">getDefaultSensor()</span> method with the <span style="font-family: Courier New,Courier,monospace">MAGNETIC</span> string as a parameter. In case of failure, the application fires the <span style="font-family: Courier New,Courier,monospace">not.supported</span> event and shows the error popup. If successful, the application gains access to the <span style="font-family: Courier New,Courier,monospace">Sensor</span> object from Sensor API and calls the <span style="font-family: Courier New,Courier,monospace">startSensor()</span> method on it to obtain the value that is currently returned by the magnetic sensor.</p>
</li>
<li>Start the application.
<p>The <span style="font-family: Courier New,Courier,monospace">start()</span> method from the Sensor API takes 2 parameters:</p>
<ul>
<li>The <span style="font-family: Courier New,Courier,monospace">onSensorStartSuccess()</span> success callback sets the <span style="font-family: Courier New,Courier,monospace">isSensorStarted</span> flag value to <span style="font-family: Courier New,Courier,monospace">true</span> and registers the magnetic sensor change listener. As a result, after each sensor value change, the <span style="font-family: Courier New,Courier,monospace">onGetSuccess()</span> method is called and the <span style="font-family: Courier New,Courier,monospace">model.magnetic.update</span> event is fired. This event delivers the current sensor data and is listened to by the main view module to update the UI.</li>

<li>The <span style="font-family: Courier New,Courier,monospace">onSensorStartError()</span> error callback sets the <span style="font-family: Courier New,Courier,monospace">isSensorStarted</span> flag value to <span style="font-family: Courier New,Courier,monospace">false</span> and fires the <span style="font-family: Courier New,Courier,monospace">model.magnetic.error</span> event. This event is listened to by the main view module to display the error popup, if necessary.</li>
</ul>
<pre class="prettyprint">
/* js/models/magnetic.js */
var isSensorStarted = false;

function onGetSuccess(sensorData) 
{
&nbsp;&nbsp;&nbsp;e.fire(&#39;update&#39;, sensorData);
}

function onSensorStartSuccess() 
{
&nbsp;&nbsp;&nbsp;isSensorStarted = true;
&nbsp;&nbsp;&nbsp;sensor.setChangeListener(onGetSuccess);
}

function onSensorStartError(error) 
{
&nbsp;&nbsp;&nbsp;isSensorStarted = false;
&nbsp;&nbsp;&nbsp;e.fire(&#39;error&#39;, error);
}

function startSensor() 
{
&nbsp;&nbsp;&nbsp;if (isSensorStarted) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;sensor.start(onSensorStartSuccess, onSensorStartError);
}
</pre>
</li>
<li>Update the magnetic event information.
<p>When the <span style="font-family: Courier New,Courier,monospace">model.magnetic.update</span> event occurs, the <span style="font-family: Courier New,Courier,monospace">onMagneticUpdate()</span> method from the main view module is called.</p>
<pre class="prettyprint">
/* js/views/main.js */
function onMagneticUpdate(event) 
{
&nbsp;&nbsp;&nbsp;var data = event.detail,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = data.x,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = data.y,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z = data.z,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = calculations.count3dVectorLength(x, y, z);

&nbsp;&nbsp;&nbsp;setPointerThickness(value);
&nbsp;&nbsp;&nbsp;setPointerRotation(x, y);
&nbsp;&nbsp;&nbsp;setValue(value);
}
</pre>
</li>
<li>Obtain the vector values.
<p>Obtain 3 vectors of the magnetic sensor value. The application uses the <span style="font-family: Courier New,Courier,monospace">count3dVectorLength()</span> method from the <span style="font-family: Courier New,Courier,monospace">js/helpers/calculations.js</span> module to calculate the result vector.</p>
<pre class="prettyprint">
/* js/views/main.js */
function count3dVectorLength(x, y, z) 
{
&nbsp;&nbsp;&nbsp;return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));
}
</pre>

<p>This method is based on the coordinates of the 3 given 3D vectors and calculates the vector with the result length. The calculated value is used by other methods to update the UI.</p>

<p>The <span style="font-family: Courier New,Courier,monospace">setValue()</span> method takes the value calculated by the <span style="font-family: Courier New,Courier,monospace">count3dVectorLength()</span> method and simply updates the <span style="font-family: Courier New,Courier,monospace">div</span> element with the <span style="font-family: Courier New,Courier,monospace">info</span> ID.</p>  
<pre class="prettyprint">
/* js/views/main.js */
var info = null;

function setValue(value) 
{
&nbsp;&nbsp;&nbsp;info.innerText = value.toFixed(0);
}

function init() 
{
&nbsp;&nbsp;&nbsp;info = document.getElementById(&#39;info&#39;);
}
</pre>
</li>
<li>Calculate the result.
<p>The <span style="font-family: Courier New,Courier,monospace">setPointerRotation()</span> method takes the coordinates of the 2 vectors (<span style="font-family: Courier New,Courier,monospace">x</span> and <span style="font-family: Courier New,Courier,monospace">y</span>) and uses the <span style="font-family: Courier New,Courier,monospace">Math.atan2()</span> method to calculate the angle in radians between the given point (<span style="font-family: Courier New,Courier,monospace">x, y</span>) and the positive OX axis. The calculated value is used to set the webkit-transform CSS attribute that allows you to rotate the <span style="font-family: Courier New,Courier,monospace">div</span> element with the <span style="font-family: Courier New,Courier,monospace">pointer</span> ID.</p>
<pre class="prettyprint">
/* js/views/main.js */
var pointer = null;

function setPointerRotation(x, y) 
{
&nbsp;&nbsp;&nbsp;var rotation = -calculations.toDegrees(Math.atan2(y, x));

&nbsp;&nbsp;&nbsp;pointer.style.webkitTransform = &#39;rotate(&#39; + rotation + &#39;deg)&#39;;
}

function init() 
{
&nbsp;&nbsp;&nbsp;pointer = document.getElementById(&#39;pointer&#39;);
}
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">setPointerThickness()</span> method takes the value calculated by the <span style="font-family: Courier New,Courier,monospace">count3dVectorLength()</span> method and calculates the border width of the <span style="font-family: Courier New,Courier,monospace">div</span> element with the <span style="font-family: Courier New,Courier,monospace">border</span> ID.</p>
<pre class="prettyprint">
/* js/views/main.js */
var border = null,
&nbsp;&nbsp;&nbsp;&nbsp;LOWER_THRESHOLD = 30,
&nbsp;&nbsp;&nbsp;&nbsp;UPPER_THRESHOLD = 300,
&nbsp;&nbsp;&nbsp;&nbsp;MIN_POINTER_THICKNESS = 2;

function setPointerThickness(value) 
{
&nbsp;&nbsp;&nbsp;var minThickness = (pointer.offsetWidth - cover.offsetWidth) / 2 -  MIN_POINTER_THICKNESS,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relativeStep = (UPPER_THRESHOLD - LOWER_THRESHOLD) / minThickness,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelStep = 0;

&nbsp;&nbsp;&nbsp;if (value &lt; LOWER_THRESHOLD) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;border.style.borderWidth = minThickness + &#39;px&#39;;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else if (value &gt; UPPER_THRESHOLD) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;border.style.borderWidth = 0;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelStep = minThickness - Math.floor((value - LOWER_THRESHOLD) / relativeStep);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;border.style.borderWidth = pixelStep + &#39;px&#39;;
&nbsp;&nbsp;&nbsp;}
}

function init() 
{
&nbsp;&nbsp;&nbsp;border = document.getElementById(&#39;border&#39;);
}
</pre>
  
<p>This method is based on 3 constant values. The <span style="font-family: Courier New,Courier,monospace">LOWER_THRESHOLD</span> and <span style="font-family: Courier New,Courier,monospace">UPPER_THRESHOLD</span> constant values determine the working range for the border element:</p>
<ul>
<li><p>When the given value is lower than the <span style="font-family: Courier New,Courier,monospace">LOWER_THRESHOLD</span>, the border width of the border element is the biggest to cover the maximum area of the pointer element (and make it almost invisible). The application uses the <span style="font-family: Courier New,Courier,monospace">MIN_POINTER_THICKNESS</span> constant value to ensure a minimum of the pointer element visibility.</p></li>

<li><p>When the given value is greater than the <span style="font-family: Courier New,Courier,monospace">UPPER_THRESHOLD</span>, the border width of the border element is equal to 0 to show the maximum area of the pointer element.</p></li>

<li><p>When the given value is between <span style="font-family: Courier New,Courier,monospace">LOWER_THRESHOLD</span> and <span style="font-family: Courier New,Courier,monospace">UPPER_THRESHOLD</span>, the application calculates the correct value of the border width expressed in pixels.</p></li>
</ul>
</li>
</ol>
  
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
