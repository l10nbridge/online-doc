<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>(Circle) Email Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Wearable native" src="../images/wearable_s_n.png"/></p>
	</div>

  <h1>(Circle) Email Sample Overview</h1> 
  
  <p>The (Circle) Email sample application demonstrates how you can implement a circular view with elementary UI components and EFL Extension circular UI components.</p>
<p>The sample uses UI components, such as <span style="font-family: Courier New,Courier,monospace">elm_conformant</span> for view management, and <span style="font-family: Courier New,Courier,monospace">elm_popup</span>, <span style="font-family: Courier New,Courier,monospace">elm_genlist</span>, and <span style="font-family: Courier New,Courier,monospace">eext_more_option_layout</span> for the content inside the main view. <span style="font-family: Courier New,Courier,monospace">eext_genlist</span> is also used for the content of the main view as well as for the circular scrollbar.</p>
<p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
<p>The following figure illustrates the main screen of the (Circle) Email, its wireframe structure, and component tree.</p>

    <p class="figure">Figure: (Circle) Email screen</p> 
  <p align="center"><img alt="(Circle) Email Screen" src="../images/circle_email_sd.png" /></p>
  <p align="center"><img alt="(Circle) Email Tree" src="../images/circle_email_tree.png" /></p>

  <p>The application opens with the email inbox. Scroll down to view more messages. Tap a message to read it.</p>
  
<h2>Implementation</h2>

<h3 id="mainview">Main View</h3>

<p>The <span style="font-family: Courier New,Courier,monospace">create_base_gui()</span> function is responsible for creating the application layout. It starts by creating a window, then adds <span style="font-family: Courier New,Courier,monospace">elm_conformant</span> to it to add surface for the circular UI component visual effect render. The conformant contains a main view (genlist) created by the <span style="font-family: Courier New,Courier,monospace">create_genlist()</span> function.</p>
<pre class="prettyprint">
static void
create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;// Window
&nbsp;&nbsp;&nbsp;Evas_Object *win, *conform;
&nbsp;&nbsp;&nbsp;win = elm_win_util_standard_add(PACKAGE, PACKAGE);
&nbsp;&nbsp;&nbsp;elm_win_autodel_set(win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(win, &quot;delete,request&quot;, win_delete_request_cb, NULL);

&nbsp;&nbsp;&nbsp;// Conformant 
&nbsp;&nbsp;&nbsp;conform = elm_conformant_add(win);

&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(conform, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;elm_win_resize_object_add(win, conform);
&nbsp;&nbsp;&nbsp;evas_object_show(conform);

&nbsp;&nbsp;&nbsp;// Naviframe
&nbsp;&nbsp;&nbsp;ad-&gt;nf = elm_naviframe_add(conform);
&nbsp;&nbsp;&nbsp;elm_object_content_set(conform, ad-&gt;nf);
&nbsp;&nbsp;&nbsp;ad-&gt;circle_surface = eext_circle_surface_naviframe_add(ad-&gt;nf);

&nbsp;&nbsp;&nbsp;create_main_view(ad);

&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;nf, EEXT_CALLBACK_BACK, eext_naviframe_back_cb, NULL);

&nbsp;&nbsp;&nbsp;// Show the window after the base GUI is set up
&nbsp;&nbsp;&nbsp;evas_object_show(win);
}
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">create_main_view()</span> function pushes the genlist into the naviframe to show the main view of the application.</p>
<pre class="prettyprint">
static void
create_main_view(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;Elm_Object_Item *nf_it;
&nbsp;&nbsp;&nbsp;Evas_Object *genlist;

&nbsp;&nbsp;&nbsp;genlist = create_genlist(ad);

&nbsp;&nbsp;&nbsp;nf_it = elm_naviframe_item_push(ad-&gt;nf, NULL, NULL, NULL, genlist, &quot;empty&quot;);
&nbsp;&nbsp;&nbsp;elm_naviframe_item_pop_cb_set(nf_it, naviframe_pop_cb, NULL);
}
</pre>

<p>Genlist is added using the <span style="font-family: Courier New,Courier,monospace">create_genlist()</span> function and set as the content of a multiple option layout. This genlist component has 3 item classes (<span style="font-family: Courier New,Courier,monospace">title_with_groupindex</span>, <span style="font-family: Courier New,Courier,monospace">groupindex</span>, and <span style="font-family: Courier New,Courier,monospace">3text</span> styles).</p>
<pre class="prettyprint">
static Evas_Object*
create_genlist(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;int i;
&nbsp;&nbsp;&nbsp;Evas_Object *genlist;
&nbsp;&nbsp;&nbsp;Elm_Object_Item *item;

&nbsp;&nbsp;&nbsp;Elm_Genlist_Item_Class *tic = elm_genlist_item_class_new();
&nbsp;&nbsp;&nbsp;Elm_Genlist_Item_Class *gic = elm_genlist_item_class_new();
&nbsp;&nbsp;&nbsp;Elm_Genlist_Item_Class *iic = elm_genlist_item_class_new();
&nbsp;&nbsp;&nbsp;Elm_Genlist_Item_Class *pic = elm_genlist_item_class_new();

&nbsp;&nbsp;&nbsp;tic-&gt;item_style = &quot;title_with_groupindex&quot;;
&nbsp;&nbsp;&nbsp;tic-&gt;func.text_get = gl_text_get;
&nbsp;&nbsp;&nbsp;tic-&gt;func.content_get = NULL;
&nbsp;&nbsp;&nbsp;tic-&gt;func.del = gl_del;

&nbsp;&nbsp;&nbsp;gic-&gt;item_style = &quot;groupindex&quot;;
&nbsp;&nbsp;&nbsp;gic-&gt;func.text_get = gl_text_get;
&nbsp;&nbsp;&nbsp;gic-&gt;func.content_get = NULL;
&nbsp;&nbsp;&nbsp;gic-&gt;func.del = gl_del;

&nbsp;&nbsp;&nbsp;iic-&gt;item_style = &quot;3text&quot;;
&nbsp;&nbsp;&nbsp;iic-&gt;func.text_get = gl_text_get;
&nbsp;&nbsp;&nbsp;iic-&gt;func.content_get = NULL;
&nbsp;&nbsp;&nbsp;iic-&gt;func.del = gl_del;

&nbsp;&nbsp;&nbsp;pic-&gt;item_style = &quot;padding&quot;;

&nbsp;&nbsp;&nbsp;genlist = elm_genlist_add(ad-&gt;more_option_layout);
&nbsp;&nbsp;&nbsp;ad-&gt;circle_genlist = eext_circle_object_genlist_add(genlist, ad-&gt;circle_surface);

&nbsp;&nbsp;&nbsp;eext_circle_object_genlist_scroller_policy_set(ad-&gt;circle_genlist, ELM_SCROLLER_POLICY_OFF, ELM_SCROLLER_POLICY_AUTO);
&nbsp;&nbsp;&nbsp;eext_rotary_object_event_activated_set(ad-&gt;circle_genlist, EINA_TRUE);

&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; NUM_OF_ITEMS; i++)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_data *id = calloc(sizeof(item_data), 1);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id-&gt;index = i;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i == 0)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = elm_genlist_item_append(genlist, // Genlist object
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tic, // Item class
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id, // Data
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELM_GENLIST_ITEM_GROUP,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (i == 1)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = elm_genlist_item_append(genlist, // Genlist object          
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gic, // Item class            
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id, // Data              
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELM_GENLIST_ITEM_GROUP,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = elm_genlist_item_append(genlist, // Genlist object         
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iic, // Item class            
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id, // Data         
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELM_GENLIST_ITEM_NONE,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id-&gt;item = item;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;// Padding Item Here
&nbsp;&nbsp;&nbsp;elm_genlist_item_append(genlist, pic, NULL, NULL, ELM_GENLIST_ITEM_NONE, NULL, NULL);

&nbsp;&nbsp;&nbsp;elm_genlist_item_class_free(tic);
&nbsp;&nbsp;&nbsp;elm_genlist_item_class_free(gic);
&nbsp;&nbsp;&nbsp;elm_genlist_item_class_free(iic);
&nbsp;&nbsp;&nbsp;elm_genlist_item_class_free(pic);
&nbsp;&nbsp;&nbsp;evas_object_show(genlist);

&nbsp;&nbsp;&nbsp;return genlist;
}
</pre>

<h3 id="detail">Detail View</h3>

<p>The detail view is activated when the user clicks the genlist item.</p>

    <p class="figure">Figure: (Circle) Email detail view</p> 
  <p align="center"><img alt="(Circle) Email detail view" src="../images/circle_email_detail_view.png" /></p>
  
  <p>The <span style="font-family: Courier New,Courier,monospace">gl_selected_cb()</span> function adds a label for the naviframe content. This naviframe item has the title area with the name of the view.</p>

<pre class="prettyprint">
static void
gl_selected_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;Evas_Object *label;
&nbsp;&nbsp;&nbsp;Elm_Object_Item *it = event_info;
&nbsp;&nbsp;&nbsp;appdata_s *ad = data;
&nbsp;&nbsp;&nbsp;elm_genlist_item_selected_set(it, EINA_FALSE);

&nbsp;&nbsp;&nbsp;label = create_label(ad, it);
&nbsp;&nbsp;&nbsp;// View changed to text detail view
&nbsp;&nbsp;&nbsp;elm_naviframe_item_push(ad-&gt;nf, elm_object_item_part_text_get(it, &quot;elm.text&quot;), NULL, NULL, label, NULL);

&nbsp;&nbsp;&nbsp;return;
}
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">create_label()</span> function creates an <span style="font-family: Courier New,Courier,monospace">elm_label</span> with text.</p>
<pre class="prettyprint">
static Evas_Object*
create_label(appdata_s *ad, Elm_Object_Item *it)
{
&nbsp;&nbsp;&nbsp;Evas_Object *label;
&nbsp;&nbsp;&nbsp;char buf[PATH_MAX];

&nbsp;&nbsp;&nbsp;label = elm_label_add(ad-&gt;nf);

&nbsp;&nbsp;&nbsp;// Label created for text view
&nbsp;&nbsp;&nbsp;snprintf(buf, sizeof(buf), &quot;%s %s&quot;, elm_object_item_part_text_get(it, &quot;elm.text.1&quot;), 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_object_item_part_text_get(it, &quot;elm.text.2&quot;));
&nbsp;&nbsp;&nbsp;elm_label_line_wrap_set(label, ELM_WRAP_MIXED);
&nbsp;&nbsp;&nbsp;elm_object_text_set(label, buf);
&nbsp;&nbsp;&nbsp;evas_object_show(label);

&nbsp;&nbsp;&nbsp;return label;
}
</pre>


<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>