<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>(Rectangle) Settings Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Wearable native" src="../images/wearable_s_n.png"/></p>
	</div>

  <h1>(Rectangle) Settings Sample Overview</h1> 
  
  <p>The (Rectangle) Settings sample demonstrates how to implement a complex view using recursive composition of the standard EFL UI components and containers in a UI component hierarchy.</p>
<p>The sample uses UI components for the view management (for example, <span style="font-family: Courier New,Courier,monospace">elm_conformant</span> and <span style="font-family: Courier New,Courier,monospace">elm_naviframe</span>), UI component management inside the view (<span style="font-family: Courier New,Courier,monospace">elm_layout</span>) and content inside the main view (<span style="font-family: Courier New,Courier,monospace">elm_genlist</span>).</p>

<p>The following figure illustrates the main view of the (Rectangle) Settings, its wireframe structure, and the UI component tree. </p>

    <p class="figure">Figure: (Rectangle) Settings screen</p> 
  <p align="center"><img alt="(Rectangle) Settings screen" src="../images/rectsettings_sd.png" /></p>
  <p align="center"><img alt="(Rectangle) Settings screen" src="../images/rectsettings_tree.png" /></p>

<h2>Implementation</h2>
<p>The <span style="font-family: Courier New,Courier,monospace">create_base_gui()</span> function is responsible for creating the application layout. It starts by creating a window, and adds the <span style="font-family: Courier New,Courier,monospace">elm_conformant</span> to it to decorate the window with an indicator. The <span style="font-family: Courier New,Courier,monospace">elm_naviframe</span> component is added to act as the window view manager and provide the window title functionality. The main view is created using the <span style="font-family: Courier New,Courier,monospace">create_genlist()</span> function and added to the naviframe.</p>
<pre class="prettyprint">
static void
create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;Elm_Object_Item *nf_it;

&nbsp;&nbsp;&nbsp;// Window
&nbsp;&nbsp;&nbsp;ad-&gt;win = elm_win_util_standard_add(PACKAGE, PACKAGE);
&nbsp;&nbsp;&nbsp;elm_win_conformant_set(ad-&gt;win, EINA_TRUE);
&nbsp;&nbsp;&nbsp;elm_win_autodel_set(ad-&gt;win, EINA_TRUE);
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(ad-&gt;win, &quot;delete,request&quot;, win_delete_request_cb, NULL);

&nbsp;&nbsp;&nbsp;// Conformant
&nbsp;&nbsp;&nbsp;ad-&gt;conform =  elm_conformant_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;elm_win_resize_object_add(ad-&gt;win, ad-&gt;conform);
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;conform);

&nbsp;&nbsp;&nbsp;// Naviframe
&nbsp;&nbsp;&nbsp;ad-&gt;nf = elm_naviframe_add(ad-&gt;conform);
&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;nf, EEXT_CALLBACK_BACK, nf_back_cb, ad);
&nbsp;&nbsp;&nbsp;elm_object_content_set(ad-&gt;conform, ad-&gt;nf);
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;nf);

&nbsp;&nbsp;&nbsp;// Genlist
&nbsp;&nbsp;&nbsp;ad-&gt;genlist = create_genlist(ad-&gt;nf);

&nbsp;&nbsp;&nbsp;nf_it = elm_naviframe_item_push(ad-&gt;nf, &quot;Settings&quot;, NULL, NULL, ad-&gt;genlist, &quot;empty&quot;);
&nbsp;&nbsp;&nbsp;elm_naviframe_item_pop_cb_set(nf_it, nf_it_pop_cb, ad);

&nbsp;&nbsp;&nbsp;// Show the window after the base GUI is set up
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;win);
}</pre>

<p>When the genlist is clicked, the main view changes to the second view.</p>

    <p class="figure">Figure: Second view screen</p> 
  <p align="center"><img alt="Second view screen" src="../images/rectsettings2_sd.png" /></p>

<pre class="prettyprint">
static void
gl_selected_cb(void *data, Evas_Object *obj EINA_UNUSED, void *event_info)
{
&nbsp;&nbsp;&nbsp;Evas_Object *nf = (Evas_Object *)data, *label;
&nbsp;&nbsp;&nbsp;Elm_Object_Item *it = event_info;
&nbsp;&nbsp;&nbsp;Item_Data *id = elm_object_item_data_get(it);

&nbsp;&nbsp;&nbsp;// Unhighlight item
&nbsp;&nbsp;&nbsp;elm_genlist_item_selected_set(id-&gt;item, EINA_FALSE);

&nbsp;&nbsp;&nbsp;// Create second view
&nbsp;&nbsp;&nbsp;label = create_label(nf, &quot;This is sample view&quot;);
&nbsp;&nbsp;&nbsp;elm_naviframe_item_push(nf, &quot;Second View&quot;, NULL, NULL, label, NULL);
}</pre>


<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>