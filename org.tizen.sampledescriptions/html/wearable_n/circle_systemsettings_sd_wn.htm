<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>(Circle) System Settings UI Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	
<div id="container"><div id="contents"><div class="content">

	<div id="profile">
		<p><img alt="Wearable native" src="../images/wearable_s_n.png"/></p>
	</div>
	



<h1>(Circle) System Settings UI Sample Overview</h1> 

<p>The (Circle) System Settings UI sample application demonstrates how you can create a settings application. Especially, it demonstrates how to manage the naviframe and genlist components to create a complete view of the system settings application.</p>
<p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
<p>The following figure illustrates the main screens of the (Circle) System Settings UI.</p>
<p class="figure">Figure: (Circle) System Settings UI screens</p>
<p align="center"><img src="../images/settings_wearable_sd.png" alt="(Circle) System Settings UI screens" /></p>

<p>The application opens with the main view that displays a selection of settings. Click a setting to view and change its related values.</p>

<h2>Source Files</h2>

<p>You can create and view the sample application project including the source files in the IDE.</p>
<table>
	<caption>Table: Source files</caption>
<tbody>
	<tr>
		<th>File name</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">edje/images/</span></td>
		<td>This directory contains the image files used in the <span style="font-family: Courier New,Courier,monospace">main.edc</span> file.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">inc/data.h</span></td>
		<td>This file contains information and definition of the variables and functions used in the C files, especially in the <span style="font-family: Courier New,Courier,monospace">data.c</span> file.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">inc/systemsettings.h</span></td>
		<td>This file contains information and definition of the variables and functions used in the C files, especially in the <span style="font-family: Courier New,Courier,monospace">main.c</span> file.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">inc/view.h</span></td>
		<td>This file contains information and definition of the variables and functions used in the C files, especially in the <span style="font-family: Courier New,Courier,monospace">view.c</span> file.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">res/edje/main.edc</span></td>
		<td>This file is for the UI and contains style, image, and position of the sample application.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">res/image/</span></td>
		<td>This directory contains the image files used in the C files.</td>
	</tr>	
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">src/data.c</span></td>
		<td>This file contains the functions for retrieving and making data for the application.</td>
	</tr>	
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">src/main.c</span></td>
		<td>This file contains the functions related to the application life-cycle, callback functions, and view control.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">src/view.c</span></td>
		<td>This file contains the functions for implementing the views and handling events.</td>
	</tr>
	</tbody>
</table>

<h2>Implementation</h2> 

<h3>Application Layout</h3>

<p>To create the system settings application, first create the application UI using the <span style="font-family: Courier New,Courier,monospace">view_create()</span> function.</p>
<p>The application starts with the <span style="font-family: Courier New,Courier,monospace">main()</span> function, where the life-cycle callbacks are registered. The <span style="font-family: Courier New,Courier,monospace">app_create()</span> callback function is called first. After that, the <span style="font-family: Courier New,Courier,monospace">view_create()</span> function creates the base UI of the application. The UI consists of window, conformant, layout, and naviframe components.</p>
<p>The wearable profile does not support the indicator function, which means that you must use the <span style="font-family: Courier New,Courier,monospace">view_create_conformant_without_indicator()</span> function to create a conformant that does not set the indicator mode. After that, you have to create a <span style="font-family: Courier New,Courier,monospace">circle_surface</span> to display a circular genlist.</p>
<pre class="prettyprint">
void 
view_create(void)
{
&nbsp;&nbsp;&nbsp;// Create a window
&nbsp;&nbsp;&nbsp;s_info.win = view_create_win(PACKAGE);
&nbsp;&nbsp;&nbsp;if (s_info.win == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, "failed to create a window.");

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;// Create a conformant
&nbsp;&nbsp;&nbsp;s_info.conform = view_create_conformant_without_indicator(s_info.win);
&nbsp;&nbsp;&nbsp;if (s_info.conform == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;failed to create a conformant&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;evas_object_del(s_info.win);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;// Create an Eext circle surface
&nbsp;&nbsp;&nbsp;s_info.circle_surface = eext_circle_surface_conformant_add(s_info.conform);

&nbsp;&nbsp;&nbsp;s_info.layout = view_create_layout_for_conformant(s_info.conform, NULL, NULL, NULL, NULL);

&nbsp;&nbsp;&nbsp;s_info.nf = view_create_naviframe(s_info.layout);
&nbsp;&nbsp;&nbsp;if (s_info.nf == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;failed to create a naviframe.&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;evas_object_del(s_info.win);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;// Show the window after the main view is set up
&nbsp;&nbsp;&nbsp;evas_object_show(s_info.win);
}
</pre>

<p>To create a layout for the conformant, you can use 2 methods:</p>

<ul>
<li>Create an EDJ file that you can customize.
<p>If you want to use a customized EDJ file, you must use the <span style="font-family: Courier New,Courier,monospace">view_create_layout()</span> function.</p>
</li>
<li>Use a premade EDJ file.
<p>The layout in this sample is created using a premade EDJ file. The style can be changed with the <span style="font-family: Courier New,Courier,monospace">elm_layout_theme_set()</span> function.</p>
</li></ul>

<pre class="prettyprint">
Evas_Object* 
view_create_layout_for_conformant(Evas_Object *parent, const char *file_name, const char *group_name, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Eext_Event_Cb cb_function, void *user_data)
{
&nbsp;&nbsp;&nbsp;Evas_Object *layout = NULL;

&nbsp;&nbsp;&nbsp;if (parent == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;parent is NULL.&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NULL;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;if (file_name == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout = view_create_layout_by_theme(parent, &quot;layout&quot;, &quot;application&quot;, &quot;default&quot;);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout = view_create_layout(parent, file_name, group_name, cb_function, user_data);
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;if (layout == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;layout is NULL.&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NULL;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;elm_object_content_set(parent, layout);

&nbsp;&nbsp;&nbsp;return layout;
}
</pre>

<h3>Creating a Genlist</h3>

<p>The <span style="font-family: Courier New,Courier,monospace">view_create_circle_genlist()</span> function creates the genlist component, which sets the list mode with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_mode_set()</span> function.</p>

<p>To display a circular genlist, create a circular genlist component supported by the <a href="../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__MODULE.html">Efl Extension</a> API. The <span style="font-family: Courier New,Courier,monospace">eext_circle_object_genlist_scroller_policy_set()</span> function sets the scrollbar visibility policy.</p>
<pre class="prettyprint">
Evas_Object*
view_create_circle_genlist(Evas_Object *parent)
{
&nbsp;&nbsp;&nbsp;Evas_Object *genlist = NULL;
&nbsp;&nbsp;&nbsp;Evas_Object *circle_genlist = NULL;

&nbsp;&nbsp;&nbsp;if (parent == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;parent is NULL.&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NULL;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;if (s_info.circle_surface == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;circle surface is NULL.&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NULL;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;genlist = elm_genlist_add(parent);
&nbsp;&nbsp;&nbsp;// Make the selected list item appear compressed
&nbsp;&nbsp;&nbsp;elm_genlist_mode_set(genlist, ELM_LIST_COMPRESS);
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(genlist, &quot;selected&quot;, _gl_selected_cb, NULL);

&nbsp;&nbsp;&nbsp;// Make the genlist style circular
&nbsp;&nbsp;&nbsp;circle_genlist = eext_circle_object_genlist_add(genlist, s_info.circle_surface);
&nbsp;&nbsp;&nbsp;eext_circle_object_genlist_scroller_policy_set(circle_genlist, ELM_SCROLLER_POLICY_OFF, ELM_SCROLLER_POLICY_AUTO);
&nbsp;&nbsp;&nbsp;eext_rotary_object_event_activated_set(circle_genlist, EINA_TRUE);

&nbsp;&nbsp;&nbsp;evas_object_show(genlist);

&nbsp;&nbsp;&nbsp;return genlist;
}
</pre>

<h3>Inserting Items to a Genlist</h3>

<p>Insert an item to the genlist using the <span style="font-family: Courier New,Courier,monospace">view_append_item_to_genlist()</span> function:</p>

<pre class="prettyprint">
void 
view_append_item_to_genlist(Evas_Object *genlist, const char *style,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void *data, Evas_Smart_Cb _clicked_cb, const void *cb_data)
{
&nbsp;&nbsp;&nbsp;Elm_Genlist_Item_Class *item_class = NULL;

&nbsp;&nbsp;&nbsp;if (genlist == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;genlist is NULL.&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;if (style == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;item style is NULL.&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;item_class = _set_genlist_item_class(style);

&nbsp;&nbsp;&nbsp;elm_genlist_item_append(genlist, item_class, data, NULL, ELM_GENLIST_ITEM_NONE, _clicked_cb, cb_data);

&nbsp;&nbsp;&nbsp;elm_genlist_item_class_free(item_class);
}
</pre>

<p>Before the item is inserted into the genlist, the item class must be set. The <span style="font-family: Courier New,Courier,monospace">_set_genlist_item_class()</span> sets the class for each item and registers functions to get text and contents. These functions are called when the items are shown on the screen. The functions receive data in the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_append()</span> function as the third parameter.</p>
<pre class="prettyprint">
static Elm_Genlist_Item_Class* 
_set_genlist_item_class(const char *style)
{
&nbsp;&nbsp;&nbsp;Elm_Genlist_Item_Class *item_class = NULL;

&nbsp;&nbsp;&nbsp;if (style == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;style is NULL.&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NULL;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;item_class = elm_genlist_item_class_new();

&nbsp;&nbsp;&nbsp;// Item class of the genlist must be added below
&nbsp;&nbsp;&nbsp;// For more information on genlist styles, see <a href="../../../org.tizen.ui.practices/html/native/efl/ui_components_wn.htm">Wearable UI Components</a>

&nbsp;&nbsp;&nbsp;if (!strcmp(style, &quot;menu.title&quot;)) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;item_style = &quot;title&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// This function is operated when the item is shown on the screen to get the title
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;func.text_get = data_get_menu_title_text;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else if (!strcmp(style, &quot;display.title&quot;)) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;item_style = &quot;title&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;func.text_get = data_get_display_title_text;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else if (!strcmp(style, &quot;1text&quot;)) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;item_style = &quot;1text&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;func.text_get = data_get_display_text;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else if (!strcmp(style, &quot;1text.1icon&quot;)) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;item_style = &quot;1text.1icon&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;func.text_get = data_get_menu_text;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;func.content_get = _get_menu_icon;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else if (!strcmp(style, &quot;1text.1icon.1&quot;)) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;item_style = &quot;1text.1icon.1&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;func.text_get = data_get_display_text;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;func.content_get = _get_display_icon;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else if (!strcmp(style, &quot;2text&quot;)) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;item_style = &quot;2text&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_class-&gt;func.text_get = data_get_display_text;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else if (!strcmp(style, &quot;padding&quot;)) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &quot;padding&quot; style does nothing
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// It only places the genlist item in the middle of the screen
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return item_class;
}
</pre>

<h3>Inserting Items to a Naviframe</h3> 

<p>The genlist must be inserted into the naviframe component to be shown on the screen.</p>
<p>In the <span style="font-family: Courier New,Courier,monospace">view_push_item_to_naviframe()</span> function, the genlist is inserted into the navifame as a naviframe item using the <span style="font-family: Courier New,Courier,monospace">elm_naviframe_item_push()</span> function. The <span style="font-family: Courier New,Courier,monospace">elm_naviframe_item_push()</span> function puts a new item to the top of the naviframe stack and shows it. It returns the created item, and it can register a callback function to be called when the naviframe is going to be popped using the <span style="font-family: Courier New,Courier,monospace">elm_naviframe_item_pop_cb_set()</span> function.</p>
<pre class="prettyprint">
void 
view_push_item_to_naviframe(Evas_Object *nf, Evas_Object *item, Elm_Naviframe_Item_Pop_Cb _pop_cb, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void *cb_data)
{
&nbsp;&nbsp;&nbsp;Elm_Object_Item* nf_it = NULL;

&nbsp;&nbsp;&nbsp;if (nf == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;naviframe is NULL.&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;if (item == NULL) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;item is NULL.&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;nf_it = elm_naviframe_item_push(nf, NULL, NULL, NULL, item, &quot;empty&quot;);
&nbsp;&nbsp;&nbsp;elm_naviframe_item_pop_cb_set(nf_it, _pop_cb, cb_data);
}
</pre>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

