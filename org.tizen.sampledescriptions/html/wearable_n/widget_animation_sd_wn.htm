<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>Widget Animation Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Wearable native" src="../images/wn_icon.png"/></p>
	</div>

  <h1>Widget Animation Sample Overview</h1> 
  
  <p>The Widget Animation sample demonstrates how you can use an animation in your widget application to show a simple image rotation.</p>
<p>The following figure illustrates the main view of the Widget Animation application.</p>

    <p class="figure">Figure: Widget Animation main view</p> 
  <p align="center"><img alt="Widget Animation main view" src="../images/widget_application_sd.png" /></p>

<h2>Implementation</h2>

<p>To implement the Widget Animation application:</p>
<ol>
<li>Create a widget application by calling the <span style="font-family: Courier New,Courier,monospace;">widget_app_main()</span> function in the main function. You can register the widget application life-cycle callbacks when you call the <span style="font-family: Courier New,Courier,monospace;">widget_app_main()</span> function.
<pre class="prettyprint">
widget_app_lifecycle_callback_s ops = { 0, };
int ret;

ops.create = widget_app_create;
ops.terminate = widget_app_terminate;

ret = widget_app_main(argc, argv, &amp;ops, NULL);
if (ret != WIDGET_ERROR_NONE) 
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;widget_app_main() is failed. err = %d&quot;, ret);
}
</pre>
</li>

<li>Create the widget application instance with the <span style="font-family: Courier New,Courier,monospace;">widget_app_class_create()</span> function. It adds the widget instance life-cycle callbacks.
<pre class="prettyprint">
static widget_class_h
widget_app_create(void *user_data) 
{	
&nbsp;&nbsp;&nbsp;widget_instance_lifecycle_callback_s ops = 
&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.create = widget_instance_create, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.destroy = widget_instance_destroy, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.pause = widget_instance_pause, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.resume = widget_instance_resume, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.update = widget_instance_update, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.resize = widget_instance_resize, 
&nbsp;&nbsp;&nbsp;};

&nbsp;&nbsp;&nbsp;return widget_app_class_create(ops, user_data);
}
</pre>
</li>
<li>Get the widget application instance&#39;s window with the <span style="font-family: Courier New,Courier,monospace;">widget_app_get_elm_win()</span> function and draw the animation effect:
<pre class="prettyprint">
widget_instance_data_s *wid = (widget_instance_data_s*) malloc(sizeof(widget_instance_data_s));
int ret;
// Window
ret = widget_app_get_elm_win(context, &amp;wid-&gt;win);
if (ret != WIDGET_ERROR_NONE) 
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_ERROR, LOG_TAG, &quot;failed to get window. err = %d&quot;, ret);

&nbsp;&nbsp;&nbsp;return WIDGET_ERROR_FAULT;
}
evas_object_resize(wid-&gt;win, w, h);
</pre>
</li>

<li>Add an image to the widget application window:
<pre class="prettyprint">
// Animation
wid-&gt;ship = evas_object_image_filled_add(evas_object_evas_get(wid-&gt;win));

char buf[256];

snprintf(buf, sizeof(buf), &quot;%s/ship.png&quot;, app_get_resource_path());
evas_object_image_file_set(wid-&gt;ship, buf, NULL);
evas_object_resize(wid-&gt;ship, SHIP_IMAGE_WIDTH, SHIP_IMAGE_HEIGHT);
evas_object_move(wid-&gt;ship, 100, 150);
evas_object_show(wid-&gt;ship);
</pre>
</li>

<li>Add the animation effect with the <span style="font-family: Courier New,Courier,monospace;">ecore_animator_timeline_add()</span> function:
<pre class="prettyprint">
Ecore_Animator *animator = ecore_animator_timeline_add(ANIM_TIME, _do_animation, wid-&gt;ship);
</pre>
</li>
</ol>


<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>