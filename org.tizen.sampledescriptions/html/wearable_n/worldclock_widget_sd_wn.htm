<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>(Circle) World Clock Widget Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	
<div id="container"><div id="contents"><div class="content">

	<div id="profile">
		<p><img alt="Wearable native" src="../images/wearable_s_n.png"/></p>
	</div>
	



<h1>(Circle) World Clock Widget Sample Overview</h1> 

<p>The (Circle) World Clock Widget sample application demonstrates how you can manage text objects and image objects to create a complete widget view.</p>
<p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
<p>The following figure illustrates the main screen of the (Circle) World Clock Widget.</p>
<p class="figure">Figure: (Circle) World Clock Widget screen</p>
<p align="center"><img src="../images/worldclock_wearable_sd.png" alt="World Clock Widget main screen" /></p>

<p>The widget displays the current time and date in a specific location.</p> 

<h2>Source Files</h2>

<p>You can create and view the sample application project including the source files in the IDE.</p>

<table>
<caption>Table: Source files</caption>
<tbody>
	<tr>
		<th>File name</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">edje/images</span></td>
		<td>This directory contains the image files used in the <span style="font-family: Courier New,Courier,monospace">main.edc</span> file.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">inc/data.h</span></td>
		<td>This file contains information and definition of the variables and functions used in the C files, especially in the <span style="font-family: Courier New,Courier,monospace">data.c</span> file.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">inc/log.h</span></td>
		<td>This file contains the log tag. It can also contain information and definition of the variables and functions used in the C files.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">inc/view.h</span></td>
		<td>This file contains information and definition of the variables and functions used in the C files, especially in the <span style="font-family: Courier New,Courier,monospace">view.c</span> file.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">res/edje/content.edc</span></td>
		<td>This file is for the UI and contains style, image, and position of the sample application.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">res/image</span></td>
		<td>This directory contains the image files used in the C files.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">src/data.c</span></td>
		<td>This file contains the functions for retrieving and making data for the application.</td>
	</tr>	
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">src/main.c</span></td>
		<td>This file contains the functions related to the application life-cycle, callback functions, and view control.</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace">src/view.c</span></td>
		<td>This file contains the functions for implementing the views and handling events.</td>
	</tr>
	</tbody>
</table>

<h2>Implementation</h2>

<h3>Application Layout</h3> 

<p>The <span style="font-family: Courier New,Courier,monospace">view_create()</span> function creates the widget view frame that consists of the window, text parts, and image parts.</p>
<pre class="prettyprint">
view_create(context, w, h);
</pre>
<p class="figure">Figure: World Clock Widget view frame</p>
<p align="center"><img src="../images/worldclock_structure_wearable_sd.png" alt="World Clock Widget view frame" /></p>

<p>To create the parts:</p>
<ul>
<li>Text
<p>You can fill out the text parts with the part name and the text using the <span style="font-family: Courier New,Courier,monospace">view_set_text()</span> function.</p>
<p>First, implement the <span style="font-family: Courier New,Courier,monospace">data_get_text()</span> function to create the text you want to use. In this function, you can also choose the part name which you want to fill out. Then, call the <span style="font-family: Courier New,Courier,monospace">view_set_text()</span> function with the part name and text you obtained.</p>
<p>In this example, the text to use is <span style="font-family: Courier New,Courier,monospace">region_txt</span> and the part name to fill out is <span style="font-family: Courier New,Courier,monospace">widget.region</span>.</p>
<pre class="prettyprint">
region_txt = data_get_text(&quot;widget.region&quot;);
view_set_text(wid, &quot;widget.region&quot;, region_txt);
</pre>
</li>
<li>Image
<p>You can create the widget with image files using the <span style="font-family: Courier New,Courier,monospace">view_set_image()</span> function. Pass the part name which you want to draw and the name of the image file including its directory path.</p>
<p>In this example, the part name is <span style="font-family: Courier New,Courier,monospace">widget.bg</span> and the name of image file is <span style="font-family: Courier New,Courier,monospace">bg.png</span> in the <span style="font-family: Courier New,Courier,monospace">images</span> directory.</p>
<pre class="prettyprint">
view_set_image(wid, &quot;widget.bg&quot;, &quot;images/bg.png&quot;);
</pre>
</li>
</ul>

<h3>Setting Touch Events</h3>

<p>The <span style="font-family: Courier New,Courier,monospace">view_set_event_callback()</span> function controls the widget main operation that launches an application from the home screen.</p>
<p>The launch options are:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">WIDGET_EVENT_PRESSED</span> for launch on a touch press event</li>
<li><span style="font-family: Courier New,Courier,monospace">WIDGET_EVENT_RELEASED</span> for launch on a touch release event </li>
<li><span style="font-family: Courier New,Courier,monospace">WIDGET_EVENT_CLICKED</span> for launch on a click event</li>
</ul>
<p>In this example, the widget launches an application when the user clicks the widget:</p>
<pre class="prettyprint">
view_set_event_callback(wid, &quot;widget.event&quot;, WIDGET_EVENT_CLICKED, clicked_cb);
</pre>






<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

