<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>SoundManager Sample Overview</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mobile_s_w.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
		   <li><a href="../../../org.tizen.guides/html/web/tizen/multimedia/sound_w.htm">Sound Guide</a></li> 
		   <li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/sound.html">Sound API</a></li> 
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
  <h1>SoundManager Sample Overview</h1> 
  <p>The SoundManager sample application demonstrates how you can manage custom sound profiles. A sound profile is a structure consisting of a unique name and a list of volume values of all available sound types, such as ringtone, notification, and alarm.</p> 
 <p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
 <p>The following figure illustrates the screens of the SoundManager.</p> 
  <p class="figure">Figure: SoundManager screens</p> 
  <p align="center"><img alt="SoundManager screens" src="../images/soundmanager_sd_mw.png" /> </p> 
  <p>The application opens with the main screen, which lists the created sound profiles. The profile without the <strong>Set</strong> button is currently active.</p>
  
  <p>On the main screen:</p>
 <ul><li>To active a profile, click <strong>Set</strong>. 
 <p>The system sound settings are set up with the profiles values.</p></li>
 <li>To add a new profile, click <strong>+</strong> in the top left corner.
<p>The new profile is initialized with the current system sound settings and the user can specify its name.</p></li>
<li>To modify an existing profile, click it in the list.
<p>The profile details screen opens:</p>
<ul><li>To change the values of various sound types, use the sliders. When an active profile is changed, the changes are applied directly to the system settings.</li>
<li>To restore the profile values to the state when the screen opened, click <strong>Reset</strong>.</li>
<li>To delete the profile, click <strong>Delete</strong>.</li></ul></li></ul>

  
  <h2>Source Files</h2> 
  <p>You can create and view the sample application project including the source files in the IDE.</p> 
  
  <p>The application uses a simple MVC (Model-View-Controller) architectural model.</p>
  <table border="1"> 
  <caption>Table: Source files</caption>
   <tbody> 
    <tr> 
     <th>File name</th> 
     <th>Description</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">config.xml</span></td> 
     <td>This file contains the application information for the platform to install and launch the application, including the view mode and the icon to be used in the device menu.</td> 
    </tr> 
	<tr>
    <td><span style="font-family: Courier New,Courier,monospace">css/</span></td>
    <td>This directory contains the CSS styling for the application UI.</td>
  </tr>
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">index.html</span></td> 
     <td>This is a starting file from which the application starts loading. It contains the layout of the application screens.</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/</span></td> 
     <td>This directory contains the application code.</td> 
    </tr>	
	 <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/core/</span></td> 
     <td>This directory contains the application framework.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/models/</span></td> 
     <td>This directory contains the application model modules.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/views/</span></td> 
     <td>This directory contains the implementation code for the application views.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">templates/</span></td> 
     <td>This directory contains the templates of the list items.</td> 
    </tr> 	
   </tbody> 
  </table> 
  
<h2>Implementation</h2>
<p>To implement the main module managing custom sound profiles:</p>

<ol><li>Define variables:
<ul><li><span style="font-family: Courier New,Courier,monospace">currentProfileId</span>: Object containing the current profile values</li>
<li><span style="font-family: Courier New,Courier,monospace">profiles</span>: Array of all profiles</li>
<li><span style="font-family: Courier New,Courier,monospace">SOUND_TYPES</span>: Array containing all available sound types</li>
<li><span style="font-family: Courier New,Courier,monospace">activeProfileId</span>: ID of the active profile or <span style="font-family: Courier New,Courier,monospace">null</span> if there is no active profile</li></ul>

<pre class="prettyprint">
var currentProfile = {},
&nbsp;&nbsp;&nbsp;&nbsp;profiles = [],
&nbsp;&nbsp;&nbsp;&nbsp;SOUND_TYPES = 
&nbsp;&nbsp;&nbsp;&nbsp;[
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;SYSTEM&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;NOTIFICATION&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;ALARM&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;MEDIA&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;VOICE&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;RINGTONE&#39;
&nbsp;&nbsp;&nbsp;&nbsp;],
&nbsp;&nbsp;&nbsp;&nbsp;activeProfileId = null;
</pre>

<p>The sound profile is represented by an object with the following fields:</p>
<ul><li><span style="font-family: Courier New,Courier,monospace">id</span>: Unique identifier of the profile</li>
<li><span style="font-family: Courier New,Courier,monospace">title</span>: Title of the profile</li>
<li><span style="font-family: Courier New,Courier,monospace">XXX</span>: Value of the XXX sound type, where XXX is a <span style="font-family: Courier New,Courier,monospace">SOUND_TYPES</span> value</li>
</ul>

<pre class="prettyprint">
{
&nbsp;&nbsp;&nbsp;id: 1313,
&nbsp;&nbsp;&nbsp;title: &#39;Custom Profile&#39;,
&nbsp;&nbsp;&nbsp;SYSTEM: 0.1,
&nbsp;&nbsp;&nbsp;NOTIFICATION: 0.2,
&nbsp;&nbsp;&nbsp;ALARM: 0.3,
&nbsp;&nbsp;&nbsp;MEDIA: 0.5,
&nbsp;&nbsp;&nbsp;VOICE: 0,
&nbsp;&nbsp;&nbsp;RINGTONE: 1
}
</pre></li>
<li>
<p>Initialize the application by first loading the current system profile and storing it in the <span style="font-family: Courier New,Courier,monospace">currentProfile</span> object. Next, register a changing volume listener that updates the <span style="font-family: Courier New,Courier,monospace">currentProfile</span> object and clears the <span style="font-family: Courier New,Courier,monospace">activeProfileId</span> variable (volume is changed so the current system profile is different than the active profile; therefore, the active profile stops being active).
</p>

<pre class="prettyprint">
function init() 
{
&nbsp;&nbsp;&nbsp;var i = 0,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;soundType = null;

&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; SOUND_TYPES.length; i += 1) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;soundType = SOUND_TYPES[i];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentProfile[soundType] = tizen.sound.getVolume(soundType);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch (e) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(e.message);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.sound.setVolumeChangeListener(onVolumeChanged);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(e.message);
&nbsp;&nbsp;&nbsp;}
}

function onVolumeChanged(soundType, volume) 
{
&nbsp;&nbsp;&nbsp;if (currentProfile[soundType] !== volume) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentProfile[soundType] = volume;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (activeProfileId !== null) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;activeProfileId = null;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
</pre></li>
<li>
<p>Define the <span style="font-family: Courier New,Courier,monospace">setActive()</span> method that sets a profile active:</p>

<pre class="prettyprint">
function setActive(id) 
{
&nbsp;&nbsp;&nbsp;if (activeProfileId !== id) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;changeSystemProfile(getProfile(id));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;activeProfileId = id;
&nbsp;&nbsp;&nbsp;}
}

function getProfile(id) 
{
&nbsp;&nbsp;&nbsp;var i = 0,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;profile = null;

&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; profiles.length; i += 1) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;profile = profiles[i];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (profile.id === id) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return profile;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return null;
}
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">changeSystemProfile()</span> method changes the system profile values to values from the specified profile:</p>
<pre class="prettyprint">
function changeSystemProfile(profile) 
{
&nbsp;&nbsp;&nbsp;var i = 0,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;soundType = null;

&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; SOUND_TYPES.length; i += 1) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;soundType = SOUND_TYPES[i];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;changeSystemSoundVolume(soundType, profile[soundType]);
&nbsp;&nbsp;&nbsp;}
}

function changeSystemSoundVolume(soundType, volume) 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentProfile[soundType] = volume;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.sound.setVolume(soundType, volume);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(&#39;Setting &#39; + soundType + &#39; error: &#39; + e.message);
&nbsp;&nbsp;&nbsp;}
}
</pre></li>
<li>
<p>Define the <span style="font-family: Courier New,Courier,monospace">createProfile()</span> method that creates a new profile with values from the system settings. The method obtains the title of the created profile. The following code takes advantage of the fact that sound settings are contained in the <span style="font-family: Courier New,Courier,monospace">currentProfile</span> object.</p> 

<pre class="prettyprint">
function createProfile(title) 
{
&nbsp;&nbsp;&nbsp;var currentProfileCopy = JSON.parse(JSON.stringify(currentProfile)),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = profiles.length ? profiles[profiles.length - 1].id + 1 : 0;
&nbsp;&nbsp;&nbsp;currentProfileCopy.title = title;
&nbsp;&nbsp;&nbsp;currentProfileCopy.id = id;
&nbsp;&nbsp;&nbsp;profiles.push(currentProfileCopy);
}
</pre></li>
<li>Define the <span style="font-family: Courier New,Courier,monospace">updateProfile()</span> method to update the specified profile. In this method, you can use the functions defined in the previous steps.
<p>The method obtains the ID of the profile that you want to change, the name of the sound type, and the new value.</p>

<pre class="prettyprint">
function updateProfile(profileId, soundType, volume) 
{
&nbsp;&nbsp;&nbsp;var profile = getProfile(profileId);

&nbsp;&nbsp;&nbsp;if (profile) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;profile[soundType] = volume;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (profile.id === activeProfileId) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;changeSystemSoundVolume(soundType, volume);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
</pre></li>
<li>Define the <span style="font-family: Courier New,Courier,monospace">deleteProfile()</span> method that deletes the profile with the specified ID. 
 
<pre class="prettyprint">
function deleteProfile(id) 
{
&nbsp;&nbsp;&nbsp;var index = getProfileIndex(id);
&nbsp;&nbsp;&nbsp;if (index !== -1) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;profiles.splice(index, 1);
&nbsp;&nbsp;&nbsp;}
}

function getProfileIndex(profileId) 
{
&nbsp;&nbsp;&nbsp;var i = 0;

&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; profiles.length; i += 1) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (profiles[i].id === profileId) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return i;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return -1;
}
</pre> </li></ol>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
