<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>AccountManager Sample Overview</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mobile_s_w.png"/></p>
	</div>

	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../org.tizen.guides/html/web/tizen/account/account_w.htm">Account Guide</a></li>
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/account.html">Account API</a></li>
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">
  <h1>AccountManager Sample Overview</h1>
  <p>The AccountManager sample application demonstrates how you can browse, add, edit, and delete accounts stored on the device.</p>
  <p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
  <p>The following figure illustrates the main screens of the AccountManager.</p>
  <p class="figure">Figure: AccountManager screens</p>
  <p align="center"><img alt="Account list" src="../images/accountmanager_list_mw.png" /> <img alt="Add account" src="../images/accountmanager_add_mw.png" /></p>
  <p align="center"><img alt="Edit account" src="../images/accountmanager_edit_mw.png" /> <img alt="Account info" src="../images/accountmanager_info_mw.png" /></p>
  
<p>The application opens with account list page, which lists the existing accounts (or with the account addition page, if no accounts exist).</p>
<p>After you select the account, the account edit or info page opens, depending on from where the application was launched.</p>  
  
  <h2>Prerequisites</h2>
  
  <p>To ensure proper application execution, the following privileges must be set:</p>
  <ul>
	<li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/account.read</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/account.write</span></li>
  </ul>
 
  <h2>Source Files</h2>

    <p>The application uses a simple MVC (Model View Controller) architecture. The constructors are:</p>
<ul>
<li>Controller constructor: Main application driver, communicates between Model and View.</li>
<li>View constructor: Prepares and shows the application screens.</li>
<li>Model constructor: Responsible for communication with the Tizen API.</li>
</ul>


  <p>You can create and view the sample application project including the source files in the IDE.</p>

  <table border="1">
   <tbody>
    <tr>
     <th>File name</th>
     <th>Description</th>
    </tr>
    <tr>
     <td><span style="font-family: Courier New,Courier,monospace">config.xml</span></td>
     <td>This file contains the application information for the platform to install and launch the application, including the view mode and the icon to be used in the device menu.</td>
    </tr>
	<tr>
     <td><span style="font-family: Courier New,Courier,monospace">css/style.css</span></td>
     <td>This file contains the CSS styling for the application UI.</td>
    </tr>	
    <tr>
     <td><span style="font-family: Courier New,Courier,monospace">index.html</span></td>
     <td>This is a starting file from which the application starts loading. It contains the layout of the application screens.</td>
    </tr>
	<tr>
     <td><span style="font-family: Courier New,Courier,monospace">js/main.js</span></td>
     <td>This file contains the code for handling the main functionality of the application.</td>
    </tr>
	<tr>
     <td><span style="font-family: Courier New,Courier,monospace">lib/</span></td>
     <td>This directory contains the external libraries (TAU library).
	 <p>The TAU Framework is used in this sample application. TAU provides a CSS theme for common elements and manages views.</p></td>
    </tr>
   </tbody>
  </table>


  <h2>Implementation</h2>

<h3>Defining the Application Layout</h3>

<p>The application screens are defined in the <span style="font-family: Courier New,Courier,monospace">index.html</span> file:</p>
<ul>
<li>
<p>The account addition page has a header, labels and input fields in the content area, and a button in the footer:</p>
<pre class="prettyprint">
&lt;section class=&quot;ui-page&quot; id=&quot;add-account-view&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-header&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1 class=&quot;ui-title&quot;&gt;Account Manager&lt;/h1&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;Add new account:&lt;/h2&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-content&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;label for=&quot;add-account-usr&quot;&gt;Login:&lt;/label&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input class=&quot;ui-text-input&quot; id=&quot;add-account-usr&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;label for=&quot;add-account-data&quot;&gt;Sample data:&lt;/label&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input class=&quot;ui-text-input&quot; id=&quot;add-account-data&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-footer&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button tizen-ide-id=&quot;10&quot; class=&quot;ui-btn&quot; data-tau-name=&quot;Button&quot; id=&quot;save-button&quot;&gt;Add Account&lt;/button&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&lt;/section&gt;
</pre>
</li>
<li>
<p>The account edit page has a header, label and input field in the content area, and 2 buttons in the footer:</p>
<pre class="prettyprint">
&lt;section class=&quot;ui-views ui-page&quot; id=&quot;edit-account-view&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-header&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;h1 class=&quot;ui-title&quot;&gt;Account Manager&lt;/h1&gt;
&nbsp;&nbsp;&nbsp;&lt;h2&gt;Edit account&lt;/h2&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-content&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;label class=&quot;ui-text-input&quot; for=&quot;edit-account-data&quot;&gt;Sample data:&lt;/label&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input class=&quot;ui-text-input&quot; id=&quot;edit-account-data&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-footer&quot; data-position=&quot;fixed&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button id=&quot;edit-save-button&quot;&gt;Update&lt;/button&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button id=&quot;edit-remove-button&quot;&gt;Remove&lt;/button&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&lt;/section&gt;
</pre>
</li>
<li>
<p>The account info page has a header, text in the content area, and a button in the footer:</p>
<pre class="prettyprint">
&lt;section class=&quot;ui-views ui-page&quot; id=&quot;info-account-view&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-header&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1 class=&quot;ui-title&quot;&gt;Account Manager&lt;/h1&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;Info about account&lt;/h2&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-content&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;margin-wrapper&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;Login:&lt;/span&gt;&lt;span id=&quot;login&quot;&gt;ds&lt;/span&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;Extended data:&lt;/span&gt;&lt;span id=&quot;data&quot;&gt;&lt;/span&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-footer&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button tizen-ide-id=&quot;10&quot; class=&quot;ui-btn&quot; id=&quot;remove-button&quot;&gt;Remove Account&lt;/button&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&lt;/section&gt;
</pre>
</li>
</ul>

<h3>Starting the Application</h3> 

<p>At startup, the application shows a screen with the account list or an account addition screen. The start screen depends on whether any account is already added to the device.</p>

<p>To get information on where the application is started from, use the following method:</p>
<pre class="prettyprint">
/* js/main.js */
getAppcontrolOperation: function m_getAppcontrolOperation(onError) 
{
&nbsp;&nbsp;&nbsp;var appControl = null;

&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appControl = tizen.application.getCurrentApplication().getRequestedAppControl();

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return appControl.appControl.operation;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}
</pre>
<p>To show the desired screen:</p>
<pre class="prettyprint">
/* js/main.js */
switch (appControlOperation) 
{
&nbsp;&nbsp;&nbsp;/* Application opened from account settings by add new account */
&nbsp;&nbsp;&nbsp;case &#39;http://tizen.org/appcontrol/operation/account/add&#39;:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.v.showAddView();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.bindAddViewEvents();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;/* Application opened from account settings by config account */
&nbsp;&nbsp;&nbsp;case &#39;http://tizen.org/appcontrol/operation/account/configure&#39;:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.m.getCurrentAccount(function callback(account) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.m.getAccountData(account[0],
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.v.showEditView.bind(self.v),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.v.showError);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.bindConfigViewEvents();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this.v.showError);
&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;/* Application opened from home menu */
&nbsp;&nbsp;&nbsp;default:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Take action */ 
}
</pre>

<h3>Managing Accounts</h3>

<p>To manage accounts:</p>
<ul>
<li>Add an account:
<ol>
<li>
 <p>To add a new account, call the <span style="font-family: Courier New,Courier,monospace">tizen.account.add()</span> method with the provided Tizen account object:</p>
<pre class="prettyprint">
tizen.account.add(account);
</pre>
</li>
<li>
<p>To create an account object, call the <span style="font-family: Courier New,Courier,monospace">tizen.Account()</span> constructor:</p>
<pre class="prettyprint">
/* js/main.js */
var account = new tizen.Account(this.getAccountProvider(onError),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{userName: userName})
</pre>

<p>The first parameter is the <span style="font-family: Courier New,Courier,monospace">AccountProvider</span> object returned from the <span style="font-family: Courier New,Courier,monospace">this.getAccountProvider()</span> method which wraps the call to the following function. The second parameter is the data to be assigned to the account.</p>
<pre class="prettyprint">
tizen.account.getProvider(appId);
</pre>
</li>
</ol>

<p>The following example shows the full implementation of adding a new account and assigning additional data:</p>
<pre class="prettyprint">
/* js/main.js */
addAccount: function m_addAccount(userName, data, onError) 
{
&nbsp;&nbsp;&nbsp;var account = new tizen.Account(this.getAccountProvider(onError),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{userName: userName}),
&nbsp;&nbsp;&nbsp;key = &#39;&#39;;
            
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.account.add(account);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in data) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data.hasOwnProperty(key)) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;account.setExtendedData(key, data[key]);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}
</pre>

</li>
<li>Retrieve accounts:
<ol>
<li>To retrieve all accounts assigned to this application, call the <span style="font-family: Courier New,Courier,monospace">tizen.account.getAccounts()</span> method. This function takes 3 parameters: 2 callbacks, <span style="font-family: Courier New,Courier,monospace">onSuccess</span> and <span style="font-family: Courier New,Courier,monospace">onError</span>, and the application ID. 
<pre class="prettyprint">
/* js/main.js */
getCurrentAccount: function m_getCurrentAccount(onSuccess, onError) 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.account.getAccounts(onSuccess, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.getApplicationId(onError));
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}
</pre>
</li>
<li>
<p>Use the <span style="font-family: Courier New,Courier,monospace">getApplicationId()</span> function to get the current application ID:</p>
<pre class="prettyprint">
/* js/main.js */
getApplicationId: function m_getApplicationId(onError) 
{
&nbsp;&nbsp;&nbsp;var context = null;

&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = tizen.application.getCurrentApplication();

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return context.appInfo.id;
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}
</pre>
</li>
</ol>
</li>
<li>Retrieve account information:
<p>To retrieve data assigned to an account, read an array of objects provided in the <span style="font-family: Courier New,Courier,monospace">data</span> property of the account object.</p>
<pre class="prettyprint">
/* js/main.js */
showInfoView: function v_showAccountView(account) 
{
&nbsp;&nbsp;&nbsp;var extData = account.data,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extDataLen = extData.length,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataHTML = &#39;&#39;;

&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; extDataLen; i += 1) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataHTML += &#39;&lt;p&gt;&#39; + extData[i].key + &#39;: &#39; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extData[i].value + &#39;&lt;/p&gt;&#39;;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;document.getElementById(&#39;login&#39;).innerText = account.name;
&nbsp;&nbsp;&nbsp;document.getElementById(&#39;data&#39;).innerHTML = dataHTML;

&nbsp;&nbsp;&nbsp;tau.changePage(&#39;#info-account-view&#39;);
}
</pre>
</li>
<li>Update an existing account:
<p>Updating an existing account is similar to adding properties while creating a new account, with a difference that an existing account has to be provided.</p>
<p>New custom data is set for the first found account with the <span style="font-family: Courier New,Courier,monospace">account.setExtendedData()</span> method with a key and value pair as a parameter. There is no limit for the number of extended data properties.</p>
<pre class="prettyprint">
/* js/main.js */
updateAccountData: function m_editAccount(data, onError) 
{
&nbsp;&nbsp;&nbsp;this.getCurrentAccount(function onSuccess(accounts) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key = &#39;&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;account = accounts[0];

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data.user) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;account.userName = data.user;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.account.update(account);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error.message);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
                
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data.extData) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in data.extData) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data.extData.hasOwnProperty(key)) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;account.setExtendedData(key, data.extData[key]);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;}, onError);
}
</pre>
</li>
<li>Remove an account:
<p>To remove an account, use the <span style="font-family: Courier New,Courier,monospace">tizen.account.remove()</span> method with the specified account ID.</p>
<pre class="prettyprint">
/* js/main.js */
removeAccount: function m_removeAccount(accountId, onError) 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.account.remove(accountId);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}
</pre>
</li>
</ul>

  
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
