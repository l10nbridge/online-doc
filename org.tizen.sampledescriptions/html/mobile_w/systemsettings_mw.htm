<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>SystemSettings Sample Overview</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mobile_s_w.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../org.tizen.guides/html/web/tizen/system/system_setting_w.htm">System Settings Guide</a></li> 
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/systemsetting.html">System Setting API</a></li> 
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/application.html">Application API</a></li> 
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/power.html">Power API</a></li> 
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/systeminfo.html">System Information API</a></li> 
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/websetting.html">Web Setting API</a></li> 
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
  <h1>SystemSettings Sample Overview</h1> 
  <p>The SystemSettings sample application demonstrates you can obtain and set various system settings on a mobile device.</p> 
  <p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Web Sample Applications</a>.</p>
  <p>The following figure illustrates some of the screens of the SystemSettings.</p> 
  <p class="figure">Figure: SystemSettings screens</p> 
  <p align="center"><img alt="SystemSettings screens" src="../images/systemsetting_mw_sd.png" /> </p> 
  <p>The application opens with the main screen that displays a list of available system settings grouped into categories. Select a category to view and modify the related settings:</p> 
  
<ul><li>In the <strong>Backgrounds</strong> category, you can set the home screen and lock screen wallpapers.</li>
<li>In the <strong>Sounds</strong> category, you can set the call ringtone and email notification.</li>
<li>In the <strong>Screen</strong> category, you can set the brightness and screen power state.</li>
<li>In the <strong>Web settings</strong> category, you can set the cookies and user agent property.</li></ul>

  

  <h2>Source Files</h2> 
  <p>You can create and view the sample application project including the source files in the IDE.</p> 
  <table border="1"> 
   <tbody> 
    <tr> 
     <th>File name</th> 
     <th>Description</th> 
    </tr> 
 <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">app.js</span></td> 
     <td>This is a starting file from which the JavaScript code starts loading.</td> 
    </tr>	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">config.xml</span></td> 
     <td>This file contains the application information for the platform to install and launch the application, including the view mode and the icon to be used in the device menu.</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">css/style.css</span></td> 
     <td>This file contains the CSS styling for the application UI.</td> 
    </tr>
    <tr> 
	<td><span style="font-family: Courier New,Courier,monospace">images/</span></td> 
     <td>This directory contains the images used to create the user interface.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">index.html</span></td> 
     <td>This is a starting file from which the application starts loading. It contains the layout of the application screens.</td> 
    </tr>
	<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/</span></td> 
     <td>This directory contains the application code.</td> 
    </tr> 
    <tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/core/</span></td> 
     <td>This directory contains application framework.</td> 
    </tr> 
    <tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/models/applicationControl.js</span></td> 
     <td>This file contains functions for working with the Application Control API.</td> 
    </tr>   
	<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/models/power.js</span></td> 
     <td>This file contains functions for working with the Power API.</td> 
    </tr>
<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/models/systemInfo.js</span></td> 
     <td>This file contains functions for working with the System Information API.</td> 
    </tr>   
	<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/models/systemSettings.js</span></td> 
     <td>This file contains functions for working with the System Setting API.</td> 
    </tr>
<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/models/webSettings.js</span></td> 
     <td>This file contains functions for working with the Web Setting API.</td> 
    </tr>   
	<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/views/background.js</span></td> 
     <td>This file contains the code that handles the interaction with the background settings screen.</td> 
    </tr>
 	<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/views/main.js</span></td> 
     <td>This file contains the code that handles the interaction with main screen.</td> 
    </tr>
	<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/views/screen.js</span></td> 
     <td>This file contains the code that handles the interaction with screen settings screen.</td> 
    </tr>
	<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/views/sound.js</span></td> 
     <td>This file contains the code that handles the interaction with sound settings screen.</td> 
    </tr>	
	<tr> 
    <td><span style="font-family: Courier New,Courier,monospace">js/views/web.js</span></td> 
     <td>This file contains the code that handles the interaction with Web settings screen.</td> 
    </tr>	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">lib/</span></td> 
     <td>This directory contains the external libraries (TAU library).</td> 
    </tr> 
   </tbody> 
  </table> 

<h2>Implementation</h2> 

<h3>Defining the Application Layout</h3>
<p>The application contains various screens, which all have a header and a list:</p>
<ul><li>Main screen consists of a list of links that lead the user to the other screens. The links are divided into categories that group similar functionality, and the categories are implemented with list dividers (<span style="font-family: Courier New,Courier,monospace">&lt;li&gt;</span> elements with the <span style="font-family: Courier New,Courier,monospace">data-role=&quot;list-divider&quot;</span> attribute).

<pre class="prettyprint">
&lt;!--index.html--&gt;
&lt;li data-role=&quot;list-divider&quot;&gt;
&nbsp;&nbsp;&nbsp;Personalization
&lt;/li&gt;
</pre>

<p>Each link contains an image that is placed in the list element. A list element with a link has the <span style="font-family: Courier New,Courier,monospace">ui-li-anchor</span> class, the link with an image has the <span style="font-family: Courier New,Courier,monospace">li-has-image</span> class, and the image has the <span style="font-family: Courier New,Courier,monospace">li-image</span> class:</p>

<pre class="prettyprint">
&lt;!--index.html--&gt;
&lt;li id=&quot;main-backgrounds&quot; class=&quot;ui-li-anchor&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;a href=&quot;#backgrounds&quot; class=&quot;li-has-image&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img class=&quot;li-image&quot; src=&quot;./images/lock_screen.png&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Backgrounds
&nbsp;&nbsp;&nbsp;&lt;/a&gt;
&lt;/li&gt;
</pre></li>

<li>Screen settings screen consists of a list of editable settings (the other screens except for the main screen are similar to the screen settings screen). The settings are placed in list elements, and since they are not links, they are implemented with the <span style="font-family: Courier New,Courier,monospace">ui-li-static</span> class. List elements with multiple lines have the <span style="font-family: Courier New,Courier,monospace">li-has-multiline</span> class.

<pre class="prettyprint">
&lt;!--index.html--&gt;
&lt;li class=&quot;ui-li-static li-has-multiline&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;input id=&quot;screen-brightness-slider&quot; type=&quot;range&quot; min=&quot;0&quot; max=&quot;100&quot; value=&quot;50&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;span id=&quot;screen-brightness-label&quot; class=&quot;li-text-sub li-text-sub-center&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
</pre>

<p>Link elements with buttons have the <span style="font-family: Courier New,Courier,monospace">li-has-right-circle-button</span> class:</p>

<pre class="prettyprint">
&lt;!--index.html--&gt;
&lt;li class=&quot;ui-li-static li-has-right-circle-btn&quot;&gt;
&nbsp;&nbsp;&nbsp;Turn off the screen for 3 seconds
&nbsp;&nbsp;&nbsp;&lt;button id=&quot;screen-off-btn&quot; data-inline=&quot;true&quot; data-icon=&quot;power&quot; data-style=&quot;circle&quot;&gt;&lt;/button&gt;
&lt;/li&gt;
</pre></li>
</ul>

<h3>Checking Capabilities</h3>
<p>At the application start, check some capabilities to determine which application features are supported in the device.</p>
<p>To check the capability, use the <span style="font-family: Courier New,Courier,monospace">getCapability()</span> method to retrieve information about device and its supported features. The method returns a Boolean value indicating the feature availability.</p>

<pre class="prettyprint">
/* systemInfo.js */
var capabilityPrefix = &#39;http://tizen.org/feature/&#39;;

function getCapability(capabilityId) 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (window.tizen) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return window.tizen.systeminfo
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.getCapability(capabilityPrefix + capabilityId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}
</pre>

<h3>Controlling the Background and Sound Settings</h3>

<p>To set some system settings, such as the home and lock screen wallpaper, incoming call ringtone, and email notification sound, you can use application controls to launch or communicate with other applications (in this case, to view the available images or sound files in the system in order to select one).</p>

<p>To modify settings using application controls:</p>

<ol>
<li>Find the application control.
<p>To find an application control that provides the operation you need (in this case, to pick a file), you must create an ApplicationControl with the applicable operation and extra information (in this case, a MIME type), and search for it with the <span style="font-family: Courier New,Courier,monospace">findAppControl()</span> method:</p>

<pre class="prettyprint">
/* applicationControl.js */
IMAGE: 
{
&nbsp;&nbsp;&nbsp;operation: &#39;http://tizen.org/appcontrol/operation/pick&#39;,
&nbsp;&nbsp;&nbsp;mime: &#39;image/*&#39;
}

function launchApplicationControl(applicationControlData) 
{
&nbsp;&nbsp;&nbsp;var service = null;

&nbsp;&nbsp;&nbsp;return new Promise(function onPromise(resolve, reject) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;service = new tizen.ApplicationControl(applicationControlData.operation, null,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applicationControlData.mime, null);
			
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.application.findAppControl(service, resolve, reject);			
</pre>	
</li>

<li>Launching the application control.
<p>The <span style="font-family: Courier New,Courier,monospace">findAppControl()</span> method returns a list of applications capable of handling the provided operation with the provided mime type. After finding and selecting a proper application control, you can launch it:</p>

<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.application.launchAppControl(service, null, null, reject,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onsuccess: function onReplySuccess(data) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve(getPickResult(data));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onfailure: function onReplyFail(error) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reject(error);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reject(error);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;});
}
</pre></li>

<li>Retrieve the application control result.
<p>After the application control launch, you can retrieve some data, if the launched application provides it. You can do it by finding a specific key in the success reply callback of the <span style="font-family: Courier New,Courier,monospace">launchAppControl()</span> method:</p>

<pre class="prettyprint">
/* applicationControl.js */
APP_CONTROL_SELECTED_KEY = &#39;http://tizen.org/appcontrol/data/selected&#39;;

function getPickResult(data) 
{
&nbsp;&nbsp;&nbsp;var length = data.length,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0;

&nbsp;&nbsp;&nbsp;for (; i &lt; length; i += 1) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data[i].key === APP_CONTROL_SELECTED_KEY) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return data[i].value;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return [];
}
</pre></li>

<li>After retrieving the application control result (the selected file), you can set it as the new system setting value using the <span style="font-family: Courier New,Courier,monospace">setProperty()</span> method:

<pre class="prettyprint">
/* systemSettings.js */´
var TYPE = Object.freeze(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOME_SCREEN: &#39;HOME_SCREEN&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LOCK_SCREEN: &#39;LOCK_SCREEN&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCOMING_CALL: &#39;INCOMING_CALL&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NOTIFICATION_EMAIL: &#39;NOTIFICATION_EMAIL&#39;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});
	
function setProperty(type, value) 
{
&nbsp;&nbsp;&nbsp;return new Promise(function onPromise(resolve, reject) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.systemsetting.setProperty(type, value, resolve, reject);
&nbsp;&nbsp;&nbsp;});
}
</pre></li></ol>

<p>To retrieve the current system setting value, use the <span style="font-family: Courier New,Courier,monospace">getProperty()</span> method:</p>

<pre class="prettyprint">
/* systemSettings.js */
function getProperty(type) 
{
&nbsp;&nbsp;&nbsp;return new Promise(function onPromise(resolve, reject) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.systemsetting.getProperty(type, resolve, reject);
&nbsp;&nbsp;&nbsp;});
}
</pre>

<h3>Controlling the Screen Brightness</h3>

<p>You can modify the screen brightness settings in the 0.0 – 1.0 range. In this example, the value is converted to integers between 0 and 100.</p>

<p>You can retrieve the current screen brightness value, set a new value, or restore the brightness to a previous value using the <span style="font-family: Courier New,Courier,monospace">getScreenBrightness()</span>, <span style="font-family: Courier New,Courier,monospace">setScreenBrightness()</span>, and <span style="font-family: Courier New,Courier,monospace">restoreScreenBrightness()</span> methods:</p>

<pre class="prettyprint">
/* power.js */
BRIGHTNESS_FACTOR = 100;

function getScreenBrightness() 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Math.round(tizen.power.getScreenBrightness() * BRIGHTNESS_FACTOR);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}

function setScreenBrightness(value) 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.power.setScreenBrightness(value / BRIGHTNESS_FACTOR);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}

function restoreScreenBrightness() 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.power.restoreScreenBrightness();
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}
</pre>

<h3>Controlling the Screen Power State</h3>

<p>You can control the screen backlight behavior and switch the screen on and off:</p>

<ul>
<li>To control the backlight:

<p>The screen has 3 possible states:</p>
<ul><li><span style="font-family: Courier New,Courier,monospace">SCREEN_OFF</span> indicates that the screen backlight states are not restricted.</li> 
<li><span style="font-family: Courier New,Courier,monospace">SCREEN_DIM</span> indicates that screen backlight can switch to a dim state, but cannot switch off (screen is always on, but can dim).</li>
<li><span style="font-family: Courier New,Courier,monospace">SCREEN_NORMAL</span> indicates that screen backlight is always at the current level and cannot be dimmed or switched off (screen is always on).</li></ul>

<p>You can control the backlight state by requesting and releasing it:</p>

<pre class="prettyprint">
/* power.js */
var SCREEN_STATE = Object.freeze(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OFF: &#39;SCREEN_OFF&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DIM: &#39;SCREEN_DIM&#39;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NORMAL: &#39;SCREEN_NORMAL&#39;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}),
&nbsp;&nbsp;&nbsp;&nbsp;SCREEN_RESOURCE = &#39;SCREEN&#39;;

function requestPowerState(screenState) 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.power.request(SCREEN_RESOURCE, screenState);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}

function releasePowerState() 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.power.release(SCREEN_RESOURCE);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}
</pre></li>

<li>To switch the screen on and off, use the <span style="font-family: Courier New,Courier,monospace">turnScreenON()</span> and <span style="font-family: Courier New,Courier,monospace">turnScreenOff()</span> methods:

<pre class="prettyprint">
/* power.js */
function turnScreenOn() 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.power.turnScreenOn();
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}

function turnScreenOff() 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.power.turnScreenOff();
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onError(error);
&nbsp;&nbsp;&nbsp;}
}
</pre></li></ul>


<h3>Controlling Web Settings</h3>

<p>You can clear cookies and set a user agent string for the current application:</p>

<ul><li>
Remove the cookies with the <span style="font-family: Courier New,Courier,monospace">removeAllCookies()</span> method:

<pre class="prettyprint">
/* webSettings.js */
function removeAllCookies() 
{
&nbsp;&nbsp;&nbsp;return new Promise(function onPromise(resolve, reject) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.websetting.removeAllCookies(resolve, reject);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reject(error);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;});
}
</pre></li>

<li>Set a user agent with the <span style="font-family: Courier New,Courier,monospace">setUserAgentString()</span> method:
<pre class="prettyprint">
/* webSettings.js */
function setUserAgentString(userAgent) 
{
&nbsp;&nbsp;&nbsp;return new Promise(function onPromise(resolve, reject) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.websetting.setUserAgentString(userAgent, resolve, reject);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reject(error);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;});
}
</pre></li></ul>

  
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>