<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>Memo Sample Overview</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mobile_s_w.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
            <li><a href="../../../org.tizen.guides/html/web/tizen/content/content_w.htm">Content Guide</a></li> 
			<li><a href="../../../org.tizen.guides/html/web/w3c/storage/websql_w.htm">Web SQL Database Guide</a></li>
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/content.html">Content API</a></li>
			<li><a href="../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#sql">Web SQL Database API</a></li>
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">
  <h1>Memo Sample Overview</h1>
  <p>The Memo sample application demonstrates how you can use the Web SQL database and content features in your application to store dates and get content information.</p> 
  <p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
  <p>The following figure illustrates the main screens of the Memo.</p>
  <p class="figure">Figure: Memo screens</p>
  <p align="center"><img alt="Memo screens" src="../images/memo.png" /></p>
  <p>The application opens with the main screen that shows the memos included in the default book.</p> 

<h2>Prerequisites</h2>  
<p>To ensure proper application execution, the following privileges must be set:</p>
<ul><li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/content.read</span></li>
<li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/content.write</span></li></ul>
  
  <h2>Source Files</h2>
  <p>You can create and view the sample application project including the source files in the IDE.</p> 
  <table border="1">
   <tbody>
    <tr>
     <th>File name</th>
     <th>Description</th>
    </tr>
    <tr>
     <td><span style="font-family: Courier New,Courier,monospace">config.xml</span></td>
     <td>This file contains the application information for the platform to install and launch the application, including the view mode and the icon to be used in the device menu.</td>
    </tr>
    <tr>
     <td><span style="font-family: Courier New,Courier,monospace">index.html</span></td>
     <td>This is a starting file from which the application starts loading. It contains the layout of the application screens.</td>
    </tr>
    <tr>
     <td><span style="font-family: Courier New,Courier,monospace">js/main.js</span></td>
     <td>This file contains the code for initiating the memo application.</td>
    </tr>
    <tr>
     <td><span style="font-family: Courier New,Courier,monospace">js/memo_db.js</span></td>
     <td>This file contains the code for handling the memo database.</td>
    </tr>
    <tr>
     <td><span style="font-family: Courier New,Courier,monospace">js/memo_gallery.js</span></td>
     <td>This file contains the code for handling the gallery from device images.</td>
    </tr>
    <tr>
     <td><span style="font-family: Courier New,Courier,monospace">js/memo_page.js</span></td>
     <td>This file contains the code for handling page navigation.</td>
    </tr>
   </tbody>
  </table>

<h2>Implementation</h2>

<p>To implement the application:</p>

<ol><li>
<p>To initialize the application, use the <span style="font-family: Courier New,Courier,monospace">init()</span> method, which is called when the whole DOM content is loaded. The method calls 3 other methods: <span style="font-family: Courier New,Courier,monospace">openDB()</span>, <span style="font-family: Courier New,Courier,monospace">initEventhandler()</span>, and <span style="font-family: Courier New,Courier,monospace">initPage()</span>.</p>
<pre class="prettyprint">
function init()
{
&nbsp;&nbsp;&nbsp;openDB();
&nbsp;&nbsp;&nbsp;initEventhandler();
&nbsp;&nbsp;&nbsp;initPage();
}
</pre></li>

<li>
<p>The <span style="font-family: Courier New,Courier,monospace">openDB()</span> method opens the Web SQL database and calls the <span style="font-family: Courier New,Courier,monospace">createTable()</span> method:</p>
<pre class="prettyprint">
function openDB() 
{
&nbsp;&nbsp;&nbsp;if (window.openDatabase) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db = window.openDatabase(&quot;myMemoDB&quot;, &quot;1.0&quot;, &quot;for memo sample webapp&quot;, 1024*1024);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.warn(&quot;not web sql support&quot;);
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;createTable();
}
</pre></li>
<li>To create the table, define the SQL sentence with quotation marks as the <span style="font-family: Courier New,Courier,monospace">executeSql()</span> method parameter.
<p>The <span style="font-family: Courier New,Courier,monospace">db</span> variable handles database transactions.</p>

<pre class="prettyprint">
db.transaction(function (tx) 
{
&nbsp;&nbsp;&nbsp;tx.executeSql(&quot;CREATE TABLE IF NOT EXISTS memo (id INTEGER PRIMARY KEY AUTOINCREMENT,&quot; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot; subject, text, book, date, image)&quot;, []);
});
</pre></li>

<li>To manage the table, you can insert values to it, or delete it:
<pre class="prettyprint">
/* Insert values */
db.transaction(function (tx) 
{
&nbsp;&nbsp;&nbsp;tx.executeSql(&quot;INSERT INTO book VALUES(?)&quot;, [book]);
});

/* Delete the table */
db.transaction(function (tx) 
{
&nbsp;&nbsp;&nbsp;tx.executeSql(&quot;DROP TABLE memo&quot;, []);
});
</pre></li>

<li>
<p>To request for the content with a specific filter, use the <span style="font-family: Courier New,Courier,monospace">refreshGalleries()</span> function. You can sort the content with the <span style="font-family: Courier New,Courier,monospace">tizen.SortMode</span> object.</p>
<pre class="prettyprint">
var refreshed = false,
&nbsp;&nbsp;&nbsp;&nbsp;filter = new tizen.AttributeFilter( &#39;type&#39;, &#39;EXACTLY&#39;, &#39;IMAGE&#39;),
&nbsp;&nbsp;&nbsp;&nbsp;sortMode = new tizen.SortMode(&#39;title&#39;, &#39;ASC&#39;),
&nbsp;&nbsp;&nbsp;&nbsp;RESOURCE_PATH = &#39;/opt/usr/media/&#39;;

function refreshGalleries() 
{
&nbsp;&nbsp;&nbsp;refreshed = false;
&nbsp;&nbsp;&nbsp;tizen.content.find(contentFindSuccess, contentFindError, null, filter, sortMode);
}
</pre>
<p>The <span style="font-family: Courier New,Courier,monospace">contentFindSuccess()</span> function is a callback that is triggered after the  <span style="font-family: Courier New,Courier,monospace">find()</span> function has retrieved the content. The callback extracts all image paths from a specified path, and store an array for making a gallery.</p>
<pre class="prettyprint">
for (i = 0; i &lt; length; i += 1) 
{
&nbsp;&nbsp;&nbsp;item = items[i];
&nbsp;&nbsp;&nbsp;pathdata = extractPathData(item.contentURI);
&nbsp;&nbsp;&nbsp;item.path = pathdata.path;
&nbsp;&nbsp;&nbsp;item.resource = pathdata.resource;
&nbsp;&nbsp;&nbsp;item.directory = pathdata.directory;
&nbsp;&nbsp;&nbsp;allpath = &quot;file://&quot; + item.path + &quot;/&quot; + item.name;
&nbsp;&nbsp;&nbsp;array_allpath.push(allpath);
}
</pre></li></ol>
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
