<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>FMRadio Sample Overview</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mobile_s_w.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
		   <li><a href="../../../org.tizen.guides/html/web/tizen/multimedia/fm_radio_w.htm">FM Radio Guide</a></li> 
		   <li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/fmradio.html">FM Radio API</a></li> 
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
  <h1>FMRadio Sample Overview</h1> 
  <p>The FMRadio sample application demonstrates how you can play the FM radio, scan frequencies to find stations, and manage stations and save them in the HTML local storage.</p> 
 <p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
 <p>The following figure illustrates the screens of the FMRadio.</p> 
  <p class="figure">Figure: FMRadio screens</p> 
  <p align="center"><img alt="FMRadio screens" src="../images/fmradio_sd_mw.png" /> </p> 
  <p>The application opens with the main screen, which shows the control panel of the radio:</p>
  
  <ul><li>In the circular widget, use the control buttons to change to the next or previous available station, change the current frequency Â±0.1MHz, mute the radio, and scan the whole spectrum in order to find all available stations. 
<p>The middle of the circular widget displays the currently played radio station.</p></li>
<li>In the footer, use the buttons to navigate between saved stations. The middle button opens the stations screen.</li></ul>

<p>The stations screen displays all stations found after clicking <strong>Scan</strong> in the circular widget on the main screen. On this screen,  you can manage the stations: remove or change the name of each station.</p>

   <h2>Prerequisites</h2>  
  <ul><li>Device with the FM Radio module</li></ul>
  
  
  <h2>Source Files</h2> 
  <p>You can create and view the sample application project including the source files in the IDE.</p> 
  
  <p>The application uses a simple MVC (Model-View-Controller) architectural model.</p>
  <table border="1"> 
   <tbody> 
    <tr> 
     <th>File name</th> 
     <th>Description</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">config.xml</span></td> 
     <td>This file contains the application information for the platform to install and launch the application, including the view mode and the icon to be used in the device menu.</td> 
    </tr> 
	<tr>
    <td><span style="font-family: Courier New,Courier,monospace">css/</span></td>
    <td>This directory contains the CSS styling for the application UI.</td>
  </tr>
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">index.html</span></td> 
     <td>This is a starting file from which the application starts loading. It contains the layout of the application screens.</td> 
    </tr>
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/</span></td> 
     <td>This directory contains the application code.</td> 
    </tr>	
	 <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/core/</span></td> 
     <td>This directory contains the application framework.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/models/radio.js</span></td> 
     <td>This file contains the methods for handling radio data.</td> 
    </tr>
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/models/stations.js</span></td> 
     <td>This file contains the methods for handling radio station data.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/views/main.js</span></td> 
     <td>This file contains the methods related to the main screen UI.</td> 
    </tr> 	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/views/popup.js</span></td> 
     <td>This file contains the methods related to popups.</td> 
    </tr>
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/views/stationList.js</span></td> 
     <td>This file contains the methods related to the stations screen UI.</td> 
    </tr>	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">templates/stationsListItem.tpl</span></td> 
     <td>This file contains the template of the station list row. The HTML content of the list is generated from this template.</td> 
    </tr> 	
   </tbody> 
  </table> 
  
<h2>Implementation</h2>
<p>The application can work only if the FM Radio module is supported on the device. Additionally, the external antenna has to be connected to the device in order to switch on the radio. The following functions checks whether the radio is supported and the antennal connected:
</p>

<pre class="prettyprint">
/* js/app.js */
function isRadioSupported() 
{
&nbsp;&nbsp;&nbsp;var isSupported = false;

&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isSupported = tizen.systeminfo.getCapability(&#39;http://tizen.org/feature/fmradio&#39;);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(&#39;No support for radio feature: &#39;, error.message);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;finally 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return isSupported;
&nbsp;&nbsp;&nbsp;}
}

function isAntennaConnected() 
{
&nbsp;&nbsp;&nbsp;return tizen.fmradio.isAntennaConnected;
}
</pre>

<p>When the application starts, the <span style="font-family: Courier New,Courier,monospace">init()</span> methods check the application requirements, set up all event handlers, and initialize the radio:</p>

<pre class="prettyprint">
/* js/app.js */
function init() 
{
&nbsp;&nbsp;&nbsp;if (checkRequirements()) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;main.initialize(); /* Call views/main.js init() */
&nbsp;&nbsp;&nbsp;}
}

/* js/views/main.js */
function init() 
{
&nbsp;&nbsp;&nbsp;bindEvents(); /* Bind all events */
&nbsp;&nbsp;&nbsp;refreshStationButtons(); /* Refresh main page UI */ 
&nbsp;&nbsp;&nbsp;radio.initialize(); /* Initialize the radio */
}
</pre>

<p>After initializing, the radio is ready to be played. The following functionalities are provided:</p>
<ul>
<li>Starting the radio:

<pre class="prettyprint">
/* js/models/radio.js */
function start(freq) 
{
&nbsp;&nbsp;&nbsp;if (radio.state !== radioState.SCAN) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radio.start(freq);
&nbsp;&nbsp;&nbsp;}
}
</pre></li>
<li>Stopping the radio:

<pre class="prettyprint">
/* js/models/radio.js */
function stop() 
{
&nbsp;&nbsp;&nbsp;if (radio.state !== radioState.PLAY) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radio.stop();
&nbsp;&nbsp;&nbsp;}
}
</pre></li>
<li>Muting the radio:

<pre class="prettyprint">
/* js/models/radio.js */
function setMuted(isMuted) 
{
&nbsp;&nbsp;&nbsp;radio.mute = isMuted;
}
</pre></li>
<li>Scanning the whole frequency spectrum.
<p>The <span style="font-family: Courier New,Courier,monospace">radio.scanStart()</span> function takes an object containing 2 callbacks (<span style="font-family: Courier New,Courier,monospace">onfrequencyfound</span> and <span style="font-family: Courier New,Courier,monospace">onfinished</span> as the first parameter and the error callback as the second parameter. The <span style="font-family: Courier New,Courier,monospace">onfrequencyfound</span> callback is called for each found station, while the <span style="font-family: Courier New,Courier,monospace">onfinished</span> callback is called when the scanning is finished.</p>

<pre class="prettyprint">
/* js/models/radio.js */
var scanCallback = 
{
&nbsp;&nbsp;&nbsp;onfrequencyfound: function onFrequencyFound(frequency) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Found a frequency */
&nbsp;&nbsp;&nbsp;},
    
&nbsp;&nbsp;&nbsp;onfinished: function onFinished(frequencies) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Finished finding all frequencies */
&nbsp;&nbsp;&nbsp;}
};

function scanStart() 
{
&nbsp;&nbsp;&nbsp;if (radio.state === radioState.PLAY) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radio.stop();
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;radio.scanStart(scanCallback, errorCallback);
}
</pre></li>
<li>Stopping the scan.
<p>The <span style="font-family: Courier New,Courier,monospace">radio.scanStop()</span> function takes a success callback function and error callback function as parameters.</p>

<pre class="prettyprint">
/* js/models/radio.js */
function scanStop() 
{
&nbsp;&nbsp;&nbsp;if (radio.state === radioState.SCAN) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radio.scanStop(scanStopSuccess, errorCallback);
&nbsp;&nbsp;&nbsp;}
}
</pre></li>
<li>Finding the nearest station with a greater or lower frequency than the currently played one:
<p>Both the <span style="font-family: Courier New,Courier,monospace">radio.seekUp()</span> and <span style="font-family: Courier New,Courier,monospace">radio.seekDown()</span> functions take a success and error callback as parameters. The success callback is called with the found frequency.</p>

<pre class="prettyprint">
/* js/models/radio.js */

/* Nearest station with a greater frequency */
function seekUp(successCb) 
{
&nbsp;&nbsp;&nbsp;if (radio.state === radioState.PLAY) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radio.seekUp(successCb, errorCallback);
&nbsp;&nbsp;&nbsp;}
}

/* Nearest station with a lower frequency */
function seekDown(successCb) 
{
&nbsp;&nbsp;&nbsp;if (radio.state === radioState.PLAY) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radio.seekDown(successCb, errorCallback);
&nbsp;&nbsp;&nbsp;}
}
</pre></li>
</ul>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
