<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>Calendar Sample Overview</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mw_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
		   <li><a href="../../../org.tizen.guides/html/web/tizen/system/time_w.htm">Time Guide</a></li> 
		   <li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/time.html">Time API</a></li> 
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
  <h1>Calendar Sample Overview</h1> 
  <p>The Calendar sample application demonstrates how you can display the calendar month by month in your application.</p> 
  <p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
  <p>The following figure illustrates the main screen of the Calendar. </p> 
  <p class="figure">Figure: Calendar screen</p> 
  <p align="center"><img alt="Calendar screen" src="../images/calendar_sd_mw.png" /> </p> 
  <p>The application contains one screen that displays the selected month. After the application starts, the current month is displayed. Click the <strong>Prev</strong> and <strong>Next</strong> buttons to view the previous and next month respectively. The <strong>Today</strong> button shows the current month.</p>

  <h2>Source Files</h2> 
  <p>You can create and view the sample application project including the source files in the IDE.</p> 
  <table border="1"> 
   <tbody> 
    <tr> 
     <th>File name</th> 
     <th>Description</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">config.xml</span></td> 
     <td>This file contains the application information for the platform to install and launch the application, including the view mode and the icon to be used in the device menu.</td> 
    </tr> 
  <tr>
    <td><span style="font-family: Courier New,Courier,monospace">css/style.css</span></td>
    <td>This file contains the CSS styling for the application UI.</td>
  </tr>
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">index.html</span></td> 
     <td>This is a starting file from which the application starts loading. It contains the layout of the application screens.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/</span></td> 
     <td>This directory contains the application code.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/core/</span></td> 
     <td>This directory contains the application framework.</td> 
    </tr> 
   
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/helpers/date.js</span></td> 
     <td>This file contains functions related to the date operations.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/models/date.js</span></td> 
     <td>This file contains functions related to the current date.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/models/month.js</span></td> 
     <td>This file contains the function that returns the month matrix.</td> 
    </tr> 	
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/views/init.js</span></td> 
     <td>This file contains code that initializes the application.</td> 
    </tr> 	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/views/monthPage.js</span></td> 
     <td>This file contains code that handles the interaction with the month page.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">lib/</span></td> 
     <td>This directory contains external libraries (TAU library).</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">templates/</span></td> 
     <td>This directory contains the layouts of the application screens and templates for the smaller elements of the user interface.</td> 
    </tr> 	
   </tbody> 
  </table> 
  
<h2>Implementation</h2>

<p>The <span style="font-family: Courier New,Courier,monospace">getDaysMatrix()</span> method is called after the application start and after every button click. It fills the data matrix with the day numbers. The length of the matrix is constant and equals the week length.</p>

<pre class="prettyprint">
/* js/models/month.js */

var DAYS_IN_WEEK = 7;

/**
* Creates a matrix of days in months
* Example: [ [29,30,1,2,3,4,5], [6,7,8,9,10,11,12], ...]
* @param {Date} date Date object.
* @return {array} daysMatrix Days matrix.
*/
function getDaysMatrix(date) 
{
&nbsp;&nbsp;&nbsp;var daysNumber = d.daysInMonth(date),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;daysPad = d.getFirstDay(date),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previous = d.getPreviousMonth(date),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previousDaysNumber = d.daysInMonth(previous),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rowsLength = Math.ceil((daysNumber + daysPad) / DAYS_IN_WEEK),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = [],
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;daysMatrix = [],
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start = 0,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next = 1,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 0;

&nbsp;&nbsp;&nbsp;/* Previous month&#39;s days */
&nbsp;&nbsp;&nbsp;while (daysPad--) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.push(getDayData(date, previousDaysNumber - daysPad, -1));
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;/* Current month&#39;s days */
&nbsp;&nbsp;&nbsp;for (i; i &lt;= daysNumber; i = i + 1) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.push(getDayData(date, i, 0));
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;/* Next month&#39;s days */
&nbsp;&nbsp;&nbsp;while (data.length % DAYS_IN_WEEK) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.push(getDayData(date, next++, 1));
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;for (j = 0; j &lt; rowsLength; j = j + 1) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start = j * DAYS_IN_WEEK;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;daysMatrix.push(data.slice(start, start + DAYS_IN_WEEK));
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return daysMatrix;
}</pre>

<h3>Layout Implementation</h3>

<p>The Calendar sample application contains a single screen that organizes the calendar data in the monthly view.</p>
<p>The screen contains the following elements:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">div</span> element with the <span style="font-family: Courier New,Courier,monospace">month-header</span> id displays the name of the month and the number of the year.</li>
<li><span style="font-family: Courier New,Courier,monospace">div</span> element with the <span style="font-family: Courier New,Courier,monospace">month-content</span> id displays the days of the selected month.</li>
<li><span style="font-family: Courier New,Courier,monospace">div</span> element with <span style="font-family: Courier New,Courier,monospace">month-footer</span> id displays the navigation buttons that enable switching between months.</li>
</ul>
<pre class="prettyprint">&lt;!--index.html--&gt;
&lt;div class=&quot;ui-page ui-page-active invisible&quot; id=&quot;month-page&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-header&quot; id=&quot;month-header&quot; data-position=&quot;fixed&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2 id=&quot;month-name&quot; class=&quot;ui-title&quot;&gt;&lt;/h2&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-content&quot; id=&quot;month-content&quot;&gt;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-footer&quot; id=&quot;month-footer&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-tabbar&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a id=&quot;prev-month-btn&quot;&gt;Prev&lt;/a&gt;&lt;/li&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a id=&quot;current-month-btn&quot;&gt;Today&lt;/a&gt;&lt;/li&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a id=&quot;next-month-btn&quot;&gt;Next&lt;/a&gt;&lt;/li&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&lt;/div&gt;
</pre>

<h3>Navigation between Months</h3>

<p>To switch between months, the user clicks the buttons in the application footer. To handle the month switching, the application registers event listeners to the navigation buttons.</p>

<p>When a button is clicked, the application updates the current date using the <span style="font-family: Courier New,Courier,monospace">setCurrentDate()</span> method of the <span style="font-family: Courier New,Courier,monospace">js/models/date.js</span> module. The application uses the <span style="font-family: Courier New,Courier,monospace">getPreviousMonth()</span>, <span style="font-family: Courier New,Courier,monospace">getNextMonth()</span>, and <span style="font-family: Courier New,Courier,monospace">getCurrentDateTime()</span> methods of the <span style="font-family: Courier New,Courier,monospace">js/helpers/date.js</span> module to get the month information.</p>

<pre class="prettyprint">/* js/views/monthPage.js */
var prevBtn = null,
&nbsp;&nbsp;&nbsp;&nbsp;currentBtn = null,
&nbsp;&nbsp;&nbsp;&nbsp;nextBtn = null;

function onPrevMonthBtnTap() 
{
&nbsp;&nbsp;&nbsp;var currentDate = dateModel.getCurrentDate(),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prevMonthDate = d.getPreviousMonth(currentDate);

&nbsp;&nbsp;&nbsp;dateModel.setCurrentDate(prevMonthDate);
&nbsp;&nbsp;&nbsp;createView();
}

function onNextMonthBtnTap() 
{
&nbsp;&nbsp;&nbsp;var currentDate = dateModel.getCurrentDate(),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextMonthDate = d.getNextMonth(currentDate);

&nbsp;&nbsp;&nbsp;dateModel.setCurrentDate(nextMonthDate);
&nbsp;&nbsp;&nbsp;createView();
}

function onCurrentMonthBtnTap() 
{
&nbsp;&nbsp;&nbsp;dateModel.setCurrentDate(d.getCurrentDateTime());
&nbsp;&nbsp;&nbsp;createView();
}

function bindEvents() 
{
&nbsp;&nbsp;&nbsp;prevBtn.addEventListener(&#39;click&#39;, onPrevMonthBtnTap);
&nbsp;&nbsp;&nbsp;currentBtn.addEventListener(&#39;click&#39;, onCurrentMonthBtnTap);
&nbsp;&nbsp;&nbsp;nextBtn.addEventListener(&#39;click&#39;, onNextMonthBtnTap);
}

function init() 
{
&nbsp;&nbsp;&nbsp;prevBtn = document.getElementById(&#39;prev-month-btn&#39;);
&nbsp;&nbsp;&nbsp;currentBtn = document.getElementById(&#39;current-month-btn&#39;);
&nbsp;&nbsp;&nbsp;nextBtn = document.getElementById(&#39;next-month-btn&#39;);
&nbsp;&nbsp;&nbsp;bindEvents();
}
</pre>

<p>When the current date is set, the application calls the <span style="font-family: Courier New,Courier,monospace">createView()</span> method to perform the UI update:</p>
<ul>
<li><p>The <span style="font-family: Courier New,Courier,monospace">setHeader()</span> method updates the information displayed in the application header. It obtains the current date using the <span style="font-family: Courier New,Courier,monospace">getCurrentDate()</span> method of the <span style="font-family: Courier New,Courier,monospace">js/helpers/date.js</span> module. When the current date is known, the <span style="font-family: Courier New,Courier,monospace">innerHTML</span> attribute of the <span style="font-family: Courier New,Courier,monospace">monthName</span> HTML element is updated using the <span style="font-family: Courier New,Courier,monospace">getMonthName()</span> method of the <span style="font-family: Courier New,Courier,monospace">js/helpers/date.js</span> module and the <span style="font-family: Courier New,Courier,monospace">getFullYear()</span> method provided by the JavaScript API.</p></li>
<li><p>The <span style="font-family: Courier New,Courier,monospace">prepareTables()</span> method uses an empty <span style="font-family: Courier New,Courier,monospace">monthTable.tpl</span> template and adds it to the <span style="font-family: Courier New,Courier,monospace">innerHTML</span> property of the <span style="font-family: Courier New,Courier,monospace">monthContent</span> HTML element.</p></li>
<li><p>The <span style="font-family: Courier New,Courier,monospace">fillTables()</span> method uses the empty table created using the <span style="font-family: Courier New,Courier,monospace">prepareTables()</span> method and fills it with values corresponding to the days of the selected month.</p></li>
<li><p>The <span style="font-family: Courier New,Courier,monospace">markDay()</span> method displays the current day on the table. For this purpose, the application maintains the <span style="font-family: Courier New,Courier,monospace">data-date</span> attribute for each HTML element representing the day on the displayed table. The application finds the element that contains the <span style="font-family: Courier New,Courier,monospace">data-date</span> attribute with a value equal to the current day. If such an element exists on the displayed table, the <span style="font-family: Courier New,Courier,monospace">markDay()</span> method adds to it the CSS class.</p></li>
  </ul>

<pre class="prettyprint">/* js/views/monthPage.js */
function setHeader() 
{
&nbsp;&nbsp;&nbsp;var date = dateModel.getCurrentDate();

&nbsp;&nbsp;&nbsp;monthName.innerHTML = d.getMonthName(date) + &#39; &#39; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date.getFullYear();
}

function prepareTables() 
{
&nbsp;&nbsp;&nbsp;monthContent.innerHTML = t.get(&#39;monthTable&#39;, {id: &#39;month&#39;});
}

function fillTables() 
{
&nbsp;&nbsp;&nbsp;var date = dateModel.getCurrentDate();
&nbsp;&nbsp;&nbsp;fillTable(date, &#39;month&#39;);
}

function markDay(date, className) 
{
&nbsp;&nbsp;&nbsp;var dateString = typeof date === &#39;string&#39; ?
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date : d.toDataString(date),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;today = document.querySelector(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;[data-date=&quot;&#39; + dateString + &#39;&quot;]&#39;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);

&nbsp;&nbsp;&nbsp;if (today) 
	{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;today.classList.add(className);
&nbsp;&nbsp;&nbsp;}
}

function createView() 
{
&nbsp;&nbsp;&nbsp;setHeader();
&nbsp;&nbsp;&nbsp;prepareTables();
&nbsp;&nbsp;&nbsp;fillTables();
&nbsp;&nbsp;&nbsp;markDay(d.getCurrentDateTime(), DAY_TODAY_CLS);
}
</pre>


  
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>