<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>DownloadManager Overview</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mw_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../org.tizen.guides/html/web/tizen/content/download_w.htm">Download Guide</a></li> 
			<li><a href="../../../org.tizen.tutorials/html/web/tizen/content/download_tutorial_w.htm">Download Tutorial</a></li> 
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/download.html">Download API</a></li> 
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/application.html">Application API</a></li> 
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content"> 
  <h1>DownloadManager Overview</h1> 
  <p>The DownloadManager sample application demonstrates how you can asynchronously download the content of an URL to the device storage.</p> 
  <p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>, and on the coding of the sample application, see <a href="../../../org.tizen.tutorials/html/web/tizen/content/task_downloadmanager_w.htm">Download Manager task</a>.</p>
  <p>The following figure illustrates the main screens of the DownloadManager. </p> 
  <p class="figure">Figure: DownloadManager screens</p> 
  <p align="center"><img alt="DownloadManager screens" src="../images/downloadmanager.png" /> </p> 
  <p>The application opens with the DownloadManager main screen, where the download history is displayed. To download a file, type its URL address in the input field at the top of the screen and click the <strong>OK</strong> button to initiate the process. The new download status item is added with a progress bar and buttons that allow pausing or canceling the process.</p>

<p>When the specified content is downloaded, click the <strong>Open</strong> button to run an external application to view the content, or click the <strong>Remove</strong> button to remove the item from the download history.</p>

<p>To clear the whole download history, click the <strong>Clear all finished</strong> button.</p> 

  <h2>Source Files</h2> 
  <p>You can create and view the sample application project including the source files in the IDE.</p> 
  <table border="1"> 
   <tbody> 
    <tr> 
     <th>File name</th> 
     <th>Description</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">config.xml</span></td> 
     <td>This file contains the application information for the platform to install and launch the application, including the view mode and the icon to be used in the device menu.</td> 
    </tr>
	<tr>
	  <td><span style="font-family: Courier New,Courier,monospace">images/</span></td> 
     <td>This directory contains the images used to create the user interface.</td> 
    </tr> 	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">index.html</span></td> 
     <td>This is a starting file from which the application starts loading. It contains the layout of the application screens.</td> 
    </tr>       
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/</span></td> 
     <td>This directory contains the application code.</td> 
    </tr>

	    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.config.js</span></td> 
     <td>This file contains the configuration values.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.helpers.js</span></td> 
     <td>This file contains the helper functions, such as code for resolving the file extensions.</td> 
    </tr> 	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.js</span></td> 
     <td>This file defines the main application code (Controller layer).</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.model.js</span></td> 
     <td>This file contains calls to the Download API and code directly related to handling the basic operations on the downloaded items (Model layer).</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.ui.events.js</span>
	 <p><span style="font-family: Courier New,Courier,monospace">js/app.ui.js</span></p>
	 <p><span style="font-family: Courier New,Courier,monospace">js/app.ui.templateManager.js</span></p>
	 <p><span style="font-family: Courier New,Courier,monospace">js/app.ui.templateManager.modifiers.js</span></p></td> 
     <td>These files contain code related to the user interface (View layer). The code mainly uses operations on the HTML document. The <span style="font-family: Courier New,Courier,monospace">templateManager</span> class is a part of the UI code, which handles loading and processing the files from the <span style="font-family: Courier New,Courier,monospace">templates</span> directory.
</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/main.js</span></td> 
     <td>This file is a loader; the first Javascript file to be executed. It loads other files and triggers the application initialization.</td> 
    </tr> 	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">lib/tau/</span></td> 
     <td>This directory contains external libraries (TAU library).</td> 
    </tr>
	 <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">templates/</span></td> 
     <td>This directory contains the layout for the application screens, and templates for smaller UI components.</td> 
    </tr> 
   </tbody> 
  </table> 
  
 
 <h2>Implementation</h2>
 
 <p>The download process starts when the user clicks <strong>OK</strong> next to the URL input field on the main screen. The button click indirectly invokes the <span style="font-family: Courier New,Courier,monospace">startDownloading()</span> method, which is responsible for starting the download process. A new <span style="font-family: Courier New,Courier,monospace">DownloadRequest</span> object is created and the download process is started through the <span style="font-family: Courier New,Courier,monospace">DownloadManager</span> object.</p>
 
 <pre class="prettyprint">
/* js/app.model.js */
startDownloading: function Model_startDownloading(url, eventHandlers, onSuccess) 
{
&nbsp;&nbsp;&nbsp;var downloadRequest, downloadId;

&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;downloadRequest = new tizen.DownloadRequest(url, &#39;downloads&#39;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;downloadId = tizen.download.start(downloadRequest, this.createDownloadCallback(eventHandlers));

&nbsp;&nbsp;&nbsp;this.onDownloadStarted(onSuccess, downloadId, url);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(&#39;Start download error&#39;, error);
&nbsp;&nbsp;&nbsp;}
},
</pre>
<p>After the download process is started successfully, the download item information is added to the local storage and the application user interface is updated. The <span style="font-family: Courier New,Courier,monospace">startDownloading()</span> method receives the <span style="font-family: Courier New,Courier,monospace">onDownloadStarted()</span> method as a callback.</p>
<pre class="prettyprint">
/* js/app.js */
onDownloadStarted: function App_onDownloadStarted(id, url) 
{
&nbsp;&nbsp;&nbsp;var fileName = this.helpers.getSourceName(url); 

&nbsp;&nbsp;&nbsp;this.ui.onDownloadStarted(id, url, fileName);
},
</pre>

<p>To pause downloading, the application uses the <span style="font-family: Courier New,Courier,monospace">pauseDownloading()</span> method.</p>
<pre class="prettyprint">
/* app.model.js */
pauseDownloading: function Model_pauseDownloading(downloadId) 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.download.pause(downloadId);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(&#39;Pause download error&#39;, error);
&nbsp;&nbsp;&nbsp;}
},
</pre>
<p>To resume downloading, the application uses the <span style="font-family: Courier New,Courier,monospace">resumeDownloading()</span> method.</p>
<pre class="prettyprint">
/* app.model.js */
resumeDownloading: function Model_resumeDownloading(downloadId, eventHandlers, listenerCallback) 
{
&nbsp;&nbsp;&nbsp;tizen.download.resume(downloadId);
&nbsp;&nbsp;&nbsp;if (eventHandlers !== null) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.download.setListener(downloadId, this.createDownloadCallback(eventHandlers));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listenerCallback(downloadId);
&nbsp;&nbsp;&nbsp;}
},
</pre>
<p>To cancel downloading, the application uses the <span style="font-family: Courier New,Courier,monospace">cancelDownloading()</span> method.</p>
<pre class="prettyprint">
/* app.model.js */
cancelDownloading: function Model_cancelDownloading(downloadId) 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.download.cancel(downloadId);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;console.error(&#39;Cancel download error&#39;, error);
&nbsp;&nbsp;&nbsp;}
},
</pre>
<p>To launch a specified file, the application uses the <span style="font-family: Courier New,Courier,monospace">launchFile()</span> method.</p>
<pre class="prettyprint">
/* app.model.js */
launchFile: function Model_launchFile(fileName, mime) 
{
&nbsp;&nbsp;&nbsp;var service;
&nbsp;&nbsp;&nbsp;service = new tizen.ApplicationControl(&#39;http://tizen.org/appcontrol/operation/view&#39;, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;file:///opt/usr/media/Downloads/&#39; + fileName, mime, null);
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.application.launchAppControl(service, null, function onLaunchFileSuccess() 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&#39;Launch file success&#39;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function onLaunchFileError(error) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(&#39;Launch file launchAppControl error: &#39;, error);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error.type === &#39;NotFoundError&#39;) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;There is no suitable application &#39; + &#39;to show this content. &#39; +
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Please install application &#39; + &#39;that supports this content.&#39;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (error) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;console.error(&#39;Launch file error&#39;, error.message);
&nbsp;&nbsp;&nbsp;}
},
</pre>


<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>