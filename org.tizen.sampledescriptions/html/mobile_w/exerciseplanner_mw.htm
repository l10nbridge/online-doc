<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>ExercisePlanner Overview</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mw_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../org.tizen.guides/html/web/tizen/application/alarm_w.htm">Alarm Guide</a></li> 
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/alarm.html">Alarm API</a></li> 
			<li><a href="../../../org.tizen.web.apireference/html/device_api/mobile/tizen/application.html">Application API</a></li> 
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
  <h1>ExercisePlanner Overview</h1> 
  <p>The ExercisePlanner sample application demonstrates how you can add or delete alarms in your application. Also it demonstrates how the application can react on those alarms.</p> 
  <p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
  <p>The following figure illustrates the main screens of the ExercisePlanner.</p> 
  <p class="figure">Figure: ExercisePlanner screens</p> 
  <p align="center"><img alt="ExercisePlanner screens" src="../images/exerciseplanner.png" /> </p> 
  <p> The application opens with the Exercise planner main screen that displays the scheduled exercises.</p> 
  <p>To define a new alarm, click the <strong>Add New Exercise</strong> button on the main screen. For each alarm you can define:</p> 
  <ul> 
   <li>The alarm name</li> 
   <li>The alarm frequency</li>  
   <li>The start time</li> 
   <li>A comment</li> 
  </ul> 
  <p>To activate the alarm, click the <strong>Save</strong> button on the new exercise screen. When the start time of the alarm is reached, the application displays a proper screen with application details where you can select the <strong>Exercises list</strong> to go to the main screen, or <strong>Exit</strong> to close the application.</p>

  <h2>Source Files</h2> 
  <p>You can create and view the sample application project including the source files in the IDE.</p> 
  <table border="1"> 
   <tbody> 
    <tr> 
     <th>File name</th> 
     <th>Description</th> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">config.xml</span></td> 
     <td>This file contains the application information for the platform to install and launch the application, including the view mode and the icon used in the device menu.</td> 
    </tr> 
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">index.html</span></td> 
     <td>This is a starting file from which the application stars loading. It contains the layout of the application screens.</td> 
    </tr> 
	    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/</span></td> 
     <td>This directory contains the application code.</td> 
    </tr> 
	    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/main.js</span></td> 
     <td>This file acts as loader for the application and its dependencies.</td> 
    </tr> 
	    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.js</span></td> 
     <td>This file is responsible for application setup and interaction with the Application API.</td> 
    </tr> 
	    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.config.js</span></td> 
     <td>This file contains the application configuration.</td> 
    </tr> 
	    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.alarm.js</span></td> 
     <td>This file is responsible for interaction with the Alarm API.</td> 
    </tr> 
	    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.model.js</span></td> 
     <td>This file is responsible for the application data storage.</td> 
    </tr> 
	    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">js/app.ui.js</span></td> 
     <td>This file is responsible for handling the user interface interactions.</td> 
    </tr> 
	    <tr> 
     <td><p><span style="font-family: Courier New,Courier,monospace">js/app.ui.templateManager.js</span></p>
		<p><span style="font-family: Courier New,Courier,monospace">js/app.ui.templateManager.modifiers.js
		</span></p></td> 
     <td>These files are responsible for template management.</td> 
    </tr> 
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">lib/</span></td> 
     <td>This directory contains the external libraries (TAU library).</td> 
    </tr> 	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">css/style.css</span></td> 
     <td>This file contains the CSS styling for the application UI.</td> 
    </tr> 
	<tr> 
     <td><span style="font-family: Courier New,Courier,monospace">templates/</span></td> 
     <td>This directory contains layouts of the application screens and templates for smaller elements of the user interface.</td> 
    </tr> 	
    <tr> 
     <td><span style="font-family: Courier New,Courier,monospace">img/</span></td> 
     <td>This directory contains the images used to create the user interface.</td> 
    </tr> 
   </tbody> 
  </table> 
  
  
  <h2>Implementation</h2>
  
  
<p>When the application starts, the application modules are initialized.</p>
<pre class="prettyprint">
/* js/app.js */
this.model = new Model();
this.ui = new Ui();
this.model.init(this);
this.ui.init(this, this.getRequestedAppControlData());
</pre>

<p>The main screen is shown with the currently active exercises. The exercises are stored in the local storage.</p>
<pre class="prettyprint">
/* js/app.model.js */
var exercises = window.localStorage.getItem(&#39;exercises&#39;);
</pre>
<p>To create an exercise, it is necessary to create an alarm. The ID of the created alarm becomes the exercise ID. After the alarm is created, the local storage is updated.</p>
<pre class="prettyprint">
/* js/app.model.js */
/**
* Adds a new exercise, saves it in the local storage and sets a new alarm
* @param {Object} exercise Exercise object
* @return {Object|undefined} exercise object
*/
add: function Model_saveAlarm(exercise) 
{
&nbsp;&nbsp;&nbsp;var alarmId = this.alarmHelper.add(exercise);

&nbsp;&nbsp;&nbsp;if (alarmId) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exercise.id = alarmId;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Add to session storage */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.exercises.push(exercise);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Add to localStorage */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.updateStorage();

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return exercise;
&nbsp;&nbsp;&nbsp;}
}

/* Saves the exercises in the local storage */
updateStorage: function () 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.localStorage.setItem(&#39;exercises&#39;, JSON.stringify(this.exercises));
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(...)
&nbsp;&nbsp;&nbsp;}
}
</pre>

<p>To add an alarm that would start the application on time, the application ID and the application control URI are needed.</p>
<pre class="prettyprint">
/* js/app.js */

APP_CONTROL_OPERATION_URI:&#39;http://tizen.org/appcontrol/operation/exercise&#39;

/**
* Returns this application ID
* @return {number} application ID
*/
getId: function getId() 
{
&nbsp;&nbsp;&nbsp;return tizen.application.getCurrentApplication().appInfo.id;
}

/* js/app.alarm.js */

/**
* Creates a new system alarm connected with the exercise
* @param {Object} exercise
* @param {string} id of added alarm
*/
add: function addAlarm(exercise) 
{
&nbsp;&nbsp;&nbsp;var alarm = {}, date, appControl;

&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Change the datetimepicker returned object into Date type object */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date = this.datapickerValue2Date(exercise.startTime);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Create a new Alarm object */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alarm = new tizen.AlarmAbsolute(date, exercise.days);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Create an ApplicationControl object */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appControl = new tizen.ApplicationControl(app.APP_CONTROL_OPERATION_URI);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Add a new alarm and connect it with appControl object */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.alarm.add(alarm, app.getId(), appControl);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(e);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;finally 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return alarm.id;
&nbsp;&nbsp;&nbsp;}
}
</pre>
<p>The application control data is checked to determine if the application was started by the user or by an alarm previously set up through the application. If the application was started by an alarm, the exercise ID is retrieved and returned.</p>
<pre class="prettyprint">
/* js/app.js */

var reqAppControl = tizen.application.getCurrentApplication().getRequestedAppControl()

if (reqAppControl) 
{
&nbsp;&nbsp;&nbsp;data = reqAppControl.appControl.data;
&nbsp;&nbsp;&nbsp;len = data.length - 1;

&nbsp;&nbsp;&nbsp;while (len &gt;= 0) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data[len].key === this.APP_CONTROL_DATA_KEY)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exerciseId = data[len].value[0];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len -= 1;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return exerciseId;
}
</pre>
<p>For the application control to work, additional data in the <span style="font-family: Courier New,Courier,monospace">config.xml</span> file is necessary.</p>
<pre class="prettyprint">
&lt;!--confix.xml--&gt;

&lt;tizen:app-control&gt;
&lt;tizen:src name=&quot;index.html&quot;/&gt;
&lt;tizen:operation name=&quot;http://tizen.org/appcontrol/operation/exercise&quot;/&gt;
&gt;/tizen:app-control&lt;
</pre>
<p>To remove an alarm, its ID is required.</p>
<pre class="prettyprint">
/* js/app.alarm.js */

/**
* Removes the system alarm connected to the exercise
* @param {Object} exercise
* @return {boolean} returns result of operation
*/
remove: function removeAlarm(exercise) 
{
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tizen.alarm.remove(exercise.id);
&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;catch (e) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error(e);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return true;
},
</pre>

  

  
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>