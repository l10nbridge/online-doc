<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>
	<title>Application Common Sample Overview</title>
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation"></div>

<div id="container"><div id="contents"><div class="content">
  <div id="profile">
    <p><img alt="Mobile native" src="../images/mn_icon.png"/></p>
  </div>

  <h1>Application Common Sample Overview</h1>

  <p>
  The Tizen API's App-common module provides a set of functions enabling information extraction from calling application (name, paths). Moreover, the sample application demonstrates how to obtain the details
  of the application's events when they occur.
  </p>
  <p>The figure below illustrates the view of the application.</p>
  <p id="app-screenshot" class="figure">Figure: App-common application screens.</p>
  <p style="text-align:center;">
    <img alt="Application view" height="364" hspace="20" src="../images/appcommon_application_view_sd_mn.png" />
	<img alt="Evants view" height="364" hspace="20" src="../images/appcommon_events_view_sd_mn.png" />
	<img alt="Paths view" height="364" hspace="20" src="../images/appcommon_paths_view_sd_mn.png" />
	<img alt="Files view" height="364" hspace="20" src="../images/appcommon_files_view_sd_mn.png" />
  </p>

  <p>The sample application provides a user interface for previewing application-related information:
  <ul>
    <li>application name, id, version;</li>
	<li>events details (if occured):
	  <ul>
	    <li>low memory status,</li>
		<li>low battery status,</li>
		<li>changed language,</li>
		<li>changed regional formatting,</li>
		<li>device orientation,</li>
		<li>suspend state;</li>
	  </ul>
	</li>
	<li>path to the specific data included in the application's package (data, cache, resource, etc.) and file names stored in these location;</li>
  </ul>
  The structure of the user interface is depicted below (EDJE layout scripts are used).
  </p>
  <p id="ui-main-struct" class="figure">Figure: App-common main layout structure.</p>
  <p style="text-align:center;">
    <img alt="App-common main layout structure" hspace="80" height="400" src="../images/appcommon_ui_layout_1_sd_mn.png" />
  </p>
  <p>
  The <span style="font-family: Courier New,Courier,monospace">PART_MAIN_CONTENT</span> swallow is used as a container for any of the below layouts.
  </p>
  <p id="ui-tabs-struct" class="figure">Figure: App-common tabs layout structure.</p>
  <p style="text-align:center;">
    <img alt="App-common tabs layout structure" hspace="80" height="400" src="../images/appcommon_ui_layout_2_sd_mn.png" />
  </p>
  <p>
  The layout shown below is embedded into the <span style="font-family: Courier New,Courier,monospace">default</span> part of the
  <span style="font-family: Courier New,Courier,monospace">elm_popup</span> widget.
  </p>
  <p id="ui-popup-struct" class="figure">Figure: App-common popup window layout structure.</p>
  <p style="text-align:center;">
    <img alt="App-common popup window layout structure" hspace="80" height="400" src="../images/appcommon_ui_layout_3_sd_mn.png" />
  </p>
  <p>
  The final application's view is created by embedding proper widgets into the layouts depicted above. The resulting UI views are shown below.
  </p>
  <p id="ui-view" class="figure">Figure: App-common application's UI view.</p>
  <p style="text-align:center;">
    <img alt="App-common application's UI view" hspace="80" height="450" src="../images/appcommon_ui_tabs_view_sd_mn.png" />
  </p>
  <br>
  The application's workflow can be divided into three logical pipelines:
  <ul>
    <li>App-common application startup,</li>
	<li>application's events handling,</li>
  </ul>
  which can be described by the following figure:
  </p>
  <p id="workflow" class="figure">Figure: App-common application workflow.</p>
  <p style="text-align:center;">
    <img alt="Application workflow" height="450" hspace="0" src="../images/appcommon_workflow_sd_mn.png"/>
  </p>

  <h3>Prerequisites</h3>
  <p>There are no requirements regarding application's privileges.
  </p>

<h2>Implementation</h2>

<h3>Type definitions</h3>

<pre class="prettyprint">
struct __appdata {
&nbsp;&nbsp;&nbsp;viewdata_s view;&nbsp;&nbsp;&nbsp;/* View related data. */
&nbsp;&nbsp;&nbsp;modeldata_s model;&nbsp;/* Model related data. */
};
</pre>

<pre class="prettyprint">
/* All the Evas_Object objects represent UI widgets. */
struct __viewdata {
&nbsp;&nbsp;&nbsp;Evas_Object *win;
&nbsp;&nbsp;&nbsp;Evas_Object *conform;
&nbsp;&nbsp;&nbsp;Evas_Object *layout_main_panel;
&nbsp;&nbsp;&nbsp;Evas_Object *main_toolbar;
&nbsp;&nbsp;&nbsp;Evas_Object *main_toolbar_item_app;
&nbsp;&nbsp;&nbsp;Evas_Object *main_toolbar_item_events;
&nbsp;&nbsp;&nbsp;Evas_Object *main_toolbar_item_paths;
&nbsp;&nbsp;&nbsp;Evas_Object *layout_app;
&nbsp;&nbsp;&nbsp;Evas_Object *layout_events;
&nbsp;&nbsp;&nbsp;Evas_Object *layout_paths;
&nbsp;&nbsp;&nbsp;Evas_Object *paths_list;
&nbsp;&nbsp;&nbsp;Evas_Object *popup_paths;
&nbsp;&nbsp;&nbsp;Evas_Object *popup_files_list;
&nbsp;&nbsp;&nbsp;/* Callback function called when popup window is opened from "Paths" tab of the main application's view. */
&nbsp;&nbsp;&nbsp;paths_popup_opened_cb popup_opened_cb;
};
</pre>

<pre class="prettyprint">
typedef void(*paths_popup_opened_cb)(const char *path);
</pre>

<pre class="prettyprint">
/* Handlers for common application events:
&nbsp;*&nbsp;&nbsp;&nbsp;APP_EVENT_LOW_BATTERY,
&nbsp;*&nbsp;&nbsp;&nbsp;APP_EVENT_LOW_MEMORY,
&nbsp;*&nbsp;&nbsp;&nbsp;APP_EVENT_DEVICE_ORIENTATION_CHANGED,
&nbsp;*&nbsp;&nbsp;&nbsp;APP_EVENT_LANGUAGE_CHANGED,
&nbsp;*&nbsp;&nbsp;&nbsp;APP_EVENT_REGION_FORMAT_CHANGED,
&nbsp;*&nbsp;&nbsp;&nbsp;APP_EVENT_SUSPENDED_STATE_CHANGED.
&nbsp;*/
struct __modeldata {
&nbsp;&nbsp;&nbsp;app_event_handler_h handlers[5];
}
</pre>

<pre class="prettyprint">
/* Data structure used to populate the elm_genlist widget in "Paths" tab with relevant data. */
struct __path_list_item {
&nbsp;&nbsp;&nbsp;char *top_label;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Name of the file resources pointed by the path. */
&nbsp;&nbsp;&nbsp;char *bottom_label;&nbsp;&nbsp;/* Path to the file resources. */
&nbsp;&nbsp;&nbsp;path_item_type type;&nbsp;/* Type of the file resources. */
};
</pre>

<pre class="prettyprint">
typedef enum {
&nbsp;&nbsp;&nbsp;PIT_DATA,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Data directory containing private data of the application. */
&nbsp;&nbsp;&nbsp;PIT_CACHE,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Cache directory containing temporary data of the application. */
&nbsp;&nbsp;&nbsp;PIT_RESOURCE,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Resource directory. */
&nbsp;&nbsp;&nbsp;PIT_SHARED_DATA,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Shared data directory which is used to share data with other applications. */
&nbsp;&nbsp;&nbsp;PIT_SHARED_RESOURCE,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Shared resource directory which is used to share resources with other applications. */
&nbsp;&nbsp;&nbsp;PIT_SHARED_TRUSTED,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Shared trusted directory which is used to share data with a family of trusted applications. */
&nbsp;&nbsp;&nbsp;PIT_EXTERNAL_DATA,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* External data directory containing data of the application. */
&nbsp;&nbsp;&nbsp;PIT_EXTERNAL_CACHE,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* External cache directory containing temporary data of the application. */
&nbsp;&nbsp;&nbsp;PIT_EXTERNAL_SHARED_DATA,&nbsp;/* External shared data directory which is used to share the data with other applications. */
&nbsp;&nbsp;&nbsp;PIT_TEP_RESOURCE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Tizen Expansion Package directory. */
} path_item_type;
</pre>



<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
