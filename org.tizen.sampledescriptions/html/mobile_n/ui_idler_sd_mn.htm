<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>[UI Sample] Idler Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/></p>
	</div>

<h1>[UI Sample] Idler Sample Overview</h1> 
<p>The Idler sample demonstrates how to operate the idler functionalities in Ecore. It allows for callbacks to be called when the program is not handling events, timers or fd handlers.</p> 

<p>The following log shows the result of the Idler sample.</p> 

<p class="figure">Figure: Idler log</p> 
<p align="center"><img alt="Idler log" src="../images/idler.png" /></p> 


<h2 id="Implementation" name="Implementation">Implementation</h2>

<p>The following code snippet shows the struct for dealing with the idler. It is a helper struct that gives some context to the callbacks.</p>

<pre class="prettyprint">
struct context 
{ 
&nbsp;&nbsp;&nbsp;int count;
&nbsp;&nbsp;&nbsp;Ecore_Idle_Enterer *enterer;
&nbsp;&nbsp;&nbsp;Ecore_Idler *idler;
&nbsp;&nbsp;&nbsp;Ecore_Idle_Exiter *exiter;
};
</pre>

<p>The following code snippet shows how to register the idle enterer, the idle exiter, and the idler callbacks.</p>

<pre class="prettyprint">
struct context ctx = {0};

ctx.enterer = ecore_idle_enterer_add(_enterer_cb, &amp;ctx);
ctx.exiter = ecore_idle_exiter_add(_exiter_cb, &amp;ctx);
ctx.idler = ecore_idler_add(_idler_cb, &amp;ctx);
</pre>

<p>The following code snippet defines the callback functions to be called.</p>

<pre class="prettyprint">
static Eina_Bool
_enterer_cb(void *data EINA_UNUSED)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_DEBUG, LOG_TAG, &quot;IDLE ENTERER: Ecore entering in idle state.&quot;);

&nbsp;&nbsp;&nbsp;return ECORE_CALLBACK_RENEW;
}

static Eina_Bool
_exiter_cb(void *data EINA_UNUSED) 
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_DEBUG, LOG_TAG, &quot;IDLE EXITER: Ecore exiting idle state.&quot;);

&nbsp;&nbsp;&nbsp;return ECORE_CALLBACK_RENEW;
}

static Eina_Bool
_idler_cb(void *data) 
{
&nbsp;&nbsp;&nbsp;struct context *ctx = data;

&nbsp;&nbsp;&nbsp;dlog_print(DLOG_DEBUG, LOG_TAG, &quot;IDLER: executing idler callback while in idle state. (count: %d)&quot;, ctx-&gt;count);

&nbsp;&nbsp;&nbsp;ctx-&gt;count++;

&nbsp;&nbsp;&nbsp;if ((ctx-&gt;count % 10) == 0) ecore_event_add(_event_type, NULL, NULL, NULL);

&nbsp;&nbsp;&nbsp;return ECORE_CALLBACK_RENEW;
}
</pre>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>