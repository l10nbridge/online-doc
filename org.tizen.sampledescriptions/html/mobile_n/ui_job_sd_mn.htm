<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>[UI Sample] Job Sample Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/></p>
	</div>

<h1>[UI Sample] Job Sample Overview</h1>

<p>The Job sample shows how an <span style="font-family: Courier New,Courier,monospace">Ecore_Job</span> can be added, how it can be deleted, and how they always execute in the added order.</p>

<p>First, 2 callback functions are declared, one that prints strings passed to it in the data pointer, and another one that quits the main loop. In the main function, 3 jobs are added using the first callback, and another one is added using the second one.</p>

<p>To see the process, <span style="font-family: Courier New,Courier,monospace">dlogutil</span> in the <span style="font-family: Courier New,Courier,monospace">sdb</span> shell is used. In the <span style="font-family: Courier New,Courier,monospace">sdb</span> shell, enter <span style="font-family: Courier New,Courier,monospace">dlogutil [LOGTAG]</span>.</p>

<p>The following log illustrates a screenshot of <span style="font-family: Courier New,Courier,monospace">dlogutil</span> in the <span style="font-family: Courier New,Courier,monospace">sdb</span> shell.</p>

<pre class="prettyprint">
sh-4.1# dlogutil job
arc = 2, optind = 1 ,Kb 0, rotate 4
--------- beginning of /dev/log_system
--------- beginning of /dev/log_main
D/job     ( 5389): Created jobs 1, 2, 3 and quit.
D/job     ( 5389): Deleted job 2. Its data was: &quot;Job 2 started.&quot;
D/job     ( 5389): Job 1 started.
D/job     ( 5389): Job 3 started.
</pre>


<h2>Implementation</h2>

<p>The <span style="font-family: Courier New,Courier,monospace">create_base_gui()</span> function adds the <span style="font-family: Courier New,Courier,monospace">Ecore_Job</span> using the <span style="font-family: Courier New,Courier,monospace">ecore_job_add()</span> function with the <span style="font-family: Courier New,Courier,monospace">_job_print_cb()</span> and <span style="font-family: Courier New,Courier,monospace">_job_quit_cb()</span> callbacks, and deletes the <span style="font-family: Courier New,Courier,monospace">Ecore_Job</span> using the <span style="font-family: Courier New,Courier,monospace">ecore_job_del()</span> function. To show the job process, the <span style="font-family: Courier New,Courier,monospace">dlog_print()</span> function is used.</p>

<pre class="prettyprint">
#include &lt;Ecore.h&gt;
#include &lt;unistd.h&gt;

static void
_job_print_cb(void *data)
{
&nbsp;&nbsp;&nbsp;char *str = data;
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_DEBUG, LOG_TAG, &quot;%s\n&quot;, str);
}

static void
_job_quit_cb(void *data EINA_UNUSED)
{
&nbsp;&nbsp;&nbsp;ecore_main_loop_quit();
}

static void
create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;// Window 
&nbsp;&nbsp;&nbsp;ad-&gt;win = elm_win_util_standard_add(PACKAGE, PACKAGE);
&nbsp;&nbsp;&nbsp;elm_win_autodel_set(ad-&gt;win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;if (elm_win_wm_rotation_supported_get(ad-&gt;win)) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rots[4] = { 0, 90, 180, 270 };
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_win_wm_rotation_available_rotations_set(ad-&gt;win, (const int *)(&amp;rots), 4);
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(ad-&gt;win, &quot;delete,request&quot;, win_delete_request_cb, NULL);
&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;win, EEXT_CALLBACK_BACK, win_back_cb, ad);

&nbsp;&nbsp;&nbsp;// Conformant 
&nbsp;&nbsp;&nbsp;ad-&gt;conform = elm_conformant_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;elm_win_indicator_mode_set(ad-&gt;win, ELM_WIN_INDICATOR_SHOW);
&nbsp;&nbsp;&nbsp;elm_win_indicator_opacity_set(ad-&gt;win, ELM_WIN_INDICATOR_OPAQUE);
&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(ad-&gt;conform, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;elm_win_resize_object_add(ad-&gt;win, ad-&gt;conform);
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;conform);

&nbsp;&nbsp;&nbsp;// Label
&nbsp;&nbsp;&nbsp;ad-&gt;label = elm_label_add(ad-&gt;conform);
&nbsp;&nbsp;&nbsp;elm_object_text_set(ad-&gt;label, &quot;Ecore Job&quot;);
&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(ad-&gt;label, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;elm_object_content_set(ad-&gt;conform, ad-&gt;label);
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;label);

&nbsp;&nbsp;&nbsp;// Show the window after the base GUI is set up 
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;win);

&nbsp;&nbsp;&nbsp;// job 
&nbsp;&nbsp;&nbsp;Ecore_Job *job1, *job2, *job3, *job_quit;
&nbsp;&nbsp;&nbsp;char *str1 = &quot;Job 1 started.&quot;;
&nbsp;&nbsp;&nbsp;char *str2 = &quot;Job 2 started.&quot;;
&nbsp;&nbsp;&nbsp;char *str3 = &quot;Job 3 started.&quot;;

&nbsp;&nbsp;&nbsp;job1 = ecore_job_add(_job_print_cb, str1);
&nbsp;&nbsp;&nbsp;job2 = ecore_job_add(_job_print_cb, str2);
&nbsp;&nbsp;&nbsp;job3 = ecore_job_add(_job_print_cb, str3);
&nbsp;&nbsp;&nbsp;job_quit = ecore_job_add(_job_quit_cb, NULL);

&nbsp;&nbsp;&nbsp;dlog_print(DLOG_DEBUG, LOG_TAG, &quot;Created jobs 1, 2, 3 and quit.\n&quot;);

&nbsp;&nbsp;&nbsp;if (job2) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char *str;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str = ecore_job_del(job2);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;job2 = NULL;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_DEBUG, LOG_TAG, &quot;Deleted job 2. Its data was: \&quot;%s\&quot;\n&quot;, str);
&nbsp;&nbsp;&nbsp;}
}
</pre>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>