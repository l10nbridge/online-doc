<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>
	<title>Data-Control-Consumer Sample Overview</title>
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation"></div>

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Mobile native" src="../images/mn_icon.png"/></p>
	</div>

<!-- ********************************************************************************** -->
<h1>Data-Control-Provider Sample Overview</h1>

<p>The sample demonstrates how to exchange data between a consumer application and a provider service. There are two methods of data exchange:</p>
<ul>
	<li>Map method - using key value pairs;</li>
	<li>Sql method - using sql queries.</li>
</ul>
<p>No user interface is provided as this is a service application that runs in the background. The documentation for the consumer app can be found <a href = "data_control_consumer_sd_mn.htm">here</a>.</p>

<h2>Prerequisites</h2>
<p>To ensure proper application execution, the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/datasharing</span> privilege must be set and the following data-control entries must be enabled:</p>
<ul>
	<li><span id = "provider-map-id" style="font-family: Courier New,Courier,monospace">http://data-control-provider.com/datacontrol/provider/data-control-provider</span> with sql type and <span style="font-family: Courier New,Courier,monospace">ReadWrite</span> access rights;</li>
	<li><span id = "provider-sql-id" style="font-family: Courier New,Courier,monospace">http://data-control-provider.com/datacontrol/provider/data-control-providers</span> with map type and <span style="font-family: Courier New,Courier,monospace">ReadWrite</span> access rights.</li>
</ul>

<h2>Implementation</h2>
<h3>Initialization</h3>

<p>The entire application's life-cycle is implemented in the main source file using a common Tizen service structure:</p>
<pre class="prettyprint">
int main(int argc, char* argv[])
{
&nbsp;&nbsp;&nbsp;char ad[50] = {0,};
&nbsp;&nbsp;&nbsp;service_app_lifecycle_callback_s event_callback;
&nbsp;&nbsp;&nbsp;app_event_handler_h handlers[5] = {NULL, };

&nbsp;&nbsp;&nbsp;event_callback.create = service_app_create;
&nbsp;&nbsp;&nbsp;event_callback.terminate = service_app_terminate;
&nbsp;&nbsp;&nbsp;event_callback.app_control = service_app_control;

&nbsp;&nbsp;&nbsp;service_app_add_event_handler(&handlers[APP_EVENT_LOW_BATTERY], APP_EVENT_LOW_BATTERY, service_app_low_battery, &ad);
&nbsp;&nbsp;&nbsp;service_app_add_event_handler(&handlers[APP_EVENT_LOW_MEMORY], APP_EVENT_LOW_MEMORY, service_app_low_memory, &ad);
&nbsp;&nbsp;&nbsp;service_app_add_event_handler(&handlers[APP_EVENT_LANGUAGE_CHANGED], APP_EVENT_LANGUAGE_CHANGED, service_app_lang_changed, &ad);
&nbsp;&nbsp;&nbsp;service_app_add_event_handler(&handlers[APP_EVENT_REGION_FORMAT_CHANGED], APP_EVENT_REGION_FORMAT_CHANGED, service_app_region_changed, &ad);

&nbsp;&nbsp;&nbsp;return service_app_main(argc, argv, &event_callback, ad);
}
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">service_app_create</span> function is used to initialize the map provider and the sql provider modules.</p>



<h3>The Map module</h3>
<h4>Structure definitions</h4>

<p>The map module uses the structure below to hold its data:</p>
<pre class="prettyprint">
static struct {
&nbsp;&nbsp;&nbsp;data_control_provider_map_cb map_callback; /* Provider callbacks */
&nbsp;&nbsp;&nbsp;Eina_Hash *data_map; /* The map structure */
}
</pre>

<h4>Initialization</h4>

<p>The map module uses the <span style="font-family: Courier New,Courier,monospace">Eina_Hash</span> structure to hold data. Note that the stored data will be lost when the provider app is killed. Four callback are used to provide communication with the consumer application. </p>

<pre class="prettyprint">
Eina_Bool map_provider_initialize(void)
{
&nbsp;&nbsp;&nbsp;/* Assigning callback functions to callback structure. */
&nbsp;&nbsp;&nbsp;s_info.map_callback.get_cb = __get_value_request_cb;
&nbsp;&nbsp;&nbsp;s_info.map_callback.add_cb = __add_value_request_cb;
&nbsp;&nbsp;&nbsp;s_info.map_callback.remove_cb = __remove_value_request_cb;
&nbsp;&nbsp;&nbsp;s_info.map_callback.set_cb = __set_value_request_cb;

&nbsp;&nbsp;&nbsp;/* Initialize the map provider using the callback structure. */
&nbsp;&nbsp;&nbsp;int result = data_control_provider_map_register_cb(&s_info.map_callback, NULL);
&nbsp;&nbsp;&nbsp;/* ... */

&nbsp;&nbsp;&nbsp;s_info.data_map = eina_hash_string_djb2_new(__data_map_free_cb);
&nbsp;&nbsp;&nbsp;/* ... */
&nbsp;&nbsp;&nbsp;return EINA_TRUE;
}
</pre>

<h4>Callbacks</h4>

<p>The callback invoked when a 'get' request is sent from the consumer app:</p>
<pre class="prettyprint">
static void __get_value_request_cb(int request_id, data_control_h provider, const char *key, void *user_data)
{
&nbsp;&nbsp;&nbsp;int count = 0;
&nbsp;&nbsp;&nbsp;char **entry = __data_map_get(request_id, key, &count); /* Read the data assigned to the 'key' from the hash map. */

&nbsp;&nbsp;&nbsp;int ret = data_control_provider_send_map_get_value_result(request_id, entry, count); /* Send the operation result to the consumer app. */
&nbsp;&nbsp;&nbsp;/* ... */
}
</pre>

<p>The callback invoked when a 'set' request is sent from the consumer app:</p>
<pre class="prettyprint">
static void __set_value_request_cb(int request_id, data_control_h provider, const char *key, const char *old_value, const char *new_value, void *user_data)
{
&nbsp;&nbsp;&nbsp;__data_map_set(request_id, key, old_value, new_value); /* Update the hash map. If there is a 'key' in the hash map and it holds a value equal to 'old_value', the value will be updated to 'new_value'. */

&nbsp;&nbsp;&nbsp;int ret = data_control_provider_send_map_result(request_id); /* Send the operation result to the consumer app. */
&nbsp;&nbsp;&nbsp;/* ... */
}
</pre>

<p>The callback invoked when a 'add' request is sent from the consumer app:</p>
<pre class="prettyprint">
static void __add_value_request_cb(int request_id, data_control_h provider, const char *key, const char *value, void *user_data)
{
&nbsp;&nbsp;&nbsp;int count = __data_map_add(request_id, key, value); /* Add a new value equal 'value' the 'key'. If a key equal to 'key' doesn't exist, a new key will be added. */
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;int ret = data_control_provider_send_map_result(request_id); /* Send the operation result to the consumer app. */
&nbsp;&nbsp;&nbsp;/* ... */
}
</pre>

<p>The callback invoked when a 'remove' request is sent from the consumer app:</p>
<pre class="prettyprint">
static void __remove_value_request_cb(int request_id, data_control_h provider, const char *key, const char *value, void *user_data)
{
&nbsp;&nbsp;&nbsp;__data_map_remove(request_id, key, value); /* Remove 'value' from 'key'. If the key remains empty after this operation, it will be removed as well. */

&nbsp;&nbsp;&nbsp;int ret = data_control_provider_send_map_result(request_id); /* Send the operation result to the consumer app. */
&nbsp;&nbsp;&nbsp;/* ... */
}
</pre>
<!-- ********************************************************************************** -->

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>


</body>
</html>
