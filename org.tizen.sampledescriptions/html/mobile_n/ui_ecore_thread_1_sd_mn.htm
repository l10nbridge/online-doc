<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>[UI Sample] Ecore Thread 1 Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/></p>
	</div>

<h1>[UI Sample] Ecore Thread 1 Sample Overview</h1> 
<p>The Ecore Thread 1 sample application demonstrates how you can move a button using EFL thread-related functions. The functions act on the Ecore main loop itself or on events and infrastructures directly linked to it. </p>

<p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
<p>The following figure illustrates the main screen of the Ecore Thread 1. 
</p>

<p class="figure">Figure: Ecore Thread 1 screen</p> 
<p align="center"><img alt="Ecore Thread 1 screen" src="../images/ecore_thread_1.png" /></p> 

<h2 id="Implementation" name="Implementation">Implementation</h2>

<p>The <span style="font-family: Courier New,Courier,monospace;">ecore_thread_1_cb()</span> function creates a thread using the <span style="font-family: Courier New,Courier,monospace;">pthread_create()</span> function and registering a <span style="font-family: Courier New,Courier,monospace;">thread_run()</span> callback function while passing a button to the callback.</p>

<pre class="prettyprint">
#include &lt;Elementary.h&gt;
#include &lt;pthread.h&gt;

static pthread_t thread_id;
static Eina_Bool thread_finish = EINA_FALSE;

void
ecore_thread_1_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;appdata_s *ad = data;

&nbsp;&nbsp;&nbsp;Evas_Object *btn;
&nbsp;&nbsp;&nbsp;Elm_Object_Item *nf_it;

&nbsp;&nbsp;&nbsp;// Base layout
&nbsp;&nbsp;&nbsp;ad-&gt;layout = elm_layout_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;elm_layout_theme_set(ad-&gt;layout, &quot;layout&quot;, &quot;application&quot;, &quot;default&quot;);
&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(ad-&gt;layout, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;layout);

&nbsp;&nbsp;&nbsp;// Create a button
&nbsp;&nbsp;&nbsp;btn = elm_button_add(ad-&gt;layout);
&nbsp;&nbsp;&nbsp;elm_object_text_set(btn, &quot;Ecore Thread Main Loop&quot;);
&nbsp;&nbsp;&nbsp;evas_object_resize(btn, ELM_SCALE_SIZE(400), ELM_SCALE_SIZE(100));
&nbsp;&nbsp;&nbsp;evas_object_show(btn);

&nbsp;&nbsp;&nbsp;// Create a thread
&nbsp;&nbsp;&nbsp;if (!pthread_create(&amp;thread_id, NULL, thread_run, btn))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;perror(&quot;pthread_create!\n&quot;);

&nbsp;&nbsp;&nbsp;// Push base layout into naviframe
&nbsp;&nbsp;&nbsp;nf_it = elm_naviframe_item_push(ad-&gt;nf, NULL, NULL, NULL, ad-&gt;layout, &quot;empty&quot;);
&nbsp;&nbsp;&nbsp;elm_naviframe_item_pop_cb_set(NULL, naviframe_pop_cb, ad);
}
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace;">ecore_thread_main_loop_begin()</span> and <span style="font-family: Courier New,Courier,monospace;">ecore_thread_main_loop_end()</span> functions allow you to call the <span style="font-family: Courier New,Courier,monospace;">evas_object_move()</span> function in critical sections. The <span style="font-family: Courier New,Courier,monospace;">ecore_thread_main_loop_begin()</span> function can block the section for a while, and mutual exclusion is performed in the main loop. Finally, when you exit from the current naviframe or window, you must handle the thread termination correctly (see the <span style="font-family: Courier New,Courier,monospace;">naviframe_pop_cb()</span> function).</p>

<pre class="prettyprint">
static void* 
thread_run(void *arg)
{
&nbsp;&nbsp;&nbsp;Evas_Object *btn = arg;
&nbsp;&nbsp;&nbsp;double t = 0.0;
&nbsp;&nbsp;&nbsp;Evas_Coord x, y;

&nbsp;&nbsp;&nbsp;while (!thread_finish)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 150 + (150 * sin(t));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = 150 + (150 * cos(t));

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Begin critical section
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ecore_thread_main_loop_begin();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;evas_object_move(btn, x, y);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// End critical section
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ecore_thread_main_loop_end();

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usleep(1000);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t += 0.001;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;thread_finish = EINA_FALSE;
&nbsp;&nbsp;&nbsp;pthread_exit(NULL);

&nbsp;&nbsp;&nbsp;return NULL;
}

static Eina_Bool
naviframe_pop_cb(void *data, Elm_Object_Item *it)
{
&nbsp;&nbsp;&nbsp;void *thread_result;
&nbsp;&nbsp;&nbsp;thread_finish = EINA_TRUE;
&nbsp;&nbsp;&nbsp;pthread_join(thread_id, &amp;thread_result);

&nbsp;&nbsp;&nbsp;return EINA_TRUE;
}
</pre>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>