<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>[UI Sample] Evas Map Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/></p>
	</div>

<h1>[UI Sample] Evas Map Sample Overview</h1> 
<p>The Evas Map sample application demonstrates how you can display a rectangle and an image which are applied by the Evas map using EFL Evas map util functions.</p> 
<p>The sample uses functions, such as <span style="font-family: Courier New,Courier,monospace;">evas_map_util_3d_rotate()</span> for objects to rotate the map around 3 axes in 3D and <span style="font-family: Courier New,Courier,monospace;">evas_map_util_3d_perspective()</span> for objects to apply a perspective transform to the map.</p> 
<p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
<p>The following figure illustrates the main screen of the Evas Map.</p> 

<p class="figure">Figure: Evas Map screen</p> 
<p align="center"><img alt="Evas Map screen" src="../images/evas_map.png" /></p> 


<h2 id="Implementation" name="Implementation">Implementation</h2>

<p>The <span style="font-family: Courier New,Courier,monospace;">create_base_gui()</span> function creates the window which consists of a green rectangle added using the <span style="font-family: Courier New,Courier,monospace;">evas_object_rectangle_add()</span> and <span style="font-family: Courier New,Courier,monospace;">evas_object_color_set()</span> functions and an image added using the <span style="font-family: Courier New,Courier,monospace;">evas_object_image_filled_add()</span> and <span style="font-family: Courier New,Courier,monospace;">evas_object_image_file_set()</span> functions.</p>
<p>The rotate function rotates objects around 3 axes in 3D using the <span style="font-family: Courier New,Courier,monospace;">evas_map_util_3d_rotate()</span> function and applies a perspective transform for objects using the <span style="font-family: Courier New,Courier,monospace;">evas_map_util_3d_perspective()</span> function. The Evas map is needed to use these functions. So, the <span style="font-family: Courier New,Courier,monospace;">evas_map_new()</span> function for creating a map consisting of 4 points and the <span style="font-family: Courier New,Courier,monospace;">evas_map_util_points_populate_from_object_full()</span> function for setting the object UV values to the map are used.</p>

<pre class="prettyprint">
// Rotate any Evas object by using Evas map
void
rotate(Evas_Object *obj, double degree)
{
&nbsp;&nbsp;&nbsp;// Create a map consisting of 4 points
&nbsp;&nbsp;&nbsp;Evas_Map *map = evas_map_new(4);

&nbsp;&nbsp;&nbsp;Evas_Coord x, y, w, h;

&nbsp;&nbsp;&nbsp;// Get the geometry information from the object
&nbsp;&nbsp;&nbsp;evas_object_geometry_get(obj, &amp;x, &amp;y, &amp;w, &amp;h);

&nbsp;&nbsp;&nbsp;// Set the object image UV values to map
&nbsp;&nbsp;&nbsp;evas_map_util_points_populate_from_object_full(map, obj, 0);

&nbsp;&nbsp;&nbsp;// Rotate by 45 degrees on object&#39;s local Y axis
&nbsp;&nbsp;&nbsp;evas_map_util_3d_rotate(map, 0, degree, 0, x + w / 2, y + h / 2, 0);

&nbsp;&nbsp;&nbsp;// Set the perspective transform
&nbsp;&nbsp;&nbsp;evas_map_util_3d_perspective(map, x + w / 2, y + h / 2, 0, 400);

&nbsp;&nbsp;&nbsp;// Enable the object map
&nbsp;&nbsp;&nbsp;evas_object_map_enable_set(obj, EINA_TRUE);

&nbsp;&nbsp;&nbsp;// Apply the new map to object
&nbsp;&nbsp;&nbsp;evas_object_map_set(obj, map);

&nbsp;&nbsp;&nbsp;// Free the map resource
&nbsp;&nbsp;&nbsp;evas_map_free(map);
}

static void
create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;// Window
&nbsp;&nbsp;&nbsp;ad-&gt;win = elm_win_util_standard_add(PACKAGE, PACKAGE);
&nbsp;&nbsp;&nbsp;elm_win_autodel_set(ad-&gt;win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;if (elm_win_wm_rotation_supported_get(ad-&gt;win)) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rots[4] = {0, 90, 180, 270};
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_win_wm_rotation_available_rotations_set(ad-&gt;win, (const int *)(&amp;rots), 4);
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(ad-&gt;win, &quot;delete,request&quot;, win_delete_request_cb, NULL);
&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;win, EEXT_CALLBACK_BACK, win_back_cb, ad);

&nbsp;&nbsp;&nbsp;// Conformant
&nbsp;&nbsp;&nbsp;ad-&gt;conform = elm_conformant_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;elm_win_indicator_mode_set(ad-&gt;win, ELM_WIN_INDICATOR_SHOW);
&nbsp;&nbsp;&nbsp;elm_win_indicator_opacity_set(ad-&gt;win, ELM_WIN_INDICATOR_OPAQUE);
&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(ad-&gt;conform, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;elm_win_resize_object_add(ad-&gt;win, ad-&gt;conform);
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;conform);

&nbsp;&nbsp;&nbsp;// Evas map
&nbsp;&nbsp;&nbsp;Evas *evas = evas_object_evas_get(ad-&gt;conform);
&nbsp;&nbsp;&nbsp;Evas_Object *green_rect = evas_object_rectangle_add(evas);
&nbsp;&nbsp;&nbsp;evas_object_color_set(green_rect, 0, 255, 0, 255);
&nbsp;&nbsp;&nbsp;evas_object_move(green_rect, 50, 75);
&nbsp;&nbsp;&nbsp;evas_object_resize(green_rect, 200, 200);
&nbsp;&nbsp;&nbsp;rotate(green_rect, 45);
&nbsp;&nbsp;&nbsp;evas_object_show(green_rect);

&nbsp;&nbsp;&nbsp;char img_path[PATH_MAX] = {0,};
&nbsp;&nbsp;&nbsp;app_get_resource(&quot;tizen.png&quot;, img_path, PATH_MAX);

&nbsp;&nbsp;&nbsp;Evas_Object *img = evas_object_image_filled_add(evas);
&nbsp;&nbsp;&nbsp;evas_object_image_file_set(img, img_path, NULL);
&nbsp;&nbsp;&nbsp;evas_object_move(img, 100, 325);
&nbsp;&nbsp;&nbsp;evas_object_resize(img, 356, 96);
&nbsp;&nbsp;&nbsp;rotate(img, 45);
&nbsp;&nbsp;&nbsp;evas_object_show(img);

&nbsp;&nbsp;&nbsp;// Show the window after the base GUI is set up
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;win);
}
</pre>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>