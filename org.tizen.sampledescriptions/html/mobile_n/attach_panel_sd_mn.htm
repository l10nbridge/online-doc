<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>Attach Panel</title>
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/></p>
	</div>

  <h1>Attach Panel Sample Overview</h1>
<p>The Attach Panel sample application demonstrates how you can use the <a href="../../../org.tizen.native.mobile.apireference/group__CAPI__PANEL__ATTACH__MODULE.html">Attach panel</a> API to create attachments. You can add files stored on the device to your application as well as create new attachments on the spot without having to explicitly launch other applications.</p>
<p>The following figure illustrates the application views (the opening view on the left, the view with the minimized attach panel in the middle, and the view with a gengrid of created or selected attachments on the right).</p>

  <p class="figure">Figure: Attach Panel views</p>
  <p align="center"><img alt="Attach Panel views" src="../images/attach_panel_main_view.png" /> <img alt="Attach Panel views" src="../images/attach_panel_main_view_with_items.png" /> <img alt="Attach Panel views" src="../images/attach_panel_main_view_full.png" /></p>

<p>The application opens with the main view:</p>

<ul>
<li>Click <strong>Add attachment</strong> to display the minimized attach panel at the bottom of the screen, while the size of the application layout is adjusted to fit on the rest of the screen.
<p>To expand the panel to fill the entire screen, swipe the minimized panel up.</p></li>
<li>Use the attach panel to select or create files.
<p>The files are stored by the application in a gengrid. Each gengrid item corresponds to a different file and is represented by a category icon (image, voice recording, or file), depending on the content category used to create it.</p></li>
<li>Click the items in the gengrid to launch the default application for viewing the specified file. 
<p>The applications are launched using the <a href="../../../org.tizen.native.mobile.apireference/group__CAPI__APP__COMMON__MODULE.html">App Common</a> API.</p></li></ul>
  
<p>The Attach Panel module takes care of creating its UI and getting the data from the device. All you need to do is to create an attach panel and specify which attachment types you want to be able to generate.</p>

<p>The available attachment types are defined by the following content categories:</p>
 <ul>
   <li><span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_IMAGE</span>: Attach images from the Gallery.</li>
   <li><span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_CAMERA</span>: Take a picture to be attached.</li>
   <li><span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_VOICE</span>: Record an audio file to be attached.</li>
   <li><span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_VIDEO</span>: Attach video files from the Gallery.</li>
   <li><span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_AUDIO</span>: Attach audio files from My Files.</li>
   <li><span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_CALENDAR</span>: Attach calendar data from the Calendar.</li>
   <li><span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_CONTACT</span>: Attach contact data from the Contacts.</li>
   <li><span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_MYFILES</span>: Attach files from My Files.</li>
   <li><span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_VIDEO_RECORDER</span>: Record a video file to be attached.</li>
</ul>

<p>The Attach Panel sample application uses the <span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_IMAGE</span>,
<span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_CAMERA</span>,
<span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_VOICE</span>, and
<span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_MYFILES</span> content categories. The following figures show the minimized and expanded views when the related attachment type is selected.</p>

  <p class="figure">Figure: Image attach panel</p>
  <p align="center"><img alt="Image attach panel" src="../images/attach_panel_images_panel.png" /></p>

  <p class="figure">Figure: Camera attach panel</p>
  <p align="center"><img alt="Camera attach panel" src="../images/attach_panel_camera_panel.png" /></p>

  <p class="figure">Figure: Voice attach panel</p>
  <p align="center"><img alt="Voice attach panel" src="../images/attach_panel_voice_panel.png" /></p>

  <p class="figure">Figure: More attach panel</p>
  <p align="center"><img alt="More attach panel" src="../images/attach_panel_more_panel.png" /></p>


<h2>Prerequisites</h2>
<p>To ensure proper application execution, the following privileges must be set:</p>
 <ul>
  <li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/recorder</span> (to use the <span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_VOICE</span> attachment category)</li>
  <li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/mediastorage</span> (to use the <span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_IMAGE</span> attachment category)</li>
  <li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/camera</span> (to use the <span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_CAMERA</span> attachment category)</li>
  <li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/appmanager.launch</span> (to add content categories on the <strong>More</strong> tab and launch relevant applications; in this application, the <span style="font-family: Courier New,Courier,monospace">ATTACH_PANEL_CONTENT_CATEGORY_MYFILES</span> category to launch My Files application)</li>
 </ul>

<h2>Implementation</h2>

<p>To use the Attach panel API, you must include the <span style="font-family: Courier New,Courier,monospace">&lt;attach_panel.h&gt;</span> header file in your application.</p>

<h3>Creating an Attach Panel</h3>

<p>When the <strong>Add attachment</strong> button is clicked for the first time, the following code is executed:</p>

<ol>
<li>An attach panel is created using the <span style="font-family: Courier New,Courier,monospace">attach_panel_create()</span> function, and anchored to the application conformant passed as the first parameter.</li>
<li>The content categories are defined using the <span style="font-family: Courier New,Courier,monospace">attach_panel_add_content_category()</span> function.</li>
<li>The necessary callbacks are registered using the following functions:
<ul>
  <li><span style="font-family: Courier New,Courier,monospace">attach_panel_set_result_cb()</span>: to get the data that the user selects from the attach panel (file paths)</li>
  <li><span style="font-family: Courier New,Courier,monospace">attach_panel_set_event_cb()</span>: to get notifications about events from the attach panel</li>
</ul></li></ol>

<pre class="prettyprint">
if (attach_panel_create(vd.conform, &amp;vd.attach_panel) != ATTACH_PANEL_ERROR_NONE) 
{
&nbsp;&nbsp;&nbsp;// Error handling
}

attach_panel_add_content_category(vd.attach_panel, ATTACH_PANEL_CONTENT_CATEGORY_IMAGE, NULL);
attach_panel_add_content_category(vd.attach_panel, ATTACH_PANEL_CONTENT_CATEGORY_CAMERA, NULL);
attach_panel_add_content_category(vd.attach_panel, ATTACH_PANEL_CONTENT_CATEGORY_VOICE, NULL);
attach_panel_add_content_category(vd.attach_panel, ATTACH_PANEL_CONTENT_CATEGORY_MYFILES, NULL);

attach_panel_set_result_cb(vd.attach_panel, __ap_result_cb, NULL);
attach_panel_set_event_cb(vd.attach_panel, __ap_event_cb, NULL);
</pre>

<p>You only have to create the attach panel once during the application execution.</p>

<p>You can control the attach panel visibility with the <span style="font-family: Courier New,Courier,monospace">attach_panel_show()</span> and <span style="font-family: Courier New,Courier,monospace">attach_panel_hide()</span> functions. When the panel is created, it is hidden by default. Use the <span style="font-family: Courier New,Courier,monospace">attach_panel_get_visibility()</span>
function to check whether the panel is visible.</p>

<p>The following example shows what happens when the user clicks <strong>Add attachment</strong> after the attach panel has been created:</p>

<ol>
<li>The panel visibility is checked.
<p>If the panel is in the hidden state, the <span style="font-family: Courier New,Courier,monospace">attach_panel_show()</span> function is invoked to show it. The panel is hidden automatically after the user clicks the soft back key.</p>

<pre class="prettyprint">
bool visible = false;

if (vd.attach_panel) 
{
&nbsp;&nbsp;&nbsp;if (attach_panel_get_visibility(vd.attach_panel, &amp;visible) != ATTACH_PANEL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Error handling

&nbsp;&nbsp;&nbsp;if (!visible)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attach_panel_show(vd.attach_panel);
}
</pre></li>

<li>After the user selects or creates attachments, the <span style="font-family: Courier New,Courier,monospace">__ap_result_cb()</span> callback function is invoked.
<p>To get the file paths, the <span style="font-family: Courier New,Courier,monospace">app_control_get_extra_data_array()</span> function is invoked on the <span style="font-family: Courier New,Courier,monospace">app_control_h</span> result handle that is passed to the callback function. The <span style="font-family: Courier New,Courier,monospace">selected</span> variable is an array of strings in which the paths are stored.</p>

<pre class ="prettyprint">
static void 
__ap_result_cb(attach_panel_h attach_panel, attach_panel_content_category_e content_category, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;app_control_h result, app_control_result_e result_code, void *user_data)
{
&nbsp;&nbsp;&nbsp;// Variable declaration

&nbsp;&nbsp;&nbsp;if (app_control_get_extra_data_array(result, APPCONTROL_EXTRA_DATA_SELECTED, &amp;selected, &amp;length) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!= APP_CONTROL_ERROR_NONE) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Error handling
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;// Check content category to set proper gengrid item icon
&nbsp;&nbsp;&nbsp;switch (content_category) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ATTACH_PANEL_CONTENT_CATEGORY_IMAGE:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ATTACH_PANEL_CONTENT_CATEGORY_CAMERA:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__get_app_resource(VIEW_IMAGES_IMAGE, img_path, (int)PATH_MAX);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ATTACH_PANEL_CONTENT_CATEGORY_VOICE:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__get_app_resource(VIEW_IMAGES_VOICE, img_path, (int)PATH_MAX);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ATTACH_PANEL_CONTENT_CATEGORY_MYFILES:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__get_app_resource(VIEW_IMAGES_FILE, img_path, (int)PATH_MAX);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;for (; i &lt; length; i++)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_gengrid_item_append(vd.grid, vd.gic, eina_stringshare_add(img_path), 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__grid_item_clicked_cb, selected[i]);
}
</pre></li></ol>


<h3>Launching the Default Application for Viewing a File</h3>
<p>Use the <a href="../../../org.tizen.native.mobile.apireference/group__CAPI__APP__CONTROL__MODULE.html">App Control</a> API to launch the default application for viewing a file defined by the URI (file path):</p>

<pre class="prettyprint">
void 
attach_panel_launch_default_view_app(char *uri)
{
&nbsp;&nbsp;&nbsp;app_control_h service;

&nbsp;&nbsp;&nbsp;if (app_control_create(&amp;service) != APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Error handling

&nbsp;&nbsp;&nbsp;if (app_control_set_operation(service, APP_CONTROL_OPERATION_VIEW) != APP_CONTROL_ERROR_NONE ||
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;app_control_set_uri(service, uri) != APP_CONTROL_ERROR_NONE ||
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;app_control_send_launch_request(service, NULL, NULL) != APP_CONTROL_ERROR_NONE) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Error handling
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;if (app_control_destroy(service) != APP_CONTROL_ERROR_NONE)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Error handling
}
</pre>
<p>For more information about the app control usage, see the <a href="application_control_sd_mn.htm">Application Control</a> sample application and the <a href="../../../org.tizen.tutorials/html/native/app_framework/appcontrol_tutorial_n.htm">App Control</a> tutorial.</p>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
