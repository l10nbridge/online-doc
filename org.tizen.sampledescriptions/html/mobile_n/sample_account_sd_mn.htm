<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>
	<title>Sample Account Sample Overview</title>
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/></p>
	</div>
  <h1>Sample Account Sample Overview</h1>
<p>The Sample Account sample application demonstrates how you can implement an account provider which can add and configure an account. This application uses the <a href="../../../org.tizen.native.mobile.apireference/group__CAPI__ACCOUNT__MANAGER__MODULE.html">Account Manager</a> API to control the account.</p>
<p>For information on creating the sample application project in the IDE, see <a href="../cover_page.htm#create">Creating Sample Applications</a>.</p>
<p>The following figure illustrates the main screens of the Sample Account.</p>

	<p class="figure">Figure: Sample Account screens</p>
	<p align="center"><img alt="Sample Account screens" src="../images/account_sample_0.png" />
  <img alt="Sample Account screens" src="../images/account_sample_1.png" />
</p>

<p>The application main window consists of 2 screens:</p>
  <ul>
    <li>Sign in: Displays the account sign in view and handles adding a new account.</li>
    <li>Configure: Displays the account information and setting for the selected account.</li>
  </ul>
  
<h2>Prerequisites</h2>
<p>To ensure proper application execution, the following privileges must be set:
 <ul>
  <li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/account.read</span></li>
  <li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/account.write</span></li>
 </ul>
</p>  

<h2>Implementation</h2>

<p>To run this application, go to <strong>Settings &gt; Accounts</strong>. You can see <strong>SampleAccount</strong> on the Add account list.</p>

<h3>Adding an  Account in the Sign In View</h3>

<p>To add an account in the sign in view:</p>
<ol>
<li>
<p>When the user clicks <strong>SIGN IN</strong> in the sign in view, the application adds an account with input text.</p>
<p>The <span style="font-family: Courier New,Courier,monospace">account_create()</span> function is used to initialize the account manager handle, which is later used to set account data.</p>
<pre class="prettyprint">
int ret = 0;
account_h account = NULL;

// Create account handle
ret = account_create(&amp;account);

if (ret != ACCOUNT_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
&nbsp;&nbsp;&nbsp;return;
}
</pre>
</li>
<li>
<p>Set the user ID and password with the <span style="font-family: Courier New,Courier,monospace">account_set_user_name()</span> and <span style="font-family: Courier New,Courier,monospace">account_set_access_token()</span> functions.</p>
<p>You can use various other <span style="font-family: Courier New,Courier,monospace">account_set_XXX()</span> account data functions too. For more information, see the <a href="../../../org.tizen.native.mobile.apireference/group__CAPI__ACCOUNT__MANAGER__MODULE.html">Account Manager</a> API.</p>
<pre class="prettyprint">
const char *user_name = NULL, *password = NULL;

// Set account data
ret = account_set_user_name(account, user_name);

if (ret != ACCOUNT_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
&nbsp;&nbsp;&nbsp;return;
}

ret = account_set_access_token(account, password);

if (ret != ACCOUNT_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
&nbsp;&nbsp;&nbsp;return;
}
</pre>
</li>
<li>
<p>Once the account data has been set, insert data to the account database. The <span style="font-family: Courier New,Courier,monospace">account_insert_to_db()</span> function uses the account ID as the second parameter.</p>
<pre class="prettyprint">
int account_id = 0;

// Insert data to the database
ret = account_insert_to_db(account, &amp;account_id);

if (ret != ACCOUNT_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
&nbsp;&nbsp;&nbsp;return;
}
</pre>
</li>
<li>
<p>When no longer needed, release the account handle with the <span style="font-family: Courier New,Courier,monospace">account_destroy()</span> function:</p>
<pre class="prettyprint">
// Release account handle
ret = account_destroy(account);

if (ret != ACCOUNT_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
&nbsp;&nbsp;&nbsp;return;
}
</pre>
</li>
</ol>

<h3>Getting an Account in the Configure View</h3>

<p>To get an account in the configure view:</p>
<ol>
<li>
<p>When the user selects the account that has been added to the account list, the account ID is handed to the application.</p>
<p>Use the account ID to get the account data with the <span style="font-family: Courier New,Courier,monospace">account_query_account_by_account_id()</span> function.</p>
<pre class="prettyprint">
int account_id = handed_value;
account_h account = NULL;
int ret = 0;

// Create the account with account_create()

// Get account data with account_id
ret = account_query_account_by_account_id(account_id, &amp;account);

if (ret != ACCOUNT_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;// Error handling
}</pre>
</li>
<li>
<p>Get the user ID with the <span style="font-family: Courier New,Courier,monospace">account_get_user_name()</span> function.</p>
<p>If you added more account data during the account creation, you can access that with various <span style="font-family: Courier New,Courier,monospace">account_get_XXX()</span> functions.</p>
<pre class="prettyprint">
// Get user ID from account data
ret = account_get_user_name(account, &amp;account_user_id);

if (ret != ACCOUNT_ERROR_NONE) 
{
&nbsp;&nbsp;&nbsp;// Error handling
}

// Destroy the account with account_destroy()
</pre>
</li>
</ol>

<h3>Deleting an Account in the Configure View</h3>

<p>When the user clicks <strong>Sign out</strong> in the configure view, the selected account is removed from the account database.</p>
<p>To delete an account, use the <span style="font-family: Courier New,Courier,monospace">account_delete_from_db_by_id()</span> function with the account ID.</p>
<p>There are several <span style="font-family: Courier New,Courier,monospace">account_delete_XXX()</span> functions provided for deleting an account. For more information, see the <a href="../../../org.tizen.native.mobile.apireference/group__CAPI__ACCOUNT__MANAGER__MODULE.html">Account Manager</a> API.</p>
<pre class="prettyprint">
int account_id = handed_value;
int ret = 0;

// Remove the current account
ret = account_delete_from_db_by_id(account_id);

if (ret != ACCOUNT_ERROR_NONE) 
{
&nbsp;&nbsp;&nbsp;// Error handling
}
</pre>
  
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>