<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>[UI Sample] Ecore Thread 4 Sample Overview</title>  
</head>

<body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
</div>	

<div id="container"><div id="contents"><div class="content">
	<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/></p>
	</div>

<h1>[UI Sample] Ecore Thread 4 Sample Overview</h1> 
<p>The Ecore Thread 4 sample demonstrates how to move a button using EFL thread feedback functions. If EFL APIs are called in the <span style="font-family: Courier New,Courier,monospace;">Ecore_Thread</span>, use the <span style="font-family: Courier New,Courier,monospace;">ecore_thread_feedback_run()</span> function instead of <span style="font-family: Courier New,Courier,monospace;">ecore_thread_run()</span>. </p>

<p>The following figure illustrates the Evas thread feedback in the Ecore Thread 4 screen. </p>

<p class="figure">Figure: Ecore Thread 4 screen</p> 
<p align="center"><img alt="Ecore Thread 4 screen" src="../images/ecore_thread_4.png" /></p> 


<h2 id="Implementation" name="Implementation">Implementation</h2>

<p>The <span style="font-family: Courier New,Courier,monospace;">create_base_gui()</span> function utilizes the <span style="font-family: Courier New,Courier,monospace;">ecore_thread_feedback_run()</span> function to allow the <span style="font-family: Courier New,Courier,monospace;">thread_run_cb()</span> function to call the <span style="font-family: Courier New,Courier,monospace;">thread_feedback_cb</span> function.</p>

<pre class="prettyprint">
#include &lt;Elementary.h&gt;

typedef struct user_data
{
&nbsp;&nbsp;&nbsp;Evas_Object *obj;
&nbsp;&nbsp;&nbsp;Evas_Coord x, y;
} user_data;

static void create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;// Window
&nbsp;&nbsp;&nbsp;ad-&gt;win = elm_win_util_standard_add(PACKAGE, PACKAGE);
&nbsp;&nbsp;&nbsp;elm_win_autodel_set(ad-&gt;win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(ad-&gt;win, &quot;delete,request&quot;, win_delete_request_cb, NULL);
&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;win, EEXT_CALLBACK_BACK, win_back_cb, ad);

&nbsp;&nbsp;&nbsp;Evas_Object *btn;
&nbsp;&nbsp;&nbsp;Ecore_Thread *thread;

&nbsp;&nbsp;&nbsp;// Create a button
&nbsp;&nbsp;&nbsp;btn = elm_button_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;elm_object_text_set(btn, &quot;Ecore&lt;/br&gt;Thread&lt;/br&gt;Main&lt;/br&gt;Loop&quot;);
&nbsp;&nbsp;&nbsp;evas_object_resize(btn, 200, 200);
&nbsp;&nbsp;&nbsp;evas_object_show(btn);

&nbsp;&nbsp;&nbsp;// Create a thread
&nbsp;&nbsp;&nbsp;thread = ecore_thread_feedback_run(thread_run_cb, thread_feedback_cb,
&nbsp;&nbsp;&nbsp;thread_end_cb, thread_cancel_cb, btn,
&nbsp;&nbsp;&nbsp;EINA_FALSE);
&nbsp;&nbsp;&nbsp;// Show the window after the base GUI is set up
&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;win);
}
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace;">ecore_thread_feedback()</span> function allows the <span style="font-family: Courier New,Courier,monospace;">thread_run_cb()</span> callback to call the <span style="font-family: Courier New,Courier,monospace;">thread_feedback_cb</span> callback. </p>

<pre class="prettyprint">
static void
thread_run_cb(void *data, Ecore_Thread *thread)
{
&nbsp;&nbsp;&nbsp;double t = 0.0;
&nbsp;&nbsp;&nbsp;Evas_Coord x, y;
&nbsp;&nbsp;&nbsp;Evas_Object *btn = data;

&nbsp;&nbsp;&nbsp;while (1)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 150 + (150 * sin(t));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = 150 + (150 * cos(t));

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_data *ud = malloc(sizeof(user_data));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ud-&gt;obj = btn;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ud-&gt;x = x;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ud-&gt;y = y;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// After recording the time point, pass it as feedback back to the
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// mainloop and free data when done
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ecore_thread_feedback(thread, ud);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usleep(1000);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t += 0.001;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// In case  thread must be canceled, cancel this
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// loop co-operatively (canceling is co-operative)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ecore_thread_check(thread)) break;
&nbsp;&nbsp;&nbsp;}
}

static void
thread_feedback_cb(void *data, Ecore_Thread *thread, void *msg)
{
&nbsp;&nbsp;&nbsp;// This function is in critical section
&nbsp;&nbsp;&nbsp;user_data *ud = msg;
&nbsp;&nbsp;&nbsp;evas_object_move(ud-&gt;obj, ud-&gt;x, ud-&gt;y);
&nbsp;&nbsp;&nbsp;free(ud);
}

static void
thread_end_cb(void *data, Ecore_Thread *thread)
{
&nbsp;&nbsp;&nbsp;printf(&quot;thread end!\n&quot;);
}

static void
thread_cancel_cb(void *data, Ecore_Thread *thread)
{
&nbsp;&nbsp;&nbsp;printf(&quot;thread cancel!\n&quot;);
}

static void
win_del_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;Ecore_Thread *thread = data;

&nbsp;&nbsp;&nbsp;elm_exit();
}
</pre>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>