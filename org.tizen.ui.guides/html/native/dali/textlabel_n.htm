<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>TextLabel</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mn_icon.png"/> <img alt="Wearable native" src="../../images/wn_icon.png"/></p>
	</div>
		<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#create">Creating a TextLabel</a></li>
			<li><a href="#select">Font Selection</a></li>
			<li><a href="#style">Font Styles</a></li>
			<li><a href="#align">Text Alignment</a></li>
			<li><a href="#size">Negotiating Size</a></li>
			<li><a href="#decoration">Decorations</a></li>
			<li><a href="#drop">Drop Shadow</a></li>
			<li><a href="#underlining">Underlining</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1TextLabel.html">Dali::Toolkit::TextLabel API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1TextLabel.html">Dali::Toolkit::TextLabel API for Wearable Native</a></li>
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>TextLabel</h1>

<p>The <span style="font-family: Courier New,Courier,monospace;">TextLabel</span> class provides a control that renders a short text string. The text labels are lightweight, non-editable, and do not respond to user input.</p>

<p class="figure">Figure: TextLabel</p>  
 	<p align="center"><img alt="TextLabel" src="../../images/textlabel.png"/></p>

<h2 id="create" name="create">Creating a TextLabel</h2>

<p>To display a <span style="font-family: Courier New,Courier,monospace;">TextLabel</span>, the <span style="font-family: Courier New,Courier,monospace;">TEXT</span> property must be set using a UTF-8 string.</p>

<pre class="prettyprint">TextLabel label = TextLabel::New();
label.SetProperty(TextLabel::Property::TEXT, &quot;Hello World&quot;);
Stage::GetCurrent().Add(label);</pre>

<p>The label must also be added to the stage, or to an actor on the stage. The position of the label on the screen depends on the <span style="font-family: Courier New,Courier,monospace;">parent-origin</span> and <span style="font-family: Courier New,Courier,monospace;">anchor-point</span> properties.</p>

<h2 id="select" name="select">Font Selection</h2>

<p>By default, the <span style="font-family: Courier New,Courier,monospace;">TextLabel</span> automatically selects a suitable font from the platform. Typically, fonts do not support all scripts. For example, Latin fonts often do not provide Arabic glyphs. The <span style="font-family: Courier New,Courier,monospace;">TextLabel</span> cannot select fonts for all scripts.</p>

<p>Alternatively, you can request a font using the <span style="font-family: Courier New,Courier,monospace;">FONT_FAMILY</span>, <span style="font-family: Courier New,Courier,monospace;">FONT_STYLE</span>, and <span style="font-family: Courier New,Courier,monospace;">POINT_SIZE</span> properties:</p>

<pre class="prettyprint">label.SetProperty(TextLabel::Property::FONT_FAMILY, &quot;HelveticaNue&quot;);
label.SetProperty(TextLabel::Property::FONT_STYLE,  &quot;Regular&quot;);
label.SetProperty(TextLabel::Property::POINT_SIZE,  12.0f);</pre>

<p>The <span style="font-family: Courier New,Courier,monospace;">TextLabel</span> falls back to using the default font if the requested font does not support the required scripts.</p>

<h2 id="style" name="style">Font Styles</h2>

<p>Setting the font size programmatically is not ideal for applications that support multiple screen resolutions. A more flexible approach is to prepare various JSON stylesheets and request a different style for each platform:</p>

<pre class="prettyprint">StyleManager styleManager = StyleManager::Get();
styleManager.RequestThemeChange(&quot;example-path/example.json&quot;);</pre>

<p>To change the font for standard text labels, use JSON syntax:</p>

<pre class="prettyprint">{  
&nbsp;&nbsp;&nbsp;&quot;styles&quot;:  
&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;textlabel&quot;:&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;font-family&quot;:&quot;Arial&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;font-style&quot;:&quot;Regular&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;point-size&quot;:8&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  
&nbsp;&nbsp;&nbsp;}
}</pre>

<p>The same point size is unlikely to be suitable for all labels in an application. To set custom sizes, simply set a <span style="font-family: Courier New,Courier,monospace;">style name</span> for each case and provide a style override in JSON:</p>

<pre class="prettyprint">label.SetProperty(Control::Property::STYLE_NAME, &quot;custom&quot;); </pre>

<p>In the example above, standard text labels have point size 8, and custom labels have point size 10.</p>

<h2 id="align" name="align">Text Alignment</h2>

<p>Wrapping can be enabled using the <span style="font-family: Courier New,Courier,monospace;">MULTI_LINE</span> property:</p>

<pre class="prettyprint">label.SetProperty(TextLabel::Property::MULTI_LINE, true);</pre>

<p>The text can be aligned horizontally to the beginning, end, or center of the available area:</p>

<pre class="prettyprint">label.SetProperty(TextLabel::Property::HORIZONTAL_ALIGNMENT, &quot;BEGIN&quot;); // &quot;CENTER&quot; or &quot;END&quot;</pre>

<h2 id="size" name="size">Negotiating Size</h2>

<p>Size negotiation is a layouting feature supported by UI controls, such as <span style="font-family: Courier New,Courier,monospace;">TextLabel</span>.</p>

<p>There are several resize policies commonly used with <span style="font-family: Courier New,Courier,monospace;">TextLabels</span>.
The following examples show the actual size by setting a colored background, whilst the black area represents the size of the parent control.</p>

<h3 id="font" name="font">Using the Natural Size</h3>

<p>In its natural size, the <span style="font-family: Courier New,Courier,monospace;">TextLabel</span> is large enough to display the text without wrapping, and does not have extra space to align the text within. In the following example, the same result is displayed regardless of the alignment or multi-line properties:</p>

<pre class="prettyprint">TextLabel label = TextLabel::New(&quot;Hello World&quot;);
label.SetAnchorPoint(AnchorPoint::TOP_LEFT);
label.SetResizePolicy(ResizePolicy::USE_NATURAL_SIZE,Dimension::ALL_DIMENSIONS);
label.SetBackgroundColor(Color::BLUE);Stage::GetCurrent().Add(label);</pre>

<h3 id="font" name="font">Height-for-width Negotiation</h3>

<p>To lay out text labels vertically, a fixed (maximum) width must be provided by the parent control. Each <span style="font-family: Courier New,Courier,monospace;">TextLabel</span> reports the desired height for the given width. The following example uses <span style="font-family: Courier New,Courier,monospace;">TableView</span> as the parent:</p>

<pre class="prettyprint">TableView parent = TableView::New(3, 1);
parent.SetResizePolicy(ResizePolicy::FILL_TO_PARENT, Dimension::WIDTH);
parent.SetResizePolicy(ResizePolicy::USE_NATURAL_SIZE, Dimension::HEIGHT);
parent.SetAnchorPoint(AnchorPoint::TOP_LEFT);

Stage::GetCurrent().Add(parent);

TextLabel label = TextLabel::New(&quot;Hello World&quot;);
label.SetAnchorPoint(AnchorPoint::TOP_LEFT);
label.SetResizePolicy(ResizePolicy::FILL_TO_PARENT, Dimension::WIDTH);
label.SetResizePolicy(ResizePolicy::DIMENSION_DEPENDENCY, Dimension::HEIGHT);
label.SetBackgroundColor(Color::BLUE);

parent.AddChild(label, TableView::CellPosition(0, 0));
parent.SetFitHeight(0);

label = TextLabel::New(&quot;A Quick Brown Fox Jumps Over The Lazy Dog&quot;);
label.SetAnchorPoint(AnchorPoint::TOP_LEFT);
label.SetResizePolicy(ResizePolicy::FILL_TO_PARENT, Dimension::WIDTH);
label.SetResizePolicy(ResizePolicy::DIMENSION_DEPENDENCY, Dimension::HEIGHT);
label.SetBackgroundColor(Color::GREEN);
label.SetProperty(TextLabel::Property::MULTI_LINE, true);

parent.AddChild(label, TableView::CellPosition(1, 0));
parent.SetFitHeight(1);

label = TextLabel::New(&quot;لإعادة ترتيب الشاشات، يجب تغيير نوع العرض إلى شبكة قابلة للتخصيص&quot;);
label.SetAnchorPoint(AnchorPoint::TOP_LEFT);
label.SetResizePolicy(ResizePolicy::FILL_TO_PARENT, Dimension::WIDTH);
label.SetResizePolicy(ResizePolicy::DIMENSION_DEPENDENCY, Dimension::HEIGHT);
label.SetBackgroundColor(Color::BLUE);
label.SetProperty(TextLabel::Property::MULTI_LINE, true);

parent.AddChild(label, TableView::CellPosition(2, 0));
parent.SetFitHeight(2);</pre>

<p>In the example, the &quot;Hello World&quot; text label has been given the full width, not the natural width.</p>

<h2 id="decoration" name="decoration">Decorations</h2>

<p>For text decorations, the <span style="font-family: Courier New,Courier,monospace;">TextLabel</span> claSS provides several properties.</p>

<table>
   <caption>
     Table: <span style="font-family: Courier New,Courier,monospace;">TextLabel</span> properties
   </caption>
   <tbody>
    <tr>
     <th>Property</th>
	 <th>Type</th>
	 <th>Writable</th>
	 <th>Animatable</th>
    </tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">RENDERING_BACKEND</span></td>
		<td>Integer</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
    <tr>
		<td><span style="font-family: Courier New,Courier,monospace;">TEXT</span></td>
		<td>String</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">FONT_FAMILY</span></td>
		<td>String</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">FONT_STYLE</span></td>
		<td>String</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">POINT_SIZE</span></td>
		<td>Float</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">MULTI_LINE</span></td>
		<td>Boolean</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">HORIZONTAL_ALIGNMENT</span></td>
		<td>String</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">VERTICAL_ALIGNMENT</span></td>
		<td>String</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">TEXT_COLOR</span></td>
		<td>Vector4</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">SHADOW_OFFSET</span></td>
		<td>Vector2</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">SHADOW_COLOR</span></td>
		<td>Vector4</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">UNDERLINE_ENABLED</span></td>
		<td>Boolean</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">UNDERLINE_COLOR</span></td>
		<td>Vector4</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
	<tr>
		<td><span style="font-family: Courier New,Courier,monospace;">UNDERLINE_HEIGHT</span></td>
		<td>Float</td>
		<td>Yes</td>
		<td>No</td>
	</tr>
   </tbody>
  </table>

<h3 id="font" name="font">Color</h3>

<p>To change the color of the text, use the <span style="font-family: Courier New,Courier,monospace;">TEXT_COLOR</span> property. Unlike the <span style="font-family: Courier New,Courier,monospace;">Actor::COLOR</span> property, this does not affect child actors added to the <span style="font-family: Courier New,Courier,monospace;">TextLabel</span>.</p>

<pre class="prettyprint">label.SetProperty(TextLabel::Property::TEXT, &quot;Red Text&quot;);
label.SetProperty(TextLabel::Property::TEXT_COLOR, Color::RED);</pre>

<h2 id="drop" name="drop">Drop Shadow</h2>

<p>To add a drop shadow to the text, set the <span style="font-family: Courier New,Courier,monospace;">SHADOW_OFFSET</span> property with a non-zero values. The color can also be selected using the <span style="font-family: Courier New,Courier,monospace;">SHADOW_COLOR</span> property.</p>

<pre class="prettyprint">stage.SetBackgroundColor(Color::BLUE);
label1.SetProperty(TextLabel::Property::TEXT, &quot;Plain Text&quot;);
label2.SetProperty(TextLabel::Property::TEXT, &quot;Text with Shadow&quot;);
label2.SetProperty(TextLabel::Property::SHADOW_OFFSET, Vector2(1.0f, 1.0f));
label2.SetProperty(TextLabel::Property::SHADOW_COLOR, Color::BLACK);
label3.SetProperty(TextLabel::Property::TEXT, &quot;Text with Bigger Shadow&quot;);
label3.SetProperty(TextLabel::Property::SHADOW_OFFSET, Vector2(2.0f, 2.0f));
label3.SetProperty(TextLabel::Property::SHADOW_COLOR, Color::BLACK);
label4.SetProperty(TextLabel::Property::TEXT, &quot;Text with Color Shadow&quot;);
label4.SetProperty(TextLabel::Property::SHADOW_OFFSET, Vector2(1.0f, 1.0f));
label4.SetProperty(TextLabel::Property::SHADOW_COLOR, Color::RED);</pre>

<h2 id="underlining" name="underlining">Underlining</h2>

<p>The text can be underlined by setting <span style="font-family: Courier New,Courier,monospace;">UNDERLINE_ENABLED</span>. The color can also be selected using the <span style="font-family: Courier New,Courier,monospace;">UNDERLINE_COLOR</span> property.</p>

<pre class="prettyprint">label1.SetProperty(TextLabel::Property::TEXT, &quot;Text with Underline&quot;);
label1.SetProperty(TextLabel::Property::UNDERLINE_ENABLED, true);
label2.SetProperty(TextLabel::Property::TEXT, &quot;Text with Color Underline&quot;);
label2.SetProperty(TextLabel::Property::UNDERLINE_ENABLED, true);
label2.SetProperty(TextLabel::Property::UNDERLINE_COLOR, Color::GREEN); </pre>

<p>By default, the underline height is based on the font metrics. This can be overridden using the <span style="font-family: Courier New,Courier,monospace;">UNDERLINE_HEIGHT</span> property:</p>

<pre class="prettyprint">label1.SetProperty(TextLabel::Property::UNDERLINE_HEIGHT, 1.0f);</pre>



<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

