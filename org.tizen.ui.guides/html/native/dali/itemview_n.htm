<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>ItemView</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mn_icon.png"/> <img alt="Wearable native" src="../../images/wn_icon.png"/></p>
	</div>
		<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#factory">Item Factory</a></li>
			<li><a href="#create">Creating an ItemView</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1ItemFactory.html">Dali::Toolkit::ItemFactory API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1ItemLayout.html">Dali::Toolkit::ItemLayout API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/structDali_1_1Toolkit_1_1ItemRange.html">Dali::Toolkit::ItemRange API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1ItemView.html">Dali::Toolkit::ItemView API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1Scrollable.html">Dali::Toolkit::Scrollable API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1ItemFactory.html">Dali::Toolkit::ItemFactory API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1ItemLayout.html">Dali::Toolkit::ItemLayout API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/structDali_1_1Toolkit_1_1ItemRange.html">Dali::Toolkit::ItemRange API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1ItemView.html">Dali::Toolkit::ItemView API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1Scrollable.html">Dali::Toolkit::Scrollable API for Wearable Native</a></li>		
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>ItemView</h1>

<p>The <span style="font-family: Courier New,Courier,monospace;">ItemView</span> class provides scrollable layout for item sets. The <span style="font-family: Courier New,Courier,monospace;">ItemView</span> is a scrollable container that can contain many items. It can have several layouts. There are also built-in layouts that you can use, as illustrated in the following figure.</p>

<p class="figure">Figure: ItemView layouts</p>  

	<table>
   <tbody>
    <tr>
     <td>Grid</td>
     <td>Spiral</td>
	 <td>Depth</td>
    </tr>
	<tr>
     <td style="text-align:center;"><img alt="captured screen2" src="../../images/grid.png" /></td>
     <td style="text-align:center;"><img alt="captured screen2" src="../../images/spiral.png" /></td>
	 <td style="text-align:center;"><img alt="captured screen2" src="../../images/depth.png" /></td>
    </tr>
   </tbody>
  </table>
<p>You can also create your own custom layout by inheriting from the <span style="font-family: Courier New,Courier,monospace;">Dali::Toolkit::ItemLayout</span> class.</p>

<h2 id="factory" name="factory">Item Factory</h2>

<p>Before creating an <span style="font-family: Courier New,Courier,monospace;">ItemView</span>, you must establish an <span style="font-family: Courier New,Courier,monospace;">ItemFactory</span>. The <span style="font-family: Courier New,Courier,monospace;">ItemFactory</span> provides functions to create items and to get the number of created items. The following is a basic example of implementing an <span style="font-family: Courier New,Courier,monospace;">ItemFactory</span>:</p>

<pre class="prettyprint">class MyFactory : public Dali::Toolkit::ItemFactory
{
public:  
&nbsp;&nbsp;&nbsp;virtual unsigned int GetNumberOfItems()  
&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Return the number of items&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return MY_ITEM_COUNT;  
&nbsp;&nbsp;&nbsp;}  

&nbsp;&nbsp;&nbsp;virtual Actor NewItem(unsigned int itemId)  
&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Create the actor representing the item based on the itemId 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::ostringstream imageName;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;imageName &lt;&lt; &quot;my-image-folder/&quot; &lt;&lt; itemId &lt;&lt; &quot;.png&quot;; 

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If item is 10, this results in my-image-folder/10.png
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dali::ResourceImage image = Dali::ResourceImage::New(imageName.str());

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Create an ImageActor from the image
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Dali::ImageActor::New(image);
&nbsp;&nbsp;&nbsp;}
};</pre>

<p>The overridden functions in the factory are called by the <span style="font-family: Courier New,Courier,monospace;">ItemView</span> object.</p>

<h2 id="create" name="create">Creating an ItemView</h2>

<p>The following is a basic example of implementing an <span style="font-family: Courier New,Courier,monospace;">ItemView</span>:</p>

<pre class="prettyprint">// Store this as a member variable
MyFactory factory; 

// Pass in the factory
Dali::Toolkit::ItemView itemView = Dali::Toolkit::ItemView::New(factory); 

itemView.SetParentOrigin(ParentOrigin::CENTER);
itemView.SetAnchorPoint(AnchorPoint::CENTER);

// Create a layout
Dali::Toolkit::ItemLayoutPtr spiralLayout = Dali::Toolkit::DefaultItemLayout::New(Dali::Toolkit::DefaultItemLayout::SPIRAL);

// Add the layout to the ItemView
itemView.AddLayout(spiralLayout);

// More layouts can be created and added to the ItemView
// Activate the layout
itemView.ActivateLayout(0, Dali::Stage::GetCurrent().GetSize(), 0);

Dali::Stage::GetCurrent().Add(itemView);</pre>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

