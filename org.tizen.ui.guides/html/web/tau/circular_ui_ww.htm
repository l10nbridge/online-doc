<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
    <title>Circular UI: Creating Applications for the Circular UI</title>
</head>
<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Wearable Web" src="../../images/ww_icon.png"/></p>
    </div>

    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#apply">Applying the Circular UI</a></li>
            <li><a href="#incss">Overriding Circular CSS Style with Media Query</a></li>
            <li><a href="#injs">Writing JavaScript Selectively for the Circular UI</a></li>
            <li><a href="#components">Supported UI Components</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.web.apireference/html/ui_fw_api/ui_fw_api_cover.htm">Tizen Advanced UI Framework (TAU) API</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">
    <h1>Circular UI: Creating Applications for the Circular UI</h1>

<p>TAU for Wearable supports different types of wearable devices (rectangle and circle) in the same application. To support the circular UI along with rectangular UI, media query is required.</p>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note" colspan="1" rowspan="1">Note</th> 
    </tr> 
    <tr> 
     <td class="note" colspan="1" rowspan="1">This feature is supported in wearable applications only.</td> 
    </tr> 
   </tbody> 
  </table>


<h2 id="apply">Applying the Circular UI</h2>

<p>To support the circular UI:</p>

<ol>
<li>Include the link tag for the latest <span style="font-family: Courier New,Courier,monospace">tau.css</span> file into the &lt;head&gt; part in HTML. Note that for the compatibility with the rectangular UI, you must use the latest version of TAU library.</li>

<li>Include the link tag for the latest <span style="font-family: Courier New,Courier,monospace">tau.circle.css</span> file with media query feature (<span style="font-family: Courier New,Courier,monospace">-tizen-geometric-shape: circle</span>) next to the link tag for the <span style="font-family: Courier New,Courier,monospace">tau.css</span>. Note that adding the <span style="font-family: Courier New,Courier,monospace">tau.circle.css</span> file following the general <span style="font-family: Courier New,Courier,monospace">tau.css</span> file covers the additional circular UI.</li>

<li>Include the link tag for the latest <span style="font-family: Courier New,Courier,monospace">tau.js</span> script file at the end of &lt;body&gt; part of HTML.</li>

<li>For writing a separate code for Circular UI in JavaScript, you can use the <span style="font-family: Courier New,Courier,monospace">tau.support.shape.circle</span> property for detecting the circular device.</li>
</ol>

<pre class="prettyprint">
&lt;head name=&quot;viewport&quot; content=&quot;width=device-width, user-scalable=no&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;title&gt;Support for Circular UI&lt;/title&gt;
&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; href=&quot;tau.css&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;!-- CSS media query on a link element --&gt;
&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; media=&quot;all and (-tizen-geometric-shape: circle)&quot; href=&quot;tau.circle.css&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/stlye.css&quot;&gt;
&lt;/head&gt;
&lt;body&gt;
&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;tau.js&quot;&gt;&lt;/script&gt;
&nbsp;&nbsp;&nbsp;&lt;script&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tau.support.shape.circle) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Implement your code for the circular UI */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Implement your code for the rectangular UI */
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&lt;/script&gt;
&lt;/body&gt;
</pre>

<p>The following figure shows how the media query <span style="font-family: Courier New,Courier,monospace">-tizen-geometric-shape: circle</span> works in a rectangular and circular UI.</p>
<p class="figure">Figure: Media query in a rectangular device and circular device</p>
<p align="center">
	<img alt="Media query in a rectangular device and circular device" src="../../images/circular_support.png" />
</p>

<h2 id="incss">Overriding Circular CSS Style with Media Query</h2>

<p>For some styles to be applied selectively, you can use the media query feature <span style="font-family: Courier New,Courier,monospace">-tizen-geometric-shape</span> with a <span style="font-family: Courier New,Courier,monospace">rectangle</span> or <span style="font-family: Courier New,Courier,monospace">circle</span> value to distinguish type difference. Note that the <span style="font-family: Courier New,Courier,monospace">-tizen-geometric-shape</span> feature is only available in Tizen devices.</p>

<table>
	<caption>Table: <span style="font-family: Courier New,Courier,monospace">-tizen-geometric-shape</span> feature description</caption>
	<tbody>
	<tr>
		<th colspan="2">-tizen-geometric-shape</th>
	</tr>
	<tr>
		<td>Value</td>
		<td>rectangle | circle</td>
	</tr>
	<tr>
		<td>Applied to</td>
		<td>Visual media types</td>
	</tr>
	<tr>
		<td>Accept min/max prefixes</td>
		<td>No</td>
	</tr>
	</tbody>
</table>

<pre class="prettyprint">
.className 
{
&nbsp;&nbsp;&nbsp;/* Implement the basic CSS style for all types of devices (rectangular and circular) */
}

@media screen and (-tizen-geometric-shape: circle) 
{
&nbsp;&nbsp;&nbsp;.className
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Implement the CSS style to be overridden in circular */
&nbsp;&nbsp;&nbsp;}
}
</pre>

<h2 id="injs">Writing JavaScript Selectively for the Circular UI</h2>
<p>TAU for Wearable provides the <span style="font-family: Courier New,Courier,monospace">tau.support.shape.circle</span> property that checks whether the device screen is a circle or not. If you want implement code selectively for circular UI and rectangular UI, you can use the property with a boolean value. Note that for developing in a browser environment, this property is always set to <span style="font-family: Courier New,Courier,monospace">true</span> when the <span style="font-family: Courier New,Courier,monospace">tau.circle.css</span> file is loaded.</p>

<pre class="prettyprint">
if (tau.support.shape.circle) 
{
&nbsp;&nbsp;&nbsp;/* Implement your code for the circular UI */
} 
else 
{
&nbsp;&nbsp;&nbsp;/* Implement your code for the rectangular UI */
}
</pre>

<h2 id="components">Supported UI Components</h2>
<p>The following components can be used in both rectangular and circular devices.</p>
  <table>
	<caption>Table: UI components supported by rectangular and circular UI</caption>
	<tbody>
	<tr>
		<th>Component</th>
		<th>Description</th>
	</tr>
	<tr>
        <td><a href="list_ww.htm">List</a></td>
        <td>Shows how you can create a snap list component.</td>
	</tr>
	<tr>
        <td><a href="helper_ww.htm">Helper Script</a></td>
        <td>Shows how you to support some application components.</td>
	</tr>
	<tr>
        <td><a href="header_ww.htm">Header</a></td>
        <td>Shows how you can create a header component.</td>
	</tr>
	<tr>
        <td><a href="circle_progressbar_ww.htm">Circle Progress Bar</a></td>
        <td>Shows how you can create a circle progress bar component.</td>
	</tr>
	<tr>
        <td><a href="processing_ww.htm">Processing</a></td>
        <td>Shows how you can create a processing component.</td>
	</tr>
	<tr>
        <td><a href="moreoptions_ww.htm">More Options</a></td>
        <td>Shows how you can create a more options button component.</td>
	</tr>
	<tr>
        <td><a href="footerbutton_ww.htm">Footer Button</a></td>
        <td>Shows how you can create a footer button component.</td>
	</tr>
	<tr>
        <td><a href="thumbnail_ww.htm">Thumbnail</a></td>
        <td>Shows how you can create a thumbnail component.</td>
	</tr>
	<tr>
        <td><a href="popup_ww.htm">Popup</a></td>
        <td>Shows how you can create a popup component.</td>
        </tr>
	<tr>
	<td><a href="indexscrollbar_ww.htm">Index Scroll Bar</a></td>
        <td>Shows how you can create a index scroll bar component.</td>
    	</tr>
</tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-25976949-1']);
    _gaq.push(['_trackPageview']);
    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>

</body>
</html>
