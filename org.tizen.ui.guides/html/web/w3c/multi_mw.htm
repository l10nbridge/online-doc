<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>CSS Multi-column Layout Module: Creating Multi-column Layouts</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../../images/mw_icon.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#size">Setting the Column Number and Width</a></li>
			<li><a href="#gap">Setting the Column Gap</a></li>
			<li><a href="#rule">Setting the Column Rule</a></li>
			<li><a href="#span">Setting the Column Span</a></li>
			<li><a href="#break">Setting the Column Break</a></li>
			<li><a href="#basic">Creating a Basic Layout</a></li>
			<li><a href="#dynamic">Creating a Layout with Dynamic Content</a></li>
		</ul>	
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.web.apireference/html/w3c_api/w3c_api_m.html#multicolumn">CSS Multi-column Layout Module API for Mobile Web</a></li>
			</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
 <h1>CSS Multi-column Layout Module: Creating Multi-column Layouts</h1>
 

 <p>You can arrange the screen content into columns. Using the CSS <span style="font-family: Courier New,Courier,monospace">column-</span> properties, the content elements can flow between columns when the column height or number changes. You can use the properties alone to <a href="#basic">create a basic layout</a>, or add JavaScript code to <a href="#dynamic">make the layout dynamic</a>.</p>

   <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">This feature is supported in mobile applications only.</td> 
    </tr> 
   </tbody> 
  </table> 
 
 <p>You can manage the following column-related features:</p>
<ul>
<li><a href="#size">Setting the column number and width</a></li>
<li><a href="#gap">Setting the column gap</a></li>
<li><a href="#rule">Setting the column rule</a></li>
<li><a href="#span">Setting the column span</a></li>
<li><a href="#break">Setting the column break</a></li>
</ul>

<table class="note"> 
     <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">Up to Tizen SDK version 2.2, most CSS properties and values used in Tizen required the <span style="font-family: Courier New,Courier,monospace">-webkit-</span> prefix. To ensure future compatibility, these properties can now be used with or without the prefix.</td> 
      </tr> 
     </tbody> 
    </table>
	
<h2 id="size" name="size">Setting the Column Number and Width</h2>

<p> When the layout is set to a constant number of columns using the <span style="font-family: Courier New,Courier,monospace">column-count</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-count)</span> property, the column width is set to fill the available horizontal space.</p>
<p>In the following code snippet and figure, the column number is set to 4. As a result, on a 480 x 800 display (shown on the top), the column width is 116 px, whereas on a 720 x 1280 display (shown on the bottom), the column with is 143 px.</p>
<p>The following code snippet demonstrates how to use the <span style="font-family: Courier New,Courier,monospace">column-count</span> property. For a complete source code, see <a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_column_count" target="_blank">multi_column_column_count/renamed_index.html</a>.</p>
<pre class="prettyprint">
article
{
&nbsp;&nbsp;&nbsp;column-count: 4;
&nbsp;&nbsp;&nbsp;-webkit-column-count: 4;
&nbsp;&nbsp;&nbsp;margin: 10px;
}
</pre>

<p class="figure">Figure: 4 columns on different resolution displays</p> 
<p align="center"><img alt="4 columns on different resolution displays" src="../../images/4_columns.png" /></p> 

<p>The <span style="font-family: Courier New,Courier,monospace">column-width</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-width)</span> property sets the base column width.</p>
 <p>In the following code snippet and figure, the column width is set to 153 px, but the effective column width is 288 px for a 480 x 800 display (shown on the left) and 154 px for a 720 x 1280 display (shown on the right). The parameter sets the column to at least the defined width, but not wider than the available display space or twice the defined width. The actual column width is calculated using a <a href="http://www.w3.org/TR/2011/CR-css3-multicol-20110412/#pseudo-algorithm" target="_blank">pseudo-algorithm</a>.</p>
<p>The code snippet shows how the multi-column layout is implemented when the vertical space is limited. If there is more content than fits the available space, the next column is set outside the available space. Using the <span style="font-family: Courier New,Courier,monospace">overflow: scroll</span> property, the column can be scrolled horizontally.</p>
<p>The following code snippet demonstrates how to use the <span style="font-family: Courier New,Courier,monospace">column-width</span> property. For a complete source code, see <a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_column_width" target="_blank">multi_column_column_width/renamed_index.html</a>.</p>
<pre class="prettyprint">
article
{
&nbsp;&nbsp;&nbsp;width: 90vw;
&nbsp;&nbsp;&nbsp;height: 90vh;
&nbsp;&nbsp;&nbsp;column-width: 153px;
&nbsp;&nbsp;&nbsp;-webkit-column-width: 153px;
&nbsp;&nbsp;&nbsp;margin: 5vw;
&nbsp;&nbsp;&nbsp;background: #c3c8ca;
&nbsp;&nbsp;&nbsp;overflow: scroll;
}
</pre>

<p class="figure">Figure: Column width 153 px on different resolution displays</p> 
<p align="center"><img alt="Column width 153 px on different resolution displays" src="../../images/column_width.png" /></p> 

<h2 id="gap" name="gap">Setting the Column Gap</h2>
<p>The <span style="font-family: Courier New,Courier,monospace">column-gap</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-gap</span>) property sets the distance between columns. The property affects the column width, as the column width, gap, and margins all take available space. In the following code snippet and figure, the column gap is set to 17 px.</p>
<p>The following code snippet demonstrates how to use the <span style="font-family: Courier New,Courier,monospace">column-gap</span> property. For a complete source code, see <a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_column_gap" target="_blank">multi_column_column_gap/renamed_index.html</a>.</p>
<pre class="prettyprint">
article 
{
&nbsp;&nbsp;&nbsp;height: 303px;
&nbsp;&nbsp;&nbsp;column-width: 153px;
&nbsp;&nbsp;&nbsp;-webkit-column-width: 153px;
&nbsp;&nbsp;&nbsp;column-gap: 17px;
&nbsp;&nbsp;&nbsp;-webkit-column-gap: 17px;
&nbsp;&nbsp;&nbsp;margin: 7px;
&nbsp;&nbsp;&nbsp;padding: 3px;
&nbsp;&nbsp;&nbsp;background: #c3c8ca;
}
</pre>

<p class="figure">Figure: Column gap</p> 
<p align="center"><img alt="Column gap" src="../../images/column_gap.png" /></p>

<h2 id="rule" name="rule">Setting the Column Rule</h2>
<p>The <span style="font-family: Courier New,Courier,monospace">column-rule</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-rule</span>) property displays a vertical line in the middle of the column gap.</p>
<p>The rule has analogical parameters, such as width, line style, and color, but its size is not included in the available space, and it is a drawing similar to the background.</p>

<p>Rules are only displayed in the content area. If the <span style="font-family: Courier New,Courier,monospace">padding</span> property is set in the same element, the rule appears shorter than the background. In the following code snippet and figure, the rule width is set to 5 px.</p>
<p>The following code snippet demonstrates how to use the <span style="font-family: Courier New,Courier,monospace">column-rule</span> property. For a complete source code, see <a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_column_rule" target="_blank">multi_column_column_rule/renamed_index.html</a>.</p>
<pre class="prettyprint">article 
{
&nbsp;&nbsp;&nbsp;-webkit-column-rule-width: 5px;
&nbsp;&nbsp;&nbsp;-webkit-column-rule-color: rgb(92, 203, 246);
&nbsp;&nbsp;&nbsp;-webkit-column-rule-style: solid;
}
</pre>

<p class="figure">Figure: Column rule</p> 
<p align="center"><img alt="Column rule" src="../../images/column_rule.png" /></p>

<table class="note"> 
     <tbody> 
      <tr> 
       <th class="note">Note</th> 
      </tr> 
      <tr> 
       <td class="note">In Tizen SDK version 2.2, to avoid displaying the rules incorrectly, do not use the <span style="font-family: Courier New,Courier,monospace">column-rule</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-rule</span>) property with horizontal scrolling of the columns.</td> 
      </tr> 
     </tbody>
</table>

<h2 id="span" name="span">Setting the Column Span</h2>
<p>By default, all elements within the columns are no wider than the column width. The <span style="font-family: Courier New,Courier,monospace">column-span</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-span</span>) property can be used to display content across all columns.</p>
<p>When using this property with column elements which have the <span style="font-family: Courier New,Courier,monospace">column-count</span> or <span style="font-family: Courier New,Courier,monospace">column-width</span> property set, the following restrictions apply:</p>
<ul>
<li>Column element height is not used and elements in columns take more vertical space than is set in height.</li>
<li>If the column element has the <span style="font-family: Courier New,Courier,monospace">overflow</span> property set to <span style="font-family: Courier New,Courier,monospace">hidden</span>, the <span style="font-family: Courier New,Courier,monospace">column-span</span> property is ignored.</li>
<li>An element using the <span style="font-family: Courier New,Courier,monospace">column-span</span> property does not have to be a direct child of the column element.</li>
</ul>
<p>In the figure below, the blue arrow shows the order of the column elements. In the upper header area, the <span style="font-family: Courier New,Courier,monospace">column-span</span> property is not used, and in the lower header area, the <span style="font-family: Courier New,Courier,monospace">column-span</span> property is set to  <span style="font-family: Courier New,Courier,monospace">all</span>, as in the following code snippet.</p>
<p>The following code snippet demonstrates how to use the <span style="font-family: Courier New,Courier,monospace">column-span</span> property. For a complete source code, see <a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_column_span" target="_blank">multi_column_column_span/renamed_index.html</a>.</p>
<pre class="prettyprint">
article.left header 
{
&nbsp;&nbsp;&nbsp;column-span: all;
&nbsp;&nbsp;&nbsp;-webkit-column-span: all;
}
</pre>

<p class="figure">Figure: Column span</p> 
<p align="center"><img alt="Column span" src="../../images/column_span.png" /></p>

<h2 id="break" name="break">Setting the Column Break</h2>
<p>By default, column elements are broken to balance column height. The <span style="font-family: Courier New,Courier,monospace">break-before</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-break-before</span>), <span style="font-family: Courier New,Courier,monospace">break-after</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-break-after</span>), and <span style="font-family: Courier New,Courier,monospace">break-inside</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-break-inside</span>) properties can be used to define that an element cannot be broken between columns (set to <span style="font-family: Courier New,Courier,monospace">avoid</span>), or that an element must begin or end within a given column.</p>

<p>The following code snippet and figure illustrate the use of the <span style="font-family: Courier New,Courier,monospace">break-</span> property. In the upper header area, the <span style="font-family: Courier New,Courier,monospace">break-</span> property is not used, and in the lower header area, the <span style="font-family: Courier New,Courier,monospace">break-before</span> property is set to  <span style="font-family: Courier New,Courier,monospace">always</span>.</p>
<p>The following code snippet demonstrates how to use the <span style="font-family: Courier New,Courier,monospace">column-break</span> property. For a complete source code, see <a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_column_break" target="_blank">multi_column_column_break/renamed_index.html</a>.</p>
<pre class="prettyprint">
article.lower section
{
&nbsp;&nbsp;&nbsp;break-before: always;
&nbsp;&nbsp;&nbsp;-webkit-column-break-before: always;
}
</pre>

<p class="figure">Figure: Column break</p> 
<p align="center"><img alt="Column break" src="../../images/column_break.png" /></p>

<h2 id="basic" name="basic">Creating a Basic Layout</h2>

<p>To enhance the user experience of your application by providing a consistent behavior across a wide range of displays with different resolution and orientation, you must learn to create a basic layout using CSS:</p>

<ol>
<li>
<p>Create the HTML layout, defining separate sections for the column content and including an image file:</p>
<pre class="prettyprint">
&lt;body&gt;
&nbsp;&nbsp;&nbsp;&lt;article id=&quot;article&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;section&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;header&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;Section 1&lt;/h1&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/header&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Lorem ipsum dolor (...), id.&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;images/pinwheel_green.png&quot; alt=&quot;&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Maecenas at (...)tortor.&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/section&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;section&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;header&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;Section 2&lt;/h1&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/header&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;images/Tizen_Pinwheel_Secondary_Confetti.png&quot; alt=&quot;&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Nullam bibendum (...) Curabitur.&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;images/Tizen_WhiteFold_4.png&quot; alt=&quot;&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/section&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;section&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;header&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;Section 3&lt;/h1&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/header&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Sed sagittis, (...) Vivamus sed est sit amet.&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img id=&quot;figure&quot; src=&quot;images/pinwheel_yellow.png&quot; alt=&quot;&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Pellentesque habitant (...). Duis lobortis, nibh.&lt;/p&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/section&gt;
&nbsp;&nbsp;&nbsp;&lt;/article&gt;
&lt;/body&gt;
</pre></li>

<li>Set the CSS column properties:
<ol type="a">
<li>
<p>The <span style="font-family: Courier New,Courier,monospace">article</span> element acts as a multi-column container. Set the <span style="font-family: Courier New,Courier,monospace">column-width</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-width</span>) property to enable the multi-column layout:</p>

<pre class="prettyprint">
article 
{
&nbsp;&nbsp;&nbsp;width: 80vw;
&nbsp;&nbsp;&nbsp;column-width: 119px;
&nbsp;&nbsp;&nbsp;-webkit-column-width: 119px;

&nbsp;&nbsp;&nbsp;margin: 2vh 5vw;
&nbsp;&nbsp;&nbsp;padding: 2vh 5vw;
&nbsp;&nbsp;&nbsp;background: #c3c8ca;</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">column-width</span> property defines the default column width but the visible width is not always similar. An algorithm calculates the width according to available space. Normally, a column has a different display width from the one set in the property because as the columns are sized to fill all available space.</p>
<p>For example, on a 480 x 800 display with portrait orientation, the device width is 123 px, whereas on a 720 x 1280 display with a landscape orientation, the width is 120 px. The space available for columns is the <span style="font-family: Courier New,Courier,monospace">width</span> attribute value reduced by <span style="font-family: Courier New,Courier,monospace">padding</span>, in this case 80vw - (2 * 5vw) = 70vw, which means 70/100 width of the device display.</p>
</li>
<li>
<p>Use the <span style="font-family: Courier New,Courier,monospace">column-gap</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-gap</span>) property to set the distance between columns:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;column-gap: 10px;
&nbsp;&nbsp;&nbsp;-webkit-column-gap: 10px;
</pre>
</li>
<li>

<p>Use the <span style="font-family: Courier New,Courier,monospace">column-rule</span> (or <span style="font-family: Courier New,Courier,monospace">-webkit-column-rule</span>) property to draw a vertical line between columns. Define the width, color, and style of the rule:</p>

<pre class="prettyprint">
&nbsp;&nbsp;&nbsp;-webkit-column-rule-width: 1px;
&nbsp;&nbsp;&nbsp;-webkit-column-rule-color: #677784;
&nbsp;&nbsp;&nbsp;-webkit-column-rule-style: solid;
&nbsp;&nbsp;&nbsp;column-rule-width: 1px;
&nbsp;&nbsp;&nbsp;column-rule-color: #677784;
&nbsp;&nbsp;&nbsp;column-rule-style: solid;
}</pre>

<p>The rule width does not increase the distance between columns. It is drawn under the column gap and can be even wider than the gap.</p>

</li></ol>

 <p>The figure below shows the layout with the <span style="font-family: Courier New,Courier,monospace">column-rule</span> <span style="font-family: Courier New,Courier,monospace">width</span> set to 40 px and the <span style="font-family: Courier New,Courier,monospace">column-gap</span> set to 10 px.</p>

<p class="figure">Figure: Column settings</p> 
<p align="center"><img alt="Column settings" src="../../images/column_settings.png" /></p>
</li>
<li>
<p>Define the <span style="font-family: Courier New,Courier,monospace">footer</span> element with the display height set to 5/100 and padding set to 2 * 2vh:</p> 

<pre class="prettyprint">
footer 
{
&nbsp;&nbsp;&nbsp;padding: 2vh;
&nbsp;&nbsp;&nbsp;height: 5vh;
&nbsp;&nbsp;&nbsp;background: rgba(103, 119, 132, 0.2);
}
</pre>
</li>
<li>
<p>Define the <span style="font-family: Courier New,Courier,monospace">section</span> elements setting the <span style="font-family: Courier New,Courier,monospace">border-bottom</span> and vertical <span style="font-family: Courier New,Courier,monospace">padding</span> values. It is not necessary to define horizontal padding, as it has been defined for the <span style="font-family: Courier New,Courier,monospace">article</span> element.</p>

<pre class="prettyprint">
article&gt;section
{
&nbsp;&nbsp;&nbsp;border-bottom: 1px solid #d8d9d4;
&nbsp;&nbsp;&nbsp;padding: 4px 0;
&nbsp;&nbsp;&nbsp;text-align: center;
}
</pre>
</li>
<li>
<p>Set image elements to have an automatic <span style="font-family: Courier New,Courier,monospace">margin</span> to center them within the column.</p>
<p>In case of the image whose <span style="font-family: Courier New,Courier,monospace">id</span> attribute is set to <span style="font-family: Courier New,Courier,monospace">figure</span>, set it to be a floating element with text drawn around it.</p>

<pre class="prettyprint">
img{
&nbsp;&nbsp;&nbsp;display: block;
&nbsp;&nbsp;&nbsp;margin: 4px auto;
}

#figure
{
&nbsp;&nbsp;&nbsp;float: right;	
&nbsp;&nbsp;&nbsp;margin: 4px;
}
</pre>
</li></ol>

<p>The following figures illustrate the created layout in different display sizes and orientations.</p>

<p class="figure">Figure: Basic layout on a 480 x 800 display</p> 
<p align="center"><img alt="Basic layout on a 480 x 800 display" src="../../images/basic_layout_480x800.png" /></p>

<p class="figure">Figure: Basic layout on a 720 x 1280 display</p> 
<p align="center"><img alt="Basic layout on a 720 x 1280 display" src="../../images/basic_layout_720x1280.png" /></p>

<h3>Source Code</h3>
 <p>For the complete source code related to this use case, see the following files:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_warm_up" target="_blank">renamed_index.html</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_warm_up/css" target="_blank">style.css</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_warm_up/images" target="_blank">pinwheel_green.png</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_warm_up/images" target="_blank">pinwheel_yellow.png</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_warm_up/images" target="_blank">Tizen_Pinwheel_Secondary_Confetti.png</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_warm_up/images" target="_blank">Tizen_WhiteFold_4.png</a></li>
 </ul>
			
				<h2 id="dynamic" name="dynamic">Creating a Layout with Dynamic Content</h2>
				
			<p>To enhance the user experience of your application by providing a consistent behavior across a wide range of displays with different resolution and orientation, you must learn to create a layout displaying a varying amount of content using CSS:</p>
<ol>
<li>
<p>Create the HTML layout. The <span style="font-family: Courier New,Courier,monospace">article</span> element displays the columns, and the <span style="font-family: Courier New,Courier,monospace">nav</span> element contains buttons to add and remove content in the columns.</p>
<pre class="prettyprint">
&lt;body&gt;
&nbsp;&nbsp;&nbsp;&lt;article id=&quot;article&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;/article&gt;
&nbsp;&nbsp;&nbsp;&lt;nav&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id=&quot;addSections&quot; href=&quot;#&quot;&gt;Add images&lt;/a&gt; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;number&quot; id=&quot;howMany&quot; value=&quot;3&quot;&gt; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id=&quot;removeGroup&quot; href=&quot;#&quot;&gt;Remove last Group&lt;/a&gt;
&nbsp;&nbsp;&nbsp;&lt;/nav&gt;
&nbsp;&nbsp;&nbsp;&lt;footer&gt; Multicolumn Layout Tutorial 02&lt;/footer&gt;
&lt;/body&gt;
</pre>
</li>
<li>Set the CSS properties:
<ol type="a">
<li>
<p>Define the CSS display and column properties:</p>
<pre class="prettyprint">
body 
{
&nbsp;&nbsp;&nbsp;display: flex;
&nbsp;&nbsp;&nbsp;display: -webkit-flex;
&nbsp;&nbsp;&nbsp;flex-direction: column;
&nbsp;&nbsp;&nbsp;-webkit-flex-direction: column;
&nbsp;&nbsp;&nbsp;background: #fefffa;
}
</pre>
</li>
<li>
<p>Set the <span style="font-family: Courier New,Courier,monospace">article</span>, <span style="font-family: Courier New,Courier,monospace">nav</span> and <span style="font-family: Courier New,Courier,monospace">footer</span> elements in one column using the flexible box layout.</p>
<p>The <span style="font-family: Courier New,Courier,monospace">nav</span> element is also a flexible box layout container to set UI elements in.</p>
<pre class="prettyprint">
nav 
{
&nbsp;&nbsp;&nbsp;height: 20vh;
&nbsp;&nbsp;&nbsp;padding-left: 20%;
&nbsp;&nbsp;&nbsp;padding-top: 10px;
&nbsp;&nbsp;&nbsp;display: flex;
&nbsp;&nbsp;&nbsp;display: -webkit-flex;
&nbsp;&nbsp;&nbsp;flex-flow: row wrap;
&nbsp;&nbsp;&nbsp;-webkit-flex-flow: row wrap;
&nbsp;&nbsp;&nbsp;flex: none;
&nbsp;&nbsp;&nbsp;-webkit-flex: none;
&nbsp;&nbsp;&nbsp;justify-content: space-around;
&nbsp;&nbsp;&nbsp;-webkit-justify-content: space-around;
&nbsp;&nbsp;&nbsp;align-items: center;
&nbsp;&nbsp;&nbsp;-webkit-align-items: center;
&nbsp;&nbsp;&nbsp;background: url(../images/white_logo.png) no-repeat;
&nbsp;&nbsp;&nbsp;background-position: 2%;
&nbsp;&nbsp;&nbsp;background-size: auto 70%;
}
</pre>
</li>
<li>
<p>Define the styles for the <span style="font-family: Courier New,Courier,monospace">a</span> elements within the <span style="font-family: Courier New,Courier,monospace">nav</span> element to make them appear as buttons:</p>
<pre class="prettyprint">
nav a 
{
&nbsp;&nbsp;&nbsp;margin: 3px;
&nbsp;&nbsp;&nbsp;border-radius: 5px;
&nbsp;&nbsp;&nbsp;padding: 5px 15px;
&nbsp;&nbsp;&nbsp;background: rgba(103, 119, 132, 0.2);
&nbsp;&nbsp;&nbsp;text-align: center;
&nbsp;&nbsp;&nbsp;font-weight: bold;
}
</pre>
<p>When the user taps the <strong>Add images</strong> button, the images and their descriptions are displayed.</p>
</li>
<li>
<p>Define the <span style="font-family: Courier New,Courier,monospace">input</span> element (with the property type set to <span style="font-family: Courier New,Courier,monospace">number</span>) style with an increased height to match the buttons around it:</p>
<pre class="prettyprint">
nav input
{
&nbsp;&nbsp;&nbsp;width: 50px;
&nbsp;&nbsp;&nbsp;height: 2em;
}
</pre>
</li>
<li>
<p>The <span style="font-family: Courier New,Courier,monospace">article</span> element contains the column properties. Use the <span style="font-family: Courier New,Courier,monospace">-webkit-column-width</span> property to set the column width. The real width is calculated based on available space.</p>
<pre class="prettyprint">
article 
{
&nbsp;&nbsp;&nbsp;width: 90vw;
&nbsp;&nbsp;&nbsp;column-width: 136px;
&nbsp;&nbsp;&nbsp;-webkit-column-width: 136px;
&nbsp;&nbsp;&nbsp;margin: 1vh 2vh;
&nbsp;&nbsp;&nbsp;padding: 1vh;
&nbsp;&nbsp;&nbsp;background: #c3c8ca;
}
</pre>
</li>
<li>
<p>Set the images within the <span style="font-family: Courier New,Courier,monospace">article</span> element with a block display to separate them from text:</p>
<pre class="prettyprint">
article img 
{
&nbsp;&nbsp;&nbsp;margin: 0 auto;
&nbsp;&nbsp;&nbsp;display: block;
}
</pre>
</li>
<li>
<p>Define the <span style="font-family: Courier New,Courier,monospace">column-span</span> property as <span style="font-family: Courier New,Courier,monospace">all</span> for the <span style="font-family: Courier New,Courier,monospace">h1</span> elements:</p>
<pre class="prettyprint">
article&gt;h1 
{
&nbsp;&nbsp;&nbsp;background: rgba(103, 119, 132, 0.5);
&nbsp;&nbsp;&nbsp;padding: 4px;
&nbsp;&nbsp;&nbsp;text-align: center;
&nbsp;&nbsp;&nbsp;color: #eed484;
&nbsp;&nbsp;&nbsp;column-span: all;
&nbsp;&nbsp;&nbsp;-webkit-column-span: all;
}
</pre>
<p> As a result, the <span style="font-family: Courier New,Courier,monospace">h1</span> elements are spread across the columns. When the <span style="font-family: Courier New,Courier,monospace">column-span</span> property is used, you cannot have more columns than can fit in the available horizontal space.</p>
</li>
<li>
<p>Define the <span style="font-family: Courier New,Courier,monospace">break-inside</span> property as <span style="font-family: Courier New,Courier,monospace">avoid</span> to avoid breaking elements between columns:</p>
<pre class="prettyprint">
article&gt;section 
{
&nbsp;&nbsp;&nbsp;break-inside: avoid;
&nbsp;&nbsp;&nbsp;-webkit-column-break-inside: avoid;
&nbsp;&nbsp;&nbsp;border-bottom: 1px solid #d8d9d4;
&nbsp;&nbsp;&nbsp;padding: 4px 0;
&nbsp;&nbsp;&nbsp;text-align: center;
}
</pre>
</li>
<li>
<p>Set the <span style="font-family: Courier New,Courier,monospace">footer</span> size:</p>
<pre class="prettyprint">
footer 
{
&nbsp;&nbsp;&nbsp;padding: 2vh;
&nbsp;&nbsp;&nbsp;height: 5vh;
&nbsp;&nbsp;&nbsp;background: rgba(103, 119, 132, 0.2);
}
</pre>
</li>
</ol>
</li>
<li>Add the JavaScript code to make the content dynamic:
<ol type="a">
<li>
<p>Declare a variable for the images. Elements included in the variable amount to data displayed in a column layout, such as a newsfeed:</p>
<pre class="prettyprint">
var images = [&quot;images/pinwheel_green.png&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;images/Tizen_Pinwheel_Secondary_Confetti.png&quot;, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;images/Tizen_WhiteFold_4.png&quot;, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;images/pinwheel_yellow.png&quot;];
</pre>
</li>
<li>
<p>Declare a variable for the input element for selecting the number of images added to the content:</p>
<pre class="prettyprint">
var howManyInput;
</pre>
</li>
<li>
<p>Use the <span style="font-family: Courier New,Courier,monospace">addGroup()</span> method with the input parameter value to add random images to the column layout and initialize the button events:</p>

<pre class="prettyprint">
window.onload = function() 
{
&nbsp;&nbsp;&nbsp;addGroup(4);
&nbsp;&nbsp;&nbsp;howManyInput = document.getElementById(&#39;howMany&#39;);
&nbsp;&nbsp;&nbsp;var addBtn = document.getElementById(&#39;addSections&#39;);
&nbsp;&nbsp;&nbsp;addBtn.onclick = function() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addGroup(howManyInput.value);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;
&nbsp;&nbsp;&nbsp;};
&nbsp;&nbsp;&nbsp;var removeBtn = document.getElementById(&#39;removeGroup&#39;);
&nbsp;&nbsp;&nbsp;removeBtn.onclick = function() 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeGroup();

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;
&nbsp;&nbsp;&nbsp;};
};
</pre>
</li>
<li>
<p>Declare the <span style="font-family: Courier New,Courier,monospace">h1No</span> variable containing the number of <span style="font-family: Courier New,Courier,monospace">h1</span> elements included in the <span style="font-family: Courier New,Courier,monospace">article</span> elements, and one added to next lines.</p>

<p>Declare the <span style="font-family: Courier New,Courier,monospace">newHTML</span> variable to add new content to the column layout. Each added element contains an <span style="font-family: Courier New,Courier,monospace">h1</span> element as a header, and <span style="font-family: Courier New,Courier,monospace">section</span> elements. Include an <span style="font-family: Courier New,Courier,monospace">img</span> element with a text description in each <span style="font-family: Courier New,Courier,monospace">section</span> element to display a random image. The <span style="font-family: Courier New,Courier,monospace">art</span> variable is initialized, and new HTML code (<span style="font-family: Courier New,Courier,monospace">newHTML</span>) is concatenated with the existing one (<span style="font-family: Courier New,Courier,monospace">innerHTML</span>):</p>
<pre class="prettyprint">
function addGroup(howMany) 
{
&nbsp;&nbsp;&nbsp;var h1No = document.querySelectorAll(&#39;article&gt;h1&#39;).length + 1;
&nbsp;&nbsp;&nbsp;var newHTML = &quot;&lt;h1&gt;Group &quot; + h1No + &quot;&lt;/h1&gt;&quot;;
&nbsp;&nbsp;&nbsp;var i;

&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; howMany; ++i) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newHTML += &quot;&lt;section&gt;&lt;img alt=&#39;&#39; src=&#39;&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newHTML += images[Math.floor(Math.random() * 4)];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newHTML += &quot;&#39;&gt;Lorem ipsum dolor sit amet diam sodales rutrum.&lt;/section&gt;&quot;;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;var art = document.getElementById(&quot;article&quot;);
&nbsp;&nbsp;&nbsp;art.innerHTML += newHTML;
}
</pre>
</li>
<li>
<p>When the user taps the <strong>Remove last Group</strong> button, the <span style="font-family: Courier New,Courier,monospace">removeGroup()</span> method is called to remove the group of images that was added last. Use the <span style="font-family: Courier New,Courier,monospace">all</span> variable to select all  <span style="font-family: Courier New,Courier,monospace">h1</span> elements in the content using the <span style="font-family: Courier New,Courier,monospace">querySelectorAll()</span> method. If the <span style="font-family: Courier New,Courier,monospace">last</span> value is less than 0, there is no element to remove. Use the <span style="font-family: Courier New,Courier,monospace">removeNextSibling()</span> method to recursively delete the next sibling element, and the  <span style="font-family: Courier New,Courier,monospace">removeChild()</span> method to remove the <span style="font-family: Courier New,Courier,monospace">h1</span> elements from its parent.</p>
<pre class="prettyprint">
function removeGroup() 
{
&nbsp;&nbsp;&nbsp;var all = document.querySelectorAll(&#39;article&gt;h1&#39;);
&nbsp;&nbsp;&nbsp;var last = all.length - 1;
&nbsp;&nbsp;&nbsp;if (last &lt; 0) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;removeNextSibling(all[last].nextSibling);
&nbsp;&nbsp;&nbsp;all[last].parentElement.removeChild(all[last]);
}
</pre>
</li>
</ol>
</li></ol>
<p>The following figures illustrate the created layout in different display sizes and orientations.</p>

<p class="figure">Figure: Dynamic layout on a 480 x 800 display</p> 
<p align="center"><img alt="Dynamic layout on a 480 x 800 display" src="../../images/dynamic_layout_480x800.png" /></p>

<p class="figure">Figure: Dynamic layout on a 720 x 1280 display</p> 
<p align="center"><img alt="Dynamic layout on a 720 x 1280 display" src="../../images/dynamic_layout_720x1280.png" /></p>
<h3>Source Code</h3>
 <p>For the complete source code related to this use case, see the following files:</p>
 <ul>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_follow_up" target="_blank">renamed_index.html</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_follow_up/css" target="_blank">style.css</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_follow_up/js" target="_blank">main.js</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_follow_up/images" target="_blank">pinwheel_green.png</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_follow_up/images" target="_blank">pinwheel_yellow.png</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_follow_up/images" target="_blank">Tizen_Pinwheel_Secondary_Confetti.png</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_follow_up/images" target="_blank">Tizen_WhiteFold_4.png</a></li>
	<li><a href="http://download.tizen.org/misc/examples/w3c_html5/dom_forms_and_styles/css_multi_column_layout_module/multi_column_follow_up/images" target="_blank">white_logo.png</a></li>
 </ul>
			
 
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>