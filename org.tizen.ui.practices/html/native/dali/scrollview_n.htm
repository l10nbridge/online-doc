<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>ScrollView: Scrollable Container for Items</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
		<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#create">Creating a ScrollView</a></li>
			<li><a href="#ruler">Using Ruler, RulerDomain, and Wrap</a></li>
		</ul>
		<ul class="toc">
		<p class="toc-title">Related Info</p>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1DefaultRuler.html">Dali::Toolkit::DefaultRuler API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1FixedRuler.html">Dali::Toolkit::FixedRuler API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1Ruler.html">Dali::Toolkit::Ruler API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1RulerDomain.html">Dali::Toolkit::RulerDomain API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1Scrollable.html">Dali::Toolkit::Scrollable API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1ScrollView.html">Dali::Toolkit::ScrollView API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1ScrollViewEffect.html">Dali::Toolkit::ScrollViewEffect API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Toolkit_1_1ScrollViewPagePathEffect.html">Dali::Toolkit::ScrollViewPagePathEffect API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1DefaultRuler.html">Dali::Toolkit::DefaultRuler API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1FixedRuler.html">Dali::Toolkit::FixedRuler API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1Ruler.html">Dali::Toolkit::Ruler API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1RulerDomain.html">Dali::Toolkit::RulerDomain API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1Scrollable.html">Dali::Toolkit::Scrollable API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1ScrollView.html">Dali::Toolkit::ScrollView API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1ScrollViewEffect.html">Dali::Toolkit::ScrollViewEffect API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Toolkit_1_1ScrollViewPagePathEffect.html">Dali::Toolkit::ScrollViewPagePathEffect API for Wearable Native</a></li>			
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">
<h1>ScrollView: Scrollable Container for Items</h1>

<p>The <span style="font-family: Courier New,Courier,monospace;">ScrollView</span> class provides a scrollable view, which contains actors and can be scrolled automatically or manually by panning.</p>


<p>The following figure shows example layouts using the <span style="font-family: Courier New,Courier,monospace;">ScrollView</span>.</p>

<p class="figure">Figure: ScrollView</p>  
	<p align="center"><img alt="ScrollView" src="../../images/scrollview.png"/></p>


<p>A scroll view emits a <span style="font-family: Courier New,Courier,monospace;">SnapStartedSignal()</span> signal when the <span style="font-family: Courier New,Courier,monospace;">ScrollView</span> has started to snap or flick. The signal informs the target of the scroll position, scale, and rotation.</p>

<h2 id="create" name="create">Creating a ScrollView</h2>

<p>The following example shows how to create a <span style="font-family: Courier New,Courier,monospace;">ScrollView</span>:</p>

<pre class="prettyprint">Dali::Toolkit::ScrollView scrollView;

// Create a ScrollView instance
myScrollView = ScrollView::New();

// Add it to the stage
Stage::GetCurrent().Add(scrollView);

// Set the size of stage; it covers the entire stage 
Stage stage = Dali::Stage::GetCurrent();
Size size = stage.GetSize();
scrollView.SetSize(size);

// Add actors to the ScrollView 
Image image = Image::New(DALI_IMAGE_DIR &quot;button-background.png&quot;);
ImageActor imageActor = ImageActor::New(image);
scrollView.Add(imageActor);
// The ScrollView contents are now draggable

// To enforce horizontal-only scrolling, the Y axis ruler can be disabled 
RulerPtr rulerY = new DefaultRuler();
rulerY-&gt;Disable();
scrollView.SetRulerY(rulerY);

// To enable snapping, a FixedRuler can be applied to the X axis, with snap points spaced to the width of the stage. 
Size size = stage.GetSize();
RulerPtr rulerX = new FixedRuler(size.width);
scrollView.SetRulerX(rulerX);

// A domain can be applied to rulers to prevent scrolling beyond this boundary
// In this case, to 4 times the width of the stage, allowing for 4 pages to be scrolled
Size size = stage.GetSize();
RulerPtr rulerX = new FixedRuler(size.width);
rulerX-&gt;SetDomain(RulerDomain(0.0f, size.width*4.0f));
scrollView.SetRulerX(rulerX);</pre>

<h2 id="ruler" name="ruler">Using Ruler, RulerDomain, and Wrap</h2>

<p>The <span style="font-family: Courier New,Courier,monospace;">Ruler</span> abstract class defines the scroll axes. The <span style="font-family: Courier New,Courier,monospace;">RulerDomain</span> class specifies the minimum and maximum values of a ruler. The <span style="font-family: Courier New,Courier,monospace;">ScrollView</span> class provides a wrap mode for <span style="font-family: Courier New,Courier,monospace;">ScrollView</span> contents. When enabled, the <span style="font-family: Courier New,Courier,monospace;">ScrollView</span> contents are wrapped over the x/y domain. The <span style="font-family: Courier New,Courier,monospace;">ScrollView</span> behavior depends on a combination of the Ruler, RulerDomain, and Wrap modes. The following table shows ScrollView behavior according to the combination.</p>

<table>
   <caption>
     Table: Scrollview behavior in the Ruler, RulerDomain, and Wrap mode</caption>
   <tbody>
    <tr>
     <th>Ruler</th>
	 <th>Domain</th>
     <th>Wrap</th>
	 <th>Behavior</th>
    </tr>
    <tr>
		<td>Disabled</td>
		<td>Disabled</td>
		<td>Wrap</td>
		<td>No movement in axis</td>
	</tr>
	<tr>
		<td>Disabled</td>
		<td>Enabled</td>
		<td>No wrap</td>
		<td>No movement in axis</td>
	</tr>
	<tr>
		<td>Disabled</td>
		<td>Enabled</td>
		<td>Wrap</td>
		<td>No movement in axis</td>
	</tr>
	<tr>
		<td>Enabled</td>
		<td>Disabled</td>
		<td>No wrap</td>
		<td>Free movement in axis</td>
	</tr>
	<tr>
		<td>Enabled</td>
		<td>Disabled</td>
		<td>Wrap</td>
		<td>Free movement in axis, wrapped according to domain minimum and maximum</td>
	</tr>
	<tr>
		<td>Enabled</td>
		<td>Enabled</td>
		<td>No wrap</td>
		<td>Movement limited to domain minimum and maximum</td>
	</tr>
	<tr>
		<td>Enabled</td>
		<td>Enabled</td>
		<td>Wrap</td>
		<td>Movement limited to domain minimum and maximum</td>
	</tr>
   </tbody>
  </table>
  
 <table class="note">
   <tbody>
    <tr>
     <th class="note">Note</th>
    </tr>
    <tr>
     <td class="note">Actors within a <span style="font-family: Courier New,Courier,monospace;">ScrollView</span> are controlled by constraints. If you apply constraints to these actors externally, undefined behavior can occur. Since applying additional constraints can conflict with the <span style="font-family: Courier New,Courier,monospace;">ScrollView</span> constraints, place the actors within container actors. The container actors are affected by the constraints.</td>
    </tr>
   </tbody>
 </table>


<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

