<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Properties: Accessing Properties of DALi Objects</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
		<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#access">Accessing Property Values</a></li>
			<li><a href="#usage">Using Properties</a></li>
			<li><a href="#attributes">Managing Property Attributes</a></li> 
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Handle.html">Dali::Handle API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Handle.html">Dali::Property API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Handle.html">Dali::Handle API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Property.html">Dali::Property API for Wearable Native</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Properties: Accessing Properties of DALi Objects</h1>

<p>A property is a value used by an object. It can be modified or read using the <span style="font-family: Courier New,Courier,monospace;">Dali::Handle::GetProperty()</span> or <span style="font-family: Courier New,Courier,monospace;">Dali::Handle::SetProperty()</span> functions.</p>

<p>The difference between properties and ordinary C++ member variables is that a property can be dynamically added to or removed from an existing object at runtime, enabling more flexible, script-like programming with DALi.</p>

<p>The <span style="font-family: Courier New,Courier,monospace;">Dali::Handle</span> class (in <a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Handle.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Handle.html">wearable</a> applications) provides functions to manage properties. Because of this, the DALi classes that inherit from the <span style="font-family: Courier New,Courier,monospace;">Dali::Handle</span> class (most of classes that you use) have a number of predefined properties and can have any number of user-defined custom properties.
</p>

<h2 id="access" name="access">Accessing Property Values</h2>

	<p>Property values of an object can usually be accessed in 2 ways: by its class member functions or by property getters and setters (<span style="font-family: Courier New,Courier,monospace;">GetProperty()</span> and <span style="font-family: Courier New,Courier,monospace;">SetProperty()</span> function of the <span style="font-family: Courier New,Courier,monospace;">Dali::Handle</span> class in <a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Handle.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Handle.html">wearable</a> applications).</p>
	<p>For example, the following table lists the predefined properties of the <span style="font-family: Courier New,Courier,monospace;">Dali::Actor</span> class.</p>

	<table>
		<caption>
			Table: Dali::Actor properties
		</caption>
		<tbody>
		<tr>
			<th>Property index (enumeration)</th>
			<th>Member functions</th>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::POSITION</span></td>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::GetCurrentPosition()</span> / <span style="font-family: Courier New,Courier,monospace;">SetPosition()</span></td>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::ORIENTATION</span></td>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::GetCurrentOrientation()</span> / <span style="font-family: Courier New,Courier,monospace;">SetOrientation()</span></td>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::SIZE</span></td>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::GetCurrentSize()</span> / <span style="font-family: Courier New,Courier,monospace;">SetSize()</span></td>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::COLOR</span></td>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::GetCurrentColor()</span> / <span style="font-family: Courier New,Courier,monospace;">SetColor()</span></td>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::NAME</span></td>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::GetName()</span> / <span style="font-family: Courier New,Courier,monospace;">SetName()</span></td>
		</tr>
		</tbody>
	</table>

	<p>You can access the properties in both ways:</p>

<pre class="prettyprint">
Actor actor = Actor::New();
actor.SetName( &quot;test actor&quot; );
std::cout &lt;&lt; actor.GetName() &lt;&lt; std::endl; // &quot;test actor&quot;
</pre>

<pre class="prettyprint">
Actor actor = Actor::New();
actor.SetProperty( Actor::Property::NAME, &quot;test actor&quot; );
std::cout &lt;&lt; actor.GetProperty( Actor::Property::NAME ) &lt;&lt; std::endl; // &quot;test actor&quot;
std::cout &lt;&lt; actor.GetProperty&lt;std::string&gt;( Actor::Property::NAME ) &lt;&lt; std::endl; // &quot;test actor&quot;
std::cout &lt;&lt; actor.GetProperty( Actor::Property::NAME ).Get&lt;std::string&gt;() &lt;&lt; std::endl; // &quot;test actor&quot;
</pre>


<h2 id="usage" name="usage">Using Properties</h2>

<h3>Registering User-defined Custom Properties to Objects</h3>

<p>Properties can be registered and unregistered at runtime using the functions of the <span style="font-family: Courier New,Courier,monospace;">Dali::Handle</span> class (in <a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Handle.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Handle.html">wearable</a> applications). This enables script-like programming in the DALi application, such as adding custom member data to an instance of a DALi class without subclassing the class or maintaining another pool of custom data.</p>
<p>For example, you can set your own custom data to <span style="font-family: Courier New,Courier,monospace;">PushButton</span> objects and use them later when the buttons are clicked:</p>
<pre class="prettyprint">
void Create( Application&amp; application )
{
&nbsp;&nbsp;for( int i = 0; i &lt; 5; ++i )
&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;Toolkit::PushButton button = Toolkit::PushButton::New();
&nbsp;&nbsp;&nbsp;&nbsp;button.SetSize( 100, 100 );
&nbsp;&nbsp;&nbsp;&nbsp;button.SetPosition( 100*i+50, 50 );
&nbsp;&nbsp;&nbsp;&nbsp;button.ClickedSignal().Connect( this, OnButtonClicked );

&nbsp;&nbsp;&nbsp;&nbsp;// Register a custom property having button index
&nbsp;&nbsp;&nbsp;&nbsp;// Store the property index so you can look it up later
&nbsp;&nbsp;&nbsp;&nbsp;// Note: This is much faster than looking the property up by property name and must be used if possible
&nbsp;&nbsp;&nbsp;&nbsp;// As all control types are the same (PushButtons), the indices to the unique custom property are all same
&nbsp;&nbsp;&nbsp;&nbsp;Property::Value data( i );
&nbsp;&nbsp;&nbsp;&nbsp;mCustomDataIndex = button.RegisterProperty( &quot;custom-data&quot;, data );

&nbsp;&nbsp;&nbsp;&nbsp;Stage::GetCurrent().Add( button );
&nbsp;&nbsp;}
}

bool OnButtonClicked( Toolkit::Button button )
{
&nbsp;&nbsp;// Look up the custom property by the stored property index
&nbsp;&nbsp;// Note: If the property belongs to a control in another library, 
&nbsp;&nbsp;// or you do not know the index, you can look the index up first with:
&nbsp;&nbsp;// Property::Index index = button.GetPropertyIndex( &quot;custom-data&quot; );
&nbsp;&nbsp;cout &lt;&lt; button.GetProperty( mCustomDataIndex ) &lt;&lt; endl;

&nbsp;&nbsp;return true;
}
</pre>


<h3>Animating Objects</h3>

<p>The <span style="font-family: Courier New,Courier,monospace;">Dali::Animation</span> class (in <a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Animation.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Animation.html">wearable</a> applications) is used to <a href="animation_n.htm">animate the properties</a> of any number of objects.</p>

<p>For example, the following code animates the value of the <span style="font-family: Courier New,Courier,monospace;">POSITION</span> property of a radio button to (100.0, 200.0, 0.0) for 2 seconds:</p>

<pre class="prettyprint">
RadioButton actor = RadioButton::New();
Stage::GetCurrent().Add( actor );
Animation animation = Animation::New( 2.0f ); // Duration 2 seconds
animation.AnimateTo( Property( actor, Actor::Property::POSITION ), Vector3( 100.0f, 200.0f, 0.0f ) );
animation.Play();
</pre>

<h3>Imposing Constraints on Objects</h3>

<p>The <span style="font-family: Courier New,Courier,monospace;">Dali::Constraint</span> class (in <a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Constraint.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Constraint.html">wearable</a> applications) is used to <a href="constraints_n.htm">modify the property of an object based on other properties of other objects</a>.</p>

<p>For example, the following code makes the <span style="font-family: Courier New,Courier,monospace;">SIZE</span> property value of an actor the same as the <span style="font-family: Courier New,Courier,monospace;">SIZE</span> property value of its parent actor:</p>

<pre class="prettyprint">
Constraint constraint = Constraint::New&lt;Vector3&gt;( actor, Actor::Property::SIZE, EqualToConstraint() );
constraint.AddSource( ParentSource( Actor::Property::SIZE ) );
constraint.Apply();
</pre>


<h2 id="attributes" name="attributes">Managing Property Attributes</h2>

<p>A property has the following attributes:</p>

<ul> 
	<li>Index: Enumeration number indicating the property. The property index is usually used to access properties.</li> 

	<li>Type: Type of the property. Retrieved with the <span style="font-family: Courier New,Courier,monospace;">Dali::Handle::GetPropertyType()</span> function.</li> 

	<li>Name: Name of the property. Retrieved with the <span style="font-family: Courier New,Courier,monospace;">Dali::Handle::GetPropertyName()</span> function.</li> 

	<li>Writable: If <span style="font-family: Courier New,Courier,monospace;">true</span>, the property value can be written. Retrieved with the <span style="font-family: Courier New,Courier,monospace;">Dali::Handle::IsPropertyWritable()</span> function.</li> 

	<li>Animatable: If <span style="font-family: Courier New,Courier,monospace;">true</span>, the property can be animated using the <span style="font-family: Courier New,Courier,monospace;">Dali::Animation</span> class. Retrieved with the <span style="font-family: Courier New,Courier,monospace;">Dali::Handle::IsPropertyAnimatable()</span> function.</li> 

	<li>Constraint-Input: If <span style="font-family: Courier New,Courier,monospace;">true</span>, the property can be used as constraint input. Retrieved with the <span style="font-family: Courier New,Courier,monospace;">Dali::Handle::IsPropertyAConstraintInput()</span> function.</li> 
</ul> 

<p>The following table lists the type and name attributes of the <span style="font-family: Courier New,Courier,monospace;">Dali::Actor</span> properties.</p>

	<table>
		<caption>
			Table: Dali::Actor property attributes
		</caption>
		<tbody>
		<tr>
			<th>Property index (enumeration)</th>
			<th>Property type</th>
			<th>Property name</th>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::POSITION</span></td>
			<td>Vector3</td>
			<td>&quot;position&quot;</td>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::ORIENTATION</span></td>
			<td>Quaternion</td>
			<td>&quot;orientation&quot;</td>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::SIZE</span></td>
			<td>Vector3</td>
			<td>&quot;size&quot;</td>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::COLOR</span></td>
			<td>Vector4</td>
			<td>&quot;color&quot;</td>
		</tr>
		<tr>
			<td><span style="font-family: Courier New,Courier,monospace;">Dali::Actor::NAME</span></td>
			<td>std::string</td>
			<td>&quot;name&quot;</td>
		</tr>
		</tbody>
	</table>

<p>For more information about properties, see the API reference of each class. For example, for the <span style="font-family: Courier New,Courier,monospace;">Dali::Actor</span> class, see the <span style="font-family: Courier New,Courier,monospace;">Dali::Actor::Property</span> struct (in <a href="../../../../org.tizen.native.mobile.apireference/structDali_1_1Actor_1_1Property.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/structDali_1_1Actor_1_1Property.html">wearable</a> applications). For information on the supported property types, see <span style="font-family: Courier New,Courier,monospace;">Dali::Property::Type</span> (in <a href="../../../../org.tizen.native.mobile.apireference/classDali_1_1Property.html#acb569f557811bc94d2e98b5c880d759c">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/classDali_1_1Property.html#acb569f557811bc94d2e98b5c880d759c">wearable</a> applications) and <span style="font-family: Courier New,Courier,monospace;">Dali::PropertyTypes</span> (in <a href="../../../../org.tizen.native.mobile.apireference/namespaceDali_1_1PropertyTypes.html">mobile</a> and <a href="../../../../org.tizen.native.wearable.apireference/namespaceDali_1_1PropertyTypes.html">wearable</a> applications).</p>

    
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

