<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Managing Component Focus</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
	<p class="toc-title">Content</p>
		<ul class="toc">
				<li><a href="#Movement">Moving Focus</a></li>
				<li><a href="#Customization">Customizing Focus</a></li>
				<li><a href="#On_Component">Focus on UI Component</a></li>
		</ul>	
	<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Elementary.html">Elementary API for Wearable Native</a></li>	
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

  <h1>Managing Component Focus</h1> 
  

<p>Focus is a graphical user interface concept. A component, such as a UI component, has a focus when it is selected to receive input from the user. The input can be an event, such as mouse button click or key press. A UI component application has, at all times, only 1 focused object to determine where the input event goes to within the application window. Also, focused objects can be decorated differently to signal to the user where the input is at any given moment.</p>

<p>Focusing can be immediate (selected by the touchscreen or mouse) or relative (selected by a key press). There are mainly 2 ways to set focus on a graphical elements:</p>

<ul>
<li>Direct selection 
<p>This is done by clicking on the element.</p>
<p>Direct selection does not really need any kind of special treatment as the user explicitly selects the UI component to interact with.</p></li>
<li>Relative selection
<p>This is done by moving the selection from a UI component to another, such as going to the previous or next one; this is done with a keyboard.</p>
<p>Relative selection&#39; default order is the one in which the UI components have been added to the canvas. That may not be appropriate, if they are added programmatically in a different order than they appear on-screen.</p></li>
</ul>

  
<h2 id="Movement" name="Movement">Moving Focus</h2>

<p>The order the focus goes from a UI component to another is called the focus chain. The default focus chain is set to the order the UI components have been added to the canvas.</p>

<p>An object can be focused if all of the following conditions apply:</p>

<ul>
<li>Object is visible</li>
<li>Object is enabled</li>
<li>Object accepts focus</li>
<li>Object&#39;s subtree (if any) is focusable</li>
<li>All of object&#39;s parents have their subtrees focusable</li>
</ul>

<p>If any of these conditions do not apply, the object is unfocusable.</p>

<h3>Handling Key Input</h3>

<p>Handling of the keys is done automatically by Elementary. According to which key is pressed, Elementary switches the focus in the selected direction. For example, using the <span style="font-family: Courier New,Courier,monospace;">Tab</span> key the focus goes to the next object in the natural order, whereas using the direction keys the focus goes to the next object in the requested direction.</p>

<h3>Managing Focus</h3>

<p>To manage focus:</p>
<ul>
<li>Hide, delete, or disable focus
<p>When a UI component is hidden, deleted, or disabled, it becomes unfocusable.</p>
<p>When a focused object is unfocusable, the focus is moved to another object.</p>
</li>
<li>Focus to the next object
<p>When the user wants to switch the focus to the next object, Elementary searches the first focusable object.</p>
<p>If there is a disabled or read-only object in the focus chain, the focus goes to the following object in the requested direction.</p>
</li>
</ul>

<h2 id="Customization" name="Customization">Customizing Focus</h2>

<p>There are several reasons for customizing the focus chain of an application, for example:</p>

<ul>
<li>If you have created a form with labels and text entries next to them, the focus moves to the entry field when the user clicks on the associated label.</li>
<li>If you have created an interface with several columns (table), set the focus chain as you wish, for example, going horizontally instead of going vertically, regardless whatever the order the UI components are added.</li>
</ul>

<p>To customize the focus chain:</p>

<ul>
<li>Customizing the object&#39;s focus exit chain
<p>Set the object to focus after another object in a specific direction using the <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_next_object_set()</span> function. The third parameter is the direction, which can be one of the following:</p>

<ul>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_NEXT</span>: Next UI component in natural order</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_PREVIOUS</span>: Previous UI component in natural order</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_UP</span>: UI component to focus when going up</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_DOWN</span>: UI component to focus when going down</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_RIGHT</span>: UI component to focus when going right</li>
<li><span style="font-family: Courier New,Courier,monospace;">ELM_FOCUS_LEFT</span>: UI component to focus when going left</li>
</ul>

<p>Get the next object in a specific direction using the <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_next_object_get()</span> function.</p>
</li>
<li>Customizing the whole application&#39;s focus chain
<p>To customize the application&#39;s focus chain:</p>

<pre class="prettyprint">
Evas_Object *main, obj1, obj2, obj3, obj4, obj5;

Eina_List *focus_chain = NULL;
focus_chain = eina_list_append(focus_chain, obj3);
focus_chain = eina_list_append(focus_chain, obj2);
// The chain is obj3 followed by obj2. Set the chain
elm_object_focus_custom_chain_set(main, focus_chain);
// Prepend obj5 at the beginning of the chain
elm_object_focus_chain_prepend(main, NULL, obj5);
// Append obj1 after obj3
elm_object_focus_chain_append(main, obj3, obj1);
// Prepend obj4 before obj1
elm_object_focus_chain_prepend(main, obj1, obj4);
</pre>

<p>The focus chain is <span style="font-family: Courier New,Courier,monospace;">obj5, obj3, obj4, obj1, obj2</span>.</p>

<p>This applies to any container. It is possible to set the focus chain of a box, for example.</p>
</li>
<li>Colliding focus chains

<p>If an object is part of a focus chain and has the next focused object defined, the next object takes precedence over the focus chain.</p>

<p>Following on the previous example, if <span style="font-family: Courier New,Courier,monospace;">obj4</span> has <span style="font-family: Courier New,Courier,monospace;">obj5</span> defined as its next object, the actual focus chain is <span style="font-family: Courier New,Courier,monospace;">obj5, obj3, obj4</span>, and loop back to <span style="font-family: Courier New,Courier,monospace;">obj5</span>.</p>
</li>
</ul>

<h2 id="On_Component" name="On_Component">Focus on UI Component</h2>

<p>If the Evas object has several sub-objects, set its focus chain using the same functions as for the application. Elementary first follows the main focus chain, and then the focus chain of each UI component if applicable.</p>

<p>Use the <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_get()</span> function to set whether a specific object has the focus. Set the focus to an object using the <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_set()</span> function, where the second parameter is a Boolean value. If it is set to <span style="font-family: Courier New,Courier,monospace;">EINA_TRUE</span>, the focus is set to that given object. If it is set to <span style="font-family: Courier New,Courier,monospace;">EINA_FALSE</span>, the focus is unset and passed back to the previous element in the focus chain. Set the focus only after the object is shown, that is, after the <span style="font-family: Courier New,Courier,monospace;">evas_object_show()</span> function has been called. Call the function back when the object receives or loses focus by registering the smart event &quot;focused&quot; or &quot;unfocused&quot;</p>

<p>Use the <span style="font-family: Courier New,Courier,monospace;">elm_object_tree_focus_allow_set()</span> function, where the second parameter is a Boolean value, to tell Elementary whether an object and its children are focusable. Get the current value using the <span style="font-family: Courier New,Courier,monospace;">elm_object_tree_focus_allow_get()</span> function.</p>

<p>The similar functions for a specific object are the <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_allow_set()</span> and <span style="font-family: Courier New,Courier,monospace;">elm_object_focus_allow_get()</span> functions. </p>
  
<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>