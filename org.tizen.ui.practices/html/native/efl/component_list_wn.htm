<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>List</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#add">Adding a List Component</a></li>
			<li><a href="#add_item">Adding List Items</a></li>			
			<li><a href="#change">Modifying List Items</a></li>
			<li><a href="#use">Accessing and Selecting List Items</a></li>
			<li><a href="#callback">Using the List Callbacks</a></li>
			
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Edje__Group.html">Edje API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__MODULE.html">Efl Extension API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Elementary.html">Elementary API for Wearable Native</a></li>	
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>List</h1>

<p>This feature is supported in wearable applications only.</p>

  
 <p>The list is a very simple UI component used to manage a limited number of items. For lists with a lot of items, use the <a href="component_genlist_wn.htm">Genlist</a>.</p>

 <p>For more information, see the <a href="../../../../org.tizen.native.wearable.apireference/group__List.html">List</a> API.</p>
 
 <p class="figure">Figure: List component</p> 
<p align="center"> <img alt="List component" src="../../images/list_wn.png" /> </p> 
  
  <p class="figure">Figure: List hierarchy</p> 
<p align="center"> <img alt="List hierarchy" src="../../images/list_tree.png" /> </p> 
 
<h2 id="add">Adding a List Component</h2>

<p>To add a list component, use the <span style="font-family: Courier New,Courier,monospace">elm_list_add()</span> function:</p>
<pre class="prettyprint">
Evas_Object *list, *parent;

// Create a list 
list = elm_list_add(parent);
</pre>

<h2 id="add_item">Adding List Items</h2>

 <p>A list item can contain a piece of text and 2 contents (<span style="font-family: Courier New,Courier,monospace">start</span> and <span style="font-family: Courier New,Courier,monospace">end</span>). To set the individual elements of an item, use the <span style="font-family: Courier New,Courier,monospace">elm_object_item_XXX()</span> functions.</p>

<p>To add an item to the list, use the <span style="font-family: Courier New,Courier,monospace">elm_list_item_append()</span> or <span style="font-family: Courier New,Courier,monospace">elm_list_item_prepend()</span> function. In the following example, 10 items with text and 1 icon are added. The last 2 parameters of the <span style="font-family: Courier New,Courier,monospace">elm_list_item_append()</span> function are the callback function when the created item is selected and the data passed to the callback function.</p>

<pre class="prettyprint">
Evas_Object *list;
int i;

// Called when the list item is selected 
static void 
_selected_item_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;Elm_Object_Item *list_it = elm_list_selected_item_get(obj);
&nbsp;&nbsp;&nbsp;Eina_Bool selected = elm_list_item_selected_get(list_it);
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;item is %s\n&quot;, selected? &quot;selected&quot;: &quot;unselected&quot;);
}

for (i = 0; i &lt; 10; i++)
{
&nbsp;&nbsp;&nbsp;Evas_Object *ic;
&nbsp;&nbsp;&nbsp;char tmp[8];
&nbsp;&nbsp;&nbsp;snprintf(tmp, sizeof(tmp), &quot;Item %02d&quot;, i);
&nbsp;&nbsp;&nbsp;// Create an icon 
&nbsp;&nbsp;&nbsp;ic = elm_icon_add(win);
&nbsp;&nbsp;&nbsp;// Set the file to the icon file 
&nbsp;&nbsp;&nbsp;elm_image_file_set(ic, &quot;path/to/file&quot;, NULL);
&nbsp;&nbsp;&nbsp;// Add the item to the list 
&nbsp;&nbsp;&nbsp;elm_list_item_append(list, tmp, ic, NULL, _selected_item_cb, NULL);
}
</pre>

<h2 id="change">Modifying List Items</h2>

<p>To modify the list item elements, use the <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> functions:</p>

<ul>
<li>To modify the item label, use the <span style="font-family: Courier New,Courier,monospace">elm_object_item_text_set()</span> function.</li>
<li>To modify the 2 contents, use the <span style="font-family: Courier New,Courier,monospace">elm_object_item_part_content_set()</span> function, referencing the first object as the <span style="font-family: Courier New,Courier,monospace">start</span> object in the theme and the second one as the <span style="font-family: Courier New,Courier,monospace">end</span> object.
<p>Each content is an <span style="font-family: Courier New,Courier,monospace">evas_object</span> instance, and they are defined as the third and the fourth parameters when you append or prepend the item in the list with the <span style="font-family: Courier New,Courier,monospace">elm_list_item_append()</span> or <span style="font-family: Courier New,Courier,monospace">elm_list_item_prepend()</span> function.</p></li></ul>

<pre class="prettyprint">
Evas_Object *list;
Eina_List *l;
Elm_Object_Item *it;

// Retrieve the current selected item 
it = elm_list_selected_item_get(list);
if (!it)
&nbsp;&nbsp;&nbsp;return;

ic = elm_icon_add(win);
// Set the file to the icon file 
elm_image_file_set(ic, &quot;path/to/file&quot;, NULL);
// Change the first icon 
elm_object_item_part_content_set(it, &quot;start&quot;, ic);
// Change the second icon 
elm_object_item_part_content_set(it, &quot;end&quot;, ic);
// Change the label 
elm_object_item_text_set(it, &quot;I&#39;ve been selected !&quot;);
</pre>

<h2 id="use">Accessing and Selecting List Items</h2>

<p>To access and select list items:</p>
<ul>
<li>Configuring the scroller:
<p>The list component implements the scrollable interface, which means that the scroller component functions can be used to ease the management of longer lists. To change the bounce property of the scroller or the scrolling policy:</p>
<pre class="prettyprint">
Evas_Object *list;

// Change the scroller policy to fix the scroll only vertically
elm_scroller_policy_set(list, ELM_SCROLLER_POLICY_OFF, ELM_SCROLLER_POLICY_AUTO);
// Enable bounce effect when the list reaches the vertical limits 
elm_scroller_bounce_set(list, EINA_FALSE, EINA_TRUE);
</pre>
</li>
<li>Enabling the multi-selection mode:
<p>To enable multiple items to be selected at the same time, enable the multi-selection mode with the <span style="font-family: Courier New,Courier,monospace">elm_list_multi_select_set()</span> function. Each time an item is clicked, its state changes to <span style="font-family: Courier New,Courier,monospace">selected</span>.</p>

<pre class="prettyprint">
Evas_Object *list;

// Enable multi-selection mode
elm_list_multi_select_set(list, EINA_TRUE);
</pre>
</li>

<li>Selecting items:
<p>To find out whether an item is selected, use the <span style="font-family: Courier New,Courier,monospace">elm_list_item_selected_get()</span> function. This function returns <span style="font-family: Courier New,Courier,monospace">EINA_TRUE</span> if the item is selected, otherwise <span style="font-family: Courier New,Courier,monospace">EINA_FALSE</span>.</p>
<p>To set an item as <span style="font-family: Courier New,Courier,monospace">selected</span>, use the <span style="font-family: Courier New,Courier,monospace">elm_list_item_selected_set()</span> function.</p>
</li>

<li>Retrieving selected items:
<p>To retrieve the list of the currently selected items, use the <span style="font-family: Courier New,Courier,monospace">elm_list_selected_items_get()</span> function.</p>
<p>If the multi-selection mode is disabled, only 1 item can be selected, and you can retrieve it with the <span style="font-family: Courier New,Courier,monospace">elm_list_selected_item_get()</span> function.</p>

<p>To retrieve all selected items and set their state to <span style="font-family: Courier New,Courier,monospace">unselected</span>:</p>

<pre class="prettyprint">
Evas_Object *list; Eina_List *l;
Eina_List *selected_items;
// List of Elm_Object_Item 
Elm_Object_Item *it;

selected_items = elm_list_selected_items_get(list);
EINA_LIST_FOREACH(selected_items, l, it)
&nbsp;&nbsp;&nbsp;elm_list_item_selected_set(it, EINA_FALSE);
</pre></li>

<li>Moving within the list:
<p>The list component provides various functions for moving within the list and sliding the list to a specific item:</p>
<ul>
<li>The <span style="font-family: Courier New,Courier,monospace">elm_list_item_show()</span> function shows the item passed as a parameter.</li>
<li>The <span style="font-family: Courier New,Courier,monospace">elm_list_item_bring_in()</span> function shows the item passed as a parameter, after animating the slide.</li>
<li>The <span style="font-family: Courier New,Courier,monospace">elm_list_item_prev()</span> function goes to the item immediately preceding a specific item.</li>
<li>The <span style="font-family: Courier New,Courier,monospace">elm_list_item_next()</span> function goes to the item immediately following a specific item.</li></ul>

<p>To retrieve the currently selected item and unselect it, and then select the next item and bring it to the screen:</p>

<pre class="prettyprint">
Evas_Object *list;
Elm_Object_Item *current, *next;
current = elm_list_selected_item_get(list);
elm_list_item_selected_set(current, EINA_FALSE);
next = elm_list_item_next(current);
elm_list_item_selected_set(next, EINA_TRUE);
elm_list_item_bring_in(next);
</pre></li></ul>

<h2 id="callback">Using the List Callbacks</h2>

 <p>To receive notifications about the list events, listen to the following signals:</p> 
  <ul> 
   <li><span style="font-family: Courier New,Courier,monospace">activated</span>: The item is double-clicked or pressed (enter | return | spacebar). 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at the activated item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">clicked,double</span>: The item is double-clicked. 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at the double-clicked item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">selected</span>: The item is selected. 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at the selected item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">unselected</span>: The item is unselected. 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at the unselected item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">longpressed</span>: The item is long-pressed. 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at the long-pressed item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,top</span>: The list is scrolled to the top edge.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,bottom</span>: The list is scrolled to the bottom edge.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,left</span>: The list is scrolled to the left edge.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,right</span>: The list is scrolled to the right edge.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">highlighted</span>: An item on the list is highlighted. 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at the highlighted item.</p></li> 
   <li><span style="font-family: Courier New,Courier,monospace">unhighlighted</span>: An item in the list is unhighlighted. 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at the unhighlighted item.</p></li>  
  </ul>

<p>To register and define a callback for the <span style="font-family: Courier New,Courier,monospace">clicked,double</span> signal:</p>

<pre class="prettyprint">
{
&nbsp;&nbsp;&nbsp;Evas_Object *list;

&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(list, &quot;clicked,double&quot;, double_clicked_cb, data);
}

// Callback for the &quot;clicked,double&quot; signal
// Called when the button is double-clicked by the user
void 
double_clicked_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;elm_Object_Item *it = event_info;
&nbsp;&nbsp;&nbsp;elm_list_selected_item_set(it, EINA_FALSE);
}
</pre>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

