<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Creating Evas Map Effects</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">
	
<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
		<li><a href="#create">Creating the Basic Application</a></li>
		<li><a href="#data">Creating Map Data</a></li>
		<li><a href="#apply">Applying the Map to the Evas Object</a></li>
		<li><a href="#clear">Clearing Map Data and Enabling Map Features</a></li>
		</ul>	
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Evas.html">Evas API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Evas.html">Evas API for Mobile Wearable</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Creating Evas Map Effects</h1>

  
<p>This tutorial demonstrates how you can use Evas map functions to create an application in which you can change the map point coordinates of Evas objects. You can modify the map point U and V texture source point using Evas map mapping APIs. &quot;U&quot; and &quot;V&quot; denote the axes of the 2D texture.</p>

<p class="figure">Figure: Evas map mapping application</p> 
<p align="center"><img alt="Evas map mapping application" src="../../images/evas_map_effect.png" /></p>
 
<h2 id="create" name="create">Creating the Basic Application</h2>
<p>To create a basic application:</p>
<ol>
<li>
<p>To use the required APIs, include the following libraries:</p>

<pre class="prettyprint">#include &lt;app.h&gt;
#include &lt;Elementary.h&gt;
#include &lt;system_settings.h&gt;
#include &lt;efl_extension.h&gt;</pre>
</li>

<li>
<p>Create an Evas object for an Elementary window and a button for mapping the map information:</p>

<pre class="prettyprint">typedef struct appdata 
{
&nbsp;&nbsp;&nbsp;Evas_Object *win;
&nbsp;&nbsp;&nbsp;Evas_Object *button;
&nbsp;&nbsp;&nbsp;Evas_Object *default_btn;
} 
appdata_s;</pre>
</li>
<li>
<p>To create an Elementary window, use the <span style="font-family: Courier New,Courier,monospace">elm_win_util_standard_add()</span> function and give the name and title of the application. To set a callback on hardware Back button, the use <span style="font-family: Courier New,Courier,monospace">eext_object_event_callback_add()</span> function. To display the Evas object, use the <span style="font-family: Courier New,Courier,monospace">evas_object_show()</span> function.</p>

<pre class="prettyprint">static void
create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp; Evas_Object *evas_text = NULL;
&nbsp;&nbsp;&nbsp; Evas *evas = NULL;

&nbsp;&nbsp;&nbsp;// Window
&nbsp;&nbsp;&nbsp;ad-&gt;win = elm_win_util_standard_add(&quot;Extra object function&quot;, &quot;Extra object function&quot;);
&nbsp;&nbsp;&nbsp;elm_win_autodel_set(ad-&gt;win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;// Window callbacks
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(ad-&gt;win, &quot;delete,request&quot;, win_delete_request_cb, NULL);
&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;win, EEXT_CALLBACK_BACK, win_back_cb, ad);

&nbsp;&nbsp;&nbsp;evas = evas_object_evas_get(ad-&gt;win);

&nbsp;&nbsp;&nbsp;evas_text = evas_object_text_add(evas);
&nbsp;&nbsp;&nbsp;evas_object_text_text_set(evas_text, &quot;Evas Map Mapping&quot;);
&nbsp;&nbsp;&nbsp;evas_object_text_font_set(evas_text, &quot;Sans&quot;, 18);
&nbsp;&nbsp;&nbsp;evas_object_color_set(evas_text, 50, 100, 200, 255);
&nbsp;&nbsp;&nbsp;evas_object_move(evas_text, 15, 40);
&nbsp;&nbsp;&nbsp;evas_object_show(evas_text);

&nbsp;&nbsp;&nbsp;// Evas map source code

&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;win);
}</pre>
</li>


<li>
<p>Create the button for mapping. Use the move and resize functions to configure the button&#39;s custom geometry:</p>

<pre class="prettyprint">// Create a button for mapping
ad-&gt;button = elm_button_add(ad-&gt;win);
elm_object_text_set(ad-&gt;button, &quot;Evas Map Mapping &quot;);
evas_object_move(ad-&gt;button, 15, 50);
evas_object_resize(ad-&gt;button, 350, 100);
evas_object_show(ad-&gt;button);

// Create a default button
ad-&gt;default_btn = elm_button_add(ad-&gt;win);
elm_object_text_set(ad-&gt;default_btn, &quot;Default Button &quot;);
evas_object_move(ad-&gt;default_btn, 15, 600);
evas_object_resize(ad-&gt;default_btn, 450, 100);
evas_object_show(ad-&gt;default_btn);</pre>
</li>
</ol>

<h2 id="data" name="data">Creating Map Data</h2>

<p>By using the <span style="font-family: Courier New,Courier,monospace">evas_map_new()</span> and <span style="font-family: Courier New,Courier,monospace">evas_map_*()</span> functions, you can create map data to be attached to the button:</p>

<ol>
<li>
<p>Get the <span style="font-family: Courier New,Courier,monospace">Evas_Map</span> object to create map data using the <span style="font-family: Courier New,Courier,monospace">evas_map_new()</span> function:</p>

<pre class="prettyprint">
Evas_Map *map;
map = evas_map_new(4);
</pre>

<p>The map of transformation points is used later with an Evas object.</p>
</li>

<li>
<p>Set the coordinates for each point using the <span style="font-family: Courier New,Courier,monospace">evas_map_point_coord_set()</span> function. You can apply several effects to the Evas object by setting each point of the map to the right coordinates.</p>

<pre class="prettyprint">
// Set map coordinates
evas_map_point_coord_set(map, 0, 15, 500, 0);
evas_map_point_coord_set(map, 1, 365, 100, 0);
evas_map_point_coord_set(map, 2, 365, 200, 0);
evas_map_point_coord_set(map, 3, 15, 600, 0);
</pre>
</li>

<li>
<p>Set UV data using the <span style="font-family: Courier New,Courier,monospace">evas_map_point_image_uv_set()</span> function, which informs the map of the correct pixels in the image it is mapping:</p>

<pre class="prettyprint">
// Set image UV
evas_map_point_image_uv_set(map, 0, 0, 0);
evas_map_point_image_uv_set(map, 1, 360, 0);
evas_map_point_image_uv_set(map, 2, 350, 90);
evas_map_point_image_uv_set(map, 3, 0, 100);
</pre>
</li>
</ol>


<h2 id="apply" name="apply">Applying the Map to the Evas Object</h2>

<p>To set the map on a given object, use the <span style="font-family: Courier New,Courier,monospace">evas_object_map_set()</span> function for the object. A map contains 4 points, each having canvas x, y coordinates with an optional z point value for perspective correction, if available. Each point also has U an V coordinates.</p>

<pre class="prettyprint">
// Apply map to button evas object
evas_object_map_set(ad-&gt;button, map);</pre>

<h2 id="clear" name="clear">Clearing Map Data and Enabling Map Features</h2>

<p>Free the map data and all memory associated with it when you no longer need it:</p>

<pre class="prettyprint">
// Free map resources
evas_map_free(map);</pre>

<p>You can enable or disable the map features for the object. When enabled, the object geometry is saved, and the new geometry changes its position and size to reflect the set map geometry.</p>

<pre class="prettyprint">
// Enable map features
evas_object_map_enable_set(ad-&gt;button, EINA_TRUE);</pre>




<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>	

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
