<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
    <script type="text/javascript" src="../../scripts/snippet.js"></script>
    <script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
    <title>Creating Evas Map Effects</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
            <li><a href="#create">Creating the Example Application UI</a></li>
            <li><a href="#data">Adding Map Effects</a></li>
        </ul>
        <p class="toc-title">Related Info</p>
        <ul class="toc">
            <li><a href="../../../../org.tizen.native.mobile.apireference/group__Evas.html">Evas API for Mobile Native</a></li>
            <li><a href="../../../../org.tizen.native.wearable.apireference/group__Evas.html">Evas API for Mobile Wearable</a></li>
        </ul>
    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>Creating Evas Map Effects</h1>

<p>The following examples demonstrate how you can use UV mapping and Evas map functions. UV mapping allows you to map points in the 2D Evas source object to 3D space positions in the target object (&quot;U&quot; and &quot;V&quot; denote the axes of the 2D texture). You can then modify the map point U and V texture source points with Evas map mapping APIs to create various effects.</p>

<h2 id="create" name="create">Creating the Example Application UI</h2>

<p>To illustrate the map effects in an application, create an application project in the IDE and implement a UI with a title text and 2 buttons:</p>

<ol>

<li>
<p>To use the required APIs, include the following libraries:</p>
<pre class="prettyprint">
#include &lt;app.h&gt;
#include &lt;Elementary.h&gt;
#include &lt;system_settings.h&gt;
#include &lt;efl_extension.h&gt;
</pre>
</li>

<li>
<p>Create an Evas object for an Elementary window and 2 buttons:</p>
<pre class="prettyprint">
typedef struct 
appdata
{
&nbsp;&nbsp;&nbsp;Evas_Object *win;
&nbsp;&nbsp;&nbsp;Evas_Object *button;
&nbsp;&nbsp;&nbsp;Evas_Object *default_btn;
}
appdata_s;
</pre>
</li>

<li>
<p>Create the UI window and title text:</p>
<ul>
<li>To create an Elementary window, use the <span style="font-family: Courier New,Courier,monospace">elm_win_util_standard_add()</span> function and give the name and title of the application.</li>
<li>To set a callback for the hardware <strong>Back</strong> key, use the <span style="font-family: Courier New,Courier,monospace">eext_object_event_callback_add()</span> function.</li>
<li>To create and display the title text as an Evas object, use the <span style="font-family: Courier New,Courier,monospace">evas_object_evas_get()</span> and <span style="font-family: Courier New,Courier,monospace">evas_object_show()</span> functions.</li>
</ul>
<pre class="prettyprint">
static void
create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp; Evas_Object *evas_text = NULL;
&nbsp;&nbsp;&nbsp; Evas *evas = NULL;

&nbsp;&nbsp;&nbsp;// Window
&nbsp;&nbsp;&nbsp;ad-&gt;win = elm_win_util_standard_add(&quot;Extra object function&quot;, &quot;Extra object function&quot;);
&nbsp;&nbsp;&nbsp;elm_win_autodel_set(ad-&gt;win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;// Window callbacks
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(ad-&gt;win, &quot;delete,request&quot;, win_delete_request_cb, NULL);
&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;win, EEXT_CALLBACK_BACK, win_back_cb, ad);

&nbsp;&nbsp;&nbsp;evas = evas_object_evas_get(ad-&gt;win);

&nbsp;&nbsp;&nbsp;evas_text = evas_object_text_add(evas);
&nbsp;&nbsp;&nbsp;evas_object_text_text_set(evas_text, &quot;Evas Map Mapping&quot;);
&nbsp;&nbsp;&nbsp;evas_object_text_font_set(evas_text, &quot;Sans&quot;, 18);
&nbsp;&nbsp;&nbsp;evas_object_color_set(evas_text, 50, 100, 200, 255);
&nbsp;&nbsp;&nbsp;evas_object_move(evas_text, 15, 40);
&nbsp;&nbsp;&nbsp;evas_object_show(evas_text);

&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;win);
}
</pre>
</li>

<li>
<p>Create the buttons for mapping.</p>
<p>Use the <span style="font-family: Courier New,Courier,monospace">evas_object_move()</span> and <span style="font-family: Courier New,Courier,monospace">evas_object_resize()</span> functions to configure the button custom geometry.</p>
<pre class="prettyprint">
// Create a button for mapping
ad-&gt;button = elm_button_add(ad-&gt;win);
elm_object_text_set(ad-&gt;button, &quot;Evas Map Mapping &quot;);
evas_object_move(ad-&gt;button, 15, 100);
evas_object_resize(ad-&gt;button, 350, 150);
evas_object_show(ad-&gt;button);

// Create a default button
ad-&gt;default_btn = elm_button_add(ad-&gt;win);
elm_object_text_set(ad-&gt;default_btn, &quot;Default Button &quot;);
evas_object_move(ad-&gt;default_btn, 15, 600);
evas_object_resize(ad-&gt;default_btn, 450, 100);
evas_object_show(ad-&gt;default_btn);
</pre>
</li>

</ol>

<p>The following figure shows the example application UI before the map effects are added.</p>
<p class="figure">Figure: Example application UI without map effects</p>
<p align="center"><img alt="Example application UI without map effects" src="../../images/evas_map_effect_without.png" /></p>


<h2 id="data" name="data">Adding Map Effects</h2>

<p>This use case adds a map effect to the <strong>Evas Map Mapping</strong> button in the example application UI. The effect changes the button shape and location, and maps the button image to be modified along with the button.</p>

<p>To create a map effect:</p>

<ol>

<li>
<p>Get the <span style="font-family: Courier New,Courier,monospace">Evas_Map</span> object and create a map using the <span style="font-family: Courier New,Courier,monospace">evas_map_new()</span> function:</p>
<pre class="prettyprint">
Evas_Map *map;
map = evas_map_new(4);
</pre>
</li>

<li>
<p>Set the coordinates for each map point using the <span style="font-family: Courier New,Courier,monospace">evas_map_point_coord_set()</span> function.</p>
<p>The coordinates used in this example move the button and change its shape.</p>
<pre class="prettyprint">
// Set map coordinates
evas_map_point_coord_set(map, 0, 15, 500, 0);
evas_map_point_coord_set(map, 1, 365, 100, 0);
evas_map_point_coord_set(map, 2, 365, 200, 0);
evas_map_point_coord_set(map, 3, 15, 600, 0);
</pre>
</li>

<li>
<p>Set the image UV points using the <span style="font-family: Courier New,Courier,monospace">evas_map_point_image_uv_set()</span> function.</p>
<p>These coordinates define how the button image is mapped.</p>
<pre class="prettyprint">
// Set image UV
evas_map_point_image_uv_set(map, 0, 0, 0);
evas_map_point_image_uv_set(map, 1, 360, 0);
evas_map_point_image_uv_set(map, 2, 350, 90);
evas_map_point_image_uv_set(map, 3, 0, 100);
</pre>
</li>

<li>To apply the map on the button, use the <span style="font-family: Courier New,Courier,monospace">evas_object_map_set()</span> function. 

<pre class="prettyprint">
// Apply the map to the button Evas object
evas_object_map_set(ad-&gt;button, map);
</pre>
</li>
<li>To enable the map, use the <span style="font-family: Courier New,Courier,monospace">evas_object_map_enable_set()</span> function. 
<p>When enabled, the original object geometry is saved, and the new map geometry is used to change the object position and size.</p>

<pre class="prettyprint">
// Enable the map
evas_object_map_enable_set(ad-&gt;button, EINA_TRUE);
</pre>
</li>

<li><p>When no longer needed, free the map data and all memory associated with it:</p>

<pre class="prettyprint">
// Free map resources
evas_map_free(map);
</pre>
</li>
</ol>

<p>The following figure shows the example application UI with the map effects.</p>
<p class="figure">Figure: Example application UI with map effects</p>
<p align="center"><img alt="Example application UI with map effects" src="../../images/evas_map_effect.png" /></p>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>

</html>