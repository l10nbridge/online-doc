<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Creating Panes</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">
	
<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#init">Initializing the Panes Application</a></li>
		<li><a href="#create">Creating a Panes Component</a></li>
		<li><a href="#config">Configuring the Panes</a></li>
		<li><a href="#signals">Handling Signals</a></li>
		</ul>	
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Creating Panes</h1>

  
<p>This tutorial explains how to use panes in the application.</p>

<p>This feature is supported in mobile applications only.</p>

 <h2 id="init" name="init">Initializing the Panes Application</h2>
 
<p>Create a window entitled <strong>Panes tutorial</strong>, composed of a conformant component that contains a naviframe component.</p>
<pre class="prettyprint">
#include &lt;Elementary.h&gt;
#include &lt;app.h&gt;

struct _appdata 
{
&nbsp;&nbsp;&nbsp;const char *name;
&nbsp;&nbsp;&nbsp;Evas_Object *win;
};

static void app_terminate(void *user_data)
{
&nbsp;&nbsp;&nbsp;struct _appdata *ad;

&nbsp;&nbsp;&nbsp;if (!user_data)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;

&nbsp;&nbsp;&nbsp;ad = user_data;

&nbsp;&nbsp;&nbsp;if (ad-&gt;win)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;evas_object_del(ad-&gt;win);
}

static bool app_create(void *user_data)
{
&nbsp;&nbsp;&nbsp;struct _appdata *ad;
&nbsp;&nbsp;&nbsp;Evas_Object *win, *conformant, *naviframe, *panes, *panes_h, *nav_it, *bt;

&nbsp;&nbsp;&nbsp;if (!user_data)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;

&nbsp;&nbsp;&nbsp;ad = user_data;

&nbsp;&nbsp;&nbsp;// Create window 
&nbsp;&nbsp;&nbsp;elm_policy_set(ELM_POLICY_QUIT, ELM_POLICY_QUIT_LAST_WINDOW_CLOSED);
&nbsp;&nbsp;&nbsp;win = elm_win_util_standard_add(&quot;panes&quot;, &quot;Panes tutorial&quot;);
&nbsp;&nbsp;&nbsp;elm_win_autodel_set(win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;if (!win)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;

&nbsp;&nbsp;&nbsp;ad-&gt;win = win;

&nbsp;&nbsp;&nbsp;// Add elm_conformant 
&nbsp;&nbsp;&nbsp;conformant = elm_conformant_add(win);
&nbsp;&nbsp;&nbsp;elm_win_resize_object_add(win, conformant);
&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(conformant, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;evas_object_show(conformant);

&nbsp;&nbsp;&nbsp;// Add naviframe to conformant 
&nbsp;&nbsp;&nbsp;naviframe = elm_naviframe_add(conformant);
&nbsp;&nbsp;&nbsp;elm_object_content_set(conformant, naviframe);
&nbsp;&nbsp;&nbsp;evas_object_show(naviframe);

&nbsp;&nbsp;&nbsp;evas_object_resize(win, 320, 400);
&nbsp;&nbsp;&nbsp;evas_object_show(win);

&nbsp;&nbsp;&nbsp;return true;
}

int main(int argc, char **argv)
{
&nbsp;&nbsp;&nbsp;appdata_s *ad = {0,};
&nbsp;&nbsp;&nbsp;int ret = 0;

&nbsp;&nbsp;&nbsp;ui_app_lifecycle_callback_s event_callback = {0,};
&nbsp;&nbsp;&nbsp;app_event_handler_h handlers[5] = {NULL,};

&nbsp;&nbsp;&nbsp;event_callback.create = app_create;
&nbsp;&nbsp;&nbsp;event_callback.terminate = app_terminate;
&nbsp;&nbsp;&nbsp;event_callback.pause = app_pause;
&nbsp;&nbsp;&nbsp;event_callback.resume = app_resume;
&nbsp;&nbsp;&nbsp;event_callback.app_control = app_control;

&nbsp;&nbsp;&nbsp;ui_app_add_event_handler(&amp;handlers[APP_EVENT_LOW_BATTERY], APP_EVENT_LOW_BATTERY, ui_app_low_battery, &amp;ad);
&nbsp;&nbsp;&nbsp;ui_app_add_event_handler(&amp;handlers[APP_EVENT_LOW_MEMORY], APP_EVENT_LOW_MEMORY, ui_app_low_memory, &amp;ad);
&nbsp;&nbsp;&nbsp;ui_app_add_event_handler(&amp;handlers[APP_EVENT_DEVICE_ORIENTATION_CHANGED], APP_EVENT_DEVICE_ORIENTATION_CHANGED, ui_app_orient_changed, &amp;ad);
&nbsp;&nbsp;&nbsp;ui_app_add_event_handler(&amp;handlers[APP_EVENT_LANGUAGE_CHANGED], APP_EVENT_LANGUAGE_CHANGED, ui_app_lang_changed, &amp;ad);
&nbsp;&nbsp;&nbsp;ui_app_add_event_handler(&amp;handlers[APP_EVENT_REGION_FORMAT_CHANGED], APP_EVENT_REGION_FORMAT_CHANGED, ui_app_region_changed, &amp;ad);
&nbsp;&nbsp;&nbsp;ui_app_remove_event_handler(handlers[APP_EVENT_LOW_MEMORY]);

&nbsp;&nbsp;&nbsp;ret = ui_app_main(argc, argv, &amp;event_callback, &amp;ad);

&nbsp;&nbsp;&nbsp;return ret;
}
</pre>


 <h2 id="create" name="create">Creating a Panes Component</h2>
 
<p>To add a new panes object to the application, do it within the <span style="font-family: Courier New,Courier,monospace">_create()</span> function.</p>

<p>When you create a panes component, the <span style="font-family: Courier New,Courier,monospace">elm_panes</span> component adds a draggable bar between 2 contents. When dragged, this bar resizes the contents&#39; size. To create a new panes component into an Elementary object, use the <span style="font-family: Courier New,Courier,monospace">elm_panes_add()</span> function.</p>
<p>In the following example, the panes component is created and added in the naviframe:</p>
<pre class="prettyprint">
// Add an elm_panes 
panes = elm_panes_add(naviframe);
evas_object_size_hint_weight_set(panes, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
elm_win_resize_object_add(win, panes);
evas_object_show(panes);

nav_it = elm_naviframe_item_push(naviframe, &quot;Panes view&quot;, NULL, NULL, panes, NULL);
</pre>


 <h2 id="config" name="config">Configuring the Panes</h2>

<p>To configure the panes component:</p>
<ul>
<li>
<p>Modify the panes component orientation with the <span style="font-family: Courier New,Courier,monospace">elm_panes_horizontal_set()</span> function.</p>
<p>By default, the orientation of the panes component is vertical.</p>
<pre class="prettyprint">
// Add a horizontal elm_panes 
panes_h = elm_panes_add(naviframe);
elm_panes_horizontal_set(panes_h, EINA_TRUE);
</pre>
<p>The above code creates a panes object and sets the horizontal orientation. To add content in a panes, use the <span style="font-family: Courier New,Courier,monospace">elm_object_part_content_set()</span> function. In the following example, a horizontal panes component (<span style="font-family: Courier New,Courier,monospace">panes_h</span>) is added to the <span style="font-family: Courier New,Courier,monospace">&quot;left&quot;</span> part of the panes component (<span style="font-family: Courier New,Courier,monospace">panes</span>) created in the previous use case.</p>
<pre class="prettyprint">
elm_object_part_content_set(panes, &quot;left&quot;, panes_h);
</pre>
</li>
<li>
<p>Set a button object to the <span style="font-family: Courier New,Courier,monospace">&quot;right&quot;</span> side of the vertical panes component:</p>
<pre class="prettyprint">
// Create a button object 
bt = elm_button_add(naviframe);
elm_object_text_set(bt, &quot;Right&quot;);
evas_object_size_hint_weight_set(bt, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
evas_object_size_hint_align_set(bt, EVAS_HINT_FILL, EVAS_HINT_FILL);
evas_object_show(bt);

// Set the button object to the &quot;right&quot; part of the vertical panes 
elm_object_part_content_set(panes, &quot;right&quot;, bt);
</pre>
</li>
<li>
<p>Set the content of the horizontal panes component with 2 button objects (up and down).</p>
<p>When populating a vertically displayed panes component, the left content is placed at the top, and the right content is placed at the bottom.</p>
<pre class="prettyprint">
// Create an &quot;Up&quot; button 
bt = elm_button_add(naviframe);
elm_object_text_set(bt, &quot;Up&quot;);
evas_object_size_hint_weight_set(bt, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
evas_object_size_hint_align_set(bt, EVAS_HINT_FILL, EVAS_HINT_FILL);
evas_object_show(bt);
elm_object_part_content_set(panes_h, &quot;left&quot;, bt);

// Create a &quot;Down&quot; button 
bt = elm_button_add(naviframe);
elm_object_text_set(bt, &quot;Down&quot;);
evas_object_size_hint_weight_set(bt, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
evas_object_size_hint_align_set(bt, EVAS_HINT_FILL, EVAS_HINT_FILL);
evas_object_show(bt);
elm_object_part_content_set(panes_h, &quot;right&quot;, bt);
</pre>
</li>
<li>
<p>Resize the panes component.</p>
<p>To change the size of the panes component, drag the <span style="font-family: Courier New,Courier,monospace">elm_panes</span> with the mouse. The proportion can also be set with the <span style="font-family: Courier New,Courier,monospace">elm_panes_content_left_size_set()</span> and <span style="font-family: Courier New,Courier,monospace">elm_panes_content_right_size_set()</span> functions. The following example shows how to set the left size of both panes to 80%.</p>
<pre class="prettyprint">
// Set the proportion of the panes to 80% 
elm_panes_content_left_size_set(panes, 0.8);
elm_panes_content_left_size_set(panes_h, 0.8);
</pre>
</li>
<li>
<p>Set a fixed size for the panes component&#39;s size and proportions with the <span style="font-family: Courier New,Courier,monospace">elm_panes_fixed_set()</span> function.</p>
<pre class="prettyprint">
// Fix the panes proportion 
elm_panes_fixed_set(panes_h, EINA_TRUE);
</pre>
</li>
</ul>

<p class="figure">Figure: Panes tutorial</p> 
<p align="center"><img alt="Panes tutorial" src="../../images/pane_tuto.png" /></p>

 <h2 id="signals" name="signals">Handling Signals</h2>

<p>The panes component emits 4 different signals, depending on the user interaction with the draggable bar:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">clicked</span> - Pane is clicked.
<p>The following example, a callback function is registered to the vertical panes component, and it prints <strong>Clicked</strong> to standard output:</p>
<pre class="prettyprint">
// clicked callback 
static void
_clicked_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, PANES_TAG, &quot;Clicked\n&quot;);
}

evas_object_smart_callback_add(panes, &quot;clicked&quot;, _clicked_cb, panes);
</pre>
</li>

<li><span style="font-family: Courier New,Courier,monospace">press</span> - Pane is pressed.
<p>The following example, a callback function is registered to the vertical panes component, and it prints <strong>Pressed</strong> to standard output:</p>
<pre class="prettyprint">
// press callback 
static void
_press_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, PANES_TAG, &quot;Pressed\n&quot;);
}

evas_object_smart_callback_add(panes, &quot;press&quot;, _press_cb, panes);
</pre>
</li>

<li><span style="font-family: Courier New,Courier,monospace">unpressed</span> - Pane is released after being pressed.
<p>The following example, a callback function is registered to the vertical panes component, and it prints the proportion size of the left content of the panes component to standard output using the <span style="font-family: Courier New,Courier,monospace">elm_panes_content_left_size_get()</span> function:</p>
<pre class="prettyprint">
// unpress callback 
static void
_unpress_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, PANES_TAG, &quot;Unpressed, size: %f\n&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_panes_content_left_size_get(obj));
}

evas_object_smart_callback_add(panes, &quot;unpress&quot;, _unpress_cb, panes);
</pre>
</li>

<li><span style="font-family: Courier New,Courier,monospace">clicked,double</span> - Pane is double-clicked.
<p>The following example, a callback function is registered to the vertical panes component. It hides the left part of the panes component and sets the left proportion to 0.0. To restore the left part proportion with a double-click on the hidden part of the panes component, use the <span style="font-family: Courier New,Courier,monospace">elm_panes_content_left_size_get()</span> and <span style="font-family: Courier New,Courier,monospace">elm_panes_content_left_size_set()</span> functions, and a variable to store the value of the current proportion.</p>

<pre class="prettyprint">
// clicked,double callback 
static void
_clicked_double_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;static double size = 0.0;
&nbsp;&nbsp;&nbsp;double tmp_size = 0.0;
&nbsp;&nbsp;&nbsp;tmp_size = elm_panes_content_left_size_get(obj);
&nbsp;&nbsp;&nbsp;if (tmp_size &gt; 0)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_panes_content_left_size_set(obj, 0.0);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, PANES_TAG, &quot;Double clicked, hidden.\n&quot;);
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;else
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_panes_content_left_size_set(obj, size);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, PANES_TAG,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Double clicked, restoring size.\n&quot;);
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;size = tmp_size;
}

evas_object_smart_callback_add(panes, &quot;clicked,double&quot;, _clicked_double_cb, panes);
</pre>
</li>
</ul>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>	

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
