<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Gengrid</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#add">Adding a Gengrid Component</a></li>
			<li><a href="#style">Using the Gengrid and Item Styles</a></li>
			<li><a href="#create">Defining the Gengrid Item Class</a></li>
			<li><a href="#manage">Managing Gengrid Items</a></li>
			<li><a href="#callback">Using the Gengrid Callbacks</a></li>
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>			
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Gengrid</h1>

<p>This feature is supported in mobile applications only.</p>

<p>The gengrid component is based on the same idea as the <a href="component_genlist_mn.htm">genlist</a>. It aims at displaying objects on a grid layout and rendering only the visible ones.</p>

<p>The gengrid component inherits from the layout component and implements the scroller interface, which means that scroller and layout functions can be used on the gengrid component.</p>

<p>For more information, see the <a href="../../../../org.tizen.native.mobile.apireference/group__Gengrid.html">Gengrid</a> API.</p>

<p class="figure">Figure: Gengrid component</p> 
<p align="center"> <img alt="Gengrid component" src="../../images/gengrid.png" /> </p> 
 
<p class="figure">Figure: Gengrid hierarchy</p> 
<p align="center"> <img alt="Gengrid hierarchy" src="../../images/gengrid_tree.png" /> </p> 

<h2 id="add">Adding a Gengrid Component</h2>

<p>To add a gengrid component, use the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_add()</span> function:</p>
<pre class="prettyprint">
Evas_Object *gengrid, *parent;

gengrid = elm_gengrid_add(parent);
</pre>

<h2 id="style">Using the Gengrid and Item Styles</h2>

<p>A gengrid item can have 0 or more texts, 0 or more contents, and 0 or more boolean states. The number of texts and contents depends on the  Edje item theme style used for the gengrid items. In the <span style="font-family: Courier New,Courier,monospace">default</span> Tizen gengrid item theme style, the items can have 2 content parts that can be set with the <span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span> and <span style="font-family: Courier New,Courier,monospace">elm.swallow.end</span> part names.</p>

<p>The following gengrid styles and related item styles are supported:</p>

<ul><li><span style="font-family: Courier New,Courier,monospace">default</span>
<ul><li><span style="font-family: Courier New,Courier,monospace">default</span></li>
<li><span style="font-family: Courier New,Courier,monospace">type1</span> (identical to the <span style="font-family: Courier New,Courier,monospace">default</span> style in Tizen 2.4)</li>
<li><span style="font-family: Courier New,Courier,monospace">type2</span></li>
</ul></li>
<li><span style="font-family: Courier New,Courier,monospace">popup</span>
<ul><li><span style="font-family: Courier New,Courier,monospace">default</span></li>
</ul></li></ul>

<p>To use the <span style="font-family: Courier New,Courier,monospace">popup</span> gengrid style with the <span style="font-family: Courier New,Courier,monospace">default</span> item style:</p>
<pre class="prettyprint">
elm_object_style_set(gengrid, &quot;popup&quot;);
gic-&gt;item_style = &quot;default&quot;;
</pre>

<p>The following figure shows examples of the <span style="font-family: Courier New,Courier,monospace">default</span> (<span style="font-family: Courier New,Courier,monospace">type1</span>), <span style="font-family: Courier New,Courier,monospace">type2</span>, and <span style="font-family: Courier New,Courier,monospace">popup</span> styles.</p>

<p class="figure">Figure: Gengrid styles</p> 
<p align="center"> <img alt="Gengrid styles" src="../../images/gengrid_styles.png" /> </p> 

<h2 id="create">Defining the Gengrid Item Class</h2>

<p>To save up memory and speed up processing when many items exist, the gengrid has the concept of &quot;realization&quot; when managing items. It means that a gengrid item creates its text and content when the user scrolls the grid and the item shows up on the display (realize), and frees them when the item is scrolled out of the screen (unrealize). To enable the item realization, you must create and fill an <span style="font-family: Courier New,Courier,monospace">Elm_Gengrid_Item_Class</span> structure (gengrid item class) that informs the gengrid component which callbacks to call when an item is created or deleted. When the item is created, the text and content are retrieved by calling the <span style="font-family: Courier New,Courier,monospace">text_get</span> and <span style="font-family: Courier New,Courier,monospace">content_get</span> functions defined in the gengrid item class.</p>

<p>You can use the gengrid item class for the following purposes:</p>
<ul><li>Setting the item style</li>
<li>Registering callback functions for item realization</li>
<li>Registering a callback function for item deletion</li></ul>

<pre class="prettyprint">
static Elm_Gengrid_Item_Class *gic = elm_gengrid_item_class_new();
int i;

gic-&gt;item_style = &quot;default&quot;; 
gic-&gt;func.text_get = _item_label_get;
gic-&gt;func.content_get = _item_content_get;
gic-&gt;func.del = _item_del;

for (i = 0; i &lt; 10; i++)
{
&nbsp;&nbsp;&nbsp;elm_gengrid_item_append(gengrid, // Gengrid object
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gic, // Gengrid item class
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(void *)i, // Item data
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_item_select, // Select callback
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(void *)i); // Callback data
}
elm_gengrid_item_class_free(gic);
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">func</span> structure contains pointers to functions that are called when an item is going to be realized or deleted. All of them receive item data (third parameter of the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_item_append()</span> function) as their first parameter and the gengrid object itself as the second parameter.</p>


  <ul>
   <li><span style="font-family: Courier New,Courier,monospace">text_get</span>
   <p>When a gengrid item becomes realized, the <span style="font-family: Courier New,Courier,monospace">text_get</span> function is called repeatedly for all text parts in that item. This function can return text with the <span style="font-family: Courier New,Courier,monospace">strdup()</span> function when the desired part is found. After the text is set to the part, it is freed automatically (do not free it manually).</p>

<pre class="prettyprint">
static char *
_item_label_get(void *data, Evas_Object *obj, const char *part)
{
&nbsp;&nbsp;&nbsp;if (!strcmp(part, &quot;elm.text&quot;))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return strdup(&quot;text&quot;);
&nbsp;&nbsp;&nbsp;else return NULL;
}
</pre></li>

<li><span style="font-family: Courier New,Courier,monospace">content_get</span>
<p>As the <span style="font-family: Courier New,Courier,monospace">text_get</span> function, the <span style="font-family: Courier New,Courier,monospace">content_get</span> function is also called repeatedly for all swallow parts in the item. It must return a valid object handle to be set or <span style="font-family: Courier New,Courier,monospace">NULL</span> (when no content is desired). The object is deleted by the gengrid on its deletion or when the item is unrealized.</p>

<pre class="prettyprint">
static Evas_Object *
_item_content_get(void *data, Evas_Object *obj, const char *part)
{
&nbsp;&nbsp;&nbsp;if (!strcmp(part, &quot;elm.swallow.icon&quot;))
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Evas_Object *img = elm_image_add(obj);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_image_file_Set(img, &quot;sample.png&quot;, NULL);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return img;
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;else return NULL;
} 
</pre></li>
   <li><span style="font-family: Courier New,Courier,monospace">del</span>
<p>This function is called when the gengrid item is deleted. It deletes any data that has been allocated at the item creation.</p>

<pre class="prettyprint">
static void
_item_del(void *data, Evas_Object *obj)
{
&nbsp;&nbsp;&nbsp;printf(&quot;item(%d) is now deleted&quot;, (int) data);
}
</pre></li>
</ul>

<p>The gengrid item class must be freed manually with the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_item_class_free()</span> function after all items are appended.</p>

<h2 id="manage">Managing Gengrid Items</h2>

<p>To manage the items:</p>
<ul>
<li>Add items:
<ul><li>To add an item to the end of the grid, use the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_item_append()</span> function.</li>
<li>To add an item to the beginning of the grid, use the similar <span style="font-family: Courier New,Courier,monospace">elm_gengrid_item_prepend()</span> function.</li>
<li>To insert an item before the indicated item, use the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_item_insert_before()</span> function.</li>
<li>To insert an item after the indicated item, use the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_item_insert_after()</span> function.</li>
</ul>

<p>A gengrid can display its items using a horizontal or vertical layout. In the horizontal layout, the items are displayed in columns from top to bottom, starting a new column when the space for the current column is filled. In the vertical layout, items are set in rows from left to right. By default, the vertical layout is used. To set the horizontal layout:</p>
<pre class="prettyprint">
elm_gengrid_horizontal_set(gengrid, EINA_TRUE);
</pre>
</li>
<li>Delete items and clear the grid:
<ul><li>To delete a single gengrid item, use the <span style="font-family: Courier New,Courier,monospace">elm_object_item_del()</span> function.</li>
<li>To clear the grid and delete all items, use the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_clear()</span> function.</li>
</ul>
<p>If a gengrid object is deleted by the <span style="font-family: Courier New,Courier,monospace">evas_object_del()</span> function, all items are deleted automatically. On item deletion, the <span style="font-family: Courier New,Courier,monospace">del</span> function in the item class is called.</p>
</li>
<li>Update items:
<p>If the content of an item changes, use the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_item_update()</span> function for the gengrid to update the item. The gengrid re-realizes the item and calls the functions in the <span style="font-family: Courier New,Courier,monospace">_Elm_Gengrid_Item_Class</span> class for it.</p>

<p>You can also use the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_item_fields_update()</span> function to update only specific parts:</p>
<ul><li><span style="font-family: Courier New,Courier,monospace">ELM_GENGRID_ITEM_FIELD_TEXT</span></li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_GENGRID_ITEM_FIELD_CONTENT</span></li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_GENGRID_ITEM_FIELD_STATE</span></li></ul>
</li>
<li>Select or disable items:
<p>To manually select an item, use the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_item_selected_set()</span> function. To select multiple items, you must enable the multi-selection mode:</p>
<pre class="prettyprint">
elm_gengrid_multi_select_set(gengrid, EINA_TRUE);
</pre>
<p>To retrieve the selected item, use the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_selected_item_get()</span> function. When the multi-selection mode is enabled, you can retrieve the selected items with the <span style="font-family: Courier New,Courier,monospace">elm_gengrid_selected_items_get()</span> function, which returns a list of all selected items.</p>

<p>To disable an item manually, use the <span style="font-family: Courier New,Courier,monospace">elm_object_item_disabled_set()</span> function.</p>
</li>
</ul>

<h2 id="callback">Using the Gengrid Callbacks</h2>

<p>To receive notifications about the gengrid events, listen to the following signals:</p>
  <ul>
   <li><span style="font-family: Courier New,Courier,monospace">activated</span>: The item is double-clicked or pressed (enter | return | spacebar). 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is the gengrid item that is double-clicked or pressed.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">clicked,double</span>: The item is double-clicked. 
<p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is the gengrid item that is double-clicked.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">clicked,right</span>: The item is right-clicked. 
<p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is the gengrid item that is right-clicked.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">longpressed</span>: The item is pressed for a certain amount of time. By default, it is 1 second.</li>
   <li><span style="font-family: Courier New,Courier,monospace">selected</span>: The item is selected. 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is the gengrid item that is selected.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">unselected</span>: The item is unselected. 
<p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is the gengrid item that is unselected.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">realized</span>: The item is created as a real evas object. 
<p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the created item.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">unrealized</span>: The item is going to be unrealized. Content objects provided are deleted and the item object is deleted or put into a floating cache. 
   <p>The <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter points at an <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> object that contains the item to be unrealized.</p></li>
   <li><span style="font-family: Courier New,Courier,monospace">changed</span>: An item is added, removed, resized, or moved, and the gengrid is resized or has <span style="font-family: Courier New,Courier,monospace">horizontal</span> property changes.</li>
   <li><span style="font-family: Courier New,Courier,monospace">scroll,anim,start</span>: The scrolling animation starts.</li>
   <li><span style="font-family: Courier New,Courier,monospace">scroll,anim,stop</span>: The scrolling animation stops.</li>
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,up</span>: The item in the gengrid is dragged (not scrolled) up.</li>
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,down</span>: The item in the gengrid has dragged (not scrolled) down.</li>
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,left</span>: The item in the gengrid is dragged (not scrolled) left.</li>
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,right</span>: The item in the gengrid is dragged (not scrolled) right.</li>
   <li><span style="font-family: Courier New,Courier,monospace">drag,stop</span>: The item in the gengrid stops being dragged.</li>
   <li><span style="font-family: Courier New,Courier,monospace">drag</span>: The item in the gengrid is dragged.</li>
   <li><span style="font-family: Courier New,Courier,monospace">scroll</span>: The content is scrolled (moved).</li>
   <li><span style="font-family: Courier New,Courier,monospace">scroll,drag,start</span>: Dragging the content starts.</li>
   <li><span style="font-family: Courier New,Courier,monospace">scroll,drag,stop</span>: Dragging the content stops.</li>
   <li><span style="font-family: Courier New,Courier,monospace">scroll,page,changed</span>: The visible page changes.</li>
   <li><span style="font-family: Courier New,Courier,monospace">edge,top</span>: The gengrid is scrolled to the top edge.</li>
   <li><span style="font-family: Courier New,Courier,monospace">edge,bottom</span>: The gengrid is scrolled to the bottom edge.</li>
   <li><span style="font-family: Courier New,Courier,monospace">edge,left</span>: The gengrid is scrolled to the left edge.</li>
   <li><span style="font-family: Courier New,Courier,monospace">edge,right</span>: The gengrid is scrolled to the right edge.</li>
   <li><span style="font-family: Courier New,Courier,monospace">moved</span>: The item in the gengrid is moved.</li>
	<li><span style="font-family: Courier New,Courier,monospace">pressed</span>: The item in the gengrid is pressed by the action pressing the mouse.</li>
	<li><span style="font-family: Courier New,Courier,monospace">released</span>: The item in the gengrid is released by the action releasing the mouse.</li>
	<li><span style="font-family: Courier New,Courier,monospace">item,reorder,anim,start</span>: The reorder animation starts.</li>
	<li><span style="font-family: Courier New,Courier,monospace">item,reorder,anim,stop</span>: The reorder animation stops.</li>
  </ul>

<p>The signals list in the AR is more extensive, but only the signals in this topics are actually supported by Tizen.</p>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

