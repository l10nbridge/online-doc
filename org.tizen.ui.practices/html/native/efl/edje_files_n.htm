<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Handling Edje Files</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">
	
<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
		<li><a href="#init">Initializing the Application Window</a></li>
		<li><a href="#load">Loading Styles from an EDJ File</a></li>
		<li><a href="#create">Creating an Edje Object</a></li>
		</ul>	
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Edje__Group.html">Edje API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Elementary.html">Elementary API for Wearable Native</a></li>
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Handling Edje Files</h1>

<p>An Edje (EDJ) file is a specific eet file that collects layouts. Since the file is a collection of layouts, it is also called a &quot;theme&quot;. A single Edje layout within the theme is called a &quot;style&quot;, and it is defined as a group block in the <a href="edc_part_block_n.htm">EDC language</a>. </p>

<p>The following example creates an application window with a genlist component. It loads the styles from an EDJ file, and displays them (the names of the group blocks) as the genlist items. When the user selects an item, an Edje object is created, the related style is loaded to the object, and the object is displayed on the screen.</p>

<h2 id="init" name="init">Initializing the Application Window</h2>

<p>The following example shows a typical Elementary application:</p>
<ul>
<li>A window is created, and a callback is added for it, to be called when the window is deleted.</li>
<li>Conformant and naviframe components are added to the window.</li>
<li>A genlist component is added to the naviframe.</li></ul>

<pre class="prettyprint">
static void
create_base_gui(appdata_s *ad)
{
&nbsp;&nbsp;&nbsp;&nbsp;char edj_path[PATH_MAX] = {0,};

&nbsp;&nbsp;&nbsp;&nbsp;/* Window */
&nbsp;&nbsp;&nbsp;&nbsp;ad-&gt;win = elm_win_util_standard_add(PACKAGE, PACKAGE);
&nbsp;&nbsp;&nbsp;&nbsp;elm_win_conformant_set(ad-&gt;win, EINA_TRUE);
&nbsp;&nbsp;&nbsp;&nbsp;elm_win_autodel_set(ad-&gt;win, EINA_TRUE);

&nbsp;&nbsp;&nbsp;&nbsp;if (elm_win_wm_rotation_supported_get(ad-&gt;win)) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rots[4] = {0, 90, 180, 270};
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm_win_wm_rotation_available_rotations_set(ad-&gt;win, (const int *)(&amp;rots), 4);
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;/* Callback for window deletion */
&nbsp;&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(ad-&gt;win, &quot;delete,request&quot;, win_delete_request_cb, ad);

&nbsp;&nbsp;&nbsp;&nbsp;/* Conformant */
&nbsp;&nbsp;&nbsp;&nbsp;ad-&gt;conform = elm_conformant_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;&nbsp;elm_win_indicator_mode_set(ad-&gt;win, ELM_WIN_INDICATOR_SHOW);
&nbsp;&nbsp;&nbsp;&nbsp;elm_win_indicator_opacity_set(ad-&gt;win, ELM_WIN_INDICATOR_OPAQUE);
&nbsp;&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(ad-&gt;conform, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;&nbsp;elm_win_resize_object_add(ad-&gt;win, ad-&gt;conform);
&nbsp;&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;conform);

&nbsp;&nbsp;&nbsp;&nbsp;/* Naviframe */
&nbsp;&nbsp;&nbsp;&nbsp;ad-&gt;navifr = elm_naviframe_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;&nbsp;elm_object_content_set(ad-&gt;conform, ad-&gt;navifr);
&nbsp;&nbsp;&nbsp;&nbsp;eext_object_event_callback_add(ad-&gt;navifr, EEXT_CALLBACK_BACK, eext_naviframe_back_cb, ad);

&nbsp;&nbsp;&nbsp;&nbsp;/* Genlist */
&nbsp;&nbsp;&nbsp;&nbsp;ad-&gt;itc = elm_genlist_item_class_new();
&nbsp;&nbsp;&nbsp;&nbsp;ad-&gt;itc-&gt;func.text_get =_genlist_item_text_get;

&nbsp;&nbsp;&nbsp;&nbsp;ad-&gt;genlist = elm_genlist_add(ad-&gt;win);
&nbsp;&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(ad-&gt;genlist, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;&nbsp;elm_naviframe_item_simple_push(ad-&gt;navifr, ad-&gt;genlist);

&nbsp;&nbsp;&nbsp;&nbsp;/* Show the window after the base GUI is set up */
&nbsp;&nbsp;&nbsp;&nbsp;evas_object_show(ad-&gt;win);
}

static bool
app_create(void *data)
{
&nbsp;&nbsp;&nbsp;&nbsp;/*
&nbsp;&nbsp;&nbsp;&nbsp;   Initialize UI resources and application data
&nbsp;&nbsp;&nbsp;&nbsp;   If this function returns true, the application main loop starts
&nbsp;&nbsp;&nbsp;&nbsp;   If this function returns false, the application is terminated
&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;appdata_s *ad = data;

&nbsp;&nbsp;&nbsp;&nbsp;create_base_gui(ad);

&nbsp;&nbsp;&nbsp;&nbsp;return true;
}</pre>

<p>Declare the application data in the <span style="font-family: Courier New,Courier,monospace">appdata</span> struct:</p>

<pre class="prettyprint">
struct appdata {
&nbsp;&nbsp;&nbsp;&nbsp;Evas_Object *win;
&nbsp;&nbsp;&nbsp;&nbsp;Evas_Object *conform;
&nbsp;&nbsp;&nbsp;&nbsp;Evas_Object *navifr;
&nbsp;&nbsp;&nbsp;&nbsp;Evas_Object *genlist;
&nbsp;&nbsp;&nbsp;&nbsp;Eina_List *list;
&nbsp;&nbsp;&nbsp;&nbsp;Elm_Genlist_Item_Class *itc;
};
typedef struct appdata appdata_s;
</pre>

<h2 id="load" name="load">Loading Styles from an EDJ File</h2>

<p>To show the available styles as genlist items, you must load the styles from an EDJ file as a collection list:</p>
<ol>
<li>Get the styles (collection list) from the EDJ file using the <span style="font-family: Courier New,Courier,monospace">edje_file_collection_list()</span> function. The function returns a list of group block names present in the EDJ file.
 
<pre class="prettyprint">
/* Get the collection list from the EDJ file */
app_get_resource(EDJ_FILE, edj_path, (int)PATH_MAX);
ad-&gt;list = edje_file_collection_list(edj_path);
</pre>
</li>

<li>
<p>Add the style names as items to the genlist:</p>

<pre class="prettyprint">
EINA_LIST_FOREACH(ad-&gt;list, l, str)
{
&nbsp;&nbsp;&nbsp;&nbsp;elm_genlist_item_append(ad-&gt;genlist, ad-&gt;itc, str, NULL,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELM_GENLIST_ITEM_NONE, _genlist_clicked, ad);
}
</pre>
</li>
<li>
<p>When no longer needed, delete the collection list.</p>
 <table class="note"> 
<tbody>
    <tr>
     <th class="note">Note</th>
    </tr>
    <tr>
     <td class="note">The list returned from the <span style="font-family: Courier New,Courier,monospace">edje_file_collection_list()</span> function must be deleted using the <span style="font-family: Courier New,Courier,monospace">edje_file_collection_list_free()</span> function.</td>
    </tr>
   </tbody>
  </table>
<p>In this example, the list is deleted in the callback that is triggered when the window is deleted.</p>

<pre class="prettyprint">
static void
win_delete_request_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;&nbsp;appdata_s *ad = data;
&nbsp;&nbsp;&nbsp;&nbsp;/* Free the collection list */
&nbsp;&nbsp;&nbsp;&nbsp;edje_file_collection_list_free(ad-&gt;list);
&nbsp;&nbsp;&nbsp;&nbsp;ui_app_exit();
}</pre>
</li>
</ol>

<h2 id="create" name="create">Creating an Edje Object</h2>

<p>Implement the <span style="font-family: Courier New,Courier,monospace">_genlist_clicked()</span> callback that was defined above when adding items to the genlist. The callback is triggered when the user selects an item from the genlist.</p>
<p>Within the callback:</p>
<ol>
<li>Use the <span style="font-family: Courier New,Courier,monospace">edje_file_group_exists()</span> function to check that the style named in the item exists.</li>
<li>Use the <span style="font-family: Courier New,Courier,monospace">edje_object_add()</span> function to create an Edje object.</li>
<li>Use the <span style="font-family: Courier New,Courier,monospace">edje_object_file_set()</span> function to load the given style to the object.</li>
<li>Use the <span style="font-family: Courier New,Courier,monospace">elm_naviframe_item_simple_push()</span> function to display the object on the screen.</li>
</ol>

<pre class="prettyprint">
static void
_genlist_clicked(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;&nbsp;appdata_s *ad = data;
&nbsp;&nbsp;&nbsp;&nbsp;Elm_Object_Item *eoi = NULL;
&nbsp;&nbsp;&nbsp;&nbsp;const char *str;
&nbsp;&nbsp;&nbsp;&nbsp;char edj_path[PATH_MAX] = {0,};
&nbsp;&nbsp;&nbsp;&nbsp;Evas_Object *edje_object;

&nbsp;&nbsp;&nbsp;&nbsp;app_get_resource(EDJ_FILE, edj_path, (int)PATH_MAX);
&nbsp;&nbsp;&nbsp;&nbsp;eoi = elm_genlist_selected_item_get(obj);

&nbsp;&nbsp;&nbsp;&nbsp;str = elm_object_item_part_text_get(eoi, &quot;elm.text&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;/* Check whether a group matching the style named in the item exists in an edje file */
&nbsp;&nbsp;&nbsp;&nbsp;/* If there is no matching group, return */
&nbsp;&nbsp;&nbsp;&nbsp;if (!edje_file_group_exists(edj_path, str))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;

&nbsp;&nbsp;&nbsp;&nbsp;/* Create the object and load the given style */
&nbsp;&nbsp;&nbsp;&nbsp;edje_object = edje_object_add(evas_object_evas_get(ad-&gt;win));
&nbsp;&nbsp;&nbsp;&nbsp;edje_object_file_set(edje_object, edj_path, str);
&nbsp;&nbsp;&nbsp;&nbsp;/* Check for object loading errors */
&nbsp;&nbsp;&nbsp;&nbsp;if (edje_object_load_error_get(edje_object) != EDJE_LOAD_ERROR_NONE) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;evas_object_del(edje_object);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;evas_object_size_hint_weight_set(edje_object, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
&nbsp;&nbsp;&nbsp;&nbsp;/* Display the object on the screen */
&nbsp;&nbsp;&nbsp;&nbsp;elm_naviframe_item_simple_push(ad-&gt;navifr, edje_object);
}</pre>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>	

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
