<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Positioning Parts with the EDC File</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
	<p class="toc-title">Content</p>
		<ul class="toc">	
			<li><a href="#offset">Adding an Offset to Relative Positioning</a></li>
			<li><a href="#calc">Calculating the Edje Object Total Size</a></li>
			<li><a href="#hint">Using Edje Size Hints</a></li>			
			<li><a href="#Swallow">Creating an Edje Swallow</a></li>
			<li><a href="#Layout">Using ELM Layouts</a></li>

		</ul>
		
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Edje__Group.html">Edje API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Elementary.html">Elementary API for Wearable Native</a></li>
			</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

  <h1>Positioning Parts with the EDC File</h1> 

<p>The size of a part in pixels is set using the <span style="font-family: Courier New,Courier,monospace;">min</span> and <span style="font-family: Courier New,Courier,monospace;">max</span> properties. The following code example sets the minimum and maximum size of the rectangle part to 200 x 200 px:</p>

<pre class="prettyprint">
part 
{ 
&nbsp;&nbsp;&nbsp;name: &quot;rectangle&quot;;
&nbsp;&nbsp;&nbsp;type: RECT;
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;blue&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;align: 0.0 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the size to 200x200
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min: 200 200;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max: 200 200;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Blue color
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 0 0 255 255;
&nbsp;&nbsp;&nbsp;}
}
</pre>

<p>The position of the parts is defined in the <span style="font-family: Courier New,Courier,monospace;">rel1</span> and <span style="font-family: Courier New,Courier,monospace;">rel2</span> blocks, which define the upper-left corner and the lower-right corner of the part. The position can be defined in relation to other parts (with the <span style="font-family: Courier New,Courier,monospace;">relative</span> property) as an offset (<span style="font-family: Courier New,Courier,monospace;">offset</span> property). When using relative positioning, the <span style="font-family: Courier New,Courier,monospace;">to</span>, <span style="font-family: Courier New,Courier,monospace;">to_x</span> and <span style="font-family: Courier New,Courier,monospace;">to_y</span> properties are used to define in relation to which part the positioning is done. If nothing else is specified, the positioning is in relation to the parent&#39;s part.</p>

<p>To demonstrate relative positioning, the following example creates another rectangle part and positions it under the first part. The upper-left corner of the new part starts at the lower-left corner of the previous one.</p>

<pre class="prettyprint">
part 
{ 
&nbsp;&nbsp;&nbsp;name: &quot;rectangle2&quot;;
&nbsp;&nbsp;&nbsp;type: RECT;
&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;green&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;align: 0.0 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the size to 200 x 200
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min: 200 200;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max: 200 200;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Green color
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: 0 255 0 255;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the position
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// rel1 is relative to &quot;rectangle&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relative: 0.0 1.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &quot;rectangle&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// rel2 is relative to the parent
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relative: 1.0 1.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
</pre>

<table class="note">
<tbody>
<tr>
<th class="note">Note</th>
</tr>
<tr>
<td class="note">The <span style="font-family: Courier New,Courier,monospace;">align</span> property defines how the parts align themselves in the main window if their size is smaller than the main window. If nothing is specified, the parts are aligned in the center of the window.</td>
</tr>
</tbody>
</table> 

<h2 id="offset" name="offset">Adding an Offset to Relative Positioning</h2>

<p>The <span style="font-family: Courier New,Courier,monospace;">rel1</span> and <span style="font-family: Courier New,Courier,monospace;">rel2</span> blocks also support offset. The offset is a complement to the relative positioning: the corners are first placed according to their relative parameters, and then adjusted using the offsets.</p>

<p>The following figure shows the pixel positions for a 4 x 4 rectangle. The indexes start in the top-left corner at (0, 0), and increase to the right and to the bottom. Since the indexes have started at 0, the 4<sup>th</sup> pixel has an index of 3. To create a 2 x 2 blue rectangle centered inside the green rectangle, the top-left corner must be (1, 1) and the bottom-right one (2, 2).</p>

<p class="figure">Figure: Offset indexes</p> 
<p align="center"><img alt="Offset indexes" src="../../images/rel1_rel2_offsets.png" /></p> 

<p>To determine the relative position of the blue rectangle, Edje needs the following definitions:</p>
<ul>
<li>Part coordinates, depending on the size and position of the green rectangle</li>
<li>Relative component of the positions must be the same: the top-left corner of the green rectangle</li>
<li>Top-left pixel (1, 1) and bottom-right pixel (2, 2)</li>
</ul>

<p>The following code example shows the definitions:</p>

<pre class="prettyprint">
name: &quot;blue rectangle&quot;;

rel1.to: &quot;green rectangle&quot;;
rel1.relative: 0 0;
rel1.offset: 1 1;

rel2.to: &quot;green rectangle&quot;;
rel2.relative: 0 0;
rel2.offset: 2 2;
</pre>

<p>For most tasks, relative positioning is simpler than using offsets. Offsets are usually left for fine-tuning and creating borders.</p>

<p>The following example is similar to the previous one but it uses relative positioning instead of offsets to achieve the same result for the 4 x 4 rectangle (though it can scale to larger sizes as well). The blue rectangle starts at 25% of the green rectangle (both vertically and horizontally) and ends at 75% of it (both vertically and horizontally). Like in the previous example, the blue rectangle is named and Edje is told what the object of reference is:</p>

<pre class="prettyprint">
name: &quot;blue rectangle&quot;;
rel1.to: &quot;green rectangle&quot;;
rel2.to: &quot;green rectangle&quot;;
</pre>

<p>The following figure shows how to refer to pixels using relative positioning when the offsets are (0, 0).</p>

<p class="figure">Figure: Relative positioning</p> 
<p align="center"><img alt="Relative positioning" src="../../images/rel1_rel2_offsets_and_relative.png" /></p> 

<p>Note that in addressing the pixels, (0, 0) is addressed through <span style="font-family: Courier New,Courier,monospace;">relative: 0 0; offset 0 0;</span> and each additional 0.25 in the relative field gives a 1-pixel move. With this, the pixel addressed through <span style="font-family: Courier New,Courier,monospace;">relative: 0.75 0.75; offset: 0 0;</span> is at (3, 3) and not (2, 2).</p>

<p>This addressing method comes from a design choice in Evas and Edje, favoring simplicity. In the examples shown in this guide, there are 4 pixels, and therefore when the <span style="font-family: Courier New,Courier,monospace;">[0; 1)</span> range is divided in 4, the result is <span style="font-family: Courier New,Courier,monospace;">[0; 0.25), [0.25; 0.50), [0.50; 0.75), [0.75; 0.100)</span>. With Edje, the value used to refer to each segment is the left bound and therefore, 0.75 refers to <span style="font-family: Courier New,Courier,monospace;">[0.75; 0.100)</span> (the bottom-right pixel of the green rectangle and not the 3/4th one).</p>

<p>To refer to the previous pixel is to set the <span style="font-family: Courier New,Courier,monospace;">rel2</span> bound to <span style="font-family: Courier New,Courier,monospace;">relative: 0.75 0.75;</span>, as expressed naturally, and <span style="font-family: Courier New,Courier,monospace;">offset: -1 -1;</span>. This can also be understood as extending the rectangle up to 75% of its parent with the upper bound excluded (as shown in the <span style="font-family: Courier New,Courier,monospace;">[0.50; 0.75)</span>).</p>

<p>Since <span style="font-family: Courier New,Courier,monospace;">-1 -1</span> is the most common offset wanted for <span style="font-family: Courier New,Courier,monospace;">rel2</span>, it is the default value as the default behavior is the most practical.</p>

<h2 id="calc" name="calc">Calculating the Edje Object Total Size</h2>

<p>When the EDC file is composed of several parts, Edje calculates the size of the global Edje object, by taking all the parts and their properties into account. The following properties have a role in this calculation and affect the global size:</p>

<ul>
<li><span style="font-family: Courier New,Courier,monospace;">min</span> and <span style="font-family: Courier New,Courier,monospace;">max</span>: define the minimum and the maximum size of a part.</li>
<li><span style="font-family: Courier New,Courier,monospace;">rel1</span> and <span style="font-family: Courier New,Courier,monospace;">rel2</span>: specify the relative position of a part.</li>
<li><span style="font-family: Courier New,Courier,monospace;">align</span>: relates to the alignment of the part in the parent object.</li>
<li><span style="font-family: Courier New,Courier,monospace;">fixed</span>: defines if the part has a fixed size.</li>
</ul>

<table class="note">
<tbody>
<tr>
<th class="note">Note</th>
</tr>
<tr>
<td class="note">The <span style="font-family: Courier New,Courier,monospace;">fixed</span> property can only be used on the <span style="font-family: Courier New,Courier,monospace;">TEXTBLOCK</span> type parts. Setting this property to <span style="font-family: Courier New,Courier,monospace;">fixed: 1 1</span> does not take into account the part for the calculation of the global size.</td>
</tr>
</tbody>
</table> 

<h2 id="hint" name="hint">Using Edje Size Hints</h2>

<p>Any <span style="font-family: Courier New,Courier,monospace;">Evas_Object</span> can have hints for the object to know how to properly position and resize. Edje uses these hints when swallowing an <span style="font-family: Courier New,Courier,monospace;">Evas_Object</span> to a position and resizing it in the <span style="font-family: Courier New,Courier,monospace;">SWALLOW</span> part of the EDC file.</p>

<p>The size hints are not a size enforcement, they only tell the parent object the desired size for the child object. The parent tries to get as close as possible to the hint.</p>

<p>Hints are set in an <span style="font-family: Courier New,Courier,monospace;">Evas_Object</span> using the following <span style="font-family: Courier New,Courier,monospace;">evas_object_size_hint_*()</span> functions:</p>

<ul>
<li id="min_size_hint" name="min_size_hint">Minimum size hint

<p>Set the hint for the object&#39;s minimum size, given in pixels. In the following example, the horizontal and vertical minimum size hint of an <span style="font-family: Courier New,Courier,monospace;">Evas_Object</span> is set to 0 pixels:</p>

<pre class="prettyprint">
Evas_Object *object;
evas_object_size_hint_min_set(object, 0, 0);
</pre>
</li>

<li>Maximum size hint

<p>Set the hint for the object&#39;s maximum size, given in pixels. In the following example, the horizontal and vertical maximum size hint of an <span style="font-family: Courier New,Courier,monospace;">Evas_Object</span> is set to 200 pixels:</p>
<pre class="prettyprint">evas_object_size_hint_max_set(object, 200, 200);</pre>
</li>

<li>Aspect size hint

<p>Set the hint for the object&#39;s aspect ratio. The available aspect size hints are:</p>

<ul>
<li><span style="font-family: Courier New,Courier,monospace;">EVAS_ASPECT_CONTROL_NONE</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">EVAS_ASPECT_CONTROL_HORIZONTAL</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">EVAS_ASPECT_CONTROL_VERTICAL</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">EVAS_ASPECT_CONTROL_BOTH</span></li>
</ul>

<p>The other parameters are the aspect width and height ratio. These integers are used to calculate the proportions of the object. If the aspect ratio terms are <span style="font-family: Courier New,Courier,monospace;">null</span>, the object&#39;s container ignores the aspect and scale of the object and occupies the whole available area.</p>

<p class="figure">Figure: Aspect control</p> 
<p align="center"><img alt="Aspect control" src="../../images/aspect-control-none.png" /></p> 
 
<p align="center"><img alt="Aspect control" src="../../images/aspect-control-horizontal.png" /></p> 

<p align="center"><img alt="Aspect control" src="../../images/aspect-control-both.png" /></p> 

<p>The following example sets the aspect size hint to <span style="font-family: Courier New,Courier,monospace;">EVAS_ASPECT_CONTROL_BOTH</span> with a width of 100 and a height of 200. So the aspect ratio must be 1/2.</p>

<pre class="prettyprint">
evas_object_size_hint_aspect_set(object, EVAS_ASPECT_CONTROL_BOTH, 100, 200);
</pre>
</li>

<li id="align_size_hint" name="align_size_hint">Align size hint
<p>Set the hint for the object&#39;s alignment. This hint is used when the object is smaller than its parent. The special <span style="font-family: Courier New,Courier,monospace;">EVAS_HINT_FILL</span> parameter uses the maximum size hints with a higher priority, if they are set. Also, any padding hints set on objects are added up to the alignment space on the final scene composition.</p>

<p class="figure">Figure: Alignment</p> 
<p align="center"><img alt="Alignment" src="../../images/align_hints.png" /></p> 

<p>In the following example, the special <span style="font-family: Courier New,Courier,monospace;">EVAS_HINT_FILL</span> parameter is used:</p>

<pre class="prettyprint">
evas_object_size_hint_align_set(object, EVAS_HINT_FILL, EVAS_HINT_FILL);
</pre>
</li>

<li>Weight size hint
<p>Set the hint for the object&#39;s weight. The weight tells to a container object how the given child is resized. If the <span style="font-family: Courier New,Courier,monospace;">EVAS_HINT_EXPAND</span> parameter is used, the child object&#39;s dimensions are expanded to fit the container&#39;s own.</p> 

<p>When several child objects have different weights in a container object, the container distributes the space it has to layout them by those factors. Most weighted children get larger in this process than the lighter ones.</p> 

<p>In the following example, the container is asked to expand the object in both directions:</p> 

<pre class="prettyprint">
evas_object_size_hint_weight_set(object, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
</pre>
</li>

<li>Padding size hint

<p>Set the hint for the object&#39;s padding space. Padding is extra space an object takes on each of its delimiting rectangle sides. The padding space is rendered transparent. Four hints can be defined for the left, right, top, and bottom padding.</p>

<p class="figure">Figure: Padding</p> 
<p align="center"><img alt="Padding" src="../../images/padding-hints.png" /></p> 

<p>In the following example, the padding hints are set to 5 pixels on each side of the object:</p>

<pre class="prettyprint">
evas_object_size_hint_padding_set(object, 5, 5, 5, 5);
</pre>
</li>
</ul>


<h2 id="Swallow" name="Swallow">Creating an Edje Swallow</h2>

<p>The parent of all layout components is Edje. Edje, as detailed in the <a href="edc_part_block_n.htm">EDJE Data Collection Reference</a>, is a library which converts EDC files into Evas objects. One of its main features is the possibility to create <span style="font-family: Courier New,Courier,monospace;">SWALLOW</span> objects. When a <span style="font-family: Courier New,Courier,monospace;">SWALLOW</span> object is added in Evas, it can contain any other <span style="font-family: Courier New,Courier,monospace;">Evas_Object</span>.</p>

<p>To create a swallow part: </p>
<ol>
<li>Create the EDC file.
<p>The file describes a group named <span style="font-family: Courier New,Courier,monospace;">container</span>, which contains a <span style="font-family: Courier New,Courier,monospace;">SWALLOW</span> type part named <span style="font-family: Courier New,Courier,monospace;">part.swallow</span>. The part is centered inside the parent (it is the default behavior) but there are 32 pixels free all around this part.</p>
<pre class="prettyprint">
collections
{
&nbsp;&nbsp;&nbsp;group 
&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: &quot;container&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;part 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: &quot;part.swallow&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: SWALLOW;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;default&quot; 0.0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1.offset: 31 31;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2.offset: -32 -32;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
</pre>

<p>Use the <span style="font-family: Courier New,Courier,monospace;">edje_cc</span> tool to compile the EDC file into a binary <span style="font-family: Courier New,Courier,monospace;">.edj</span> file:</p>

<pre class="prettyprint">
edje_cc -o container.edj container.edc
</pre>
</li>
<li>Create an Edje object and load the file:

<pre class="prettyprint">
edje = edje_object_add(evas_object_evas_get(parent));
edje_object_file_set(edje, &quot;container.edj&quot;, &quot;container&quot;);
</pre>

<table class="note">
<tbody>
<tr>
<th class="note">Note</th>
</tr>
<tr>
<td class="note">The <span style="font-family: Courier New,Courier,monospace;">edje_object_add()</span> function, as opposed to an elementary object, does not take an <span style="font-family: Courier New,Courier,monospace;">Evas_Object</span> as a parent. You must give the function the Evas on which the object is added. As the parent is already added on the Evas by elementary, retrieve a reference to it by using the <span style="font-family: Courier New,Courier,monospace;">evas_object_evas_get()</span> function.</td>
</tr>
</tbody>
</table> 


<p>Use the <span style="font-family: Courier New,Courier,monospace;">edje_object_file_set()</span> function to set the Edje file from which the object is loaded. The object itself is the name of the group as defined in the EDC file. In this case it is <span style="font-family: Courier New,Courier,monospace;">container</span>.
</p>
</li>
<li>Use the <span style="font-family: Courier New,Courier,monospace;">edje_object_part_swallow()</span> function to swallow any kind of <span style="font-family: Courier New,Courier,monospace;">Evas_Object</span> inside it:

<pre class="prettyprint">
ic = elm_icon_add(parent);
elm_image_file_set(ic, &quot;c1.png&quot;, NULL);
edje_object_part_swallow(edje, &quot;part.swallow&quot;, ic);
</pre>

<table class="note">
<tbody>
<tr>
<th class="note">Note</th>
</tr>
<tr>
<td class="note">The <span style="font-family: Courier New,Courier,monospace;">elm_image_file_set()</span> function parameters are linked to Edje. The second parameter in this example is a PNG file, but it can also be an Edje file. In that case, the third parameter must be the Edje group to load, exactly as previously shown with the <span style="font-family: Courier New,Courier,monospace;">edje_object_file_set()</span> function.</td>
</tr>
</tbody>
</table> 
</li>
</ol>

<h2 id="Layout" name="Layout">Using ELM Layouts</h2>

<p>A layout is a container component. For the basic use of the <span style="font-family: Courier New,Courier,monospace;">elm_layout</span> component with a default style, see the <a href="container_layout_n.htm">Layout</a> guide. The ELM layout takes a standard Edje design file and wraps it in a UI component. Layouts are the basis of graphical UI components used in Elementary.</p>

<p>To create a layout:</p>
<ol>
<li>Create a new elementary layout using the <span style="font-family: Courier New,Courier,monospace;">elm_layout_add()</span> function:

<pre class="prettyprint">
Evas_Object *layout;
layout = elm_layout_add(parent);
</pre>
</li>

<li>For Edje swallows, load an Edje file:
<ol type="a"><li>Create an Edje file that contains a black rectangle and an icon in the center:

<pre class="prettyprint">
images
{
&nbsp;&nbsp;&nbsp;image: &quot;c1.png&quot; COMP;
}

collections
{
&nbsp;&nbsp;&nbsp;group 
&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: &quot;my_layout&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;part 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: &quot;background&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: RECT; description 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;default&quot; 0.0; color: 0 0 0 255; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;part 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: &quot;background&quot;; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: IMAGE; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;description 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state: &quot;default&quot; 0.0; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel1.offset: 31 31; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rel2.offset: -32 -32; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default.image: &quot;c1.png&quot;; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
&nbsp;&nbsp;&nbsp;} 
}
</pre>
</li>
<li>Compile the file with the <span style="font-family: Courier New,Courier,monospace;">edje_cc -o edje_example.edj edje_example.edc</span> command.
</li>

<li>Load the file with the <span style="font-family: Courier New,Courier,monospace;">elm_layout_file_set()</span> function:

<pre class="prettyprint">
elm_layout_file_set(layout, &quot;edje_example.edj&quot;, &quot;my_layout&quot;);
</pre>

<p>The layout component can contain as many parts and children as described in its theme file (EDC). Some of these children can have special types:</p>

<ul>
<li><span style="font-family: Courier New,Courier,monospace;">SWALLOW</span> (content holder): 
<p>Only one object can be added to a <span style="font-family: Courier New,Courier,monospace;">SWALLOW</span>. The <span style="font-family: Courier New,Courier,monospace;">elm_layout_content_*()</span> functions are used to manage the objects in a <span style="font-family: Courier New,Courier,monospace;">SWALLOW</span> part. After being set to this part, the object&#39;s size, position, visibility, clipping, and other description properties are controlled by the description of the given part inside the Edje theme file.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">BOX</span>:
<p>The <span style="font-family: Courier New,Courier,monospace;">BOX</span> layout can be used through the <span style="font-family: Courier New,Courier,monospace;">elm_layout_box_*()</span> functions. It is very similar to the <span style="font-family: Courier New,Courier,monospace;">elm_box</span> component, but the <span style="font-family: Courier New,Courier,monospace;">BOX</span> layout&#39;s behavior is completely controlled by the Edje theme.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">TABLE</span>:
<p>The <span style="font-family: Courier New,Courier,monospace;">TABLE</span> layout is like the <span style="font-family: Courier New,Courier,monospace;">BOX</span> layout, but it is used through the <span style="font-family: Courier New,Courier,monospace;">elm_layout_table_*()</span> functions.</p></li>
</ul>
</li>
</ol></li></ol>

<p>ELM can send Edje signals to the EDC part using the <span style="font-family: Courier New,Courier,monospace;">elm_layout_signal_emit()</span> function. You can also use the <span style="font-family: Courier New,Courier,monospace;">elm_layout_signal_callback_add()</span> function to receive signals.</p>

<p>Use the following code to listen to any signals sent by the layout:</p>

<pre class="prettyprint">
elm_layout_signal_callback_add(layout, &quot;*&quot;, &quot;*&quot;, _signal_cb, NULL);

static void 
_signal_cb(void *data, Evas_Object *obj, const char *emission, const char *source)
{
&nbsp;&nbsp;&nbsp;printf(&quot;Info received from layout : %s %s\n&quot;, emission, source);
}
</pre>

<p>For more information on signals, see <a href="event_types_n.htm#events_guide_edje_with_layout">Managing Multiple Signal Emitters in Layouts</a>.</p>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>