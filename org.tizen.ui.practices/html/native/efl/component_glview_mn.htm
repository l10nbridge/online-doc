<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>GLView</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#add">Adding a GLView Component</a></li>
			<li><a href="#use">Using the GLView API</a></li>
			<li><a href="#callback">Using GLView Callbacks</a></li>
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>				
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>GLView</h1>

<p>This feature is supported in mobile applications only.</p>


<p>The GLView component renders OpenGL in an elementary object, which hides Evas GL complexity. For more information, see <a href="../../../../org.tizen.guides/html/native/graphics/opengles_n.htm">OpenGL ES</a> and the <a href="../../../../org.tizen.native.mobile.apireference/group__GLView.html">OpenGL</a> API.</p>

      <p class="figure">Figure: GLView gears example</p> 
  <p align="center"><img alt="GLView gears example" src="../../images/glview.png" /></p> 
  
      <p class="figure">Figure: GLView hierarchy</p> 
  <p align="center"><img alt="GLView hierarchy" src="../../images/glview_tree.png" /></p>

<h2 id="add">Adding a GLView Component</h2>

<p>Create a GLView component with the <span style="font-family: Courier New,Courier,monospace">elm_glview_add()</span> function:</p>
<pre class="prettyprint">
Evas_Object *glview, *parent;

glview = elm_glview_add(parent);
</pre>

<p>Set the size of the GLView to 200x200 pixels:</p>
<pre class="prettyprint">
elm_glview_size_set(glview, 200, 200);
</pre>

<h2 id="use">Using the GLView API</h2>

<p>To use the GLView:</p>

<ol>
<li>
<p>Configure the GLView rendering mode by activating the following rendering modes:</p>

<ul>
<li><span style="font-family: Courier New,Courier,monospace">ELM_GLVIEW_ALPHA</span>: Alpha channel rendering mode</li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_GLVIEW_DEPTH</span>: Depth buffer rendering mode</li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_GLVIEW_STENCIL</span>: Stencil buffer rendering mode</li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_GLVIEW_DIRECT</span>: Direct rendering mode</li>
<li><span style="font-family: Courier New,Courier,monospace">ELM_GLVIEW_CLIENT_SIDE_ROTATION</span>: The client handles the GL view rotation if direct rendering is enabled</li>
</ul>

<p>In the following example, the alpha channel and depth buffer rendering mode are enabled.</p>
<pre class="prettyprint">
elm_glview_mode_set(glview, ELM_GLVIEW_ALPHA | ELM_GLVIEW_DEPTH);
</pre>
</li>
<li>
<p>Set the resize policy. The following example shows how to decide what to do with the GL surface when the GLView component is resized.</p>
<pre class="prettyprint">
elm_glview_resize_policy_set(glview, ELM_GLVIEW_RESIZE_POLICY_RECREATE);
</pre>

<p>The GL surface is destroyed and recreated to the new size (default function). The resize policy can also be set to <span style="font-family: Courier New,Courier,monospace">ELM_GLVIEW_RESIZE_POLICY_SCALE</span>. In that case, only the image object is scaled, not the underlying GL surface.</p>
</li>
<li>
<p>Set the GLView rendering policy:</p>
<pre class="prettyprint">
elm_glview_render_policy_set(glview, ELM_GLVIEW_RENDER_POLICY_ALWAYS);
</pre>

<p>The GLView object is always redrawn during the rendering loop. It can also be set to <span style="font-family: Courier New,Courier,monospace">ELM_GLVIEW_RENDER_POLICY_ON_DEMAND</span> (default function), where the GLView component is redrawn only when it is visible.</p>
</li>
<li>
<p>Register the callbacks:</p>

<pre class="prettyprint">elm_glview_init_func_set(glview, _init_gl_cb);
elm_glview_del_func_set(glview, _del_gl_cb);
elm_glview_resize_func_set(glview, _resize_gl_cb);
elm_glview_render_func_set(glview, _draw_gl_cb);
</pre>

<ul>
<li><span style="font-family: Courier New,Courier,monospace">elm_glview_init_func_set()</span> registers an <span style="font-family: Courier New,Courier,monospace">init</span> callback that is called at the GLView object creation.</li>
<li><span style="font-family: Courier New,Courier,monospace">elm_glview_del_func_set()</span> registers a <span style="font-family: Courier New,Courier,monospace">del</span> function that is called when the GLView object is deleted.</li>
<li><span style="font-family: Courier New,Courier,monospace">elm_glview_resize_func_set()</span> registers the resize function that is called during the rendering loop when the GLView object is resized.</li>
<li><span style="font-family: Courier New,Courier,monospace">elm_glview_render_func_set()</span> registers the render function that is called when the GLView object must be redrawn.</li>
</ul>
</li>
</ol>

<h2 id="callback">Using GLView Callbacks</h2>

<p>The GLView component emits the following signals:</p>

<ul>
<li><span style="font-family: Courier New,Courier,monospace">focused</span>: The GLView component is focused. The <span style="font-family: Courier New,Courier,monospace">event_info</span> parameter points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Focus_Info</span>.</li>
<li><span style="font-family: Courier New,Courier,monospace">unfocused</span>: The GLView object is unfocused.</li>
</ul>

<p>To register a callback for the <span style="font-family: Courier New,Courier,monospace">focused</span> signal:</p>
<pre class="prettyprint">
{
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(glview, &quot;focused&quot;, focused_cb, data);
}

// Callback function for the &quot;focused&quot; signal
// This callback is called when the GLView is focused
void 
focused_cb(void *data, Evas_Object *obj, void  *event_info)
{
&nbsp;&nbsp;&nbsp;Elm_Focus_Info *fi = event_info;

&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;GLView is focused\n&quot;);
}
</pre>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

