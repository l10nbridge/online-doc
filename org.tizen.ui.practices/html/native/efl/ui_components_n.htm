<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>UI Components: Handling Elementary UI Component Libraries</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
	<p class="toc-title">Content</p>
		<ul class="toc">
				<li><a href="#basic">Basic Usage</a></li>
				<li><a href="#topic">Topics on UI Components</a></li>
		</ul>		
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Elementary.html">Elementary API for Wearable Native</a></li>	
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

<h1>UI Components</h1>

<p>Elementary library provides a set of pre-built UI components
   that allow you to build a rich graphical user interface for your applications.
   Each profile provides different set of UI components, as you can see in <a href="ui_components_mn.htm">mobile UI components</a>
   and <a href="ui_components_wn.htm">wearable UI components</a>.
   This document teaches you the common usage and general features of UI components.
   The precondition of using Elementary UI components is covered in <a href="getting_started_n.htm">Getting started</a>.
   Elementary UI components share the same APIs for general features.
   For more information,
   see <a href="../../../../org.tizen.native.mobile.apireference/group__General.html">API Reference</a> .</p>

<p class="figure">Figure: Mobile UI components</p>
<p align="center"><img alt="A button" src="../../images/UIComponents.png" /></p>

<h2 id="basic">Basic Usage</h2>

<p>UI components have a common usage as follows:</p>
<ol>
   <li>Add an object with <span style="font-family: Courier New,Courier,monospace">elm_[UIcomponent]_add()</span> function.
   <li>Set a style to the object with
       <span style="font-family: Courier New,Courier,monospace">elm_object_style_set()</span> function
       and fill the layout of the style with a text or an image if necessary.
       You can skip this step and use the default style.
   </li>
   <li>Arrange the object in a <a href="ui_layouts_n.htm">UI layout</a> you built.</li>
   <li>Register callback functions with <span style="font-family: Courier New,Courier,monospace">evas_object_smart_callback_call()</span> function.</li>
</ol>

<h3>Style</h3>

<p>The style of a UI component refers to the graphical appearance determined by the layout, shapes, fonts, and colors.
   Every UI component has a distinguished layout according to the function and feature of it,
   and the layout of a UI component varies somewhat according to the styles.
   In the layout, there are spaces for texts or images which sometimes remain empty for users to fill.
   In EFL, we call the space a <span style="font-family: Courier New,Courier,monospace">part</span>
   which comes from <a href="learn_edc_part_n.htm">part</a> in <a href="learn_edc_intro_n.htm">EDC</a>.
   A layout of a UI component has two types of parts, a text part and a swallow part.
   A swallow part is a blank you can fill with any kind of object.</p>

<p>The following figure shows a default style button.
   The default style of a button has one swallow part and one text part.
   If you create a button and do not set a text or an image, the button will look like the left side.
   If you set a text and an image to the button, it will look like the right side.</p>

<p class="figure">Figure: An empty button and a button filled with an icon and a text</p>
<p align="center"><img alt="A button" src="../../images/UIComponent_buttons.png" /></p>

<p>The following code snippet shows how to implement the button at right:</p>

<pre class="prettyprint">
Evas_Object *btn, *icon;

btn = elm_button_add(parent);
icon = elm_icon_add(btn);
elm_icon_standard_set(icon, "home");

// set a text to the button
elm_object_text_set(btn, "Home");

// set an icon to the button
elm_object_part_content_set(btn, "icon", icon);
</pre>

<p>Use the following functions to fill a part with a text or an icon:
<ul>
   <li><span style="font-family: Courier New,Courier,monospace">elm_object_part_text_set(Evas_Object *obj, char *part, char *text)</span></li>
   <li><span style="font-family: Courier New,Courier,monospace">elm_object_part_content_set(Evas_Object *obj, char *part, Evas_Object *icon)</span></li>
</ul>

<p>If the part name is <span style="font-family: Courier New,Courier,monospace">default</span>,
   you can use the following functions without specifying the part name:

<ul>
   <li><span style="font-family: Courier New,Courier,monospace">elm_object_text_set(Evas_Object *obj, char *text)</span></li>
   <li><span style="font-family: Courier New,Courier,monospace">elm_object_content_set(Evas_Object *obj, Evas_Object *icon)</span></li>
</ul>

<h3>Callback</h3>

<p>UI components emit signals on specific situations so that users can do some action
   by registering a callback function connected to the signal.
   The callback is called "smart callback" distinguished from event callback.
   For example, a button object emits "clicked" signal when it is clicked,
   and users can define a specific action everytime the button is clicked.
   Each UI component provides different kinds of signals.
   You can check out available signals on each UI component's page.</p>

<p>Use <span style="font-family: Courier New,Courier,monospace">evas_object_smart_callback_add()</span> function
   to register a function.
   The following code snippet shows how to register a callback function to "clicked" signal:</p>

<pre class="prettyprint">
// add a callback function connected to "clicked" signal
evas_object_smart_callback_add(btn, "clicked", _clicked_cb, NULL);
</pre>

<pre class="prettyprint">
// print a log everytime the button is clicked
void _clicked_cb(void *data, Evas_Object *obj, void *event_info)
{
   dlog_print(DLOG_INFO, LOG_TAG, "Button clicked\n");
}
</pre>

<p>Besides smart signals which are defined on Elementary level,
   Evas event signals are also available on UI components.
   You can register callback functiosn connected to input events (key up, key down, mouse wheel)
   using <span style="font-family: Courier New,Courier,monospace">evas_object_event_callback_add()</span>.</p>

<p>The following code snippet shows how to register a callback function on mouse down event:</p>

<pre class="prettyprint">
// add a callback function on mouse down event
evas_object_event_callback_add(btn, EVAS_CALLBACK_MOUSE_DOWN, _down_cb, NULL);
</pre>

<pre class="prettyprint">
// print a log everytime the button is clicked
void _down_cb(void *data, Evas *e, Evas_Object *obj, void *event_info)
{
   dlog_print(DLOG_INFO, LOG_TAG, "Mouse down on button\n");
}
</pre>
<p>For more information about event handling, see <a href="event_handling_n.htm">Event Handling</a>.</p>

<h2>Topics on UI Components</h2>

<p></p>

<ul>
   <li><a href="configuring_n.htm"><strong>Configuration</strong></a>
   <p>UI components are under the influence of the configuration of Elementary.
      Elementary configuration consists of a set of preconfigured options,
      which are linked to form an Elementary profile.
      The configuration affects the entire look and feel of an application.
   </li>

   <li><a href="component_custom_n.htm"><strong>Customization</strong></a>
   <p>Besides the predefined styles of each UI component,
      EFL provides a way to customize the graphical user interface by Edje library.
   </li>

   <li><a href="component_focus_n.htm"><strong>Focus Management</strong></a>
   <p>Elementary user interface has the concept of "focus".
      A UI component receives input from the user when it is focused.</p>
   </li>

   <li><a href="ui_scalability_n.htm"><strong>Scalability</strong></a>
   <p>To ensure that your application works well in diverse devices,
      you should consider scalability whe designing the application layout.</p>
   </li>
</ul>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
