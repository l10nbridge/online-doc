<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Plug</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#add">Adding a Plug Component</a></li>
			<li><a href="#use">Using the Plug</a></li>
			<li><a href="#callback">Using Plug Callbacks</a></li>
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Edje.html">Edje API for Mobile Native</a></li>
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__Elementary.html">Elementary API for Mobile Native</a></li>			
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Plug</h1>

<p>This feature is supported in mobile applications only.</p>

<p>The plug component shows an <span style="font-family: Courier New,Courier,monospace">Evas_Object</span> created by an other process. It can be used anywhere the same way as any other elementary UI component.</p>

<p>For more information, see the <a href="../../../../org.tizen.native.mobile.apireference/group__Plug.html">Plug</a> API.</p>

  <p class="figure">Figure: Plug hierarchy</p> 
<p align="center"> <img alt="Plug hierarchy" src="../../images/plug_tree.png" /> </p> 

<h2 id="add">Adding a Plug Component</h2>  

<p>To create a plug, use the <span style="font-family: Courier New,Courier,monospace">elm_plug_add()</span> function:</p>

<pre class="prettyprint">
Evas_Object *plug, *parent;
plug = elm_plug_add(parent);
</pre>

<h2 id="use">Using the Plug</h2>

<p>To use the plug:</p>
<ol>
<li>
<p>The socket image provides the service where to connect the plug object with the <span style="font-family: Courier New,Courier,monospace">elm_plug_connect()</span> function. In this process, use the service name and number set by the socket you want to connect to.</p>

<p>The following example connects to a service named <span style="font-family: Courier New,Courier,monospace">plug_test</span> on the number 0.</p>

<pre class="prettyprint">
elm_plug_connect(plug, &quot;plug_test&quot;, 0, EINA_FALSE);
</pre>
</li>
<li>
<p>Retrieve the <span style="font-family: Courier New,Courier,monospace">Evas_Object</span> corresponding to the distant image with the <span style="font-family: Courier New,Courier,monospace">elm_plug_image_object_get()</span> function:</p>

<pre class="prettyprint">
Evas_Object *plug_img = elm_plug_image_object_get(plug);
</pre>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">The socket to connect to must be started with the <span style="font-family: Courier New,Courier,monospace">elm_win_socket_listen()</span> function in the other process on the remote window object (it is called <span style="font-family: Courier New,Courier,monospace">remote_win</span> here).</td> 
    </tr> 
   </tbody> 
  </table>

<pre class="prettyprint">
// Create a remote window in the other process 
Elm_Win *remote_win = elm_win_add(NULL, &quot;Window Socket&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELM_WIN_SOCKET_IMAGE);
// Create a socket named &quot;plug_test&quot; and listen to it
elm_win_socket_listen(remote_win, &quot;plug_test&quot;, 0, EINA_FALSE);
</pre>
</li>
</ol>

<h2 id="callback">Using Plug Callbacks</h2>

<p>The plug component emits the following signals:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">clicked</span>: The image was clicked (press/release). The event parameter of the callback is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li>
<li><span style="font-family: Courier New,Courier,monospace">image,deleted</span>: The server side was deleted. The event parameter of the callback is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li>
<li><span style="font-family: Courier New,Courier,monospace">image,resized</span>: The server side was resized. The event parameter of the callback is <span style="font-family: Courier New,Courier,monospace">Evas_Coord_Size</span> (2 integers).</li>
</ul>
<p>The following example shows how to register a callback on the <span style="font-family: Courier New,Courier,monospace">clicked</span> signal:</p>
<pre class="prettyprint">
{
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(plug, &quot;clicked&quot;, clicked_cb, data);
}

// Callback function for the &quot;clicked&quot; signal
// This callback is called when a plug is clicked
void 
clicked_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Plug is clicked\n&quot;);
}
</pre>


<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

