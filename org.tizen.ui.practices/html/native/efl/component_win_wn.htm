<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Win</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#add">Adding a Window Component</a></li>
			<li><a href="#close">Closing a Window</a></li>
			<li><a href="#callback">Using the Window Callbacks</a></li>
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Edje__Group.html">Edje API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__MODULE.html">Efl Extension API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Elementary.html">Elementary API for Wearable Native</a></li>			
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Win</h1>

<p>This feature is supported in wearable applications only.</p>

<p>The win component is the root UI component that is often used in an application. It allows the developer create content in a window, and it is handled by the window manager.</p>

<p>For more information, see the <a href="../../../../org.tizen.native.wearable.apireference/group__Win.html">Win</a> API.</p>

    <p class="figure">Figure: Win hierarchy</p> 
  <p align="center"><img alt="Win hierarchy" src="../../images/win_tree.png" /></p>  

<h2 id="add">Adding a Window Component</h2>

<p>To add a window component:</p>
<ul>
<li>
<p>Create a new window and change the title:</p>
<pre class="prettyprint">
Evas_Object *window;

// Create a window 
window = elm_win_add(NULL, &quot;main&quot;, ELM_WIN_BASIC);

// Change the window title 
elm_win_title_set(window, &quot;Example Window&quot;);
</pre>

<p>The first parameter of the <span style="font-family: Courier New,Courier,monospace">elm_win_add()</span> function is the parent window. For example, for a dialog you want to have the main window as the parent. In this example, the parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>, meaning there is no parent. The second parameter (<span style="font-family: Courier New,Courier,monospace">main</span>) is the name of the window used by the window manager for identifying the window uniquely amongst all the windows within the application (and all instances of the application).The final parameter defines the window type as basic.</p>
</li>
<li><p>Create a new window with a title and a background:</p>
<pre class="prettyprint">
Evas_Object *window;

// Create a standard window 
window = elm_win_util_standard_add(&quot;main&quot;, &quot;Example Window&quot;);
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">elm_win_util_standard_add()</span> function is a shortcut of the <span style="font-family: Courier New,Courier,monospace">elm_win_add()</span> and <span style="font-family: Courier New,Courier,monospace">elm_win_title_set()</span> functions, creating a basic type window. In addition, it creates a standard background to the window with the <span style="font-family: Courier New,Courier,monospace">elm_bg_add()</span> function.</p>

</li>
</ul>

<p>You can add content in the window with the <span style="font-family: Courier New,Courier,monospace">elm_win_resize_object_add()</span> function. This ensures that when the window is resized, the content inside is resized as well.</p>

<h2 id="close">Closing a Window</h2>

<p>When a window is closed outside the program control, a <span style="font-family: Courier New,Courier,monospace">delete,request</span> signal is emitted to indicate that this event occurred.</p>
<p>If you enable auto deletion for the window, the window is automatically destroyed after the <span style="font-family: Courier New,Courier,monospace">delete,request</span> signal is emitted. If auto deletion is disabled, the window is not destroyed and the program does so when required. The auto deletion is disabled by default (<span style="font-family: Courier New,Courier,monospace">EINA_FALSE</span>). To enable auto deletion:</p>
<pre class="prettyprint">
elm_win_autodel_set(window, EINA_TRUE);
</pre>

<p>To close the window, use the <span style="font-family: Courier New,Courier,monospace">evas_object_del()</span> function. The window is destroyed and the <span style="font-family: Courier New,Courier,monospace">delete,request</span> signal is emitted.</p>

<h2 id="callback">Using the Window Callbacks</h2>

<p>To receive notifications about the window events, listen to the following signals:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">delete,request</span>: The window deletion is requested.</li>
<li><span style="font-family: Courier New,Courier,monospace">focus,in</span>: The window received focus.</li>
<li><span style="font-family: Courier New,Courier,monospace">focus,out</span>: The window lost focus.</li>
<li><span style="font-family: Courier New,Courier,monospace">moved</span>: The window that holds the canvas is moved.</li>
<li><span style="font-family: Courier New,Courier,monospace">withdrawn</span>: The window is managed normally but is removed from the view.</li>
<li><span style="font-family: Courier New,Courier,monospace">iconified</span>: The window is minimized (for example, into an icon or a taskbar).</li>
<li><span style="font-family: Courier New,Courier,monospace">normal</span>: The window is in the normal state (not withdrawn or iconified).</li>
<li><span style="font-family: Courier New,Courier,monospace">stick</span>: The window shows on all desktops.</li>
<li><span style="font-family: Courier New,Courier,monospace">unstick</span>: The window shows only on one desktop.</li>
<li><span style="font-family: Courier New,Courier,monospace">fullscreen</span>: The window is fullscreen.</li>
<li><span style="font-family: Courier New,Courier,monospace">unfullscreen</span>: The window stops being fullscreen.</li>
<li><span style="font-family: Courier New,Courier,monospace">maximized</span>: The window is maximized.</li>
<li><span style="font-family: Courier New,Courier,monospace">unmaximized</span>: The window is diminished.</li>
<li><span style="font-family: Courier New,Courier,monospace">wm,rotation,changed</span>: The rotation of the window is changed by the Windows Manager.</li>
<li><span style="font-family: Courier New,Courier,monospace">ioerr</span>: A low-level I/O error occurred in the display system.</li>
<li><span style="font-family: Courier New,Courier,monospace">indicator,prop,changed</span>: The property, or indicator mode and indicator opacity are changed.</li>
<li><span style="font-family: Courier New,Courier,monospace">rotation,changed</span>: The rotation of the window is changed.</li>
<li><span style="font-family: Courier New,Courier,monospace">profile,changed</span>: The profile of the window is changed.</li>
<li><span style="font-family: Courier New,Courier,monospace">aux,hint,allowed</span>: The window auxiliary hint is allowed.</li>
<li><span style="font-family: Courier New,Courier,monospace">access,changed</span>: The access function of the window is changed.</li>
</ul>
<p>In all these signals, the <span style="font-family: Courier New,Courier,monospace">event_info</span> callback parameter is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p>
<p>To register and define a callback for the <span style="font-family: Courier New,Courier,monospace">fullscreen</span> signal:</p>
<pre class="prettyprint">
{
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(window, &quot;fullscreen&quot;, fullscreen_cb, data);
}

// Callback for the &quot;fullscreen&quot; signal
// Called when the window becomes fullscreen
void 
fullscreen_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Window fullscreen\n&quot;);
}
</pre>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

