<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Button</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#add">Adding a Button Component</a></li>
			<li><a href="#icon">Adding an Icon Inside a Button</a></li>
			<li><a href="#text">Adding Text Inside a Button</a></li>
			<li><a href="#styles">Using Button Styles</a></li>
			<li><a href="#callback">Using the Button Callbacks</a></li>
			<li><a href="#autorepeat">Using the Autorepeat Feature</a></li>
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Edje.html">Edje API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__MODULE.html">Efl Extension API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Elementary.html">Elementary API for Wearable Native</a></li>			
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Button</h1>

<p>This feature is supported in wearable applications only.</p>

<p>The Elementary button component is a simple push button. It is composed of a label icon and an icon object. It has an autorepeat feature.</p>

<p>For more information, see the <a href="../../../../org.tizen.native.wearable.apireference/group__Button.html">Button</a> API.</p>

<p class="figure">Figure: Button component</p>
<p align="center"><img alt="Button component" src="../../images/button_wn.png" /></p>

<p class="figure">Figure: Button hierarchy</p>
<p align="center"><img alt="Button hierarchy" src="../../images/button_tree.png" /></p>

<h2 id="add">Adding a Button Component</h2>

<p>To create a button, use the <span style="font-family: Courier New,Courier,monospace">elm_button_add()</span> function:</p>
<pre class="prettyprint">
Evas_Object *button, *parent;

// Create a button
button = elm_button_add(parent);</pre>

<h2 id="icon">Adding an Icon Inside a Button</h2>

<p>To update the icon, use the <span style="font-family: Courier New,Courier,monospace">elm_object_part_content_set()</span> function with the <span style="font-family: Courier New,Courier,monospace">icon</span> part name:</p>

<pre class="prettyprint">
Evas_Object *ic;
ic = elm_icon_add(button);
elm_image_file_set(ic, &quot;icon.png&quot;, NULL);
elm_object_part_content_set(button, &quot;icon&quot;, ic);
</pre>

<h2 id="text">Adding Text Inside a Button</h2>

<p>Modify the label using the <span style="font-family: Courier New,Courier,monospace">elm_object_text_set()</span> function:</p>

<pre class="prettyprint">
elm_object_text_set(button, &quot;Click me!&quot;);
</pre>

<h2 id="styles">Using Button Styles</h2>

<p>Various styles can be used on the button.</p>
<p>The following styles are available for a rectangular screen:</p>
<ul>
    <li><span style="font-family: Courier New,Courier,monospace">default</span></li>
    <li><span style="font-family: Courier New,Courier,monospace">green</span></li>
    <li><span style="font-family: Courier New,Courier,monospace">orange</span></li>
    <li><span style="font-family: Courier New,Courier,monospace">red</span></li>
    <li><span style="font-family: Courier New,Courier,monospace">nextdepth</span></li>
</ul>
<p>The following styles are available for a circular screen:</p>
<ul>
    <li><span style="font-family: Courier New,Courier,monospace">default</span></li>
    <li><span style="font-family: Courier New,Courier,monospace">bottom</span></li>
</ul>

<p>To change the style of the button, call the <span style="font-family: Courier New,Courier,monospace">elm_object_style_set()</span> function on the button object:</p>

<pre class="prettyprint">
// Example for the rectangular UI component
elm_object_style_set(button, &quot;nextdepth&quot;);

// Example for the circular UI component
elm_object_style_set(button, &quot;bottom&quot;);
</pre>

<h2 id="callback">Using the Button Callbacks</h2>

<p>The button component emits the following signals:</p>

<ul>
    <li><span style="font-family: Courier New,Courier,monospace">clicked</span>: The user clicked the button (press/release).</li>
    <li><span style="font-family: Courier New,Courier,monospace">repeated</span>: The user pressed the button without releasing it.</li>
    <li><span style="font-family: Courier New,Courier,monospace">pressed</span>: The user pressed the button.</li>
    <li><span style="font-family: Courier New,Courier,monospace">unpressed</span>: The user released the button after pressing it.</li>
</ul>

<p>For all these signals the <span style="font-family: Courier New,Courier,monospace">event_info</span> parameter returned in the callback is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</p>

<p>To register and define a callback function called by the clicked signal:</p>
<pre class="prettyprint">
{
&nbsp;&nbsp;&nbsp;evas_object_smart_callback_add(button, &quot;clicked&quot;, clicked_cb, data);
}
// Callback function for the &quot;clicked&quot; signal
// This callback is called when the button is clicked by the user
void 
clicked_cb(void *data, Evas_Object *obj, void *event_info)
{
&nbsp;&nbsp;&nbsp;dlog_print(DLOG_INFO, LOG_TAG, &quot;Button clicked\n&quot;);
}
</pre>

<h2 id="autorepeat">Using the Autorepeat Feature</h2>

<p>The autorepeat feature is enabled by default. It consists of calling the <span style="font-family: Courier New,Courier,monospace">repeated</span> signal when the user keeps the button pressed. This feature can be disabled with the <span style="font-family: Courier New,Courier,monospace">elm_button_autorepeat_set()</span> function. The autorepeat is configured with the following functions:</p>
<ul>
    <li><span style="font-family: Courier New,Courier,monospace">elm_button_autorepeat_initial_timeout_set()</span>: Set the initial timeout before the autorepeat event is generated.</li>
    <li><span style="font-family: Courier New,Courier,monospace">elm_button_autorepeat_gap_timeout_set()</span>: Set the interval between 2 autorepeat events.</li>
</ul>

<p>To manage the autorepeat features:</p>
<ul>
<li>
<p>Disable the autorepeat feature:</p>
<pre class="prettyprint">
elm_button_autorepeat_set(button, EINA_FALSE);
</pre>
</li>
<li>
<p>Enable the autorepeat feature:</p>
<pre class="prettyprint">
elm_button_autorepeat_set(button, EINA_TRUE);
</pre>
</li>
<li>
<p>Set the initial timeout to 5 seconds:</p>
<pre class="prettyprint">
elm_button_autorepeat_initial_timeout_set(button, 5.0);
</pre>
</li>
<li>
<p>Set the gap between 2 signals to 0.5 seconds:</p>
<pre class="prettyprint">
elm_button_autorepeat_gap_timeout_set(button, 0.5);
</pre>
</li>
</ul>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

