<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>Circle Spinner</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#add">Adding an Eext Spinner Object</a></li>
			<li><a href="#event">Activating a Rotary Event</a></li>
			<li><a href="#configure">Configuring the Circle Spinner</a></li>
			<li><a href="#property">Using the Circle Spinner Properties</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Edje.html">Edje API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__MODULE.html">Efl Extension API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Elementary.html">Elementary API for Wearable Native</a></li>	
			</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Circle Spinner</h1>

<p>This feature is supported in wearable applications only.</p>
 
<p>The circle spinner extends <span style="font-family: Courier New,Courier,monospace">elm_spinner</span> by visualizing the value of <span style="font-family: Courier New,Courier,monospace">elm_spinner</span>. If a rotary event is activated by the <span style="font-family: Courier New,Courier,monospace">eext_rotary_object_event_activated_set()</span> function, the circle spinner increases or decreases the value of <span style="font-family: Courier New,Courier,monospace">elm_spinner</span> through a clockwise or counter-clockwise rotary event.</p>

<p class="figure">Figure: Circle Spinner</p> 
<p align="center"><img alt="Circle Spinner" src="../../images/circle_spinner.png" /></p> 

<h2 id="add">Adding an Eext Spinner Object</h2>

<p>To create a circle spinner:</p>
<ol><li>Create an <span style="font-family: Courier New,Courier,monospace">elm_spinner</span> object.</li>
<li>Set the object style as &quot;circle&quot;.</li>
<li>Create an <span style="font-family: Courier New,Courier,monospace">eext_spinner</span> object using the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_spinner_add()</span> function.</li></ol>

<pre class="prettyprint">
Evas_Object *spinner, *circle_spinner;
spinner = elm_spinner_add(parent);
elm_object_style_set(spinner, &quot;circle&quot;);
circle_spinner = eext_circle_object_spinner_add(spinner, surface);
</pre>

<h2 id="event">Activating a Rotary Event</h2>

<p>You can activate and deactivate the circle spinner by using the <span style="font-family: Courier New,Courier,monospace">eext_rotary_object_event_activated_set()</span> function. If its second parameter is set to <span style="font-family: Courier New,Courier,monospace">EINA_TRUE</span>, the circle spinner can receive rotary events.</p>
<pre class="prettyprint">
eext_rotary_object_event_activated_set(circle_spinner, EINA_TRUE);
</pre>

<h2 id="configure">Configuring the Circle Spinner</h2>

<p>The circle spinner shows the <span style="font-family: Courier New,Courier,monospace">elm_spinner</span> value through a marker, which indicates the value in the round. It has internal minimum and maximum spinner values, and calculates the min and max angles in order to draw the marker. The current value of the circle spinner is calculated internally as well.</p>

<p>To handle the circle spinner value, use the <span style="font-family: Courier New,Courier,monospace">elm_spinner</span> functions. They are synchronized automatically with the user values. You can also use the <span style="font-family: Courier New,Courier,monospace">elm_spinner</span> callback functions.</p>

<p>If you want to customize the angle offset of the marker (not to follow the internally-calculated system value), use the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_spinner_angle_set()</span> function. For example, to set the circle spinner angle value with 2.0:</p>
<pre class="prettyprint">
eext_circle_object_spinner_angle_set(circle_spinner, 2.0);
</pre>

<p>The formula for calculating the default angle offset of the circle spinner is:</p>
<pre class="prettyprint">(360/ max - min) * step</pre>
<p>After calling the <span style="font-family: Courier New,Courier,monospace">eext_circle_object_spinner_angle_set()</span> function, the calculation formula for the angle offset is changed:</p>
<pre class="prettyprint">(360/ max - min) * step * 2.0</pre>

<p>You can also use the same above function to give the angle offset per each rotary callback.</p>

<h2 id="property">Using the Circle Spinner Properties</h2>

<p>A circle spinner has the <span style="font-family: Courier New,Courier,monospace">default</span> style, which is applied automatically. It also has a <span style="font-family: Courier New,Courier,monospace">default</span> item, which draws a marker.</p>

<p>You can set and get various circle spinner properties with circle object functions, such as <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_set()</span>, <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_min_max_get()</span>, <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_set()</span>, and <span style="font-family: Courier New,Courier,monospace">eext_circle_object_value_get()</span>.</p>
  

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>