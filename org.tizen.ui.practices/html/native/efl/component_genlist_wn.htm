<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>

	<title>Genlist</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#styles">Defining the Genlist Item Style</a></li>
			<li><a href="#add">Adding a Genlist Component</a></li>
			<li><a href="#items">Creating and Deleting Items</a></li>
			<li><a href="#manage">Managing Items</a></li>
			<li><a href="#selection">Selecting Items</a></li>
			<li><a href="#callback">Using Genlist Callbacks</a></li>
		</ul>
			<p class="toc-title">Related Info</p>
		<ul class="toc">
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Edje.html">Edje API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__CAPI__EFL__EXTENSION__MODULE.html">Efl Extension API for Wearable Native</a></li>
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__Elementary.html">Elementary API for Wearable Native</a></li>			
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">
<h1>Genlist</h1>

<p>This feature is supported in wearable applications only.</p>

<p>Genlist is a UI component that displays a scrollable list of items. It allows a lot of entries while being fast and has a low memory footprint, as only the visible items are allocated in the memory.</p>

<p>For more information, see <a href="genlist_tutorial_wn.htm">Creating Wearable Genlists</a> and the <a href="../../../../org.tizen.native.wearable.apireference/group__Genlist.html">Genlist</a> API.</p>
  
<p class="figure">Figure: Genlist component</p> 
<p align="center"> <img alt="Genlist component" src="../../images/genlist.png" /> </p> 

<p class="figure">Figure: Genlist hierarchy</p> 
<p align="center"> <img alt="Genlist hierarchy" src="../../images/genlist_htree.png" /> </p> 

<h2 id="styles">Defining the Genlist Item Style</h2>

<p>An item can have 0 or more texts, 0 or more contents, and 0 or more boolean states. This is defined in the Edje item theme style. Genlist looks for data items named respectively <span style="font-family: Courier New,Courier,monospace">labels</span>, <span style="font-family: Courier New,Courier,monospace">contents</span>, and <span style="font-family: Courier New,Courier,monospace">states</span> in the Edje file. The <span style="font-family: Courier New,Courier,monospace">default</span> item style provides 1 text part (<span style="font-family: Courier New,Courier,monospace">elm.text</span>), 2 content parts (<span style="font-family: Courier New,Courier,monospace">elm.swallow.icon</span> and <span style="font-family: Courier New,Courier,monospace">elm.swallow.end</span>) and no state parts.</p>

<p>The following item styles are available:</p>
  <ul>
	<li><span style="font-family: Courier New,Courier,monospace">default</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">groupindex</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">1text</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">1text.1icon</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">2text</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">2text.1</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">1text.1icon.divider</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">1text.1icon.1</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">2text.1icon.1</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">multiline/1text</span></li>
	<li><span style="font-family: Courier New,Courier,monospace">multiline/2text</span></li>
  </ul>

<p>The following figures show examples of the item styles.</p>

<p class="figure">Figure: 1text item style</p> 
<p align="center"> <img alt="1 text item style" src="../../images/genlist1_wn.png" /> </p> 

<p class="figure">Figure: 1text.1icon.1 item style</p> 
<p align="center"> <img alt="1text.1icon.1 item style" src="../../images/genlist2_wn.png" /> </p> 

<p class="figure">Figure: 2text.1icon.1 item style</p> 
<p align="center"> <img alt="2text.1icon.1 item style" src="../../images/genlist3_wn.png" /> </p> 

<p>For more information on creating a new genlist item style, see <a href="component_custom_n.htm">Customizing Components</a>.</p>

<h2 id="add">Adding a Genlist Component</h2>

<p>To add a genlist component, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_add()</span> function:</p>
<pre class="prettyprint">
Evas_Object *genlist, *parent;
genlist = elm_genlist_add(parent);
</pre>

<h2 id="items">Creating and Deleting Items</h2>

<p>To save up memory, genlist allocates and deletes items on the go, while the user is scrolling the list. To enable that, create and fill a <span style="font-family: Courier New,Courier,monospace">Elm_Genlist_Item_Class</span> structure that informs the genlist component which callbacks to call when an item is created or deleted.</p>
<pre class="prettyprint">
Elm_Genlist_Item_Class *itc = elm_genlist_item_class_new();

itc-&gt;item_style = &quot;default&quot;;
itc-&gt;decorate_item_style = NULL;
itc-&gt;decorate_all_item_style = NULL;
itc-&gt;func.text_get = _item_label_get;
itc-&gt;func.content_get = _item_content_get;
itc-&gt;func.state_get = _item_state_get;
itc-&gt;func.del = _item_del;
</pre>

<p>The <span style="font-family: Courier New,Courier,monospace">item_style</span>, <span style="font-family: Courier New,Courier,monospace">decorate_item_style</span>, and <span style="font-family: Courier New,Courier,monospace">decorate_all_item_style</span> attributes define the names of the item style, the decorate mode item style, and the decorate all item style.</p>

<p>The <span style="font-family: Courier New,Courier,monospace">func</span> structure contains pointers to functions that are called when an item is going to be created or deleted. All of them receive a data parameter that points to the same data passed to the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_append()</span> function and related item creation functions, and an <span style="font-family: Courier New,Courier,monospace">obj</span> parameter that points to the genlist object itself.</p>
  <ul>
   <li><span style="font-family: Courier New,Courier,monospace">text_get</span>
   <p>This function receives a <span style="font-family: Courier New,Courier,monospace">PART</span> parameter that is the name string of one of the existing text parts in the Edje group implementing the item&#39;s theme. It has to return a string (duplicated with the <span style="font-family: Courier New,Courier,monospace">strdup()</span> function) corresponding to the <span style="font-family: Courier New,Courier,monospace">PART</span> parameter. The caller is in charge of freeing the string when done.</p></li>

   <li><span style="font-family: Courier New,Courier,monospace">content_get</span>
   <p>The <span style="font-family: Courier New,Courier,monospace">PART</span> parameter is the name string of one of the existing swallow parts in the Edje group. When no content is desired, it must return <span style="font-family: Courier New,Courier,monospace">NULL</span>, or otherwise, a valid object handle. The object is deleted by the genlist on its deletion or when the item is <span style="font-family: Courier New,Courier,monospace">unrealized</span>.</p></li>

   <li><span style="font-family: Courier New,Courier,monospace">state_get</span>
   <p>The <span style="font-family: Courier New,Courier,monospace">PART</span> parameter is the name string of one of the state parts in the Edje group implementing the item&#39;s theme. It returns <span style="font-family: Courier New,Courier,monospace">EINA_FALSE</span> for false/off or <span style="font-family: Courier New,Courier,monospace">EINA_TRUE</span> for true/on. The default is false. Genlists emit a signal to the <span style="font-family: Courier New,Courier,monospace">PART</span> parameter&#39;s theming Edje object with <span style="font-family: Courier New,Courier,monospace">elm,state,xxx,active</span> as <span style="font-family: Courier New,Courier,monospace">emission</span> and <span style="font-family: Courier New,Courier,monospace">elm</span> as <span style="font-family: Courier New,Courier,monospace">source</span> parameter, when the state is true. xxx is the name of the (state) part.</p></li>

   <li><span style="font-family: Courier New,Courier,monospace">del</span>
   <p>This function is called when the genlist item is deleted. It deletes any data that is allocated at the item creation.</p></li>
</ul>

<h2 id="manage">Managing Items</h2>

<p>To manage items:</p>
<ul>
<li>Add items:
<p>To add an item, several functions can be used. The <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_append()</span> function adds an item to the end of the list, or if there is a parent list, to the end of all the child items of the parent list. The <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_prepend()</span> function is otherwise the same but adds to the beginning of the list or children lists. The <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_insert_before()</span> function inserts an item before the indicated item and the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_insert_after()</span> function inserts an item after the indicated item.</p>

<p>The functions take one of the following <span style="font-family: Courier New,Courier,monospace">type</span> parameters:</p>
  <ul>
   <li><span style="font-family: Courier New,Courier,monospace">ELM_GENLIST_ITEM_NONE</span></li>
   <li><span style="font-family: Courier New,Courier,monospace">ELM_GENLIST_ITEM_TREE</span>
   <p>The item is displayed as being able to expand and have child items. In the wearable profile, the genlist tree item style is not supported yet, so the following example image is for the mobile profile.</p>
   <p class="figure">Figure: Genlist tree</p> 
   <p align="center"> <img alt="Genlist tree" src="../../images/genlist_tree.png" /> </p> </li>
   <li><span style="font-family: Courier New,Courier,monospace">ELM_GENLIST_ITEM_GROUP</span>
   <p>The item is a group index item that is displayed at the top until the next group appears.</p></li>
  </ul>


</li>
<li>Clear the list:
<p>The application clears the list with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_clear()</span> function, which deletes all the items in the list. The <span style="font-family: Courier New,Courier,monospace">elm_object_item_del()</span> function deletes a specific item. The <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_subitems_clear()</span> function clears all items that are children of the indicated parent item.</p>
</li>
<li>Inspect list elements:
<p>To help inspect the list items, move to the item at the top of the list with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_first_item_get()</span> function, which returns the item pointer. The <span style="font-family: Courier New,Courier,monospace">elm_genlist_last_item_get()</span> function moves to the item at the end of the list. The <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_next_get()</span> and <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_prev_get()</span> functions move to the next and previous items relative to the indicated item. Using these calls you can go through the entire item list or tree.</p>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">As a tree, the items are flattened on the list, so the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_parent_get()</span> function gives you the name of the parent item (even to skip them if needed).</td> 
    </tr> 
   </tbody> 
  </table>  

<p>The <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_show()</span> function scrolls the scroller to show the desired item as visible. </p>
<p>The <span style="font-family: Courier New,Courier,monospace">elm_object_item_data_get()</span> function returns the data pointer set by the item creation functions.</p>
</li>
<li>Update items:
<p>If an item changes (state, boolean, text or content change), use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_update()</span> function for the genlist to update the item. Genlist re-realizes the item and calls the functions in the <span style="font-family: Courier New,Courier,monospace">_Elm_Genlist_Item_Class</span> class for it.</p>
</li>
</ul>

<h2 id="selection">Selecting Items</h2>

<p>Items are manually selected or deselected with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_selected_set()</span> function or disabled with the <span style="font-family: Courier New,Courier,monospace">elm_object_item_disabled_set()</span> function. In case there is a tree or a group item, the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function is used to expand or contract the item.</p>

  <table class="note"> 
   <tbody> 
    <tr> 
     <th class="note">Note</th> 
    </tr> 
    <tr> 
     <td class="note">Calling this function does not show or hide any child of an item (if it is a parent). You must manually delete and create them on the callbacks of the <span style="font-family: Courier New,Courier,monospace">expanded</span> or <span style="font-family: Courier New,Courier,monospace">contracted</span> signals.</td> 
    </tr> 
   </tbody> 
  </table>  

<p>By default, the genlist is in single-selection mode: only one item can be selected at a time. You can use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_multi_select_set()</span> function to select multiple items. In the single-selection mode, the <span style="font-family: Courier New,Courier,monospace">elm_genlist_selected_item_get()</span> function can be called to retrieve the selected item. If several items are selected, the <span style="font-family: Courier New,Courier,monospace">elm_genlist_selected_items_get()</span> function returns a list of the current selected items.</p>

<p>In the following figure, the first item is disabled and third and fourth item are selected in the multi-selection mode. </p>

<p class="figure">Figure: Genlist item selection highlight</p> 
<p align="center"> <img alt="Genlist item selection highlight" src="../../images/genlist_multi_wn.png"/> </p> 

<h2 id="callback">Using Genlist Callbacks</h2>

<p>The genlist component emits the following signals:</p>
   <ul> 
   <li><span style="font-family: Courier New,Courier,monospace">activated</span>: The item is double-clicked or pressed (enter | return | spacebar). <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">clicked,double</span>: The item is double-clicked. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">selected</span>: The item is selected. event_info in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">unselected</span>: The item is unselected. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">expanded</span>: The item is to be expanded with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function. This callback fills in the child items. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">contracted</span>: The item is to be contracted with the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function. This callback deletes the child items. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">expand,request</span>: The user wants to expand a tree branch item. The callback decides if the item can expand (if it has any children) and calls the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function to set the state. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">contract,request</span>: The user wants to contract a tree branch item. The callback decides if the item can contract (if it has any children) and calls the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_expanded_set()</span> function to set the state. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">realized</span>: The item is created as a real evas object. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span>, that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">unrealized</span>: An item is going to be unrealized. Content objects provided are deleted and the item object is deleted or put into a floating cache. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,up</span>: The item in the list is dragged (not scrolled) up. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,down</span>: The item in the list is dragged (not scrolled) down. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,left</span>: The item in the list is dragged (not scrolled) left. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,start,right</span>: The item in the list is dragged (not scrolled) right. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag,stop</span>: The item in the list has stopped being dragged. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">drag</span>: The item in the list is being dragged. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">longpressed</span>: The item is pressed for a certain amount of time. The default specified time is one second. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">scroll,anim,start</span>: The scrolling animation is started. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">scroll,anim,stop</span>: The scrolling animation is stopped. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">scroll,drag,start</span>: Dragging the content is started. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">scroll,drag,stop</span>: Dragging the content is stopped. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,top</span>: The genlist is scrolled to the top edge. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,bottom</span>: The genlist is scrolled to the bottom edge. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,left</span>: The genlist is scrolled to the left edge. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">edge,right</span>: The genlist is scrolled to the right edge. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">multi,swipe,left</span>: The genlist is multi-touch swiped left. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">multi,swipe,right</span>: The genlist is multi-touch swiped right. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">multi,swipe,up</span>: The genlist is multi-touch swiped up. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li> 
   <li><span style="font-family: Courier New,Courier,monospace">multi,swipe,down</span>: The genlist is multi-touch swiped down. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li>
   <li><span style="font-family: Courier New,Courier,monospace">multi,pinch,out</span>: The genlist is multi-touch pinched out. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li>
   <li><span style="font-family: Courier New,Courier,monospace">multi,pinch,in</span>: The genlist is multi-touch pinched in. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li>
   <li><span style="font-family: Courier New,Courier,monospace">swipe</span>: The genlist is swiped. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li>
   <li><span style="font-family: Courier New,Courier,monospace">moved</span>: A genlist item is moved in the reorder mode. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li>
   <li><span style="font-family: Courier New,Courier,monospace">moved,after</span>: A genlist item is moved after another item in the reorder mode. To access the relative previous item, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_prev_get()</span> function. This signal is called along with the <span style="font-family: Courier New,Courier,monospace">moved</span> signal. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li>
   <li><span style="font-family: Courier New,Courier,monospace">moved,before</span>: A genlist item is moved before another item in the reorder mode. To access the relative previous item, use the <span style="font-family: Courier New,Courier,monospace">elm_genlist_item_next_get()</span> function. This signal is called along with the <span style="font-family: Courier New,Courier,monospace">moved</span> signal. <span style="font-family: Courier New,Courier,monospace">event_info</span> in the callback function points at an object of the type <span style="font-family: Courier New,Courier,monospace">Elm_Object_Item</span> that contains the activated item.</li>
   <li><span style="font-family: Courier New,Courier,monospace">language,changed</span> The program&#39;s language is changed. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li>
   <li><span style="font-family: Courier New,Courier,monospace">tree,effect,finished</span>: A genlist tree effect is finished. <span style="font-family: Courier New,Courier,monospace">event_info</span> is <span style="font-family: Courier New,Courier,monospace">NULL</span>.</li>
  </ul>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">Except as noted, this content is licensed under <a href="http://opensource.org/licenses/LGPL-2.1" target="_blank">LGPLv2.1+</a>.</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div> 


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>

