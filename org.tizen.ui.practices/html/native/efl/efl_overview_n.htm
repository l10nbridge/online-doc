<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../../css/snippet.css" />
	<script type="text/javascript" src="../../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../../scripts/search.js" charset="utf-8"></script>
  <title>EFL Overview: Getting Started with EFL UI Programming</title> 
 </head> 
 <body onload="prettyPrint()" style="overflow: auto;">
 
 <div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../../images/mobile_s_n.png"/> <img alt="Wearable native" src="../../images/wearable_s_n.png"/></p>
	</div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
		  <li><a href="#characteristic">EFL Characteristics</a></li>
		  <li><a href="#library">EFL Libraries</a></li>
		</ul>		
		<p class="toc-title">Related Info</p>
		<ul class="toc">	
			<li><a href="../../../../org.tizen.native.mobile.apireference/group__EFL.html">EFL API for Mobile Native</a></li>	
			<li><a href="../../../../org.tizen.native.wearable.apireference/group__EFL__Group.html">EFL API for Wearable Native</a></li>	
		</ul>
	</div></div>
</div>	

<div id="container"><div id="contents"><div class="content">

  <h1>EFL Overview: Getting Started with EFL UI Programming</h1> 
	
<p>EFL stands for Enlightenment Foundation Libraries. Enlightenment is a project that consists of the Enlightenment window manager, EFL libraries, and various utilities and applications. The Enlightenment team needed powerful libraries to handle, among others, rendering, main loops, and events, so they introduced EFL during the development of the Enlightenment window manager to fill these gaps. EFL is now widely used outside the Enlightenment window manager.</p>

<p>The general EFL UI design features include:</p>	
<ul>
	<li><a href="ui_components_n.htm">UI component support</a>
	<p>You can use basic core UI components, such as buttons, genlists, and sliders, and also create a layout for the Tizen native application by using container UI components.</p></li>
	<li><a href="theme_n.htm">Theme support</a>
	<p>You can create and change a theme that is a preset package containing graphical details. Tizen supports specifying the UI look and feel through a default theme.</p></li>
	<li><a href="font_setting_n.htm">Font settings</a>
	<p>Tizen supports various methods to change the application font to another system default font or your own font.</p></li>
	<li><a href="scalability_n.htm">Scalability support</a>
	<p>The Elementary library provides a way to <a href="ui_components_n.htm#scalability">scale UI components</a> in order to be comfortably used with a finger and to make the text more readable.</p></li>
	<li><a href="event_handling_n.htm">Event handling</a>
	<p>The user interface relies on callbacks designed to react to EFL events generated by the system or the user. You can handle various events from low-level Ecore system events to Evas smart object events that happen on object collections.</p></li>
	<li><a href="core_loop_n.htm">Main loop</a>
	<p>The Ecore library provides a main loop abstraction that retrieves data when the main loop is available and sends events. You can handle the main loop and <a href="threads_n.htm">use threads</a> with the Ecore main loop.</p></li>
	<li><a href="animation_effects_n.htm">UI animating with animators and effects</a>
	<p>Tizen supports various methods to create animations and effects in your application.</p></li>
	<li><a href="data_types_tools_n.htm">Data types and tools support</a>
	<p>Tizen supports a core library for data types and some useful tools.</p></li>
	<li><a href="hw_input_n.htm">Hardware input event support</a>
	<p>Tizen supports the handling of hardware input (key and rotary) events.</p></li> 
	<li><a href="accessibility_n.htm">Accessibility</a>
	<p>For disabled users, Tizen provides various accessibility features. You can help low-vision and blind users by incorporating accessibility in your application.</p></li>
</ul>

<h2 id="characteristic" name="characteristic">EFL Characteristics</h2>

<p>EFL is aimed at not only desktop computers but also touch-screen and embedded devices, making EFL applications portable to many different device types. Applications do not need to care about the type of device and profile they run on. Instead of changing the code, it is typically enough to simply configure the application for different devices.</p>

<p>The key characteristics of EFL include:</p>

<ul>
 <li><strong>Fast performance</strong>
  <p>The main reason Tizen adopted EFL as its native toolkit is its speed. EFL is highly optimized by using a scene graph and retained-mode rendering. EFL is fast even in software rendering.</p></li>
 <li><strong>Small memory footprint</strong>
  <p>Despite its fast performance, EFL&#39;s memory footprint is smaller than that of other toolkits with similar features. A small memory footprint is useful in the embedded world, since embedded devices normally have limited memory.</p></li>
 <li><strong>Back-end engine support</strong>
  <p>EFL supports several back-end engines, such as X11 (OpenGL, Xlib, Xcb), Wayland (OpenGL, SHM), Direct Framebuffer, DRM, memory buffers, PS3 native, Windows&reg;, and Mac OS&reg;. Applications do not need to deal with each back-end engine separately.</p></li>
 <li><strong>UI and logic separation</strong>
  <p>EFL supports the separation of the UI layout (<a href="theme_n.htm">EDC</a>) and logic by having the layout description in a plain text file and the logic code in the C or C++ source files.</p></li>
 <li><strong>Themeable</strong>
  <p>An EFL theme can be changed at runtime without restarting the application. UI components are customizable so that each application can create its own customized theme to overlay above the default theme, adding customized versions of UI components to achieve a specific look and feel.</p></li>
 <li><strong>Scalable</strong>
  <p>EFL supports a scale factor that affects the object size in the application at runtime. By configuring the scale factor, applications can scale up and down as needed. The scale factor also supports a default setting that allows applications to scale nicely out-of-the-box.</p></li>
 <li><strong>Animations</strong>
  <p>EFL supports different types of animations. Evas supports Evas maps with low-level APIs for performing 2D, 2.5D, and 3D object transformations. Edje supports predefined transitions and wrapping of Evas maps. Elementary supports transit APIs for various types of animations and animation combinations.</p></li>
 <li><strong>Hardware acceleration</strong>
  <p>EFL supports OpenGL&reg; and OpenGL ES acceleration.</p></li>
</ul>
	
	
<h2 id="library" name="library">EFL Libraries</h2>
	
<p>The EFL is a set of layered libraries, as shown in the following figure.</p>

<p class="figure">Figure: EFL layers</p>
<p align="center"><img alt="EFL layers" src="../../images/efllibs.png" /></p>

<p>When you create a basic EFL application, you use the following main libraries as a basis:</p>

<ul>
    <li>Elementary (<a href="ui_components_n.htm">UI Components</a>) is the top-most library with which you create your EFL application. It provides all the functions you need to create a window, design simple and complex layouts, manage the view life-cycle, and add UI components. For the full list of UI components that can be used in Tizen, see <a href="ui_components_mn.htm">Mobile UI Components</a> and <a href="ui_components_wn.htm">Wearable UI Components</a>.</li>
    <li>Edje (<a href="theme_n.htm">Themes</a>) is the library used by Elementary to provide a powerful theme. You can also use Edje and the EDC format to create and use your own objects in your application, or to extend the default theme by <a href="component_custom_n.htm">customizing components</a>.</li>
    <li>Ecore (<a href="core_loop_n.htm">Core Loop and OS Interfacing</a>) is the library which <a href="main_loop_n.htm">manages the application main loop mechanisms</a>. The main loop is one of the most important concepts you need to know about to develop an application. The main loop is where events are handled, and where you interact with the user through the callback mechanism.</li>
    <li>Evas (<a href="graphical_objects_n.htm">Graphical Objects</a>) is the canvas engine responsible for managing the drawing of your content. All graphical objects that you create are Evas objects. Evas handles the entire window state by filling the canvas with objects and manipulating their states. In contrast to other canvas libraries, such as Cairo, OpenGL, and XRender, Evas is not a drawing library but a scene graph library that retains the state of all objects.
	<p>The <a href="evas_rendering_n.htm">Evas rendering concept</a> is based on a process where Evas objects are created and then manipulated until they are no longer needed, at which point they are deleted. This allows you to work in the same terms that a designer thinks in: it is a direct mapping, as opposed to having to convert the concepts into drawing commands in the right order, and calculate minimum drawing calls needed to get the job done.</p></li>
    <li>Eina (<a href="data_types_tools_n.htm">Data types and Tools</a>) is the basis of all the EFL libraries. Eina is a toolbox that implements an efficient API for data types. It contains all the functions needed to create lists and hashes, manage shared strings and open shared libraries, and handle errors and memory pools.</li>
</ul>

<p>In addition to the most important libraries explained above, the EFL includes other libraries, such as Eet, Embryo, and Emotion. Support for those libraries is planned in the future Tizen releases.</p>

<p>The <a href="../../../../org.tizen.gettingstarted/html/native/first_app/first_app_n.htm">Hello World example</a> shows you how to develop your first application with the EFL.</p>

<script type="text/javascript" src="../../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>