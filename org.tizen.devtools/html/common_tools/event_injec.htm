<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

  <title>Event Injector</title>
</head>
<body onload="prettyPrint()" style="overflow: auto;">


<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mw_icon.png"/> <img alt="Wearable Web" src="../images/ww_icon.png"/> <img alt="Mobile native" src="../images/mn_icon.png"/> <img alt="Wearable native" src="../images/wn_icon.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
				<li><a href="#device">Providing Device Data</a></li>
				<li><a href="#location">Providing Location Data</a></li>
				<li><a href="#nfc">Providing NFC Data</a></li>
				<li><a href="#sensor">Providing Sensor Data</a></li>
				<li><a href="#telephony">Providing Telephony Features</a></li>
				<li><a href="#memory">Providing Memory Data</a></li>
		</ul>
	</div></div>
</div>
<div id="container"><div id="contents"><div class="content">

<h1>Event Injector</h1>

<p> In the <a href="emulator.htm#ecp">Emulator Control Panel</a>(ECP), you can inject various types of events.</p>

<h2 id="device" name="device">Providing Device Data</h2>

<p>The Emulator Control Panel (ECP) can be used to simulate device data, such as the battery level, adding or removing a ear jack (headset) or USB device, setting RSSI (remote signal strength indicator) information, and attaching and detaching the SD card in the <strong>Device</strong> tab:</p>

<ul>

<li>Setting the battery level
<p>In the <strong>Battery</strong> tab, set the battery level using the <strong>Level</strong> slider. To set the charger status to connected or disconnected, select the appropriate <strong>Charger</strong> radio button.</p></li>


<li>Adding or removing an ear jack
<p>In the <strong>EarJack</strong> tab, select the ear jack setting:</p>
<ul>
  <li>3 Wire</li>
  <li>4 Wire</li>
  <li>Disconnect</li>
</ul></li>

<li>Adding or removing a USB device
<p>In the <strong>USB</strong> tab, set the USB device setting to the connected or disconnected state.</p>
</li>

<li>Setting the RSSI information
<p>In the <strong>RSSI</strong> tab, set the RSSI information level using the <strong>Level</strong> slider.</p></li>


<li>Attaching and detaching the SD card
<p>In the <strong>SD Card</strong> tab, select the 4G, 8G, 16G, or 32G SD card and attach it to the Emulator at runtime.</p>


<table class="note">
      <tbody>
        <tr>
          <th class="note">Note</th>
        </tr>
        <tr>
          <td class="note">The same SD card cannot be attached to multiple Emulators at the same time.</td>
        </tr>
      </tbody>
    </table></li></ul>
	
<p>The device information set using the ECP is reflected on the indicator bar of the device.</p>


<h2 id="location" name="location">Providing Location Data</h2>

<p>The Emulator Control Panel (ECP) can be used to provide imitated responses to location data requests by loading GPS log files, manually entering location coordinates, or injecting markers directly on the map in the <strong>Location</strong> tab:</p>

<ul><li>Loading a GPS log file
<p>In the <strong>Log</strong> section, select the pre-logged GPS data file (NMEA183 format) and click <strong>Inject Log</strong> to send the location data to the Emulator.</p></li>

<li>Manually entering location coordinates
<p>In the <strong>Manual</strong> section, enter the coordinates and click <strong>Inject Location</strong> to send the location data to the Emulator. The range of the latitude, longitude, altitude, and horizontal accuracy is from -90 to 90, -180 to 180, -300 to 100000, and 0 to 100000, respectively.</p></li>


<li>Injecting markers on the map
<p>In the <strong>Map</strong> section, right-click the desired map locations and click <strong>Inject Markers </strong> to send the location data to the Emulator.</p>
</li></ul>

<h2 id="nfc" name="nfc">Providing NFC Data</h2>

<p>The Emulator Control Panel (ECP) can be used to test the near-field communication (NFC) features, such as NFC data exchange format (NDEF) events, NFC tag detection, and peer-to-peer (P2P) data connections in the <strong>NFC</strong> tab.</p>

<table class="note">
	<tbody>
		<tr>
          <th class="note">Note</th>
        </tr>
        <tr>
          <td class="note">The Event Injector view sends only NFC-related events to the Emulator. There is no actual information exchange between the Event Injector and Emulator. Therefore, for features such as writing information to an NFC tag, the Emulator simply displays a success message.</td>

        </tr>
    </tbody>
</table>


<h3 id="ndef" name="ndef">Creating NDEF Messages</h3>
<p>An NDEF message contains one or more NDEF records.</p>

<p>In the <strong>NDEF Message</strong> section:</p>
<ol>
<li>Select the record type name format.</li>
<li>Enter the record type name, ID, and payload.</li>
<li>Click <strong>Add</strong>.
<p>You can add multiple NDEF records as required in the NDEF message.</p></li>
</ol>
<p>Click <strong>Edit</strong> or <strong>Remove</strong> to modify or delete a selected record.</p>

<h3 id="nfctags" name="nfctags">Attaching and Detaching NFC Tags</h3>

<p>In the <strong>NFC Tag</strong> section:</p>
<ol>
<li>Select the tag type.</li>
<li>Click <strong>Tag Attach</strong>.
<p>If the NDEF records list is not empty, an NDEF message is created using this list and the attach message is sent to the Emulator with the NDEF message.</p></li>
<li>When the tag operation is finished, click <strong>Tag Detach</strong>.</li>
</ol>

<h3 id="p2p" name="p2p">Creating a P2P data Connection</h3>

<p>In the <strong>Peer to Peer</strong> section:</p>
<ol>
<li>To send the Emulator the discovered state of the new device, click <strong>P2P Discovered</strong>.</li>
<li>To send the Emulator an NDEF message, click <strong>P2P Send</strong>.</li>
<li>To send the Emulator the detached state of the connected device, click <strong>P2P Detached</strong>.</li>
</ol>


<h2 id="sensor" name="sensor">Providing Sensor Data</h2>
<p>The Emulator Control Panel (ECP) can be used to imitate user actions, such as shaking, throwing, and tilting the device. You can generate 
single sensor events, or design sensor profiles for different sensors, containing sensor data that describes a series 
of sensor events. </p>

<p>The sensor profiles have a simple data structure and are stored in TXT files. The sensor data can be input in the specified data structure from the <a href="#axis">3-axis</a>, <a href="#light">light, proximity, pressure, ultraviolet, or HRM</a> sensors.</p>
<p>The sensor profiles are of 2 types: </p>
<ul>
<li>With timestamp
 <p>The Emulator tries to inject each item at its specified time. Events are discarded if they violate certain 
 performance, resource, or logic limits.</p></li> 
<li>Without timestamp
 <p>The Emulator injects each item without any specific time considerations.
  Profile data is not discarded.</p></li> 
</ul>

<h3 id="axis" name="axis">Controlling 3-axis Sensors</h3>
<p>The ECP can be used to adjust the acceleration, magnetic, and gyro sensors of the Emulator in the <strong>Event Injector &gt; Sensor &gt; 3-Axis Sensors</strong> tab.</p>

<p>On the <strong>GUI</strong> subtab, you can select which sensors are active, and you can move the Emulator using the 3 axis sliders or the direction buttons (<strong>Portrait</strong>, <strong>Landscape</strong>, <strong>Reverse Portrait</strong>, and <strong>Reverse Landscape</strong>). The Emulator image shows the current position of the Emulator.</p>

<p>To better control the movement, select the <strong>With axis</strong> check box to see the axes in the Emulator image. You can also fix the y- or z-axis by selecting the <strong>X/Z</strong> or <strong>X/Y</strong> radio button, respectively. To change the Emulator accelerator value in the direction of the movement, select the <strong>Move</strong> radio button.</p>

<p>To adjust the individual sensors:</p>

<ul>
<li>Acceleration sensor:
<p>This sensor is used to control the acceleration values along the coordinate axes. If the Emulator is standing, the y axis gets the acceleration value -1g as gravitational acceleration.</p>

<p>To change the acceleration value manually, use the sliders on the <strong>Acceleration</strong> subtab to set a value between -2 and 2 g. </p>
<p>You can input a log file with up to 5 repeats for the acceleration sensor. The log file format is: &quot;milliseconds, x, y, z&quot;.</p></li>



<li>Magnetic sensor:
<p>This sensor is used to control the Emulator&#39;s magnetic tesla value along the coordinate axes. If the Emulator is standing, the magnetic tesla value is set by heading for real north (azimuth 0).</p>

<p>To change the magnetic tesla value manually, use the sliders on the <strong>Magnetic</strong> subtab to set a value between -2000 and 2000 uT. </p>
<p>You can input a log file with up to 5 repeats for the magnetic sensor. The log file format is: &quot;milliseconds, x, y, z&quot;.</p></li>


<li>Gyro sensor:
<p>This sensor is used to control the Emulator&#39;s rotation angle per second along the coordinate axes.</p>

<p>To change the gyro value manually, use the sliders on the <strong>Gyro</strong> subtab to set a value between -10 and 10 rad. </p>
<p>You can input a log file with up to 5 repeats for the gyro sensor. The log file format is: &quot;milliseconds, x, y, z&quot;.</p></li>
</ul>


<h3 id="light" name="light">Controlling Other Sensors</h3>

<p>You can control the light, proximity, pressure, ultraviolet, and HRM sensor of the Emulator under the <strong>Event Injector &gt; Sensor</strong> tab:</p>

<ul><li>
<p>To control the light sensor, set the <strong>Lux</strong> value in the <strong>Light</strong>  tab. The range of this value is from 0 to 65535.</p></li>

<li><p>To control the proximity sensor, set it on or off in the <strong>Proximity</strong> tab.</p></li>

<li><p>To control the pressure sensor, set the <strong>hPa</strong> (Hectopascal) value in the <strong>Pressure</strong> tab. The range of this value is from 260 to 1260.</p></li>

<li><p>To control the ultraviolet sensor, use the slider in the <strong>Ultraviolet</strong> tab. The unit is UV index and the range of this value is from 0 to 15.0.</p></li>

<li><p>To control the HRM (Heart Rate Monitor) sensor, use the sliders in the <strong>Heart Rate Monitor</strong> tab. You can set the <strong>Heart Rate</strong> value between 0 and 220, and the <strong>Peek-to-Peek</strong> value between 0 and 5000.</p></li>

</ul>

<h2 id="telephony" name="telephony">Providing Telephony Features</h2>

<p>The Emulator Control Panel (ECP) can be used to generate <a href="#call">incoming calls</a> and <a href="#message">messages</a> in the <strong>Telephony</strong> tab.</p>

<h3 id="call" name="call">Generating Incoming Calls</h3>
<p>Incoming calls are generated in the <strong>Event Injector &gt; Telephony &gt; Call</strong> tab.</p>

<table class="note">
  <tbody>
    <tr>
      <th class="note">Note</th>
    </tr>
    <tr>
      <td class="note">A Mobile Termination (MT) call is made from the Event Injector view to the Emulator. A Mobile Origination (MO) call is made from the Emulator to the Event Injector view using the phone application of the Emulator.</td>
    </tr>
  </tbody>
</table>

<p>To make an MT call:</p>
<ol>
  <li>Enter the phone number you want to imitate the call from.</li>
  <li>Click <strong>Connect</strong>.</li>
  <li><p>To hide the phone number on the Emulator, select the <strong>Hidden</strong> option.</p>
  <p>The caller ID on the Emulator is set to &quot;Unknown&quot;.</p></li>
</ol>

<p>To make an MO call, use the Emulator&#39;s phone application:</p>
<ol>
  <li>To ready the Emulator for the connection, click <strong>Alert</strong>.</li>
  <li>To ready the Emulator for the call, click <strong>Connect</strong>.</li>
</ol>


<h3 id="message" name="message">Generating Messages</h3>
<p>SMS messages are generated in the <strong>Event Injector &gt; Telephony &gt; Messaging</strong> tab. After sending a message, your application waits for the asynchronous send status message. You can generate this status report for SMS messages using the same <strong>Messaging</strong> tab.</p>

<p>To generate an SMS message:</p>
<ol>
  <li>Enter the sender phone number you want to imitate.</li>
  <li>Enter the message body text and click <strong>Send Msg</strong>.</li>
</ol>

<p>To generate status reports, set the sending status value for the SMS message:</p>
<ul>
  <li>SMS OK (Success)</li>
  <li>SMS Not Available</li>
</ul>

<p>You can also generate MMS message status reports. To generate MMS status reports, set the sending status value for the MMS message:</p>
<ul>
  <li>MMS OK (Success)</li>
  <li>MMS Failure</li>
</ul>

<h2 id="memory" name="memory">Providing Memory Data</h2>

<p>The Emulator Control Panel (ECP) can be used to simulate low memory status in the <strong>Memory</strong> tab.</p>

<p>Set the low memory status using the radio buttons:</p>
<ul>
  <li>Hard-Warning (40 MB and under)</li>
  <li>Soft-Warning (60 MB and under)</li>
  <li>Normal (sufficient)</li>
</ul>



<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
