<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

  <title>Using the Extended Emulator Features </title>
</head>
<body onload="prettyPrint()" style="overflow: auto;">


<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile Web" src="../images/mw_icon.png"/> <img alt="Wearable Web" src="../images/ww_icon.png"/> <img alt="Mobile native" src="../images/mn_icon.png"/> <img alt="Wearable native" src="../images/wn_icon.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#multi">Using Multi-point Touch</a></li>
			<li><a href="#file">Sharing directory</a></li>
			<li><a href="#webcam">Using a Webcam</a></li>
			<li><a href="#net">Using Emulator in a Network</a></li>
			<li><a href="#skin">Using Custom Skin Layout</a></li>
			<li><a href="#eventcast">Using EventCast</a></li>
			<li><a href="#startup">Emulator Start-up Options</a></li>
			<li><a href="#dir">Emulator Directory Structure</a></li>
		</ul>
	</div></div>
</div>
<div id="container"><div id="contents"><div class="content">

<h1>Using the Extended Emulator Features</h1>
<p>The Emulator features can be extended in many ways. With the Emulator, you can:</p>
<ul>
<li><a href="#multi">Using multi-point touch</a></li>
<li><a href="#file">Sharing directory</a></li>
<li><a href="#webcam">Using a webcam</a></li>
<li><a href="#net">Using Emulator in a Network</a></li>
<li><a href="#skin">Using custom skin layout</a></li>
<li><a href="#eventcast">Using EventCast</a></li>
<li><a href="#startup">Emulator start-up options</a></li>
<li><a href="#dir">Emulator directory structure</a></li>
</ul>

<h2 id="multi" name="multi">Using Multi-point Touch</h2>

<p>To create a multi-point touch effect in the Emulator, press and hold the <strong>CTRL</strong> key (<strong>Command</strong> key in Mac OS&reg; X), while mouse-clicking on the Emulator screen.</p>

<h3 id="add" name="add">Adding a Touch Point</h3>

<p>To add a touch point on the Emulator screen, press and hold the <strong>CTRL</strong> key (<strong>Command</strong> key in Mac OS&reg; X) and mouse-click a point on the screen.</p>
<p>You can add touch points up to the maximum amount of multi-point touches. To get the maximum amount, use the <span
      style="font-family: Courier New,Courier,monospace">System::SystemInfo::GetValue()</span> method with the <span
      style="font-family: Courier New,Courier,monospace">MultiPointTouchCount</span> key.</p>

<p class="figure">Figure: Adding a touch point</p>

<p style="text-align:center;"><img alt="Adding a touch point"
src="../images/multitouch_add.png"
style="display: block; text-align: center; margin-left: auto; margin-right: auto"/></p>

<h3 id="move" name="move">Moving an Existing Point</h3>

<p>To move an existing point, press and hold the <strong>CTRL</strong> key (<strong>Command</strong> key in Mac OS&reg; X), mouse-click an existing point, and move it to another location on the screen.</p>

<p class="figure">Figure: Moving an existing point</p>

<p style="text-align:center;"><img alt="Moving an existing point"
src="../images/multitouch_move.png"
style="display: block; text-align: center; margin-left: auto; margin-right: auto"/></p>

<h3 id="end" name="end">Ending the Multi-point Touch</h3>

<p>To end the multi-point touch, release the <strong>CTRL</strong> key (<strong>Command</strong> key in Mac OS&reg; X). The touched points on the Emulator screen are invalidated, and the next screen touch event is read as a new event, not part of the previous multi-point touch event.</p>

<p class="figure">Figure: Invalidating touched points</p>

<p style="text-align:center;"><img alt="Invalidating touched points"
src="../images/multitouch_invalidate.png"
style="display: block; text-align: center; margin-left: auto; margin-right: auto"/></p>

<h2 id="file" name="file">Sharing directory</h2>

<p>You are able to share a directory between Emulator and your computer. The host machine&#39;s directory is shown as <span style="font-family: Courier New,Courier,monospace">/mnt/host</span> in the Emulator.</p>

<ol>
<li>Run the Emulator Manager and click <strong>Create New</strong> or <strong>Modify</strong>.</li>
<li>In the <strong>File Sharing</strong> section of the VM property, enable the <strong>Sharing</strong> button and select a directory to share.</li>
<li>Start the Emulator.
</li>
</ol>

<p>You can also add a shared directory in the Emulator Control Panel:</p>

<ol>
<li>Start the Emulator.</li>
<li>Right-click the Emulator and select <strong>Control Panel</strong> .</li>
<li>Move to the <strong>Host Directory Sharing</strong> tab.</li>
<li>Mount/unmount the host machine directory.
</li>
</ol>

  <table class="note">
  <tbody>
    <tr>
      <th class="note">Note</th>
    </tr>
    <tr>
      <td class="note">You must have a read/write permission for the directory you want to share. You can share only one directory.</td>
    </tr>
  </tbody>
</table>


<h2 id="webcam" name="webcam">Using a Webcam</h2>
<p>With the Emulator, you can host a Webcam just like a device camera.</p>

<p>Before running the application, install a USB-connected Webcam or embedded Webcam on your machine. On Linux, the Webcam feature uses libv4l-0. If you do not have it on your machine, this feature does not work properly. You can check the feature status with the following command:</p>
<pre class="prettyprint">$ dpkg -l | grep libv4l-0</pre>
<table class="note">

      <tbody>
        <tr>
          <th class="note">Note</th>
        </tr>
        <tr>
          <td class="note">
		  <ul>
		  <li>The Webcam must support video4linux2. (Currently, only &#39;/dev/video0&#39; is supported.)</li>
<li>Multiple instances of the Emulator can be launched, but only a single Emulator instance can use the camera feature.</li>
<li>Depending on the Webcam in use, the Emulator camera feature may not work properly.</li>
</ul>
</td>
        </tr>
      </tbody>
    </table>
<p>The following table lists the host Webcam features.</p>
<table style="width: 100%" border="1">
  <caption>Table: Webcam features</caption>
  
  <col width="25%"/>
  <col width="25%"/>
  <col width="50%"/>
  <tbody>
  <tr>
  <th style="text-align:center;margin-left:auto;margin-right:auto;">
        Feature</th>
		
		
  <th style="text-align:center;margin-left:auto;margin-right:auto;">
        Detail</th>
		<th style="text-align:center;margin-left:auto;margin-right:auto;">
        Notes</th>
		</tr>
	
<tr>
<td>FPS</td>
<td>30 fps</td>
<td>-</td>
</tr>
<tr>
<td>Preview image format</td>
<td>YUYV<br/>
I420<br/>
YV12<br/> 
</td>
<td>-</td>
</tr>

<tr>
<td>Capture image format </td>
<td>YUYV<br/>
I420<br/>
YV12<br/>
JPEG<br/> 
</td>
<td>-</td>
</tr>
<tr>
<td>Preview resolution</td>
<td>QSIF: 160 x 120<br/>
QCIF: 176 x 144<br/>
QVGA: 320 x 240<br/>
CIF: 352 x 288<br/>
VGA: 640 x 480<br/>
</td>
<td>-</td>
</tr>
<tr>
<td>Capture resolution</td>
<td>QSIF: 160 x 120<br/>
QCIF: 176 x 144<br/>
QVGA: 320 x 240<br/>
CIF: 352 x 288<br/>
VGA: 640 x 480<br/> 
</td>
<td>-</td>
</tr>
<tr>
<td>Attributes</td>
<td>Brightness<br/>
Contrast<br/> 
</td>
<td>Unsupported attributes can return an error. For example, the <span style="font-family: Courier New,Courier,monospace">camera_start_focusing()</span> method returns an error.</td>
</tr>
</tbody>
</table>


<h2 id="net" name="net">Using Emulator in a Network</h2>


<p> The Tizen Emulator provides two types of network backend, NAT-based TCP/IP communication and a bridged network. By default, NAT-based network is used. You can configure the type on Emulator Manager > Network Configuration. The Emulator is based on the QEMU virtual machine. "NAT" type exploits QEMU user networking (SLIRP) and "Bridge" type uses tap networking. For more information about networking, refer to <a href="http://wiki.qemu.org/Documentation/Networking" target="_blank">QEMU Networking documentation</a>.</p>

 <h3 id="Proxy" name="Proxy">Proxy Configuration</h3>
 <p> The Tizen Emulator provides three methods of configuration proxy. This can be configurable on Emulator Manager > Network Configuration.</p>
<ul>
<li>No proxy: does not use proxy configuration.</li>
<li>Use host proxy: sets the same proxy value that host uses.</li>
<li>Use manual proxy: sets proxy value manually different from host.</li>
</ul>

<table>
 <tbody>
        <tr>
          <th class="note">Note</th>
        </tr>
        <tr>
          <td class="note">The following preallocated addresses are not supported as a manual proxy:
			<ul>
				<li>Localhost</li>
				<li>127.0.0.0/8</li>
				<li>10.0.0.0/16</li>
			</ul>
			<p>The automatic proxy configuration is not supported, due to license issues.</p> </td>
        </tr>
      </tbody>
    </table>

<h3 id="NAT" name="NAT">NAT(Network Address Translation)</h3>
<p>NAT is a default networking backend and has a better usability than other backends. The Emulator supports TCP, UDP, and "ping" within a guest. However, raw socket is not supported.</p>
<p>The Emulator virtually provides a LAN(Local Area Network), such as the following:</p>
<ul>
<li>10.0.2.2: Gateway, host machine</li>

<li>10.0.2.3: DNS (you can specify the Emulator to use the host DNS IP when the Emulator starts)</li>

<li>10.0.2.15: Emulator's IP</li>
</ul>

<p class="figure">Figure: Emulator NAT network architecture</p>

<p style="text-align:center;"><img alt="Emulator network architecture" src="../images/emulator_nat_architecture.png"/></p>

<h4 id="network" name="network">Network Connections for NAT</h4>

<p>Inbound connection from external to emulator fails in the NAT backed. If you want to permit inbound connection and test, you should forward port by using one of following methods:</p>

<ol><li>ECP(Emulator Control Panel)</li>
<p>You can add port forwarding by using ECP. In ECP > Device Manager > Network tab > User Network Information, click <b>Add port-forwarding</b> button and enter ports to forward</p>
<li>SDB(Smart Development Bridge)</li>
<p>SDB provides port forwarding as command. For more information about SDB command, refer to <a href="smart_dev_bridge.htm#command">sdb forward</a>.</p>
<li>Xml on boot </li>
<p>You can forward the port on booting the Emulator by modifying QEMU redirection option.</p>
<p>The QEMU redirection option can be appended in the <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK_DATA&gt;/emulator/vms/&lt;image name&gt;/vm_config.xml</span> file with the following appending command:</p>
<pre class="prettyprint">-redir &lt;PROTOCOL&gt;:&lt;HOST_PORT&gt;:10.0.2.15:&lt;GUEST_PORT&gt;</pre>
<p>Note that <span style="font-family: Courier New,Courier,monospace">&lt;PROTOCOL&gt;</span> supports only  <span style="font-family: Courier New,Courier,monospace">udp</span> and <span style="font-family: Courier New,Courier,monospace">tcp</span> in the <span style="font-family: Courier New,Courier,monospace">&lt;advancedOptions&gt;</span> section:</p>
<pre class="prettyprint">&lt;usability&gt;
&nbsp;&nbsp;&nbsp;&lt;logging&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;level&gt;NONE&lt;/level&gt;
&nbsp;&nbsp;&nbsp;&lt;/logging&gt;
&nbsp;&nbsp;&nbsp;&lt;fileSharing/&gt;
&nbsp;&nbsp;&nbsp;&lt;hwVirtualization&gt;true&lt;/hwVirtualization&gt;
&nbsp;&nbsp;&nbsp;&lt;advancedOptions&gt;-redir tcp:1202:10.0.2.15:22&lt;/advancedOptions&gt;
&lt;/usability&gt;</pre>

<p>You can also connect one Emulator instance with another by using redirection. To set up redirection (where A and B are Emulator instances):</p> 

<ol><li>Set up the server on A, listening to <span style="font-family: Courier New,Courier,monospace">10.0.2.15:&lt;ServerPort&gt;</span>.</li>

<li>On A, append the <span style="font-family: Courier New,Courier,monospace">-redir tcp:&lt;B&#39;s localPort&gt;:10.0.2.15:&lt;A&#39;s serverPort&gt;</span> redirection option in the <span style="font-family: Courier New,Courier,monospace">vm_config.xml</span> file.</li>

<li>On B, let the client connect to <span style="font-family: Courier New,Courier,monospace">10.0.2.2:&lt;B&#39;s localPort&gt;</span>.
</li></ol>
<p>For more information, see <a href="http://www.h7.dion.ne.jp/~qemu-win/HowToNetwork-en.html#redir" shape="rect" target="_blank">How to use Network</a>.</p>
</ol>

</li>


<h3 id="Bridge" name="Bridge">Bridge(Bridged Network)</h3>
<p>Bridge backend requires a dedicated IP for emulator and you can communicate to external without any port forwarding. If you want one of followings, you can try the bridge backend.</p>
<ul>
<li>You want to permit inbound connection with no port forwarding.</li>
<li>Your application should send and receive broadcast/multicast packet. e.g. DLNA(Digital Living Network Alliance) application.</li>
<li>You want to use firewall-free IP for emulator</li>
<li>High performance of network</li>
</ul>
<p>You can configure the Emulator's IP on Emulator Manager > Network configuration. If you have DHCP server on network, you can configure the Emulator's IP by using DHCP. If not, you should configure the IP manually.</p>
<p class="figure">Figure: Emulator bridged network architecture</p>

<p style="text-align:center;"><img alt="Emulator network architecture" src="../images/emulator_bridge_architecture.png"/></p>

<h2 id="skin" name="skin">Using Custom Skin Layout</h2>

<p>An Emulator skin comprises an XML meta file, which defines layout-related information, such as skin image file name, display location, and the location of hardware keys. This file is located in <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK&gt;/platform/&lt;PROFILE_NAME&gt;/emulator-resources/skins/&lt;SKIN_NAME&gt;/default.dbi</span>.</p>

<p>The following example shows the contents of the <span style="font-family: Courier New,Courier,monospace">default.dbi</span> layout file:</p>
<pre class="prettyprint">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;EmulatorUI xmlns=&quot;http://www.tizen.org/emulator/skin/dbi&quot;
&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dbi version=&quot;2.0&quot;/&gt;
&nbsp;&nbsp;&nbsp;&lt;rotations&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- Skin mode definition --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;rotation name=&quot;Portrait&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- Display number of identification --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;display id=&quot;0&quot;&gt;&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- Display screen size and position --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;region left=&quot;35&quot; top=&quot;86&quot; width=&quot;480&quot; height=&quot;800&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/display&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;imageList&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- Resource file name of the usual skin image --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;mainImage&gt;default_0.png&lt;/mainImage&gt;&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- Resource file name of the skin image when HW key events occur --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;keyPressedImage&gt;default_0_p.png&lt;/keyPressedImage&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/imageList&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;keyMapList&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;keyMap&gt; &lt;!-- Optional --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- HW key region size and position --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;region left=&quot;238&quot; top=&quot;887&quot; width=&quot;74&quot; height=&quot;74&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;eventInfo&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;keyCode&gt;139&lt;/keyCode&gt; &lt;!-- Keycode value --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;keyName&gt;HOME&lt;/keyName&gt; &lt;!-- HW key name --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/eventInfo&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- This line to be displayed when mouse hovers over the HW key region --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tooltip&gt;Home&lt;/tooltip&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/keyMap&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/keyMapList&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/rotation&gt;
&nbsp;&nbsp;&nbsp;&lt;/rotations&gt;
&nbsp;&nbsp;&nbsp;&lt;hover&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- RGB color of the HW key hover --&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;color B=&quot;255&quot; G=&quot;255&quot; R=&quot;255&quot; /&gt;
&nbsp;&nbsp;&nbsp;&lt;/hover&gt;
&lt;/EmulatorUI&gt;</pre>

<p>The Emulator skin also comprises a property file, which defines skin-related information, such as skin name and supported resolutions. This file is located in <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK&gt;/tools/emulator/skins/&lt;SKIN_NAME&gt;/info.ini</span>.</p>

<p>The following example shows the contents of the <span style="font-family: Courier New,Courier,monospace">info.ini</span> property file:</p>
<pre class="prettyprint">skin.name=Phone 480x800
resolution.width=480
resolution.height=800
</pre>


<p>To create your own skin layout:</p>
<ol>
	<li>Create a new skin folder in the <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK&gt;/tools/emulator/skins/</span> folder.</li>
	<li>In the skin folder, define the contents of the <span style="font-family: Courier New,Courier,monospace">default.dbi</span> and <span style="font-family: Courier New,Courier,monospace">info.ini</span> files and include the required skin image files.</li>
	<li><p>Select the skin name in the <a href="emulator.htm#manager">Emulator Manager</a>. You can also use the <a href="emulator.htm#startup">Emulator start-up options</a> in the command line.</p>
	<p>The image defined in your modified XML meta file is displayed when the Emulator is launched.</p></li>
</ol>

<table>
 <tbody>
        <tr>
          <th class="note">Note</th>
        </tr>
        <tr>
          <td class="note">If you re-install the Tizen IDE, the custom skin folders are reset.</td>

        </tr>
      </tbody>
    </table>

<h2 id="eventcast" name="eventcast">Using EventCast</h2>

<p>The Emulator supports event injection using ECP (Emulator Control Panel). However, injecting sensor events using ECP is less intuitive and convenient. When you are injecting events, touching the Emulator screen simultaneously is impossible. EventCast enables you to inject sensor and touch events more intuitively using a real target device.</p>
<p>The following figure illustrated how the EventCast application in the target device gathers events and passes them to the Emulator controller, which converts and hands them over to the Tizen platform. This is convenient in case you do not have a Tizen mobile device.</p>

<p class="figure">Figure: EventCast architecture</p> 
		<p style="text-align:center;"><img alt="eventcast_architecture" src="../images/eventcast_architecture.png" /></p>

<p>EventCast provides the following features:</p>
<ul>
	<li>Touch: Maximum number of touch points is 10</li>
	<li>Sensors: Accelerometer, gyroscope, geo-magnetic, proximity, light sensors</li>
	<li>Display: Getting images of the Tizen Emulator and drawing them when using touch features</li>
</ul>

<h3 id="eventpre" name="eventpre">Prerequisites</h3>

<p>When connecting through USB, ADB is required to make a connection. If you have already installed Android SDK on the PC, ADB is located at a <span style="font-family: Courier New,Courier,monospace;">&lt;installed Android SDK&gt;/sdk/platform-tools</span> directory. Otherwise, you can download only ADB or install Android SDK.</p>
<p>To install ADB:</p>
	<ol><li><p>Linux/Mac OS&reg; X: Download ADB and then install it in the <span style="font-family: Courier New,Courier,monospace;">/usr/bin</span> directory.</p>
	<p>For more information, see <a href="http://code.google.com/p/adb-fastboot-install/" target="_blank">http://code.google.com/p/adb-fastboot-install/</a>.</p></li>
	<li><p>Download ADB and install it in the <span style="font-family: Courier New,Courier,monospace;">C:\ADB</span> directory.</p>
	<p>For more information, see <a href="http://rubenalamina.mx/custom-installers/android-adb-fastboot/" target="_blank">http://rubenalamina.mx/custom-installers/android-adb-fastboot/</a>.</p></li></ol>
	
<p>When connecting through Wi-Fi, make sure that your android device and PC are within the same AP.</p>

	
<h3 id="eventinst" name="eventinst">Installing EventCaster</h3>

<p>EventCaster is the application on the target device. It communicates with the Tizen Emulator through the TCP/IP protocol. It can connect to the Emulator using USB or Wi-Fi.</p> 

<p>You can install the EventCaster from Google Play(<a href="https://github.com/eventcaster/eventcaster.git" target="_blank">https://github.com/eventcaster/eventcaster.git</a>) and install it manually.</p>

<h3 id="eventconn" name="eventconn">Connecting EventCaster to the Emulator</h3>

<p>To connect the EventCaster application to the Emulator:</p>

<ul>
<li>Connect through USB:

	<ol>
		<li>Locate the developer options
			<p>On most devices running Android 3.2 or older, you can find the option under <strong>Settings &gt; Applications &gt; Development</strong>.</p>
			<p>On Android 4.0 and newer, it is in <strong>Settings &gt; Developer options</strong>.</p>

			<table class="note"><tbody>
<tr>
<th class="note">Note</th> 
      </tr>
<tr>
<td class="note">On Android 4.2 and newer, the developer options are hidden by default. To make them available, go to <strong>Settings &gt; About phone</strong> and tap <strong>Build number</strong> seven times. Return to the previous screen to find the developer options.</td> 
      </tr>
</tbody></table>
</li>
<li>Enable USB debugging.</li>
<li>Connect the device to a computer through USB.</li>
<li>Launch the EventCaster.</li>
<li>Start the server using default port (7000) or enter the port number.</li>
<li>Forward a TCP port using the <span style="font-family: Courier New,Courier,monospace;">adb forward</span> command.
<p>For example, you can forward the 7000 port in the application to the 1234 port in your computer: <span style="font-family: Courier New,Courier,monospace;">adb forward tcp:1234 tcp:7000</span></p></li>
<li>Launch the Tizen Emulator and the Emulator Control Panel (ECP) in the Emulator context menu.</li>
<li>Select the <strong>USB</strong> checkbox on the <strong>EventCast</strong> tab of the Emulator Control Panel.</li>
<li>Enter the forwarded port number and click <strong>Connection</strong> on the ECP.
<p>If the Emulator connects to app successfully, the <strong>Show Event</strong> button in the application is activated.</p></li>
<li>Click <strong>Show Event</strong>. You can now inject a sensor or touch value to the Emulator.</li>
</ol></li>

<li>Connect through Wi-Fi:
<ol>
	<li>Enable Wi-Fi on device and select the Wi-Fi network.</li>
	<li>Connect the Android device to a network where you also have a computer running the Emulator.</li>
	<li>Launch EventCaster and click <strong>Read WiFi</strong>.
	<p>The application gets the IP address of the connected network.</p></li>
	<li>Choose <strong>Start Server</strong> button.</li>
	<li>Select the <strong>Wi-Fi</strong> checkbox on the <strong>EventCast</strong> tab of the Emulator Control Panel.</li>
	<li>Enter the IP address and port number using EventCaster and then click <strong>Connect</strong> on the Emulator Control Panel.
	<p>If the Emulator connects to the application successfully, the <strong>Show Event</strong> button in the application is activated.</p></li>
	<li>Click <strong>Show Event</strong>. You can now inject a sensor or touch value to the Emulator.</li>
</ol></li></ul>

<h2 id="startup" name="startup">Emulator Start-up Options</h2>
<p>You can launch the Emulator with specific settings by defining start-up options in the command line:</p>
<pre class="prettyprint">
# ./emulator-x86 --skin-args &lt;skin options&gt; --qemu-args &lt;QEMU options&gt;
</pre>

<p>The Emulator binaries are located in the <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK&gt;/tools/emulator/bin</span> directory. The Tizen Emulator provides 2 types of start-up options that you can set: skin options (such as width and height) and QEMU options (such as network and memory).</p>


<p>The following tables list the available options.</p>
<table style="width: 100%" border="1">
  <caption>Table: Emulator skin options</caption>
  <tbody>
  <tr>
  <th>Category</th>
  <th>Option</th>
  <th>Mandatory</th>
  <th>Description</th>
</tr>
<tr>
<td rowspan="2">Resolution</td>
<td><span style="font-family: Courier New,Courier,monospace">width=x</span></td>
<td>Yes</td>
<td>This option makes the Emulator use a specific skin image width. The width value must be one of the video resolutions that the Emulator can support. </td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">height=x</span></td>
<td>Yes</td>
<td>This option makes the Emulator use a specific skin image height. The height value must be one of the video resolutions that the Emulator can support. 
</td>
</tr>

<tr>
<td>Heartbeat</td>
<td><span style="font-family: Courier New,Courier,monospace">hb.ignore=x</span></td>
<td>No</td>
<td>This option is used to activate the Emulator debugging mode. Generally, a skin process for the Emulator periodically checks the heartbeat that an Emulator process sends.<br/>
When the Emulator is in the debugging mode using gdb, the skin process is terminated automatically, because the Emulator cannot send a heartbeat to the skin process. In that case, you can set the <span style="font-family: Courier New,Courier,monospace">hb.ignore</span> option as <span style="font-family: Courier New,Courier,monospace">true</span> to debug the Emulator.<br/>
If this option is <span style="font-family: Courier New,Courier,monospace">true</span>, the skin process does not check the heartbeat that the Emulator sends. The default value of this option is <span style="font-family: Courier New,Courier,monospace">false</span>.
</td>
</tr>
<tr>
<td>Skin image file path</td>
<td><span style="font-family: Courier New,Courier,monospace">skin.path=xxx</span></td>
<td>Yes</td>
<td>Emulator loads the skin image files in this path. If this option is omitted, the Emulator finds the image files in the installed &#39;skins&#39; directory.</td>
</tr>
</tbody>
</table> 

<table style="width: 100%" border="1">
  <caption>Table: Emulator QEMU options</caption>
  <tbody>
  <tr>
  <th>Category</th>
  <th>Option</th>
  <th>Description</th>
</tr>
	<tr>
<td rowspan="1">File system image</td>
<td><span style="font-family: Courier New,Courier,monospace">-drive file=&lt;IMAGE_PATH&gt;/emulimg.x86</span></td>
<td>Sets an image path to the file to be used as a drive image.</td>
</tr>
<tr>
<td rowspan="1">Swap file system image</td>
<td><span style="font-family: Courier New,Courier,monospace">-drive file=&lt;SWAP_IMAGE_PATH&gt;/swap.img</span></td>
<td>Sets a swap image path to the file to be used as a swap image.</td>
</tr>
<tr>
<td rowspan="2">Network</td>
<td><span style="font-family: Courier New,Courier,monospace">-net user</span></td>
<td>Uses the user mode network stack, which requires no administrator privilege to run.</td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">-net nic,model=virtio,macaddr=&lt;MAC_ADDRESS&gt;  
</span></td>
<td>Creates a new network interface card and connects it to VIRTIO. &lt;MAC_ADDRESS&gt; is recorded in <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK_DATA&gt;/emulator/vms/.tizen-em-info</span>. For example: <span style="font-family: Courier New,Courier,monospace">E8:11:32:33:38:81</span>
</td>
</tr>
<tr>
<td>USB</td>
<td><span style="font-family: Courier New,Courier,monospace">-usb</span></td>
<td>Enables the USB driver.</td>
</tr>
<tr>
<td>TouchScreen</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-touchscreen-pci</span></td>
<td>Uses the Maru Touchscreen device for display.</td>
</tr>
<tr>
<td>Kernel</td>
<td><span style="font-family: Courier New,Courier,monospace">-kernel &lt;KERNEL_PATH&gt;</span></td>
<td>Uses bzImage as the kernel image.</td>
</tr>
<tr>
<td rowspan="2">BIOS</td>
<td><span style="font-family: Courier New,Courier,monospace">-vga none</span></td>
<td>Sets the VGA card.</td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">-L &lt;BIOS_PATH&gt;</span></td>
<td>Sets the directory for the BIOS, VGA BIOS, and key maps.</td>
</tr>
<tr>
<td>Time</td>
<td><span style="font-family: Courier New,Courier,monospace">-rtc base=utc</span></td>
<td>Sets the real time clock with UTC.</td>
</tr>
<tr>
<td>KVM (in Ubuntu&reg;)</td>
<td><span style="font-family: Courier New,Courier,monospace">-enable-kvm</span></td>
<td>Enables KVM (hardware virtualization support).</td>
</tr>
<tr>
<td>HAX (in Windows&reg; or Mac OS&reg; X)</td>
<td><span style="font-family: Courier New,Courier,monospace">-enable-hax</span></td>
<td>Enables HAX (hardware virtualization support).</td>
</tr>
<tr>
<td>SMP</td>
<td><span style="font-family: Courier New,Courier,monospace">-smp &lt;NUMBER OF CPUs&gt;</span></td>
<td>Sets the number of CPUs.</td>
</tr>
<tr>
<td>Boot order</td>
<td><span style="font-family: Courier New,Courier,monospace">-boot c</span></td>
<td>Sets the boot order of the Emulator. The letter c indicates a hard disk.</td>
</tr>
<tr>
<td>Kernel parameters </td>
<td><span style="font-family: Courier New,Courier,monospace">-append&lt;parameters&gt;</span></td>
<td>Sets the kernel command line parameters from the Emulator to the kernel.</td>
</tr>
<tr>
<td>Kernel log</td>
<td><span style="font-family: Courier New,Courier,monospace">-serial file:&lt;LOG_PATH&gt;/emulator.klog</span></td>
<td>Writes the kernel log into the <span style="font-family: Courier New,Courier,monospace">&lt;LOG_PATH&gt;/emulator.klog</span> file.</td>
</tr>
<tr>
<td>Memory</td>
<td><span style="font-family: Courier New,Courier,monospace">-m &lt;MEMORY_SIZE&gt;</span></td>
<td>Sets the memory size in the Tizen platform to, for example, 512 or 1024.</td>
</tr>
<tr>
<td>Board</td>
<td><span style="font-family: Courier New,Courier,monospace">-M maru-x86-machine</span></td>
<td>Sets the Emulator machine as <span style="font-family: Courier New,Courier,monospace">maru-x86-machine</span>.</td>
</tr>
<tr>
<td rowspan="2">Video card</td>
<td><span style="font-family: Courier New,Courier,monospace">-enable-vigs</span></td>
<td>Enables VIGS (Virtualized Graphics System) as the video card.</td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">-vigs-backend &lt;VIGS_BACKEND&gt;</span></td>
<td>Sets the back end as <span style="font-family: Courier New,Courier,monospace">sw</span> or <span style="font-family: Courier New,Courier,monospace">gl</span> (software or OpenGL&reg;).</td>
</tr>
<tr>
<td rowspan="2">GPU support</td>
<td><span style="font-family: Courier New,Courier,monospace">-enable-yagl</span></td>
<td>Enables host GL acceleration.</td>
</tr>
<tr>
<td><span style="font-family: Courier New,Courier,monospace">-yagl-backend &lt;YAGL_BACKEND&gt;  
</span></td>
<td>Sets the back end as vigs or offscreen.</td>
</tr>
<tr>
<td>Sound</td>
<td><span style="font-family: Courier New,Courier,monospace">-soundhw all</span></td>
<td>Enables all sound cards.</td>
</tr>
<tr>
<td>Display booting status</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-esm-pci</span></td>
<td>Sets the display booting status of the Emulator.</td>
</tr>
<tr>
<td>Codec</td>
<td><span style="font-family: Courier New,Courier,monospace">-device codec-pci</span></td>
<td>Enables codec devices.</td>
</tr>

<tr>
<td>Hardware key</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-hwkey-pci</span></td>
<td>Enables hardware keys.</td>
</tr>

<tr>
<td>Host keyboard</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-keyboard-pci</span></td>
<td>Enables host keyboards.</td>
</tr>

<tr>
<td>Rotary</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-rotary-pci</span></td>
<td>Enables a rotary device.</td>
</tr>


<tr>
<td>Brightness</td>
<td><span style="font-family: Courier New,Courier,monospace">-device maru-brightness</span></td>
<td>Enables the brightness control.</td>
</tr>

<tr>
<td>Camera</td>
<td><span style="font-family: Courier New,Courier,monospace">-device maru-camera</span></td>
<td>Enables the host Webcam support.</td>
</tr>

<tr>
<td>Power</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-power-pci</span></td>
<td>Enables the battery.</td>
</tr>

<tr>
<td>Jack</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-jack-pci,jacks=&lt;Jack types&gt;</span></td>
<td>Enables jack devices. Supported jacks are USB, ear jack, ear key, HDMI, and charger.  The ampersand (&#39;&amp;&#39;) symbol is used for multiple jacks. </td>
</tr>

<tr>
<td>Emulator virtual device interface</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-evdi-pci</span></td>
<td>Enables the common interface between the Emulator daemon on the guest side and the Emulator on the host side. 
<p>To use the Emulator Control Panel, this option is required.</p></td>
</tr>

<tr>
<td>Sensors</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-sensor-pci,sensors=&lt;Sensor types&gt;</span></td>
<td>Enables sensor devices. Supported sensors are accelerometer, gyroscope, geomagnetic, light, proximity, haptic, pressure, ultraviolet, and heart rate monitor. 
<p>The names of sensor types are accel, gyro, geo, light, proxy, haptic, press, uv, and hrm, respectively. The ampersand (&#39;&amp;&#39;) symbol is used for multiple sensor support.</p></td>
</tr>

<tr>
<td>Vmodem</td>
<td><span style="font-family: Courier New,Courier,monospace">-device virtio-vmodem-pci</span></td>
<td>Enables the Virtual Modem.</td>
</tr>
</tbody>
</table>

<p>The following command is an example of using the Emulator start-up options:</p>

<ul>
  <li>Mobile	  		 
<pre class="prettyprint">&lt;TIZEN_SDK&gt;/tools/emulator/bin/emulator-x86.exe --skin-args width=480 height=800 skin.path=
&lt;TIZEN_SDK&gt;/platforms/&lt;PROFILE_NAME&gt;/emulator-resources/skins/&lt;SKIN_NAME&gt; --qemu-args -drive file=
&lt;TIZEN_SDK_DATA&gt;/emulator/vms/&lt;VM_NAME&gt;/emulimg-&lt;VM_NAME&gt;.x86,if=virtio,index=1 -boot c -append &quot;console=ttyS0 video=LVDS-1:480x800-32@60 dpi=2330 ip=10.0.2.15::10.0.2.2:255.255.255.0::eth0:none vm_name=&lt;VM_NAME&gt;&quot; -serial file:
&lt;TIZEN_SDK_ DATA &gt;/emulator/vms/&lt;VM_NAME&gt;/logs/emulator.klog -m 512 -M maru-x86-machine -net nic,model=virtio,macaddr=&lt;MAC_ADDRESS&gt; -soundhw all -usb -vga none -enable-vigs -L 
&lt;TIZEN_SDK&gt;/tools/emulator/data/bios -kernel 
&lt;TIZEN_SDK&gt;/tools/emulator/data/kernel/bzImage.x86 -net user -rtc base=utc -drive file=
&lt;TIZEN_SDK_DATA&gt;/emulator/vms/&lt;VM_NAME&gt;/swap-&lt;VM_NAME&gt;.img,if=virtio,
index=2 -enable-hax -vigs-backend gl -enable-yagl -yagl-backend vigs -device virtio-esm-pci -device virtio-hwkey-pci -device 
virtio-keyboard-pci -device virtio-evdi-pci -device virtio-sensor-pci,sensors=accel&amp;geo&amp;gyro&amp;light&amp;proxi&amp;
haptic&amp;press&amp;uv&amp;hrm -device virtio-power-pci -device 
virtio-jack-pci,jacks=earjack&amp;charger&amp;usb -device codec-pci -device 
maru-brightness -device virtio-vmodem-pci -device maru-camera -device virtio-touchscreen-pci,max_point=10</pre>
	</li>	

  <li>Wearable
<pre class="prettyprint">&lt;TIZEN_SDK&gt;/tools/emulator/bin/emulator-x86.exe --skin-args width=360 height=360 skin.path=
&lt;TIZEN_SDK&gt;/platforms/&lt;PROFILE_NAME&gt;/emulator-resources/skins/&lt;SKIN_NAME&gt; --qemu-args -drive file=
&lt;TIZEN_SDK_DATA&gt;/emulator/vms/
&lt;VM_NAME&gt;/emulimg-&lt;VM_NAME&gt;.x86,if=virtio,index=1 -boot c -append &amp;quot;console=ttyS0 video=LVDS-1:360x360-32@60 dpi=302 vm_name=&lt;VM_NAME&gt;&amp;quot; -serial file:
&lt;TIZEN_SDK_DATA&gt;/emulator/vms/&lt;VM_NAME&gt;/logs/emulator.klog -m 512 -M maru-x86-machine -net nic,model=virtio,macaddr=&lt;MAC_ADDRESS&gt; -soundhw all -usb -vga none -enable-vigs -L 
&lt;TIZEN_SDK&gt;/tools/emulator/data/bios -kernel &lt;TIZEN_SDK&gt;/tools/emulator/data/kernel/bzImage.x86 -net user -rtc base=utc -drive file=
&lt;TIZEN_SDK_DATA&gt;/emulator/vms/&lt;VM_NAME&gt;/swap-&lt;VM_NAME&gt;.img,if=virtio,index=2 -enable-hax -vigs-backend gl -enable-yagl -yagl-backend vigs -device 
virtio-esm-pci -device virtio-hwkey-pci -device virtio-evdi-pci -device virtio-sensor-pci,
sensors=accel&amp;geo&amp;gyro&amp;light&amp;proxi&amp;haptic&amp;press&amp;uv&amp;hrm -device 
virtio-power-pci -device virtio-jack-pci,jacks=charger&amp;usb -device codec-pci -device 
maru-brightness -device virtio-vmodem-pci -device maru-camera -device virtio-touchscreen-pci,max_point=2 -device virtio-rotary-pci</pre>  	
  </li>
	
</ul>

<h2 id="dir" name="dir">Emulator Directory Structure</h2>
    
<p>The following table describes the content of the Emulator directory, located in the <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK&gt;/tools/emulator</span> folder.</p>

	<table border="1">
		<caption>Table: Emulator directory content</caption>
		<tbody>
			<tr>
				<th>Folder or file</th>
				<th>Description</th>
			</tr>

			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/</span></td>
				<td>Binary files</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/emulator-control-panel.jar</span></td>
				<td>Emulator Control Panel</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/emulator-control-panel-cli.jar</span></td>
				<td>Emulator Control Panel CLI (Command Line Interface)</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/emulator-manager</span></td>
				<td>Emulator manager binary to launch the <span style="font-family: Courier New, Courier, monospace">emulator-manager.jar</span> file
				</td>
			</tr>


			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/emulator-manager.jar</span></td>
				<td>Emulator manager jar, which can also launch the
					Emulator with the <a href="#manager">Emulator
						Manager</a>.
				</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/em-cli</span></td>
				<td>Emulator manager CLI (Command Line Interface)</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/emulator-skin.jar</span></td>
				<td>Emulator skin</td>
			</tr>


			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/emulator-x86</span></td>
				<td>x86 Emulator binary, including QEMU</td>
			</tr>


			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/protobuf.jar</span></td>
				<td>Protocol buffer library</td>
			</tr>

			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/libecp.jar</span></td>
				<td>profile independent library for ECP</td>
			</tr>
			
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/swt.jar</span></td>
				<td>SWT library</td>
			</tr>
			
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">bin/jna-&lt;version&gt;.jar</span></td>
				<td>JNA library</td>
			</tr>

			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">data/bios/</span></td>
				<td><span style="font-family: Courier New, Courier, monospace">.bin</span>
					files for initializing the guest OS</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">data/kernel/</span></td>
				<td>Kernel image for the guest Linux OS</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">storages/sdcard/sdcard_xxx.img</span></td>
				<td><span style="font-family: Courier New, Courier, monospace">.img</span>
					files (base sdcard images) specific to the data size used by the
					Emulator Manager</td>
			</tr>
			<tr>
				<td><span style="font-family: Courier New, Courier, monospace">storages/swap/swap.img</span></td>
				<td>Disk image for swap</td>
			</tr>
		</tbody>
	</table>

	<p>The following table describes the platform directories that are located in the <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK&gt;/platform/&lt;Profile&gt;-&lt;VERSION&gt;/emulator-images</span> folder.</p>
   
  
  <table border="1">
  <caption>Table: Platform image directory content</caption>
  <tbody>
    <tr>
	    <th>Name</th>
		<th>Description</th>
	</tr>
 	 
<tr>
       <td><span style="font-family: Courier New,Courier,monospace">x86-standard/</span></td>	
       <td>Platform directory</td>
	</tr> 
	  <tr>
       <td><span style="font-family: Courier New,Courier,monospace">x86-standard/emuling-&lt;VERSION&gt;.x86</span></td>	
       <td>Base image, which represents an Emulator root file system for x86 in the guest OS view</td>
	</tr>  
  <tr>
       <td><span style="font-family: Courier New,Courier,monospace">x86-standard/info.ini</span></td>	
       <td>File for specifying information of the Emulator disk image</td>
	</tr> 
 </tbody>
</table> 	

<p>The following table describes the platform directories that are located in the <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK&gt;/platforms/&lt;Profile&gt;-&lt;VERSION&gt;/emulator-resources</span> folder.</p>
<table border="1">
  <caption>Table: Platform directory resource content</caption>
  <tbody>
    <tr>
	    <th>Name</th>
		<th>Description</th>
	</tr>
    <tr>
       <td><span style="font-family: Courier New,Courier,monospace">plugins/</span></td>	
       <td>Plugins for profile</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">plugins/ecp-plugin.jar</span></td>	
       <td>Plugin for the Emulator Control Panel</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">plugins/ecp-plugin.xml</span></td>	
       <td>XML file for the <span style="font-family: Courier New,Courier,monospace">ecp-plugin.jar</span> file configuration</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">plugins/em-plugin.jar</span></td>	
       <td>Plugin for the Emulator Manager</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">skins/</span></td>	
       <td>Emulator skin images specific to the Emulator resolution, and icons for the Emulator option button and shortcut</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">skins/&lt;skin name&gt;/default.dbi</span></td>	
       <td>Metafile for the Emulator skin layout</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">skins/&lt;skin name&gt;/info.ini</span></td>	
       <td>File for specifying Emulator skin information</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">template/&lt;image name&gt;.xml</span></td>	
       <td>XML file for default configuration of the virtual machine created by the Emulator Manage</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">template/&lt;image name&gt;-template.xml</span></td>	
       <td>XML file for the template of the virtual machine created by the Emulator Manager</td>
	</tr>
</tbody>
</table>

    
<p>The following table describes the directory structure of the user-specific files that are located in the <span style="font-family: Courier New,Courier,monospace">&lt;TIZEN_SDK_DATA&gt;/emulator/vms</span> folder.</p>
   
  
  <table border="1">
  <caption>Table: User directory content</caption>
  <tbody>
    <tr>
	    <th>Name</th>
		<th>Description</th>
	</tr>
    <tr>
       <td><span style="font-family: Courier New,Courier,monospace">emulator-manager.log</span></td>	
       <td>Emulator Manager log file</td>
	</tr> 	
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">last-created_&lt;PROFILE&gt;-&lt;VERSION&gt;_&lt;image name&gt;.xml</span></td>	
       <td>This file saves properties of VM that user created last. And when user create new VM next time, properties in this file is displayed as default</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">.em.lock</span></td>	
       <td>This lock file is used for synchronization between VM operation like modify, delete, launch</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">.tizen-em-info</span></td>	
       <td>Configuration file for Emulator Manager</td>
	</tr>
 <tr>
       <td><span style="font-family: Courier New,Courier,monospace">&lt;image name&gt;/</span></td>	
       <td>Target-specific images</td>
	</tr> 	
 <tr>
       <td><span style="font-family: Courier New,Courier,monospace">&lt;image name&gt;/.skin.properties</span></td>	
       <td>Hidden data for the Emulator skin</td>
	</tr> 	 
  <tr>
       <td><span style="font-family: Courier New,Courier,monospace">&lt;image name&gt;/emulimg-&lt;image name&gt;.x86</span></td>	
       <td>Writable <span style="font-family: Courier New,Courier,monospace">&lt;image name&gt;</span> image file</td>
	</tr> 
	  <tr>
       <td><span style="font-family: Courier New,Courier,monospace">&lt;image name&gt;/swap-&lt;image name&gt;.img</span></td>	
       <td>Swap image file</td>
	</tr>
    <tr>
       <td><span style="font-family: Courier New,Courier,monospace">&lt;image name&gt;/vm_config.xml</span></td>	
       <td>Hardware configuration (for more information, see <a href="#vm">Virtual Machine</a>)</td>
	</tr>
	<tr>
       <td><span style="font-family: Courier New,Courier,monospace">&lt;image name&gt;/${USER}.lock</span></td>	
       <td>This lock file is used for synchronization between VM and Emulator Control Panel to set/get operations</td>
	</tr> 
    <tr>
       <td><span style="font-family: Courier New,Courier,monospace">&lt;image name&gt;/logs/</span></td>	
       <td>Log files (Emulator, kernel, emulator-skin log)</td>
	</tr>
 </tbody>
</table> 

 

 
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
