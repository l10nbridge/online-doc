<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../css/snippet.css" />
    <script type="text/javascript" src="../scripts/snippet.js"></script>
    <script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>
    <title>Multiple Screen Support</title>
</head>

 <body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
	<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/> <img alt="Wearable native" src="../images/wearable_s_n.png"/></p>
	</div>
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#configure">Configuring Multiple Screens</a></li>
			<li><a href="#design">Designing Applications with Multiple Screens</a></li>
			<li><a href="#alternative">Using Alternative UI Layouts</a></li>
		</ul>
	</div></div>
</div>

<div id="container"><div id="contents"><div class="content">
	
<h1>Multiple Screen Support</h1>

<p>Tizen runs on a variety of mobile, wearable, and TV devices that offer different screen sizes and densities. Because of the various screens, the application user interface must be adjusted for different screen configurations. For scaling and resizing, the Tizen SDK provides several features that help you control your application UI.</p>
<p>The following features are supported:</p>
<ul>
	<li>Auto-scaling the UI layout based on the screen density</li>
	<li>Auto-resizing the UI layout based on the screen size</li>
	<li>Auto-setting the UI resources based on the screen size</li>
	<li>Internationalization (i18n)</li>
</ul>

<p>Make sure you are familiar with the following terms:</p>
<ul>
	<li><strong>Screen density</strong>
	<p>Usually referred to as DPI (dots per inch), which means the number of individual dots that can be placed in a line within the span of 1 inch (2.54 cm).</p>
	</li>
	<li><strong>Resource</strong>
	<p>Resources, such as images, strings, application binary, and reference of an external location (such as file or network). In Tizen, the resources are used only at runtime.</p>
	<p>When you support multiple screens, you must use the resources with the application binary.</p>
		<ul>
		<li>File types: Image, EDJ, text, video, and audio</li>
		<li>Strings for localization</li>
		</ul>
	</li>
	<li><strong>Internationalization and localization</strong>
		<p>Tizen provides localized resources to make your application usable in different countries. The Tizen SDK supports the <strong>Resource Manager</strong> view and the string localization editor. Using the Resource Manager, you can make an application containing a variety of languages.</p>
	</li>
	<li><strong>Screen resolution</strong> 
	<p>The total number of physical pixels on the screen.</p>
	</li>
	<li><strong>Screen orientation</strong> 
	<p>The way in which a rectangular screen is oriented for normal viewing. The options are landscape, where the width of the display area is greater than the height, and portrait, where the height of the display area is greater than the width.</p>
	</li>
</ul>

<h2 id="configure">Configuring Multiple Screens</h2>

<p>You can design a UI layout unit by using the screen configuration. The screen configuration consists of the qualifiers which mean the supported device specifications and conditions.</p>

<h3>Screen Configuration Types</h3>

<p>There are 2 screen resolution types.</p>

<ul>
<li>Common configuration provided by default
<table>
	<caption>Table: Common configuration
	</caption>
<tbody>
	<tr>
		<th>Qualifier</th>
		<th>Default value</th>
		<th>Detail</th>
	</tr>
	<tr>
		<td>Screen resolution</td>
		<td>HD (High Definition)</td>
		<td>Screen width: 720; screen height: 1280</td>
	</tr>
	<tr>
		<td>Screen density (DPI)</td>
		<td>Medium Dots Per Inch</td>
		<td>Range: 241~300</td>
	</tr>
	<tr>
		<td>Screen orientation</td>
		<td>Portrait</td>
		<td></td>
	</tr>
</tbody>
</table>
</li>
<li>Specific configuration
<p>A custom screen configuration. You can make your own configuration with a specific screen density and screen orientation.</p>
</li>
</ul>

<h3>Designing Specific UI Layouts with the Screen Configuration</h3> 

<p>Auto-scaling, auto-resizing, and auto-setting enable the application UI layout to adapt to different screen resolutions, screen sizes, and screen orientations. By default, the common configuration is used for the adaptation. If your application is designed for a specific screen, you must prepare a custom configuration for that screen. You can also make a specific configuration for various Tizen devices.</p>

<p>The following figure illustrates the relationships between configurations and devices.</p>
<p class="figure">Figure: Configuration relationships</p>
<p align="center"><img src="../images/multiple_screen_relationships_n.png" alt="Configuration relationships" /></p>


<table>
	<caption>
	Table: Specific configuration
	</caption>
	<tbody>
	<tr>
		<th>Screen resolution</th>
		<th>Orientation</th>
	</tr>
	<tr>
		<td>Mobile HD (720x1280)</td>
		<td>Portrait, landscape</td>
	</tr>
	<tr>
		<td>Mobile WVGA (480x800)</td>
		<td>Portrait, landscape</td>
	</tr>
	<tr>
		<td>Wearable square (320x320, 360x480)</td>
		<td>N/A</td>
	</tr>
	<tr>
		<td>Wearable circle (360x360)</td>
		<td>N/A</td>
	</tr>
</tbody>
</table>

<p>The screen configuration consists of resources and UI layouts. The resources consist of the screen density and locale, while the UI layout consists of the screen density and screen orientation.</p>
<p>The mobile devices need screen configurations for portrait and landscape orientation. Each screen configuration has its own resources and UI layouts. Each screen configuration is also the alternative screen of the other, which means that each resource and UI layout has alternative resources and UI layouts. You must configure the resources and UI layouts which are used alternatively on the screens.</p>


<p>The following table shows the components for multiple screens.</p>
	
<table>
	<caption>
	Table: Components for multiple screens
	</caption>
	<tbody>
	<tr>
		<th>Category</th>
		<th>Component</th>
		<th>Description</th>
	</tr>
	<tr>
		<td rowspan="3">Tizen SDK</td>
		<td>Resource Manager</td>
		<td>Provides the features to add, delete, or change the resources for the screen configuration, and supports drag and drop for placing resources in the UI layout.
		<p>Paths of alternative resources used for multiple screens are written in the <span style="font-family: Courier New,Courier,monospace">res.xml</span> file, which is referenced at runtime.</p>
		</td>
	</tr>
	<tr>
		<td>String localization editor</td>
		<td>Supports string editing. You can add a localized string in the editor.</td>
	</tr>
	<tr>
		<td>Multiple UI layout</td>
		<td>Supports the device-specific UI layout.</td>
	</tr>
	<tr>
		<td rowspan="4">Tizen platform</td>
		<td>Application module</td>
		<td>Manages the application life-cycle. Using a callback function, it notifies you about the application state change events. When the screen orientation or locale changes, this event must be sent to the module which handles multiple screens. For more information, see the <a href="../../../org.tizen.guides/html/native/app_management/applications_n.htm">Applications</a> guide.</td>
	</tr>
	<tr>
		<td>Resource Management module</td>
		<td>Displays the appropriate resource file on the screen by using a resource key.</td>
	</tr>
	<tr>
		<td>Internationalization module (i18n)</td>
		<td>Provides the localized string at runtime.</td>
	</tr>
	<tr>
		<td>EFL library</td>
		<td>Is a graphics engine responsible for the UI representation in the UI component that makes up the application screen. This supports the <a href="../../../org.tizen.guides/html/native/ui/efl/multiple_screens_n.htm">automatic scaling</a> function to express the natural screen without distortion on a variety of devices.</td>
	</tr>
</tbody>
</table>

<h2 id="design">Designing Applications with Multiple Screens</h2>

<p>With the default resources only, you can make an application without alternative resources. The default resource is displayed on the screen at runtime using the automatic scaling of the EFL libraries.</p>
<p>If you want to increase the quality of the resources or provide device-specific screens in the application, use the Resource Manager, which supports alternative resources.</p>

<h3>Preparing Localized Strings</h3>

<p>If you develop an application for a specific locale, register the localized strings displayed at runtime before preparing the multiple screens. Use the string localization editor to register the localized strings. To open the editor, select the PO file in the <strong>Project Explorer</strong>, open the context menu, and click <strong>Localization</strong>.</p>

<p>The following figure illustrates the <strong>Localization</strong> view.</p>
<p class="figure">Figure: Localization view</p>
<p align="center"><img src="../images/multiple_screen_loc_n.png" alt="Localization view" /></p>

<p>For more information, see <a href="po_file_editor_n.htm">PO File Editor</a>.</p>

<h3>Using Localized Strings</h3>

<p>The naming convention for string resources in the <strong>Properties</strong> view is <span style="font-family: Courier New,Courier,monospace">@resource/&lt;Resource ID&gt;</span>, where <span style="font-family: Courier New,Courier,monospace">@resource</span> is an annotation symbol as an alternative resource definition to replace the resource file, and the <span style="font-family: Courier New,Courier,monospace">&lt;Resource ID&gt;</span> is the resource key.</p>

<p>To use a localized string on the UI screen:</p>
<ol>
<li>Add a grid component.
<p>Drag and drop a grid component into the view.</p>
</li>
<li>Add a background component.
<p>Drag and drop a background into the grid.</p>
</li>
<li>Add a button component.
<p>Drag and drop a button into the grid.</p>
</li>
<li>Input a string key.
<p>If you type &#39;@&#39; at the <strong>Text</strong> property in the <strong>Properties</strong> view, the auto-completion shows a list of resource keys.</p>
</li>
<li>Change a locale.
<p>If you change a locale on the toolbar, you can preview the localized string.</p>
</li>
</ol>

<p>The following figure illustrates an example for using a localized string resource in the <strong>Properties</strong> view.</p>
<p class="figure">Figure: Using a localized string resource</p>
<p align="center"><img src="../images/multiple_screen_alt_resource_n.png" alt="Using a localized string resource" /></p>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">
			<strong>Variation property of a UI component</strong>
			<p>A UI component property is classified by the type of the screen configuration. It is classified into basic and variable properties. The variable properties are comprised of the following items:</p>
			<ul>
			<li>Visibility: To show or hide the UI component (if the value is <span style="font-family: Courier New,Courier,monospace">true</span>, the UI component is visible.)</li>
			<li>Packing: Any UI component indicates the position and size attributes attached to the parent container.</li>
			</ul>
			<p>Packing information has different meanings in different UI component containers. For more information, see <a href="../../../org.tizen.guides/html/native/ui/efl/ui_components_n.htm">UI Components</a>.</p>
			</td>
		</tr>
	</tbody>
</table>


<h3>Preparing Alternative Resources</h3> 

<p>To use the alternative resources in the application, you must create directories with reserved names under the <span style="font-family: Courier New,Courier,monospace">res/contents</span> directory in your project.</p>
<p>The following table shows the configuration rules for alternative resources.</p>

<table>
	<caption>
	Table: Configuration rules for alternative resources
	</caption>
	<tbody>
	<tr>
		<th>Qualifier</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>Locale</td>
		<td>Target locale of the resource localization.
		<p>Language region selected by the user at editing and runtime.</p>
	</td>
	</tr>
	<tr>
		<td>DPI</td>
		<td>Device screen density.</td>
	</tr>
	</tbody>
</table>

<table class="note">
    <tbody>
        <tr>
            <th class="note">Note</th>
        </tr>
        <tr>
            <td class="note">If there is no alternative resource corresponding to a specific locale, the default resource is displayed on the screen. If there is no default resource, a blank screen is displayed. Always set at least the default resource.
			</td>
		</tr>
	</tbody>
</table>
		
<p>Using the Resource Manager, you can set the specific resources for the locale and screen density.</p>
<p>For example, use the Resource Manager to add an English locale and medium density defined as <span style="font-family: Courier New,Courier,monospace">en_US-MDPI</span>:</p>
<ol>
<li>In the <strong>Language</strong> box, select <strong>English (US)</strong>.</li>
<li>In the <strong>DPI</strong> box, select <strong>MDPI</strong>.</li>
<li>Click <strong>Add</strong>.</li>
<li>Click <strong>OK</strong>.</li>
</ol>
<p>The following figure illustrates the configuration dialog.</p>
<p class="figure">Figure: Resource configuration dialog</p>
<p align="center"><img src="../images/multiple_screen_alt_loc_n.png" alt="Resource configuration dialog" /></p>

<p>For more information, see <a href="resource_manager_n.htm">Resource Manager</a>.</p>

<h3>Using Alternative Resources</h3>

<p>The alternative resource files located in each directory are visible in the WYSIWYG editor in the IDE. During runtime, the resource files are displayed based on the screen configuration of the device.</p>

<h4>Specifying Alternative Resources Using the Resource Manager</h4>

<p>If you drag a resource file from the <strong>Resource Manager</strong> view and drop it to a UI component of in WYSIWYG editor, the resource is set on the current screen configuration.</p>

<p>The following figure illustrates how to set an alternative resource in the <strong>Resource Manager</strong> view.</p>
<p class="figure">Figure: Setting alternative resources in the Resource Manager view</p>
<p align="center"><img src="../images/multiple_screen_alt_set_n.png" alt="Setting alternative resources" /></p>

<h4>Specifying Alternative Resources in the Properties View</h4> 

<p>The naming rule for alternative resources in the <strong>Properties</strong> view is <span style="font-family: Courier New,Courier,monospace">@resource/key</span>, where <span style="font-family: Courier New,Courier,monospace">@resource</span> is the annotation symbol specifying the resource file for the alternative resource, and <span style="font-family: Courier New,Courier,monospace">key</span> is the resource key.</p>
<p>When you enter &#39;@&#39; in the <strong>Image path</strong> field in the <strong>Properties</strong> view, the auto-completion shows a list of resource keys.</p>

<p>The following figure illustrates how to set an alternative resource in the <strong>Properties</strong> view.</p>
<p class="figure">Figure: Setting alternative resources in the Properties view</p>
<p align="center"><img src="../images/multiple_screen_alt_set_properties_n.png" alt="Setting alternative resources" /></p>

<h2 id="alternative">Using Alternative UI Layouts</h2>

<p>You can use multiple UI layouts for each screen configuration.</p>

<h3>Screen Configurator</h3>

<p>In the <strong>Screen Configurator</strong>, you can configure a specific screen. Open the <strong>Screen Configurator</strong> by clicking the configurator icon on the WYSIWYG editor toolbar.</p>

<p>The following figure illustrates the <strong>Screen Configurator</strong>.</p>
<p class="figure">Figure: Using the Screen Configurator</p>
<p align="center"><img src="../images/multiple_screen_config_n.png" alt="Using the Screen configurator" /></p>

<p>To configure a screen:</p>
<ol>
<li>Click <strong>Add</strong> to add a specific configuration.</li>
<li>Edit the qualifiers for the configuration.
<p>To set the qualifiers:</p>
<ul>
<li>Use as short a name as possible in the <strong>Name</strong> property.</li>
<li>Use only English, lowercase letters, numbers, and underscore characters which start with the allowed character except a number.</li>
<li>Select the resolution and density of the device screen.</li>
<li>Set the screen orientation to portrait or landscape.</li>
</ul>
</li>
<li>If needed, click the trash icon to delete the configuration.</li>
<li>Apply your modifications to the configuration list and close the <strong>Screen Configurator</strong> by clicking <strong>Finish</strong>.</li>
<li>If you do not want to save the modifications, click <strong>Cancel</strong> to close the <strong>Screen Configurator</strong> without saving.</li>
</ol>

<h3>Mapping Specific Configuration to Applications</h3>

<p>To apply a specific configuration, you must map the configuration to the application screen:</p>
<ol>
<li>Add a UI component to the common configuration.
<p>If you change the properties in the common configuration, the changes are applied to all other specific configurations.</p>
</li>
<li>Edit the <strong>Variation</strong> property of the UI component.
<p>When the size of the UI component in a specific configuration is modified, the default screen configuration is separated and mapped to the new screen configuration. The <strong>Variation</strong> property of the UI component is created and set only for the modified specific configuration.</p>
</li>
<li>Add a UI component to the specific configuration.
<p>If you check a UI component in the common configuration, the <strong>Visibility</strong> of the UI component is changed to <span style="font-family: Courier New,Courier,monospace">false</span> and it does not appear in the UI design area.</p>
</li>
</ol>

<p>The following figure illustrates the configuration mapping.</p>

<p class="figure">Figure: Screen configuration mapping</p>
<p align="center"><img src="../images/multiple_screen_config_map_n.png" alt="Screen configuration mapping" /></p>


<h3>Deleting the UI Component</h3>

<p>In the Tizen SDK, UI components are in the same memory space. If you delete one of the UI components, the <strong>Variation</strong> properties of all other components are removed from all the screen configuration. Therefore, to design a UI for each screen configuration, the <strong>Variation</strong> properties of the UI components must be set differently for visibility.</p>
                                    
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
    <p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-25976949-1']);
    _gaq.push(['_trackPageview']);
    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>

</body>

</html>