<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>

	<title>Unit Test</title>  
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile native" src="../images/mobile_s_n.png"/> <img alt="Wearable native" src="../images/wearable_s_n.png"/></p>
    </div>
	
	<div id="toc_border"><div id="toc">
		<p class="toc-title">Content</p>
		<ul class="toc">
			<li><a href="#create">Creating a Test Project</a></li>
			<li><a href="#edit">Editing a Test Project</a></li>
			<li><a href="#run">Running a Test Project</a></li>
			<li><a href="#manage">Managing Test Cases</a></li>
		</ul>
	</div></div>
</div>


<div id="container"><div id="contents"><div class="content">
	
 <h1>Unit Test</h1>

 <p>Unit test tools verify that the unit works exactly as intended in the particular module&#39;s source code. If you encounter any problems due to code changes, they help identify the problem within a short period of time and make it right. The Tizen IDE provides an effective unit test tool for Tizen native projects. The tool offers the Unit Test Wizard for creating a unit test project, with which you can create and run test cases.</p>
 
<p>To unit test your project:</p>
<ol>
<li><a href="#create">Create a test project</a>.</li>
<li><a href="#edit">Edit a test project</a>.</li>
<li><a href="#run">Run the test project</a>.</li>
</ol>

<h2 id="create">Creating a Test Project</h2>

<p>To create a test project with the Tizen unit test project wizard:</p>
<ol>
<li>In the IDE menu, select <strong>File &gt; New &gt; Other &gt; Tizen &gt; Tizen Native Unit Test Project</strong>.</li>
<li>In the <strong>New Tizen Unit Test Project</strong> window:
<ol type="a">
	<li>In the <strong>Select the Tizen project for test</strong> panel, select the project you want to test.</li>
	<li>Define a name for the test project.</li>
	<li>Define a destination folder where to save the project.
	<p>Select the <strong>Use default location</strong> check box to save the test project in the IDE workspace, or browse to the required destination folder.</p>
	</li>
	<li>Click <strong>Finish</strong>.</li>
</ol>
<p align="center"><img src="../images/unit_test_create.png" alt="Unit test creation" /></p>
</li>
</ol>

<p>The generated test project allows you to test your project.</p>

<h2 id="edit">Editing a Test Project</h2>

<p>To edit a test project with the Tizen unit test project wizard:</p>
<ol>
<li>In the <strong>Project Explorer</strong> view, open the <span style="font-family: Courier New, Courier, monospace">&lt;TEST_PROJECT_HOME&gt;/src/&lt;TEST_PROJECT_NAME&gt;TestCase.cpp</span> file.</li>
<li>Add a <span style="font-family: Courier New, Courier, monospace">TEST_F()</span> test case.
<p>Each <span style="font-family: Courier New, Courier, monospace">TEST_F()</span> test case is independent. If the <span style="font-family: Courier New, Courier, monospace">TEST_F()</span> test case is associated with a fixture class name, the test case runs based on that fixture class. </p></li>
<li>Add assertions.
<p>The unit test tool supports basic assertions, binary comparison, and string comparison in gtest. For more information, see <a href="https://github.com/google/googletest/blob/master/googletest/docs/AdvancedGuide.md" target="_blank">https://github.com/google/googletest/blob/master/googletest/docs/AdvancedGuide.md</a>.</p></li>
</ol>


<p>To test your project written in the C code, a unit test project in the C++ language is provided. In this case, the function to be tested must be qualified as an extern &quot;C&quot; to avoid the &quot;undefined reference&quot; error as demangled symbols in the error message.</p>
<p>There are 2 forms of the extern &quot;C&quot; declaration:</p>
<ul>
<li><p>Declare the extern &quot;C&quot; linkage specification in C header file:</p>
 
<pre class="prettyprint">
#ifdef __cplusplus
extern &quot;C&quot; 
{
&nbsp;&nbsp;&nbsp;#endif

&nbsp;&nbsp;&nbsp;int foo;
&nbsp;&nbsp;&nbsp;void bar();


&nbsp;&nbsp;&nbsp;#ifdef __cplusplus
}
#endif
</pre></li>
<li><p>Include the C headers in C++ code:</p>
 
<pre class="prettyprint">
extern &quot;C&quot; 
{
&nbsp;&nbsp;&nbsp;#include &quot;header.h&quot;
}
</pre></li>
</ul>
<p>In the following example with a calculator sample project, write a test case for the <span style="font-family: Courier New, Courier, monospace">utils_round()</span> function declared in the <span style="font-family: Courier New, Courier, monospace">utils/utils.h</span> header:</p>
<ol>
<li>Create a calculator project named &quot;Calculator&quot;, and for it a unit test project named &quot;CalculatorTest&quot;.</li>
<li>Append the test method to the end of the <span style="font-family: Courier New, Courier, monospace">CalculatorTest/src/CalculatorTestTestCase.cpp</span> file:</li>
<pre class="prettyprint">
TEST_F(TestSuite, utils_round)
{
&nbsp;&nbsp;&nbsp;double var = 3.5;
&nbsp;&nbsp;&nbsp;// long long utils_round(double value);

&nbsp;&nbsp;&nbsp;EXPECT_EQ(utils_round(var), (long long)4);
}
</pre>
<li>Change the line that includes the <span style="font-family: Courier New, Courier, monospace">utils/utils.h</span> file:
<pre class="prettyprint">
#include &quot;view/window.h&quot;
#include &quot;view/main-view.h&quot;
extern &quot;C&quot; 
{
&nbsp;&nbsp;&nbsp;#include &quot;utils/utils.h&quot;
}
#include &quot;utils/ui-utils.h&quot;
</pre>
<p>If you do not want to change the source code in the calculator project, you can declare the extern &quot;C&quot; linkage specifications in the test project as above.</p>
</li>
</ol>

<h2 id="run">Running a Test Project</h2>

<p>You can run a test project on the Emulator or a target device.</p>

<p>To run the test project:</p>
<ol>
	<li>Build the test project:
	<ol type="a">
	<li>In the <strong>Project Explorer</strong> view, select the unit test project.</li>
	<li>In the IDE menu, select <strong>Build Project</strong>.</li>
	</ol>
	</li>
	<li>Run the test project:
	<ol type="a">
	<li>In the IDE menu, select <strong>Run as &gt; Tizen Native Unit Test Application</strong>.</li>
	</ol>
	</li>
</ol>
<p>The test results (a summary of executed tests and information about each test case) are displayed in the <strong>Test Result</strong> view.</p>

<p class="figure">Figure: Test Result view</p>
<p align="center"><img src="../images/unit_test_result_view.png" alt="Test Result view" /></p>

<p>The upper part of the view displays the number of tests being executed, and the number of failed tests. The progress bar color shows successful (green) and failed (red) tests. In the bottom part of the view, the left panel shows a list of executed tests in the form of the tree, while the right panel shows the selected test case results (and in case of a failed test, the reason for the failure).</p>

<h3 id="launch">Test Project Launch Configuration</h3>

<p>You can create a custom run/debug launch configuration, which can be saved for reuse.</p>
<p>To create a run/debug configuration:</p>
<ol>
<li>In the <strong>Project Explorer</strong> view, select a project.</li>
<li>Select <strong>Run &gt; Run Configurations</strong> or <strong>Run &gt; Debug Configurations</strong>.</li>
<li>Select and right-click <strong>Tizen Native Unit Test</strong>, and click <strong>New</strong>.
<p>The name of the new project is displayed in the <strong>Configurations</strong> dialog box.</p></li>
</ol>

<p>You can control specific launch options in the <strong>Advanced</strong> tab:</p>

<ul>
<li><strong>Run Disabled Tests</strong>
<p>If selected, also the disabled test cases are run.</p>
</li>
<li><strong>Shuffle Tests</strong>
<p>If selected, test cases are run in a random order.</p>
</li>
<li><strong>Don&#39;t Print Elapsed Time</strong>
<p>If selected, the elapsed time is not printed in the test result.</p>
</li>
<li><strong>Generate and XML Report</strong>
<p>If selected, a test result XML file is generated.</p>
</li>
</ul>


<h2 id="manage">Managing Test Cases</h2>

<p>You can manage and run test cases in the <strong>Test Explorer</strong> view, which displays the test cases in a tree form.</p>
<p>To open the <strong>Test Explorer</strong> view, right-click on the unit test project and select <strong>Show in Test Explorer</strong>. The menu item is available only for projects generated with the <a href="#create">Tizen unit test project wizard</a>.</p>
<p>The <strong>Test Explorer</strong> view lists the test cases and suites as nodes, and represents the relationships between them. Each node has an icon, which shows the current status of the test case or suite.</p>

<p class="figure">Figure: Test Explorer view</p>
<p align="center"><img src="../images/unit_test_explorer.png" alt="Test Explorer View" /></p>

<p>The following table describes the node status icons.</p>
<table>
<caption>Table: Node status icons</caption>
<tbody>
<tr>
<th>Icon</th>
<th>Description</th>
</tr>
<tr>
<td><img src="../images/unit_test_start.png" alt="Start" /> Starting state</td>
<td>When you open the view for the first time, all nodes have this status except for 
disabled tests.</td>
</tr>
<tr>
<td><img src="../images/unit_test_disable.png" alt="Disabled" /> Test is disabled</td>
<td>Disabled nodes are not run.</td>
</tr>
<tr>
<td><img src="../images/unit_test_success.png" alt="Success" /> Test has been successfully run</td>
<td>Test suites have this status when all their test cases have been successfully run.</td>
</tr>
<tr>
<td><img src="../images/unit_test_fail.png" alt="Fail" /> Test has been run and has failed</td>
<td>Test suites have this status if at least one of their test cases has failed.</td>
</tr>
<tr>
<td><img src="../images/unit_test_abnormal.png" alt="Abnormal" /> Abnormal test suite status</td>
<td>
<ul>
<li><img src="../images/unit_test_terminated.png" alt="Terminated" /> Test was not fully performed because it was abnormally terminated.</li>
<li><img src="../images/unit_test_timeout.png" alt="Timeout" /> Test was killed by the system because it exceeded the specified time.</li>
</ul></td>
</tr>
</tbody>
</table>

<p>You can use the following function buttons in the <strong>Test Explorer</strong> view:</p>
<ul>
<li><strong>Refresh Tree</strong>: Refreshes the test case tree to reflect the linked unit test project&#39;s changes.</li>
<li><strong>Expand All</strong> and <strong>Collapse All</strong>: Expands or collapses the test case tree.</li>
<li><strong>Check All</strong> and <strong>Clear All</strong>: Checks or unchecks all the check boxes in the tree.</li>
<li><strong>Check Failed</strong>: Checks failed test cases only.</li>
<li><strong>Run Checked</strong>: Runs checked test cases.</li>
<li><strong>Run Disabled Tests</strong>: If selected, runs also the disabled test cases.</li>
<li><strong>Shuffle Tests</strong>: If selected, runs test cases in a random order.</li>
<li><strong>Don&#39;t Print Elapsed Time</strong>: If selected, does not print elapsed time in the test result.</li>
<li><strong>Generate an XML Report</strong>: If selected, generates a test result XML file.</li>
</ul>

<p>The <strong>Run Disabled Tests</strong>, <strong>Shuffle Tests</strong>, <strong>Don't Print Elapsed Time</strong>, and <strong>Generate an XML Report</strong> options can be altered in the <strong>Advanced</strong> tab of the <a href="#launch">launch configuration</a>.</p>

<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>