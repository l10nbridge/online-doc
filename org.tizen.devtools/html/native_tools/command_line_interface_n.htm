<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>
  <title>Command Line Interface</title> 
 </head> 
 <body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

 <div id="toc-navigation">
</div>

<div id="container"><div id="contents"><div class="content">
<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/> <img alt="Wearable native" src="../images/wearable_s_n.png"/></p>
	</div>
 <h1>Command Line Interface</h1>

				

<p>The native CLI (command line interface) provides the functional tools for developing Tizen native applications without the Tizen IDE. It includes the entire developing process from creating to running and debugging the project. The CLI is located in the <span style="font-family: Courier New,Courier,monospace;">$&lt;TIZEN_SDK_HOME&gt;/tools/ide/bin</span> directory. For developing an application using the CLI, add the CLI directory path to <span style="font-family: Courier New,Courier,monospace;">$PATH</span> using the following command:</p>

<pre class="prettyprint">
export PATH=$PATH:$&lt;TIZEN_SDK_HOME&gt;/tools/ide/bin
</pre>

<p>The CLI in the IDE provides functional commands for:</p>
<ul>
<li><a href="#cli_config">Setting CLI configuration options</a></li>
<li><a href="#tizen_list">Displaying a sub-command list</a></li>
<li><a href="#tizen_create">Creating a project</a></li>
<li><a href="#tizen_build">Building the project</a></li>
<li><a href="#tizen_clean">Cleaning the project</a></li>
<li><a href="#mw_certificate">Generating a Tizen certificate</a></li>
<li><a href="#tizen_package">Packaging the project</a></li>
<li><a href="#tizen_install">Installing the package</a></li>
<li><a href="#tizen_uninstall">Uninstalling the package</a></li>
<li><a href="#tizen_run">Running the application</a></li>
<li><a href="#tizen_version">Displaying version information</a></li>
</ul>

<table class="note">
<tbody>
<tr>
<th class="note">Note</th>
</tr>
<tr>
<td class="note">To use the CLI, you need the Java Runtime Environment version 6 or higher.</td>
</tr>
</tbody>
</table> 

<p>The following table lists the available CLI commands.</p>

 <table> 
   <caption>
     Table: CLI commands 
   </caption> 
   <tbody> 
    <tr> 
     <th>Command</th> 
     <th>Options</th> 
     <th>Description</th> 
	 <th>Example</th> 
    </tr> 
    <tr id="cli_config"> 
     <td><span style="font-family: Courier New,Courier,monospace">tizen cli-config</span> </td> 
     <td> 
<pre class="prettyprint">
<b>tizen cli-config</b> [<i>-g</i>] <i>&lt;key&gt;=&lt;value&gt;</i>
<b>tizen cli-config</b> <i>-l</i>
</pre>

<ul>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-g &lt;key&gt;=&lt;value&gt;, --global &lt;key&gt;=&lt;value&gt;</b></span>:
<p>Sets the CLI configuration key and value you want to assign as global.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-l, --list</b></span>:
<p>Displays the list of all CLI configuration keys and values.</p></li>
</ul></td>
	 <td>Queries, sets, replaces, and unsets CLI setting options.
	 <p>The key and the name are separated by an equal sign.</p>
<p>The CLI configuration keys are:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">default.build.architecture=&lt;x86|arm&gt;</span><p>
Sets the default executable architecture type: x86 or arm.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">default.build.compiler=&lt;llvm|gcc&gt;</span><p>
Sets the default compiler. The default is llvm.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">default.build.configuration=&lt;Debug|Release&gt;</span><p>
Sets the default build configuration. The default is the debug mode.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">default.profiles.path=&lt;path of profile.xml&gt;</span><p>
Sets the path to the <span style="font-family: Courier New,Courier,monospace;">profile.xml</span> file.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">default.sdb.timeout=&lt;timeout value&gt;</span><p>
Sets the default connection timeout value. The default is 60000 milliseconds.</p></li>
</ul>
	 </td>
     <td> 
<ul>
<li><p>Sets a <span style="font-family: Courier New,Courier,monospace;">profile.xml</span> path globally:</p>
<pre class="prettyprint">
$ tizen cli-config –g default.profiles.path=/home/workspace/.metadata/.plugins/org.tizen.common.sign/profiles.xml
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat cli-config –g &quot;default.profiles.path=C:\Users\workspace\.metadata\.plugins\org.tizen.common.sign\profiles.xml&quot;
</pre>
</li>
<li><p>Displays the list of all configurations for which values are set:</p>
<pre class="prettyprint">
$ tizen cli-config –l
default.build.architecture=x86
default.build.compiler=llvm
default.build.configuration=Debug
default.profiles.path=/home/mustafa/workspace/0904/.metadata/.plugins/org.tizen.common.sign/profiles.xml
default.sdb.timeout=60000
</pre></li>
</ul></td>
	 </tr>
    <tr id="tizen_list"> 
     <td><span style="font-family: Courier New,Courier,monospace">tizen list</span> </td> 
     <td> 
<pre class="prettyprint">
<b>tizen list</b> <i>native-project</i>
</pre></td>
	 <td>Displays what kind of template each profile supports, and the list corresponding with the given sub-command.
	 </td>
     <td> 
<ul>
<li><p>Displays the list of all templates:</p>
<pre class="prettyprint">
$ tizen list native-project
&nbsp;&nbsp;&nbsp;[PROFILE]           [TEMPLATE]
&nbsp;&nbsp;&nbsp;mobile-2.3           service_app
&nbsp;&nbsp;&nbsp;mobile-2.3           static_library
&nbsp;&nbsp;&nbsp;mobile-2.3           basic_edc_ui
&nbsp;&nbsp;&nbsp;mobile-2.3           shared_library
&nbsp;&nbsp;&nbsp;mobile-2.3           basic_ui
&nbsp;&nbsp;&nbsp;wearable-2.3         service_app
&nbsp;&nbsp;&nbsp;wearable-2.3         static_library
&nbsp;&nbsp;&nbsp;wearable-2.3         shared_library
&nbsp;&nbsp;&nbsp;wearable-2.3         basic_ui
&nbsp;&nbsp;&nbsp;wearable-2.3         basic_edc_ui
</pre></li></ul>
</td>
	 </tr>	 
    <tr id="tizen_create"> 
     <td><span style="font-family: Courier New,Courier,monospace">tizen create</span> </td> 
     <td> 
<pre class="prettyprint">
<b>tizen create native-project</b> [<i>-p &lt;profile name&gt;</i>] [<i>-t &lt;predefined template&gt;</i>]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[<i>-n &lt;project name&gt;</i>] [<i>-- &lt;project location&gt;</i>]</pre>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-p, --profile</b></span>:
<p>Specifies the profile name.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-t, --template</b></span>:
<p>Specifies the template name.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-n, --name</b></span>:
<p>Specifies the project name.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>--</b></span>:
<p>Specifies the destination directory which the project will be created.</p></li>
</ul></td>
	 <td>Creates a Tizen native project.</td>
     <td> 
<ul>
<li><p>Creates the template project based on the basic Tizen mobile UI project:</p>
<pre class="prettyprint">
$ tizen create native-project –p mobile-2.3 –t basic_ui –n basic -- /home/workspace
$ cd /home/workspace/basic
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat create native-project –p mobile-2.3 –t basic_ui –n basic -- C:\Users\workspace
&gt; cd C:\Users\workspace\basic
</pre></li></ul>
</td>
	 </tr>	 
    <tr id="tizen_build"> 
     <td><span style="font-family: Courier New,Courier,monospace">tizen build-native</span> </td> 
     <td> 
<pre class="prettyprint">
<b>tizen build-native</b> [<i>-a {x86|arm}</i>] [<i>-c {gcc|llvm}</i>]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[<i>-C {Debug|Release}</i>] [<i>--</i>]
</pre>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-a, --arch</b></span>:
<p>Specifies the architecture type.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-c, --compiler</b></span>:
<p>Specifies the compiler. You can use this option with compiler version as follows: gcc-4.9, llvm-3.6</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-C, --configuration</b></span>:
<p>Specifies the build configuration</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>--</b></span>:
<p>Specifies the project directory.</p></li>
</ul></td>
	 <td>Builds the Tizen native project with the default values (if you do not set the options). <p>There are 3 options: architecture, compiler, and configuration. All the options are required and the default values are described in the CLI configuration file.</p> 
	 </td>
     <td> 
<ul>
<li><p>Builds the project with the llvm compiler and the debug mode. The x86 executable named basic is generated, if the project is built successfully:</p>
<pre class="prettyprint">
$ tizen build-native -–arch x86 –-compiler llvm –-configuration Debug -- /home/workspace/basic
$ ls /home/workspace/basic/Debug/
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat build-native -–arch x86 –-compiler llvm –-configuration Debug -- C:\Users\workspace\basic
&gt; dir C:\Users\workspace\basic\Debug
</pre>
</li>
<li><p>Builds the project with the default options:</p>
<pre class="prettyprint">
$ tizen cli-config –l
default.build.architecture=x86
default.build.compiler=llvm
default.build.configuration=Debug
$ tizen build-native -- /home/workspace/basic
$ ls /home/workspace/basic/Debug/
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat build-native -- C:\Users\workspace\basic
&gt; dir C:\Users\workspace\basic\Debug
</pre></li></ul>
</td>
	 </tr>	

	<tr id="tizen_clean">
		<td><span style="font-family: Courier New,Courier,monospace">tizen clean</span> </td>
		<td>
<pre class="prettyprint">
<b>tizen clean</b> [<i>--</i>]
</pre>
</td>
        <td>Cleans the Tizen native project.
        </td>
     <td>
<ul>
<li><p>Cleans the project:</p>
<pre class="prettyprint">
$ tizen clean -- /home/workspace/basic
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat clean -- C:\Users\workspace\basic
</pre></li></ul>
</td>
        </tr>

<!-- cert start -->
   <tr id="tizen_certificate">
     <td><!-- Command --><span style="font-family: Courier New,Courier,monospace">tizen certificate</span> </td>
     <td><!-- Options --><pre class="prettyprint">tizen certificate [-a | --alias &ltAlias name&gt] [-p | --password &ltPassword&gt] [-c | --country &ltCountry Name&gt]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-s | --state &ltState&gt] [-ct | --city &ltCity&gt] [-o | --organization &ltOrganization&gt]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-u | --unit &ltOrganization Unit&gt] [-n | --name &ltYour Name&gt] [-e | --email &ltEmail&gt]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-f | --filename &ltFilename&gt] [--]</pre>
<ul>
  <li><span style="font-family: Courier New,Courier,monospace;">-a, --alias</span>:<p><font color=red>Required</font>. Specifies an alias name of the certficiate.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-p, --password</span>:<p><font color=red>Required</font>. Specifies the key password of the user account.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-c, --country</span>:<p>Specifies user's country code which consists of two letters.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-s, --state</span>:<p>Specifies user's state.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-ct, --city</span>:<p>Specifies user's city.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-o, --organization</span>:<p>Specifies user's organization.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-u, --unit</span>:<p>Specifies user's organization unit.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-n, --name</span>:<p>Specifies user's name.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-e, --email</span>:<p>Specifies user's email.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-f, --filename</span>:<p>Specifies the filename without a file extension. A certificate file is created with the file name.</p><p>If you skip this option, '<span style="font-family: Courier New,Courier,monospace;">author</span>', the default of the file name, is used on creating the certificate file.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">--</span>:<p>Specifies the output directory path.</p><p>If you skip this option, '<span style="font-family: Courier New,Courier,monospace;">&ltSDK Data&gt/keystore/author/</span>', the default of the output directory path, is used on saving the certificate file.</p></li>
</ul>
     </td>
     <td><!-- Description -->
<p>Generates a Tizen certificate for your app.</p>
<p>If you want to upload your app to the Tizen store or install the app to a Tizen device, you must generate your Tizen certificate.</p>
     </td>
     <td><!-- Example -->
       <ul>
         <li><p>Generates a certificate:</p>
<pre class="prettyprint">
$ tizen certificate -a MyTizen -p 1234 -c KR -s Seoul -ct Gangnamgu -o Tizen -u Development -n "Gildong Hong" -e gildonghong@example.org -f mycert
Generating a certificate with
  File name = mycert
  Container Password = ****
  Alias = MyTizen
  Key Password = ****
  Country = KR
  State = Seoul
  City = Gangnamgu
  Name = Gildong Hong
  Organization = Tizen
  Organization Unit = Develop
  E-mail = gildonghong@example.org
'mycert' has been generated in '~/tizen-sdk-data/keystore/author'.

$ ls ~/tizen-sdk-data/keystore/author
mycert.p12
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">&gt; tizen.bat certificate -a MyTizen -p 1234 -c KR -s Seoul -ct Gangnamgu -o Tizen -u Development -n "Gildong Hong" -e gildonghong@example.org -f mycert</pre>
         </li>
       </ul>
     </td>
   </tr>
<!-- cert end -->

    <tr id="tizen_package"> 
     <td><span style="font-family: Courier New,Courier,monospace">tizen package</span> </td> 
     <td> 
<pre class="prettyprint">
<b>tizen package</b> [<i>-t {tpk|wgt}</i>] [<i>-s &lt;security profile name&gt;</i>] [<i>-S {on|off}</i>] [<i>--</i>]
</pre>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-t, --type</b></span>:
<p>Specifies the package type.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-s, --sign</b></span>:
<p>Specifies the profile name to use for signing.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-S, --strip</b></span>:
<p>Determines whether to strip the native binary.</p>
<p>The default value is <span style="font-family: Courier New,Courier,monospace;">off</span>. This option only works when the native binary is based on the <strong>arm</strong> architecture and <strong>release</strong> build configuration.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>--</b></span>:
<p>Specifies the build output path or package file path, which is contained a file name, for re-signing packaging.</p></li>

</ul></td>
	 <td>Packages the Tizen application with signing. If there is a package file path in the options, the package is re-signed.
	 
	 <p>The Tizen application is signed with a certified profile named <span style="font-family: Courier New,Courier,monospace">profiles.xml</span>. You can create the default profile from the Tizen IDE, which generates the file in a hidden directory in your workspace (<span style="font-family: Courier New,Courier,monospace">&lt;Your workspace directory&gt;/.metadata/.plugins/org.tizen.common.sign/profiles.xml</span>). Set the path of the <span style="font-family: Courier New,Courier,monospace">profile.xml</span> file once before packaging the Tizen application (you can use the <span style="font-family: Courier New,Courier,monospace">tizen cli-config</span> command).</p>
	 
	 </td>
     <td> 
<ul>
<li><p>Sets up the path of the <span style="font-family: Courier New,Courier,monospace;">profile.xml</span> file that you already have:</p>
<pre class="prettyprint">
$ tizen cli-config –g default.profiles.path=/home/tizen-sdk/tools/ide/conf/profiles.xml
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat cli-config –g &quot;default.profiles.path=C:\tizen-sdk\tools\ide\conf\profiles.xml&quot;
</pre>
</li>
<li><p>Sets up the path of the <span style="font-family: Courier New,Courier,monospace;">profile.xml</span> file that is created from the IDE:</p>
<pre class="prettyprint">
$ tizen cli-config –g default.profiles.path=/home/workspace/.metadata/.plugins/org.tizen.common.sign/profiles.xml
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat cli-config –g &quot;default.profiles.path=C:\Users\workspace\.metadata\.plugins\org.tizen.common.sign\profiles.xml&quot;
</pre></li>
<li><p>Packages the project:</p>
<pre class="prettyprint">
$ tizen package –-type tpk –-sign myprofile -- /home/workspace/basic/Debug

$ ls /home/workspace/basic/Debug

org.tizen.basic-1.0.0-i386.tpk
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat package –-type tpk –-sign myprofile -- C:\Users\workspace\basic\Debug
</pre>
</li>
<li><p>Re-signs the package:</p>
<pre class="prettyprint">
$ tizen package --type tpk --sign myprofile2 -- /home/workspace/basic/Debug/org.tizen.basic-1.0.0-i386.tpk
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat package --type tpk --sign myprofile2 -- C:\Users\workspace\basic\Debug\org.tizen.basic-1.0.0-i386.tpk
</pre>
</li>
</ul>
</td>
	 </tr> 
    <tr id="tizen_install"> 
     <td><span style="font-family: Courier New,Courier,monospace">tizen install</span> </td> 
     <td> 
<pre class="prettyprint">
<b>tizen install</b> [<i>-t &lt;target name&gt;</i>] [<i>-n &lt;package name&gt;</i>] [-r &lt;.tep file name&gt; [...]][<i>--</i>]
</pre>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-t, --target</b></span>:
<p>Specifies the target, which the Tizen package will be installed.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-n, --name</b></span>:
<p>Specifies the Tizen package file name.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-r, --resource</span>:
<p>Specifies the .tep file name, which is going to be installed on the target.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>--</b></span>:
<p>Specifies the directory path which is saved Tizen package file.</p></li>
</ul></td>
	 <td>Installs a Tizen application on the target.
	 </td>
     <td> 
<ul>
<li><p>Installs a basic application named <span style="font-family: Courier New,Courier,monospace;">org.tizen.basic-1.0.0-i386.tpk</span> to the emulator-26101:</p>
<pre class="prettyprint">
$ tizen install -–target emulator-26101 –-name org.tizen.basic-1.0.0-i386.tpk -- /home/workspace/basic/Debug
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat install -–target emulator-26101 –-name org.tizen.basic-1.0.0-i386.tpk -- C:\Users\workspace\basic\Debug
</pre></li>
<li><p>Install a basic application named <span style="font-family: Courier New,Courier,monospace;">org.tizen.basic-1.0.0-i386.tpk</span> with <span style="font-family: Courier New,Courier,monospace;">org.tizen.basic.tep</span> file to the emulator-26101:</p>
<pre class="prettyprint">
$ tizen install -–target emulator-26101 –-name org.tizen.basic-1.0.0-i386.tpk --resource org.tizen.basic.tep -- /home/workspace/basic/Debug
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&gt; tizen.bat install -–target emulator-26101 –-name org.tizen.basic-1.0.0-i386.tpk --resource org.tizen.basic.tep -- C:\Users\workspace\basic\Debug
</pre></li></ul>	</pre></li></ul>
</td>
	 </tr>
    <tr id="tizen_uninstall">  
     <td><span style="font-family: Courier New,Courier,monospace">tizen uninstall</span> </td> 
     <td> 
<pre class="prettyprint">
<b>tizen uninstall</b> [<i>-t &lt;target name&gt;</i>] [<i>-p &lt;package id&gt;</i>]
</pre>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-t, --target</b></span>:
<p>Specifies the target, which the Tizen package will be uninstalled.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-p, --pkgid</b></span>:
<p>Specifies the Tizen package ID which is installed on the target.</p></li>
</ul></td>
	 <td>Uninstalls the Tizen application on the target.</td>
     <td> 
<ul>
<li><p>Uninstalls a basic application whose pkgid is <span style="font-family: Courier New,Courier,monospace">org.tizen.basic</span> from the emulator-26101:</p>
<pre class="prettyprint">
$ tizen uninstall -–target emulator-26101 -–pkgid org.tizen.basic
</pre></li></ul>
</td>
	 </tr>	
    <tr id="tizen_run">  
     <td><span style="font-family: Courier New,Courier,monospace">tizen run</span> </td> 
     <td> 
<pre class="prettyprint">
<b>tizen run</b> [<i>-t &lt;target name&gt;</i>] [<i>-p &lt;package id&gt;</i>]
</pre>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-t, --target</b></span>:
<p>Specifies the target, which the Tizen package will be run.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;"><b>-p, --pkgid</b></span>:
<p>Specifies the Tizen package ID which is installed on the target.</p></li>
</ul></td>
	 <td>Runs the Tizen application on the target.
	 </td>
     <td> 
<ul>
<li><p>Runs the basic application whose pkgid is <span style="font-family: Courier New,Courier,monospace">org.tizen.basic </span> on an emulator-26101:</p>
<pre class="prettyprint">
$ tizen run -–target emulator-26101 –-pkgid org.tizen.basic
</pre></li></ul>
</td>
	 </tr>	 
    <tr id="tizen_version">  
     <td><span style="font-family: Courier New,Courier,monospace">tizen version</span> </td> 
     <td> 
<pre class="prettyprint">
<b>tizen version</b>
</pre></td>
	 <td>Displays the CLI version number.</td>
     <td> 
<ul>
<li><p>Displays the CLI version:</p>
<pre class="prettyprint">
$ tizen version
Tizen CLI 1.0.0</pre></li></ul>
</td>
	 </tr>	 
</tbody>
</table> 

  
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
