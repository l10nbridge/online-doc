<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=9" />
	<link rel="stylesheet" type="text/css" href="../css/styles.css" />
	<link rel="stylesheet" type="text/css" href="../css/snippet.css" />
	<script type="text/javascript" src="../scripts/snippet.js"></script>	
	<script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
	<script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>
  <title>Command Line Interface</title> 
 </head> 
 <body class="no-toc" onload="prettyPrint()" style="overflow: auto;">

 <div id="toc-navigation">
</div>

<div id="container"><div id="contents"><div class="content">
<div id="profile">
		<p><img alt="Mobile native" src="../images/mobile_s_n.png"/> <img alt="Wearable native" src="../images/wearable_s_n.png"/></p>
	</div>
 <h1>Command Line Interface</h1>

				

<p>The native CLI (command line interface) provides the functional tools for developing Tizen native applications without the Tizen IDE. It includes the entire developing process from creating to running and debugging the project. The CLI is located in the <span style="font-family: Courier New,Courier,monospace;">$&lt;TIZEN_SDK_HOME&gt;/tools/ide/bin</span> directory. For developing an application using the CLI, add the CLI directory path to <span style="font-family: Courier New,Courier,monospace;">$PATH</span> using the following command:</p>

<pre class="prettyprint">
export PATH=$PATH:$&lt;TIZEN_SDK_HOME&gt;/tools/ide/bin
</pre>

<p>The CLI in the IDE provides functional commands for:</p>
<ul>
<li><a href="#nw_cli_config">Setting CLI configuration options</a></li>
<li><a href="#nw_list">Displaying a sub-command list</a></li>
<li><a href="#nw_create">Creating a project</a></li>
<li><a href="#nw_build">Building the project</a></li>
<li><a href="#nw_clean">Cleaning the project</a></li>
<li><a href="#nw_certificate">Generating a Tizen certificate</a></li>
<li><a href="#nw_securityprofiles">Registering a security profile</a></li>
<li><a href="#nw_package">Packaging the project</a></li>
<li><a href="#nw_install">Installing the package</a></li>
<li><a href="#nw_uninstall">Uninstalling the package</a></li>
<li><a href="#nw_run">Running the application</a></li>
<li><a href="#nw_version">Displaying version information</a></li>
</ul>

<p>The following tables list the available CLI commands.</p>

 <table border="1"> 
   <tbody>  
<tr id="nw_cli_config" name="nw_cli_config">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen cli-config</span></th> 
</tr>
<tr>
<td> <p>Displays, sets, replaces, and removes CLI settings.</p>
	 <p>The key and the name are separated by an equal sign.</p>
<p>The CLI configuration keys are:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">default.build.architecture=&lt;x86|arm&gt;</span><p>
Sets the default executable architecture type: x86 or arm.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">default.build.compiler=&lt;llvm|gcc&gt;</span><p>
Sets the default compiler. The default is llvm.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">default.build.configuration=&lt;Debug|Release&gt;</span><p>
Sets the default build configuration. The default is the debug mode.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">default.profiles.path=&lt;path of profiles.xml&gt;</span><p>
Sets the path to the <span style="font-family: Courier New,Courier,monospace;">profiles.xml</span> file.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">default.sdb.timeout=&lt;timeout value&gt;</span><p>
Sets the default connection timeout value. The default is 60000 milliseconds.</p></li>
</ul>
<p><strong>Syntax:</strong></p>  
<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen cli-config</strong> [-g &lt;key&gt;=&lt;value&gt;]
&nbsp;&nbsp;<strong>tizen cli-config</strong> -l
</pre></ul>


<p><strong>Options:</strong></p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">-g &lt;key&gt;=&lt;value&gt;, --global &lt;key&gt;=&lt;value&gt;</span>:
<p>Sets the CLI configuration key and value you want to assign as global.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-l, --list</span>:
<p>Displays the list of all CLI configuration keys and values.</p></li>
</ul>
<p><strong>Examples:</strong></p>

<ul>
<li><p>Sets a <span style="font-family: Courier New,Courier,monospace;">profiles.xml</span> path globally:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen cli-config –g default.profiles.path=/home/workspace/.metadata/.plugins/org.tizen.common.sign/profiles.xml
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat cli-config –g &quot;default.profiles.path=C:\Users\workspace\.metadata\.plugins\org.tizen.common.sign\profiles.xml&quot;
</pre>
</li>
<li><p>Displays the list of all configurations for which values are set:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen cli-config –l
&nbsp;&nbsp;default.build.architecture=x86
&nbsp;&nbsp;default.build.compiler=llvm
&nbsp;&nbsp;default.build.configuration=Debug
&nbsp;&nbsp;default.profiles.path=/home/mustafa/workspace/0904/.metadata/.plugins/org.tizen.common.sign/profiles.xml
&nbsp;&nbsp;default.sdb.timeout=60000
</pre></li>
</ul></td>
	 </tr>
</tbody></table>

<table border="1">
<tbody>
<tr id="nw_list" name="nw_list">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen list</span></th> 
</tr>
<tr>
<td> <p>Displays the profile templates in a list corresponding to the given sub-command.</p>
<p><strong>Syntax:</strong></p>  
<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen list</strong> {native-project|web-project|rootstrap}
</pre></ul>

<p><strong>Examples:</strong></p>
<ul>
<li><p>Lists all templates:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen list native-project
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[PROFILE]           [TEMPLATE]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mobile-2.3           service_app
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mobile-2.3           static_library
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mobile-2.3           basic_edc_ui
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mobile-2.3           shared_library
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mobile-2.3           basic_ui
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wearable-2.3         service_app
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wearable-2.3         static_library
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wearable-2.3         shared_library
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wearable-2.3         basic_ui
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wearable-2.3         basic_edc_ui
</pre></li></ul>
</td> 
    </tr>
</tbody></table>

<table border="1">
<tbody>
<tr id="nw_create" name="nw_create">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen create</span></th> 
</tr>
<tr>
<td> <p>Creates a Tizen native project.</p>

<p><strong>Syntax:</strong></p> 
<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen create</strong> native-project [-p &lt;profile name&gt;] [-t &lt;predefined template&gt;] 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-n &lt;project name&gt;] [-- &lt;project location&gt;]
</pre></ul>

<p><strong>Options:</strong></p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">-p, --profile</span>:
<p>Specifies the profile name.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-t, --template</span>:
<p>Specifies the template name.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-n, --name</span>:
<p>Specifies the project name.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">--</span>:
<p>Specifies the destination directory where the project is created.</p></li>
</ul>
<p><strong>Examples:</strong></p>

<ul>
<li><p>Creates the template project based on the basic Tizen mobile UI project:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen create native-project –p mobile-2.3 –t basic_ui –n basic -- /home/workspace
&nbsp;&nbsp;$ cd /home/workspace/basic
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat create native-project –p mobile-2.3 –t basic_ui –n basic -- C:\Users\workspace
&nbsp;&nbsp;&gt; cd C:\Users\workspace\basic
</pre></li></ul>
</td> 
    </tr>
</tbody></table>

<table border="1">
<tbody>
<tr id="nw_build" name="nw_build">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen build-native</span></th> 
</tr>
<tr>
<td> <p>Builds the Tizen native project with the default values (if you do not set the options).</p>
<p>There are 3 options: architecture, compiler, and configuration. All options are required and the default values are described in the CLI configuration file.</p>

<p><strong>Syntax:</strong></p> 
<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen build-native</strong> [-a {x86|arm}] [-c {gcc|llvm}] [-C {Debug|Release}]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-j &lt;number of parallel builds&gt;] [-r &lt;rootstrap name&gt;] [--]
</pre></ul>

<p><strong>Options:</strong></p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">-a, --arch</span>:
<p>Specifies the architecture type.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-c, --compiler</span>:
<p>Specifies the compiler. You can use this option with the following compiler versions: gcc-4.9 and llvm-3.6</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-C, --configuration</span>:
<p>Specifies the build configuration.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-j, --jobs</span>:
<p>Specifies the number of parallel builds for the native application.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-r, --rootstrap</span>:
<p>Specifies the rootstrap name. The rootstrap contains information on the architecture type and the compiler.</p>
<p>If you use this option with the <span style="font-family: Courier New,Courier,monospace;">-C, --configuration</span> option, you can build a native project without any other options.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">--</span>:
<p>Specifies the project directory.</p></li>
</ul>
<p><strong>Examples:</strong></p>
<ul>
<li><p>Builds the project with the llvm compiler and the debug mode. The x86 executable named basic is generated, if the project is built successfully:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen build-native -–arch x86 –-compiler llvm –-configuration Debug -- /home/workspace/basic
&nbsp;&nbsp;$ ls /home/workspace/basic/Debug/
</pre>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen list rootstrap
&nbsp;&nbsp;[ROOTSTRAP]                              [INFORMATION]
&nbsp;&nbsp;mobile-2.4-emulator.core                 Mobile 2.4, i386
&nbsp;&nbsp;mobile-2.4-device.core                   Mobile 2.4, armel
&nbsp;&nbsp;$ tizen build-native --rootstrap mobile-2.4-device.core --configuration Release -- /home/workspace/basic
&nbsp;&nbsp;$ ls /home/workspace/basic/Release/
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat build-native -–arch x86 –-compiler llvm –-configuration Debug -- C:\Users\workspace\basic
&nbsp;&nbsp;&gt; dir C:\Users\workspace\basic\Debug
</pre>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat list rootstrap
&nbsp;&nbsp;[ROOTSTRAP]                              [INFORMATION]
&nbsp;&nbsp;mobile-2.4-emulator.core                 Mobile 2.4, i386
&nbsp;&nbsp;mobile-2.4-device.core                   Mobile 2.4, armel
&nbsp;&nbsp;&gt; tizen.bat build-native --rootstrap mobile-2.4-device.core --configuration Release -- C:\Users\workspace\basic
&nbsp;&nbsp;&gt; dir C:\Users\workspace\basic\Release
</pre>
</li>
<li><p>Builds the project with the default options:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen cli-config –l
&nbsp;&nbsp;default.build.architecture=x86
&nbsp;&nbsp;default.build.compiler=llvm
&nbsp;&nbsp;default.build.configuration=Debug
&nbsp;&nbsp;$ tizen build-native -- /home/workspace/basic
&nbsp;&nbsp;$ ls /home/workspace/basic/Debug/
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat build-native -- C:\Users\workspace\basic
&nbsp;&nbsp;&gt; dir C:\Users\workspace\basic\Debug
</pre></li></ul>
</td> 
    </tr>
</tbody></table>

<table border="1">
<tbody>
<tr id="nw_clean" name="nw_clean">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen clean</span></th> 
</tr>
<tr>
<td> <p>Cleans the Tizen native project.</p>
<p><strong>Syntax:</strong></p> 
<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen clean</strong> [--]
</pre></ul>

<p><strong>Examples:</strong></p>
<ul>
<li><p>Cleans the project:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen clean -- /home/workspace/basic
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat clean -- C:\Users\workspace\basic
</pre></li></ul>
</td> 
    </tr>
</tbody></table>

<table border="1">
<tbody>
<tr id="nw_certificate" name="nw_certificate">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen certificate</span></th> 
</tr>
<tr>
<td> <p>Generates a Tizen certificate for your application.</p>
<p>If you want to upload your application to the Tizen store or install the application to a Tizen device, you must generate a Tizen certificate.</p>

<p><strong>Syntax:</strong></p>  
<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen certificate</strong> [-a &lt;alias name&gt;] [-p &lt;password&gt;] [-c &lt;country name&gt;]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-s &lt;state&gt;] [-ct &lt;city&gt;] [-o &lt;organization&gt;]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-u &lt;organization unit&gt;] [-n &lt;user name&gt;] [-e &lt;email&gt;]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-f &lt;file name&gt;] [--]
</pre></ul>

<p><strong>Options:</strong></p>

<ul>
  <li><span style="font-family: Courier New,Courier,monospace;">-a, --alias</span>:<p>Specifies an alias name of the certificate.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-p, --password</span>:<p>Specifies the key password of the user account.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-c, --country</span>:<p>Specifies the user&#39;s country code which consists of 2 letters.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-s, --state</span>:<p>Specifies the user&#39;s state.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-ct, --city</span>:<p>Specifies the user&#39;s city.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-o, --organization</span>:<p>Specifies the user&#39;s organization.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-u, --unit</span>:<p>Specifies the user&#39;s organization unit.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-n, --name</span>:<p>Specifies the user&#39;s name.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-e, --email</span>:<p>Specifies the user&#39;s email.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">-f, --filename</span>:<p>Specifies the file name without a file extension. A certificate file is created with the file name.</p><p>If you skip this option, the default file name, <span style="font-family: Courier New,Courier,monospace;">author</span>, is used on creating the certificate file.</p></li>
  <li><span style="font-family: Courier New,Courier,monospace;">--</span>:<p>Specifies the output directory path.</p><p>If you skip this option, the default output directory path, <span style="font-family: Courier New,Courier,monospace;">&lt;TIZEN_SDK_DATA&gt;/keystore/author/</span>, is used on saving the certificate file.</p></li>
</ul>
<p><strong>Examples:</strong></p>
       <ul>
         <li><p>Generates a certificate:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen certificate -a MyTizen -p 1234 -c KR -s Seoul -ct Gangnamgu -o Tizen -u Development -n "Gildong Hong" -e gildonghong@example.org -f mycert
&nbsp;&nbsp;Generating a certificate with
&nbsp;&nbsp;&nbsp;&nbsp;File name = mycert
&nbsp;&nbsp;&nbsp;&nbsp;Container Password = ****
&nbsp;&nbsp;&nbsp;&nbsp;Alias = MyTizen
&nbsp;&nbsp;&nbsp;&nbsp;Key Password = ****
&nbsp;&nbsp;&nbsp;&nbsp;Country = KR
&nbsp;&nbsp;&nbsp;&nbsp;State = Seoul
&nbsp;&nbsp;&nbsp;&nbsp;City = Gangnamgu
&nbsp;&nbsp;&nbsp;&nbsp;Name = Gildong Hong
&nbsp;&nbsp;&nbsp;&nbsp;Organization = Tizen
&nbsp;&nbsp;&nbsp;&nbsp;Organization Unit = Develop
&nbsp;&nbsp;&nbsp;&nbsp;E-mail = gildonghong@example.org
&nbsp;&nbsp;&#39;mycert&#39; has been generated in &#39;~/tizen-sdk-data/keystore/author&#39;.

&nbsp;&nbsp;$ ls ~/tizen-sdk-data/keystore/author
&nbsp;&nbsp;mycert.p12
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat certificate -a MyTizen -p 1234 -c KR -s Seoul -ct Gangnamgu -o Tizen -u Development -n "Gildong Hong" -e gildonghong@example.org -f mycert
</pre>
         </li>
       </ul>
</td> 
    </tr>
</tbody></table>
	   
<table border="1">
<tbody>
<tr id="nw_securityprofiles" name="nw_securityprofiles">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen security-profiles</span></th> 
</tr>
<tr>
<td>
<p>Manages the security profiles, which are a set of signing certificates for a Tizen application. The following commands are supported:</p>
<ul>
<li><p><span style="font-family: Courier New,Courier,monospace;">add</span>: Adds the specified security profile which can contain several certificates.</p></li>
<li><p><span style="font-family: Courier New,Courier,monospace;">list</span>: Displays security profiles. If you specify the name of the security profile, the detailed information of the specified security profile is displayed.</p></li>
<li><p><span style="font-family: Courier New,Courier,monospace;">remove</span>: Removes the specified security profile.</p></li>
</ul>

<p><strong>Syntax:</strong></p> 
<ul><pre class="prettyprint"><strong>&nbsp;&nbsp;tizen security-profiles add</strong> [-n &lt;security profile name&gt;]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-a &lt;author certificate path&gt;]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-p &lt;author password&gt;]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-c &lt;author CA certificate path&gt;]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-r &lt;author root CA certificate path&gt;]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[-d &lt;distributor1 certificate path&gt;][...]]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[-dp &lt;distributor1 password&gt;][...]]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[-dc &lt;distributor1 CA certificate path&gt;][...]]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[-dr &lt;distributor1 root CA certificate path&gt;][...]]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[--]
</pre>
<pre class="prettyprint">&nbsp;&nbsp;<strong>tizen security-profiles list</strong> [-n &lt;security profile name&gt;] [--]</pre>
<pre class="prettyprint">&nbsp;&nbsp;<strong>tizen security-profiles remove</strong> [-n &lt;security profile name&gt;] [--]</pre></ul>

<p><strong>Options:</strong></p>

      <ul>
         <li><span style="font-family: Courier New,Courier,monospace;">-n, --name</span>:<p>Specifies the name of the security profile to add, remove, or display.</p> 
         <p>When you enter <strong>tizen security-profiles list</strong> without a name argument, a set of the security profile names in the <span style="font-family: Courier New,Courier,monospace;">profiles.xml</span> file is displayed.</p></li>
         <li><span style="font-family: Courier New,Courier,monospace;">-a, --path</span>:<p>Specifies the directory path where the author certificate file is located. The format of the certificate is PKCS#12, and the file extension is <span style="font-family: Courier New,Courier,monospace">.p12</span>.</p></li>
         <li><span style="font-family: Courier New,Courier,monospace;">-p, --password</span>:<p>Specifies the password used to access the author certificate.</p></li>
         <li><span style="font-family: Courier New,Courier,monospace;">-c, --ca</span>:<p>Specifies the directory path where the author CA certificate file is located. The file extension of the CA certificate is <span style="font-family: Courier New,Courier,monospace">.cer</span>.</p></li>
         <li><span style="font-family: Courier New,Courier,monospace;">-r, --rootca</span>:<p>Specifies the directory path where the author Root CA certificate file is located. The file extension of the Root CA certificate is <span style="font-family: Courier New,Courier,monospace">.cer</span>.</p></li>
         <li><span style="font-family: Courier New,Courier,monospace;">-d, --dist</span>:<p>Specifies the directory path where the distributor certificate file is located.</p><p>If you skip this option, the default distributor certificate file embedded in the Tizen SDK is used.</p></li>
         <li><span style="font-family: Courier New,Courier,monospace;">-dp, --dist-password</span>:<p>Specifies the password of the distributor certificate.</p></li>
         <li><span style="font-family: Courier New,Courier,monospace;">-dc, --dist-ca</span>:<p>Specifies the directory path where the distributor CA certificate file is located.</p></li>
         <li><span style="font-family: Courier New,Courier,monospace;">-dr, --dist-rootca</span>:<p>Specifies the directory path where the distributor Root CA certificate file is located.</p></li>
         <li><span style="font-family: Courier New,Courier,monospace;">--</span>:<p>Specifies the directory path where <span style="font-family: Courier New,Courier,monospace;">profiles.xml</span> is located.</p><p>If you skip this option, the value of the <span style="font-family: Courier New,Courier,monospace">default.profiles.path</span> key in the CLI configuration is used to find the <span style="font-family: Courier New,Courier,monospace;">profiles.xml</span> file, which consists of new security profiles that are generated in <span style="font-family: Courier New,Courier,monospace;">&lt;TIZEN_SDK_DATA&gt;/keystore/</span>. The directory path is added to the CLI configuration.</p></li>
       </ul>
<p><strong>Examples:</strong></p>

<ul>
         <li><p>Adds a new security profile:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen security-profiles add -n MyProfile -a ~/tizen-sdk-data/keystore/author/mycert.p12 -p 1234
&nbsp;&nbsp;No exist the default path of security profiles.
&nbsp;&nbsp;author path: ~/tizen-sdk-data/keystore/author/mycert.p12
&nbsp;&nbsp;author password: ****
&nbsp;&nbsp;distributor1 path: ~/tizen-sdk/tools/certificate-generator/certificates/distributor/tizen-distributor-signer.p12
&nbsp;&nbsp;distributor1 password: *************************
&nbsp;&nbsp;distributor1 CA path: ~/tizen-sdk/tools/certificate-generator/certificates/distributor/tizen-distributor-ca.cer

&nbsp;&nbsp;In Configuration, Set a default profile path to &#39;~/tizen-sdk-data/ide/keystore/profiles.xml&#39;.
&nbsp;&nbsp;Wrote to &#39;~/tizen-sdk-data/ide/keystore/profiles.xml&#39;.
&nbsp;&nbsp;Succeed to add &#39;MyProfile&#39; profile.
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat security-profiles add -n MyProfile -a C:\tizen-sdk-data\keystore\author\mycert.p12 -p 1234
</pre>
         </li>
         <li><p>Displays the security profiles:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen security-profiles list
&nbsp;&nbsp;Loaded in &#39;~/tizen-sdk-data/ide/keystore/profiles.xml&#39;.
&nbsp;&nbsp;========================================
&nbsp;&nbsp;Name
&nbsp;&nbsp;========================================
&nbsp;&nbsp;MyProfile

&nbsp;&nbsp;$ tizen security-profiles list -n MyProfile
&nbsp;&nbsp;Loaded in &#39;~/tizen-sdk-data/ide/keystore/profiles.xml&#39;.
&nbsp;&nbsp;========================================
&nbsp;&nbsp;&#39;MyProfile&#39; profile information
&nbsp;&nbsp;========================================
&nbsp;&nbsp;author path: ~/tizen-sdk-data/keystore/author/mycert.p12
&nbsp;&nbsp;author password: ****
&nbsp;&nbsp;distributor1 path: ~/tizen-sdk/tools/certificate-generator/certificates/distributor/tizen-distributor-signer.p12
&nbsp;&nbsp;distributor1 password: *************************
&nbsp;&nbsp;distributor1 CA path: ~/tizen-sdk/tools/certificate-generator/certificates/distributor/tizen-distributor-ca.cer
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat security-profiles list

&nbsp;&nbsp;&gt; tizen.bat security-profiles list -n MyProfile
</pre>
         </li>
         <li><p>Removes the security profile:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen security-profiles remove -n MyProfile
&nbsp;&nbsp;Loaded in &#39;~/tizen-sdk-data/ide/keystore/profiles.xml&#39;.
&nbsp;&nbsp;Wrote to &#39;~/tizen-sdk-data/ide/keystore/profiles.xml&#39;.
&nbsp;&nbsp;Succeed to remove &#39;MyProfile&#39; profile.
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat security-profiles remove -n MyProfile
</pre>
         </li>
       </ul>
</td> 
    </tr>
</tbody></table>

		
<table border="1">
<tbody>
<tr id="nw_package" name="nw_package">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen package</span></th> 
</tr>
<tr>
<td>
<p>Packages the Tizen application with signing. If there is a package file path in the options, the package is re-signed.</p>
<p>The Tizen application is signed with a certified profile named <span style="font-family: Courier New,Courier,monospace">profiles.xml</span>. You can create the default profile from the Tizen IDE, which generates the file in a hidden directory in your workspace (<span style="font-family: Courier New,Courier,monospace">&lt;Your workspace directory&gt;/.metadata/.plugins/org.tizen.common.sign/profiles.xml</span>). Set the path of the <span style="font-family: Courier New,Courier,monospace">profiles.xml</span> file once before packaging the Tizen application (you can use the <span style="font-family: Courier New,Courier,monospace">tizen cli-config</span> command).</p>
<p><strong>Syntax:</strong></p> 

<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen package</strong> [-t {tpk|wgt}] [-s &lt;security profile name&gt;] [-S {on|off}] [--]
</pre></ul>
<p><strong>Options:</strong></p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">-t, --type</span>:
<p>Specifies the package type.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-s, --sign</span>:
<p>Specifies the profile name to use for signing.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-S, --strip</span>:
<p>Determines whether to strip the native binary.</p>
<p>The default value is <span style="font-family: Courier New,Courier,monospace;">off</span>. This option only works when the native binary is based on the <strong>arm</strong> architecture and <strong>release</strong> build configuration.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">--</span>:
<p>Specifies the build output path or package file path, which is contained in a file name, for re-signing the package.</p></li>

</ul>

<p><strong>Examples:</strong></p>
<ul>
<li><p>Sets up the path of the <span style="font-family: Courier New,Courier,monospace;">profiles.xml</span> file that you already have:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen cli-config –g default.profiles.path=/home/tizen-sdk/tools/ide/conf/profiles.xml
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat cli-config –g &quot;default.profiles.path=C:\tizen-sdk\tools\ide\conf\profiles.xml&quot;
</pre>
</li>
<li><p>Sets up the path of the <span style="font-family: Courier New,Courier,monospace;">profiles.xml</span> file that is created from the IDE:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen cli-config –g default.profiles.path=/home/workspace/.metadata/.plugins/org.tizen.common.sign/profiles.xml
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat cli-config –g &quot;default.profiles.path=C:\Users\workspace\.metadata\.plugins\org.tizen.common.sign\profiles.xml&quot;
</pre></li>
<li><p>Packages the project:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen package –-type tpk –-sign myprofile -- /home/workspace/basic/Debug

&nbsp;&nbsp;$ ls /home/workspace/basic/Debug

&nbsp;&nbsp;org.tizen.basic-1.0.0-i386.tpk
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat package –-type tpk –-sign myprofile -- C:\Users\workspace\basic\Debug
</pre>
</li>
<li><p>Re-signs the package:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen package --type tpk --sign myprofile2 -- /home/workspace/basic/Debug/org.tizen.basic-1.0.0-i386.tpk
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat package --type tpk --sign myprofile2 -- C:\Users\workspace\basic\Debug\org.tizen.basic-1.0.0-i386.tpk
</pre>
</li>
</ul>
</td> 
    </tr>
</tbody></table>


<table border="1">
<tbody>
<tr id="nw_install" name="nw_install">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen install</span></th> 
</tr>
<tr>
<td> <p>Installs a Tizen application on the target.</p>

<p><strong>Syntax:</strong></p>
 
<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen install</strong> [-t &lt;target name&gt;] [-n &lt;package name&gt;] [--]
</pre></ul>
<p><strong>Options:</strong></p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">-t, --target</span>:
<p>Specifies the target, where the Tizen package is installed.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-n, --name</span>:
<p>Specifies the Tizen package file name.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">--</span>:
<p>Specifies the directory path where the package is saved.</p></li>
</ul>
<p><strong>Examples:</strong></p>
<ul>
<li><p>Installs a basic application named <span style="font-family: Courier New,Courier,monospace;">org.tizen.basic-1.0.0-i386.tpk</span> to the emulator-26101:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen install -–target emulator-26101 –-name org.tizen.basic-1.0.0-i386.tpk -- /home/workspace/basic/Debug
</pre>
<p>Or for Windows:</p>
<pre class="prettyprint">
&nbsp;&nbsp;&gt; tizen.bat install -–target emulator-26101 –-name org.tizen.basic-1.0.0-i386.tpk -- C:\Users\workspace\basic\Debug
</pre></li>
</ul>
</td> 
    </tr>
</tbody></table>


<table border="1">
<tbody>
<tr id="nw_uninstall" name="nw_uninstall">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen uninstall</span></th> 
</tr>
<tr>
<td> <p>Uninstalls the Tizen application on the target.</p>

<p><strong>Syntax:</strong></p> 

<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen uninstall</strong> [-t &lt;target name&gt;] [-p &lt;package id&gt;]
</pre></ul>

<p><strong>Options:</strong></p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">-t, --target</span>:
<p>Specifies the target, from where the Tizen package is uninstalled.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-p, --pkgid</span>:
<p>Specifies the Tizen package ID installed on the target.</p></li>
</ul>
<p><strong>Examples:</strong></p>
<ul>
<li><p>Uninstalls a basic application whose pkgid is <span style="font-family: Courier New,Courier,monospace">org.tizen.basic</span> from the emulator-26101:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen uninstall -–target emulator-26101 -–pkgid org.tizen.basic
</pre></li></ul>
</td> 
    </tr>
</tbody></table>

<table border="1">
<tbody>
<tr id="nw_run" name="nw_run">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen run</span></th> 
</tr>
<tr>
<td> <p>Runs the Tizen application on the target.</p>

<p><strong>Syntax:</strong></p> 

<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen run</strong> [-t &lt;target name&gt;] [-p &lt;package id&gt;]
</pre></ul>
<p><strong>Options:</strong></p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">-t, --target</span>:
<p>Specifies the target, where the Tizen package is run.</p></li>
<li><span style="font-family: Courier New,Courier,monospace;">-p, --pkgid</span>:
<p>Specifies the Tizen package ID installed on the target.</p></li>
</ul>
<p><strong>Examples:</strong></p>
<ul>
<li><p>Runs the basic application whose pkgid is <span style="font-family: Courier New,Courier,monospace">org.tizen.basic</span> on the emulator-26101:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen run -–target emulator-26101 –-pkgid org.tizen.basic
</pre></li></ul>
</td> 
    </tr>
</tbody></table>

<table border="1">
<tbody>
<tr id="nw_version" name="nw_version">
<th style="text-align:left;margin-left:auto;margin-right:auto;"><span style="font-family: Courier New,Courier,monospace">tizen version</span></th> 
</tr>
<tr>
<td> <p>Displays the CLI version number.</p>

<p><strong>Syntax:</strong></p> 

<ul><pre class="prettyprint">
&nbsp;&nbsp;<strong>tizen version</strong>
</pre></ul>

<p><strong>Examples:</strong></p>
 
<ul>
<li><p>Displays the CLI version:</p>
<pre class="prettyprint">
&nbsp;&nbsp;$ tizen version
&nbsp;&nbsp;Tizen CLI 1.0.0</pre></li></ul>
</td> 
    </tr>
</tbody></table>
  
<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>
</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>
</html>
