<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <link rel="stylesheet" type="text/css" href="../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../css/snippet.css" />
    <script type="text/javascript" src="../scripts/snippet.js"></script>
    <script type="text/javascript" src="../scripts/jquery.util.js" charset="utf-8"></script>
    <script type="text/javascript" src="../scripts/common.js" charset="utf-8"></script>
    <script type="text/javascript" src="../scripts/core.js" charset="utf-8"></script>
    <script type="text/javascript" src="../scripts/search.js" charset="utf-8"></script>
    <title>In-App Purchase Programming Guide</title>
</head>

<body onload="prettyPrint()" style="overflow: auto;">

<div id="toc-navigation">
    <div id="profile">
        <p><img alt="Mobile" src="../images/mobile_s_wn.png"/> <img alt="Wearable" src="../images/wearable_s_wn.png"/></p>
    </div>
    <div id="toc_border"><div id="toc">
        <p class="toc-title">Content</p>
        <ul class="toc">
			<li><a href="#mechanism">What is the In-App Purchase AppControl Mechanism?</a></li>
			<li><a href="#types">Supported Item Types</a></li>
			<li><a href="#terms">Terms and Abbreviations</a></li>
			<li><a href="#apply">Applying IAP to Your Application</a></li>
            <li><a href="#register">1. Registering Your Items to Tizen Store Seller Office</a></li>
            <li><a href="#set">2. Setting Your Application Project up to Use IAP</a></li>
			<li><a href="#program">3. Programming Your Application to Work with IAP</a></li>
            <li><a href="#verify">4. Verifying with Tizen Store IAP Server</a></li>
			<li><a href="#appendixes">Appendixes</a></li>
		</ul>
		<p class="toc-title">Related Info</p>
             <ul class="toc">
            <li><a href="https://developer.tizen.org/sites/default/files/page/iap_programming_guide_appcontrol_20151214.zip" target="_blank">IAP Sample Native Apps</a></li>
            <li><a href="https://developer.tizen.org/sites/default/files/page/web_sample_application_source_code_20150113.zip" target="_blank">IAP Sample Web Apps</a></li>
             </ul>

    </div></div>
</div>

<div id="container"><div id="contents"><div class="content">

<h1>In-App Purchase Programming Guide</h1>


<p>Selling items from within your application, you can get large revenue. You can implement In-Application Purchases in your application using the AppControl mechanism for Tizen Native and Web applications.</p>

<p>You can use the IAP in any of the following scenarios:</p>
<ul> 
   <li>An application that enables additional features</li> 
   <li>Any application that allows the user to remove adverts</li> 
   <li>An audio-book application that allows the user to purchase and download new books</li>
   <li>A game which offers new levels to play</li>
   <li>A RPG game that allows to buy virtual items</li>
   <li>And many other features…</li>
  </ul>



<h2 id="mechanism">What is the In-App Purchase AppControl Mechanism?</h2>

<p>If you want to sell items inside your applications such as in-game coins, levels and others, you may need to set servers up to communicate with billing server and user authentications server, and many other infra servers. In-App Purchase will simply handle all those things mentioned above and you don&#39;t need to worry about it. In order to using In-App Purchase, you need to prepare your applications for communicate with it. For example, with in-app purchase of items, your applications just find the proper AppControl, starts the purchase method and receive the result of the purchase in the method of the listener method. IAP will show dialogs (in case of errors), communicate with Tizen Stores server and invoke the listener methods to return the result of the request.</p>

<p>This document explains the process of using the IAP from A to Z. Please read this document thoroughly before you use it.</p>

 

<h2 id="types">Supported Item Types</h2>

<p>IAP supports the item types described below.</p>

<table>
<caption>Table: Supported Item Types</caption>
<tbody>
<tr>
 <th>Table</th>
 <th>Description</th>
 </tr>
 <tr>
 <td>Consumable</td>
 <td><p>If you purchase an item of this type and use it, it is consumed. These items can be repurchased.</p>
 <p>Example: Consumable items such as bullets in games.</p></td>
 </tr>
 <tr>
 <td>Non-Consumable</td>
 <td><p>Once purchased, you can use an item of this type permanently. These items cannot be repurchased.</p>
 <p>Example: Non-Consumable items, including books, that do not need to repurchased.</p>
  </td>
 </tr><tr>
 <td>Subscription (Non-renewing)</td>
 <td><p>Once a certain period has passed after an item purchase, these items can be repurchased.</p>
 <p>These items are not automatically repurchased after a certain period.</p>
 <p>Example: Items that can be repurchased after a certain period such as monthly magazines with expiration dates.</p></td>
  </tr>
 </tbody></table>

 <h2 id="terms">Terms and Abbreviations</h2>
<table>
<caption>Table: Terms and abbreviations</caption>
<tbody>
 <tr>
 <td><strong>IAP</strong></td>
 <td>In-App Purchase</td>
 </tr>
 <tr>
 <td><strong>MCC</strong></td>
 <td>This code (3 digits) identifying mobile country code.
  </td></tr>
  <tr>
  <td><strong>MNC</strong></td>
 <td>This code (chars/digits) identifying carrier in current country.</td>
 </tr>
 <tr>
 <td><strong>AppControl</strong></td>
 <td>It is a standard mechanism in Tizen for using specific operations exported by other applications. 
  </td>
 </tr><tr>
 <td><strong>Operation ID</strong></td>
 <td>Defines the behavior of the AppControl.</td>
 </tr>
 <tr>
 <td><strong>Application ID</strong></td>
 <td>Used to identify each application control suppliers.
  </td></tr>
  <tr>
  <td><strong>Item Group ID</strong></td>
 <td>Collection of items identified by single ID (Item list).</td>
 </tr>
 <tr>
 <td><strong>Item</strong></td>
 <td>It is a single piece of content. 
  </td>
 </tr>
 </tbody></table> 


<h2 id="apply">Applying IAP to Your Application</h2>

<p>It is not difficult to apply the IAP to your application, because it is very simple and lightweight. How to apply are as follow:</p>
<ol>
<li>Register your items to Tizen Store Seller Office. (<a href="http://seller.tizenstore.com/" target="_blank">http://seller.tizenstore.com</a>)</li>
<li>Program your application to work with IAP.</li>
<li>Test and upload your application.</li>
</ol>


<h2 id="register">1. Registering Your Items to Tizen Store Seller Office</h2>
<p>Before you set up and program your application for IAP, you need to register item group and items to Tizen Store Seller Office. The item group is a collection of items and it will be connected to your application in Tizen Store Seller Office. For example, if there are 10 kinds of special items you need for your game, you need to create one item group for your game and 10 individual items. Registering is really simple.</p>


<h3>1.1. Connect to Tizen Store Seller Office</h3>

<p>Run a web browser and connect to Tizen Store Seller Office. The address of Tizen Store Seller Office is <a href="http://seller.tizenstore.com/" target="_blank">http://seller.tizenstore.com</a>. Log in to Tizen Store Seller Office. If you don&#39;t have any account for Tizen Store Seller Office, you can make your own. After you have logged in to the Tizen Store, if you want to sell applications under your personal name, you should register as a private seller. And, if you want to sell applications under your company name register as a corporate seller.</p>


<h3>1.2. Register a New Item Group</h3>

<p>Follow steps explain how to register a new item group on Seller Office.</p>
<ol>
<li>Click <strong>Applications &gt; Item</strong> to navigate to the selected menu option.</li>
<li>Click <strong>Add Item Group</strong>.</li>
<li>Fill in the fields for the Item Group Title and Description, and click <strong>OK</strong> to register your item group.</li>
<li>When the item group is registered, you can click <strong>Edit</strong> to modify its information.</li>
<li>Select a checkbox and click <strong>Delete</strong> to delete an item group. When you delete an item group, all the items included in that group will also be deleted.</li>
<li>You can copy registered item groups from the item group list. When you copy an item group, all the items included in that group will also be copied.</li>
</ol>

<p>An Item group can be modified, deleted, or copied when the application has the following statuses</p>


<h3>1.3. Add a New Item (Temporary Status)</h3>

<p>From the item list, select the name of a registered item group to navigate to its information page. After an item group is created, a list of temporary tabs will appear on the information screen when you first access it.</p>
<ol>
<li>Click <strong>Add Item</strong> in the temporary tab on the view page to enter basic information, such as Title, Price, and Description, in the Add Item popup window. Then click <strong>OK</strong> to add items. See the <strong>Application Registration Guide</strong> for details on price setting.</li>
<li>You can batch register items by clicking <strong>Item Bulk Upload</strong> to upload an Excel file.</li>
<li>When the item has been added, you can click its title in the item list to view the added content.</li>
</ol>

<h4>1.3.1. Edit an Item (Temporary Status)</h4>

<p>You can add, modify, or delete an item if there is an application listed in the item group, or if registered or revised applications in the item group are listed under Pre-Certification.</p>
<ol>
<li>You can click the title of the item on the temporary tab list and check or edit the item title, price, description, and image in the View popup window.</li>
<li>If all the applications containing the item are listed under Pre-Certification, select the checkbox and click <strong>Delete</strong> to delete the item from all of them. However, if the statuses of items mapped for applications are for sale, it cannot be deleted.</li>
<li>All changes will be applied when all the mapped applications are validated. The <strong>On Standby</strong> button is displayed until validation is complete.</li>
<li>Item statuses for different types of application status are as follows:</li>
</ol>

<h4>1.3.2. Item Sales (Sales Status)</h4>
<ol>
<li>Items are registered and modified and you can view them in sales.</li>
<li>If all the mapped applications that are being registered or revised in the item group are listed under Pre-Certification, click the <strong>Modify Item(s)</strong> button to create a temporary tab that will allow you to modify the applications.</li>
</ol>

<h2 id="set">2. Setting Your Application Project up to Use IAP</h2>

<p>There is nothing additional to be done in the project to make your application work with IAP. It uses an AppControl mechanism, and as such requires no updates to the application project.</p>

<p>Working with IAP means simply getting the proper AppControl.</p>

<p>You can find the AppControl tutorials in Help section of Tizen IDE. Or directly you can refer to the link to the mobile native API:</p>
<ul>
<li><a href="../../../org.tizen.native.mobile.apireference/group__CAPI__APP__CONTROL__MODULE.html">App Control</a></li>
</ul>


<h2 id="program">3. Programming Your Application to Work with IAP</h2>

<p>Programming with IAP is very similar to programming with Native Tizen API and other AppControls supported in the system. Before you implement your code you should edit the &quot;manifest&quot; file first.</p>

<p>Section 3.1. explains more about &quot;manifest&quot; file.</p>

<p>Note that the IAP allows for two modes of operation (key name &quot;_mode&quot;):</p>
<ul>
<li>Normal mode or commercial mode: To be used with the finished application, released on the market. Proper data will be obtained and returned from the IAP server.</li>
<li>Developer mode: This can be used while development of the application for testing purpose. Payment always succeeds.</li>
</ul>

<p>Following table describes the Interfaces list</p>

<table>
<caption>Table: Interfaces list</caption>
<tbody>
<tr>
 <th>Application ID</th>
 <th>Operation ID</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">org.tizen.inapppurchase.iapclient</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/purchase</span></td>
 <td><p>The operation makes a purchase of Item. It shows a purchase screen for an item.</p>
 <p>During this step a purchase screen will be displayed. And the user need to provide user’s details (e-mail, password) to make a purchase.</p>
 <p>The output value indicates the result of purchase(success or not), and it is used to verify the purchase</p></td>
 </tr>
 <tr>
 <td rowspan="3"><span style="font-family: Courier New,Courier,monospace">org.tizen.inapppurchase.iapservice</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_item_list</span></td>
 <td><p>The operation returns a list of item available for purchase.</p>
 <p>The output data values are used to send a list of items available for purchase.</p></td>
 </tr>
 <tr>
  <td><span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_purchased_item_list</span> </td>
 <td><p>The operation returns a list of already purchased items. </p>
 </td>
 </tr>
 <tr>
  <td><span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_country_list</span> </td>
 <td><p>The operation returns a list of countries’ MCC and MNC codes to be used in developer mode during testing in-app purchases. </p>
 </td>
 </tr>
 </tbody></table>

<h3>Purchase Item Flow</h3>

<ol>
<li>Get Item list: Use the <span style="font-family: Courier New,Courier,monospace">org.tizen.inapppurchase.iapservice</span> Application ID to retrieve a list items from Tizen Store IAP Server for a given groupId:
<p class="figure">Figure: Item list</p> 
<p align="center"><img alt="Item list" src="../images/iap_workflow_itemlist.png" /></p> </li>
<li>Display a list of items in Your In-App Purchase Application
</li>
<li>Purchase the item: Use the <span style="font-family: Courier New,Courier,monospace">org.tizen.inapppurchase.iapclient</span> Application ID to make a purchase of particular item.
<p class="figure">Figure: Purchase item</p> 
<p align="center"><img alt="Purchase item" src="../images/iap_workflow_purchase.png" /></p></li>
</ol>

<h3>Get a List of Countries</h3>

<p>In developer mode, you are able to test In-App Purchase with different country servers. To get a list of available servers you can use <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_country_list</span> operation:</p>

<p class="figure">Figure: Country list</p> 
<p align="center"><img alt="Country list" src="../images/iap_workflow_countrylist.png" /></p>


<h3>3.1. Add Permissions to Manifest File</h3>

<p>IAP uses AppControl interface to handle purchases. To add required permissions to your native application project, open tizen-manifest.xml file and add following permission:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">http://tizen.org/privilege/appmanager.launch</span></li>
</ul>

<p>Below is the content of the manifest file of native application which contains required permissions.</p>

<pre class="prettyprint">
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
&lt;manifest xmlns=&quot;http://tizen.org/ns/packages&quot; package=&quot;org.tizen.iapsample&quot; version=&quot;1.0.0&quot;&gt;
&nbsp;&nbsp;&nbsp;. . .
&nbsp;&nbsp;&nbsp;&lt;privileges&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;privilege&gt;http://tizen.org/privilege/appmanager.launch&lt;/privilege&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. . .
&nbsp;&nbsp;&nbsp;&lt;/privileges&gt;
&nbsp;&nbsp;&nbsp;. . .
&lt;/manifest&gt;
</pre>

<p>On the other hand, to add required permission to your web application project, open config.xml file and add following permission:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">http://www.tizen.org/privilege/application.launch</span></li>
</ul>

<p>Below is the content of the config file of web application which contains required permissions.</p>
<pre class="prettyprint">
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;&nbsp;widget xmlns=&quot;http://www.w3.org/ns/widgets" xmlns:tizen=&quot;http://tizen.org/ns/widgets&quot; id=  . . .&gt;
&nbsp;&nbsp;&nbsp;. . .
&nbsp;&nbsp;&nbsp;&lt;tizen:privilege name = &quot;http://tizen.org/privilege/application.launch&quot;/&gt;
&nbsp;&nbsp;&nbsp;. . .
&lt;/widget&gt;
</pre>

<h3>3.2. IAP Service Control (Get Item List, Purchased Item List, Country List)</h3>

<p>The IAP Service instance allows you to get a list of items available for purchase and to get a list of already purchased item. It also allows you to get a list of countries available for testing in developer mode</p>
<ul>
<li><strong>Application ID</strong>
<p>This application control can be accessed using aliased application ID of &quot;<span style="font-family: Courier New,Courier,monospace">org.tizen.inapppurchase.iapservice</span>&quot;.</p>
</li>
<li><strong>Operation ID</strong>
<p>This application supports the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_item_list</span> and <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_purchased_item_list</span> operations. It also supports <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_country_list</span> operation.</p>
</li>
<li><strong>Get Item List operation</strong>
<p>This operation returns a list of items available for purchase.</p>
</li>
<li><strong>Input data</strong>
<p>The following table show the (key, value) pairs required in the input extra data for the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_item_list</span> operation:</p>
<table>
<caption>Table: Input data for get item list</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_mode</span></td>
 <td> <span style="font-family: Courier New,Courier,monospace">0 | 1 </span></td>
 <td><p>Mode type.</p>
<p>This information is optional. The default value is 0.</p>
 <p>0 is normal (commercial) mode.</p>
 <p>This mode needs to be used in application submitted to Tizen Store.</p>
 <p>1 is developer mode (always success). This mode can be used while development of the application for testing purpose. Payment always succeeds.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_transactionId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Transaction ID number, such as 1, 2, …</span></td>
 <td><p>Transaction ID.</p>
 <p>This information is mandatory.</p>
 <p>This is used to track a transaction between requests.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_startNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Index of the first item</span></td>
 <td><p>Index of first item on the list</p>
 <p>This information is mandatory</p>
 <p>Start downloading item from this number</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_endNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Index of the last item</span></td>
 <td><p>Index of last item on the list</p>
 <p>This information is mandatory.</p>
 <p>Stop downloading items up to this number.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemGroupId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">ID of Group, such as 100000001455</span></td>
 <td><p>Group ID</p>
 <p>This information is mandatory.</p>
 <p>Group ID is associated with a particular Group of items in the Tizen Store Seller Office site.</p>
 <p>You need to register your Group Id on the Tizen Store Seller Office website first.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_languageCd</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Language Code, such as eng, rus</span></td>
 <td><p>Language Code</p>
 <p>This information is optional.</p>
 <p>According to ISO 639-2, thus the name three character code.</p>
 <p>Language Code is associated with display language of item details in the Tizen Store Seller Office site.</p>
 <p>Output parameters (itemName, itemDescription, reserved1, reserved2) are changed according to this Language code.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemTypeCd</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Item Type, such as  00 | 01 | 02 | 10</span></td>
 <td><p>Item type code</p>
 <p>This information is optional.</p>
 <p>String representation of values:</p>
 <p>00: Non-consumable</p>
 <p>01: Consumable</p>
 <p>02: Subscription (Non-renewing)</p>
 <p>10: All</p> </td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_mcc</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">MCC Code, such as 250</span></td>
 <td><p>MCC Code</p>
 <p>This information is optional. It can be used only in developer mode.</p>
 <p>You can receive a list of available MCC codes through get country list operation</p> </td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_mnc</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">MNC Code, such as 01</span></td>
 <td><p>MNC Code</p>
 <p>This information is optional. It can be used only in developer mode.</p>
 <p>MNC Code is Mobile Network Code.</p></td>
 </tr>
 </tbody></table>
</li>
<li><strong>Example code for get item list</strong>

<pre class="prettyprint">
app_control_h app_control;
int rt = app_control_create(&amp;app_control);

if (rt == APP_CONTROL_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;app_control_set_app_id(app_control, &quot;&nbsp;org.tizen.inapppurchase.iapservice&quot;);
&nbsp;&nbsp;&nbsp;app_control_set_operation(app_control, &quot;http://tizen.org/appcontrol/operation/iapv2/get_item_list&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_mode&quot;, &quot;0&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_transactionId&quot;, &quot;123&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_startNumber&quot;, &quot;1&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_endNumber&quot;, &quot;10&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_itemGroupId&quot;, &quot;100000000012&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_languageCd&quot;, &quot;ENG&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_itemTypeCd&quot;, &quot;00&quot;);
	
&nbsp;&nbsp;&nbsp;rt = app_control_send_launch_request(app_control, get_item_list_cb, NULL);
}
	
if (app_control != NULL)
{
&nbsp;&nbsp;&nbsp;app_control_destroy(app_control);
}
</pre>
</li>

<li><strong>Output Data</strong>

<p>The results of the operation are returned in the app control callback.</p>

<p>The following table shows the output data for the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_item_list</span> operation:</p>

<table>
<caption>Table: Output data for get item list</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_method</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">OnItemInformationListReceived</span></td>
 <td><p>Method to be called as a purchase request result.</p>
 <p>This value will be OnItemInformationListReceived</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_result</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Result code&gt;</span></td>
 <td><p>Result code number.</p>
 <p>Result codes are described in the end of this section.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_resultDescription</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Result code/Function ID number&gt;</span></td>
 <td>&quot;Result code /Function ID&quot; when &quot;_result&quot; value is not &quot;0&quot; (success). Result codes are described in the end of this section </td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_transactionId</span></td>
 <td> <span style="font-family: Courier New,Courier,monospace">&lt;TransactionID&gt;</span></td>
 <td><p>Transaction ID number</p>
 <p>This is the same as the transaction ID that is used to request.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_startNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;start number&gt;</span></td>
 <td><p>Start Number</p>
 <p>Index of the first item on the list</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_endNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;end number&gt;</span></td>
 <td><p>End Number</p>
 <p>Index of the last item on the list</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_totalCount</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;total count&gt;</span></td>
 <td>Total items countNumber of items based on the startNumber and endNumber</td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemTotalCount</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;item total count&gt;</span></td>
 <td>Total counts of registered items in the group ID. </td>
 </tr>
 </tbody></table>

<p>We also have _totalCount number of items in an output data, each key is a PREFIX (list item index value) plus a key (i.e. &quot;12_itemId&quot;) as below:</p>

<table>
<caption>Table: _totalCount number of items in output data</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;ItemID&gt;</span></td>
 <td><p>Item ID number</p>
 <p>This is the same as a Item ID that is used to request.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemGroupId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;ItemGroup ID&gt;</span></td>
 <td><p>Item group ID</p>
 <p>This is a collection of items and it will be linked to your application in Tizen Store Seller site.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemName</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Item Name&gt;</span></td>
 <td><p>Item Name</p>
 <p>This is a name provided during item registration on the Tizen Store Seller Office.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_currencyUnit</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Currency unit, such as:
 $,Won, Pound</span></td>
 <td><p>Currency Unit</p>
 <p>Device user currency unit.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_unitPrecedes</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">0 | 1</span></td>
 <td><p>Unit Precedes</p>
 <p>String representation of values:</p>
 <p>0: Tall (2.99 TL)</p>
 <p>1: Front ($ 2.99)</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_hasPenny</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">0 | 1</span></td>
 <td><p><span style="font-family: Courier New,Courier,monospace">Has Penny</span></p>
 <p>Informations if currency unit has penny: representation</p>
 <p>0 : no</p>
 <p>1 : yes</p> </td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemPrice</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Item price&gt;</span></td>
 <td><p>Item price</p>
 <p>This is a price of item in local currency.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemDownloadUrl</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;URL&gt;</span></td>
 <td><p>Item download URL</p>
 <p>This is a URL provided during item registration on the Tizen Store Seller Office.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemImageUrl</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;URL&gt;</span></td>
 <td><p>Item image URL</p>
 <p>This is a URL provided during item registration on the Tizen Store Seller Office.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemDescription</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Item description&gt;</span></td>
 <td><p>Item description</p>
 <p>A description provided during item registration.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_reserved1</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Reserved Field 1&gt;</span></td>
 <td>Reserved Field 1 </td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_reserved2</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Reserved Field 2&gt;</span></td>
 <td>Reserved Field 2 </td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemTypeCd</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">00 | 01 | 02</span></td>
 <td><p>Item type code</p>
 <p>String representation of values:</p>
 <p>00: Non-consumable</p>
 <p>01: Consumable</p>
 <p>02: Subscription (Non-renewing)</p></td>
 </tr><tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemSubsBillDurationCd</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">00 | 01 | 02 | 03</span></td>
 <td><p>Item subsbillduration code</p>
<p>&#39;_itemTypeCd&#39; Value is &#39;03&#39;, the only.</p>
 <p>If the product type is subscription, the available four units for the validity period of the product are YEAR, MONTH, WEEK, and DAY. The units should be in capital code.</p>
 <p>String representation of values:</p>
 <p>00: Year</p>
 <p>01: Month</p>
 <p>02: Week</p>
 <p>03: Day</p> </td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_subscriptionDurationMultiplier</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Subscription duration multiplier</span></td>
 <td>If the _itemTypeCdis subscription (-02), this is the item duration. Combined with PREFIX_itemSubsBillDurationCd, it is means 1MONTH.</td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_timeStamp</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Time stamp&gt;</span></td>
 <td><p>Time stamp</p>
 <p>Based on GMT +0, Server time.</p>
 <p>(yyyyMMddHHmmss)</p> </td>
 </tr>
 </tbody></table>
</li>

<li><strong>Example code for retrieving a list of items</strong>

<pre class="prettyprint">
void 
get_item_list_cb(app_control_h request, app_control_h reply, app_control_result_e result, void *user_data)
{
&nbsp;&nbsp;&nbsp;char* rt_method = NULL;
&nbsp;&nbsp;&nbsp;char* rt_result = NULL;
&nbsp;&nbsp;&nbsp;char* rt_resultDescription = NULL;
&nbsp;&nbsp;&nbsp;char* rt_transactionId = NULL;
&nbsp;&nbsp;&nbsp;char* rt_startNumber = NULL;
&nbsp;&nbsp;&nbsp;char* rt_endNumber = NULL;
&nbsp;&nbsp;&nbsp;char* rt_totalCount = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemTotalCount = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemId = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemGroupId = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemName = NULL;
&nbsp;&nbsp;&nbsp;char* rt_currencyUnit = NULL;
&nbsp;&nbsp;&nbsp;char* rt_unitPrecedes = NULL;
&nbsp;&nbsp;&nbsp;char* rt_hasPenny = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemPrice = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemDownloadUrl = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemImageUrl = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemDescription = NULL;
&nbsp;&nbsp;&nbsp;char* rt_reserved1 = NULL;
&nbsp;&nbsp;&nbsp;char* rt_reserved2 = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemTypeCd = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemSubsBillDurationCd = NULL;
&nbsp;&nbsp;&nbsp;char* rt_subscriptionDurationMultiplier = NULL;
&nbsp;&nbsp;&nbsp;char* rt_timeStamp = NULL;
	
&nbsp;&nbsp;&nbsp;if (result == APP_CONTROL_RESULT_SUCCEEDED){

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_method&quot;, &amp;rt_method);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_result&quot;, &amp;rt_result);
		
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// succeed
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!strcmp(&quot;0&quot;, rt_result))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_resultDescription&quot;, &amp;rt_resultDescription);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_transactionId&quot;, &amp;rt_transactionId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_startNumber&quot;, &amp;rt_startNumber);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_endNumber&quot;, &amp;rt_endNumber);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_totalCount&quot;, &amp;rt_totalCount);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemTotalCount&quot;, &amp;rt_itemTotalCount);
			
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int start = atoi(rt_startNumber);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int end = atoi(rt_endNumber);
			
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char keyId[100] = {0, };
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (; start &lt;= end; start++)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemId&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, key_id, &amp;rt_itemId);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemGroupId);&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, key_id, &amp;rt_itemGroupId);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemName&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemName);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_currencyUnit&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_currencyUnit);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_unitPrecedes&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_unitPrecedes);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_hasPenny&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_hasPenny);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemPrice&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemPrice);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemDownloadUrl&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemDownloadUrl);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemImageUrl&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemImageUrl);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemDescription&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemDescription);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_reserved1&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_reserved1);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_reserved2&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_reserved2);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemTypeCd&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemTypeCd);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemSubsBillDurationCd&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemSubsBillDurationCd);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_subscriptionDurationMultiplier&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_subscriptionDurationMultiplier);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_timeStamp&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_timeStamp);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
</pre>
</li>

<li><strong>GetPurchasedItemList operation</strong>

<p>This operation returns a list of already purchased items.</p>
</li>
<li><strong>Input data</strong>

<p>The following table show the (key, value) pairs required in the input extra data for the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_purchased_item_list</span> operation:</p>

<table>
<caption>Table: Input data for get purchased item list</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_mode</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">0 | 1</span></td>
 <td><p>Mode type.</p>
<p>This information is optional. The default value is 0.</p>
<p>0 is normal (commercial) mode.</p>
<p>This mode needs to be used in application submitted to Tizen Store.</p>
<p>1 is developer mode (always success). This mode can be used while development of the application for testing purpose. Payment always succeeds.</p></td>
 </tr>
 <tr>
 <td></td>
 <td><span style="font-family: Courier New,Courier,monospace">Transaction ID number, such as 1, 2, …</span></td>
 <td><p>Transaction ID.</p>
<p>This information is mandatory.</p>
<p>This is used to track a transaction between requests.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_startNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Index of the first item</span></td>
 <td><p>Index of first item on the list</p>
<p>This information is mandatory</p>
<p>Start downloading item from this number</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_endNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Index of the last item</span></td>
 <td><p>Index of last item on the list</p>
<p>This information is mandatory.</p>
<p>Stop downloading items up to this number.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_startDate</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Start date, such as 20131031</span></td>
 <td><p>The start date of the requested inbox list.</p>
<p>This information is optional.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_endDate</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">End date, such as 20131031</span></td>
 <td><p>The end date of the requested inbox list.</p>
<p>This information is optional.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemGroupId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">ID of Group, such as 100000002501</span></td>
 <td><p>Group ID</p>
<p>This information is mandatory.</p>
<p>Group ID is associated with the particular Group of items in the Tizen Store Seller Office site.</p>
<p>You need to register your Group Id on the Tizen Store Seller Office website first.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_languageCd</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Language Code, such as eng, rus</span></td>
 <td><p>Language code</p>
<p>This information is optional.</p>
<p>According to ISO 639-2, thus the name three character code.</p>
<p>Language Code is associated with display language of item details in the Tizen Store Seller Office site.</p>
<p>Output parameters(itemName , itemDescription, reserved1, reserved2) are changed according to this Language code.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_mcc</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">MCC Code, such as 250</span></td>
 <td><p>MCC Code</p>
<p>This information is optional. It can be used only in developer mode.</p>
<p>You can receive a list of available MCC codes through get country list operation</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_mnc</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">MNC Code, such as 01</span></td>
 <td><p>MNC Code</p>
<p>This information is optional. It can be used only in developer mode.</p>
<p>MNC Code is Mobile Network Code.</p></td>
 </tr>
 </tbody></table>
</li>

<li><strong>Example code for retrieving a list of purchased items</strong>

<pre class="prettyprint">
app_control_h app_control;
int rt = app_control_create(&amp;app_control);

if (rt == APP_CONTROL_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;app_control_set_app_id(app_control, &quot; org.tizen.inapppurchase.iapservice&quot;);
&nbsp;&nbsp;&nbsp;app_control_set_operation(app_control, &quot;http://tizen.org/appcontrol/operation/iapv2/get_purchased_item_list&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_mode&quot;, &quot;0&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_transactionId&quot;, &quot;123&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_startNumber&quot;, &quot;1&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_endNumber&quot;, &quot;10&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_startDate&quot;, &quot;20140101&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_endDate&quot;, &quot;20141231&quot;);	
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_itemGroupId&quot;, &quot;100000000012&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_languageCd&quot;, &quot;ENG&quot;);
		
&nbsp;&nbsp;&nbsp;rt = app_control_send_launch_request(app_control, get_purchased_item_list_cb, NULL);
}
	
if (app_control != NULL)
{
&nbsp;&nbsp;&nbsp;app_control_destroy(app_control);
}
</pre>
</li>
<li><strong>Output Data</strong>

<p>The results of the operation are returned in the app control callback.</p>

<p>The following table shows the output data for the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_purchased_item_list</span> operation:</p>

<table>
<caption>Table: Output data for get purchased item list</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_method</span></td>
 <td><p><span style="font-family: Courier New,Courier,monospace">OnPurchasedItem</span></p>
<p><span style="font-family: Courier New,Courier,monospace">InformationListReceived</span></p></td>
<td><p>Method to be called as a GetPurchasedItemList request result.</p>
<p>This value will be</p>
<p>OnPurchasedItem</p>
<p>InformationListReceived</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_result</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Result code&gt;</span></td>
 <td><p>Result code number.</p>
<p>Result codes are described in the end of this section.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_resultDescription</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Result code/Function ID number&gt;</span></td>
 <td><p>&quot;Result code /Function ID&quot; when &quot;_result&quot; value is not &quot;0&quot; (success).</p>
<p>Result codes are described in the end of this section</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_transactionId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;TransactionID&gt;</span></td>
 <td><p>Transaction ID number</p>
<p>This is the same as the transaction ID that is used to request.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_startNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;start number&gt;</span></td>
 <td><p>Start Number</p>
<p>Index of the first item on the list</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_endNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;end number&gt;</span></td>
 <td><p>End Number</p>
<p>Index of the last item on the list</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_totalCount</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;total count&gt;</span></td>
 <td><p>Total items count</p>
<p>Number of items based on the startNumber and endNumber</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemTotalCount</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;item total count&gt;</span></td>
 <td>Total count of purchased items in the group ID.</td>
 </tr>
 </tbody></table>

<p>We also have _totalCount number of items in the output data, each key is a PREFIX (list item index value) plus a key (i.e. &quot;12_itemId&quot;) as below:</p>

<table>
<caption>Table: _totalCount number of items in output data</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;ItemID&gt;</span></td>
 <td><p>Item ID number</p>
 <p>This is the same as an Item ID that is used to request.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemGroupId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;ItemGroup ID&gt;</span></td>
 <td><p>Item group ID</p>
 <p>This is a collection of items and it will be linked to your application in Tizen Store Seller Office.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemName</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Item Name&gt;</span></td>
 <td><p>Item Name</p>
 <p>This is a name provided during item registration on the Tizen Store Seller Office.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_currencyUnit</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Currency unit, such as: $,Won, Pound</span></td>
 <td><p>Currency Unit</p>
 <p>Device user currency unit.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_unitPrecedes</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">0 | 1</span></td>
 <td><p>Unit Precedes</p>
 <p>String representation of values:</p>
 <p>0: Tall (2.99 TL)</p>
 <p>1: Front ($ 2.99)</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_hasPenny</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">0 | 1</span></td>
 <td><p><span style="font-family: Courier New,Courier,monospace">Has Penny</span></p>
 <p>Informations if currency unit has penny: representation</p>
 <p>0 : no</p>
 <p>1 : yes</p> </td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemPrice</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Item price&gt;</span></td>
 <td><p>Item price</p>
 <p>This is a price of item in local currency.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemDownloadUrl</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;URL&gt;</span></td>
 <td><p>Item download URL</p>
 <p>This is a URL provided during item registration on the Tizen Store Seller Office.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemImageUrl</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;URL&gt;</span></td>
 <td><p>Item image URL</p>
 <p>This is a URL provided during item registration on the Tizen Store Seller Office.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemDescription</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Item description&gt;</span></td>
 <td><p>Item description</p>
 <p>A description provided during item registration.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_reserved1</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Reserved Field 1&gt;</span></td>
 <td>Reserved Field 1 </td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_reserved2</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Reserved Field 2&gt;</span></td>
 <td>Reserved Field 2 </td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_paymentId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Payment ID&gt;</span></td>
 <td>ID of payment</td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_purchaseDate</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Date&gt;</span></td>
 <td>Date of purchase</td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemTypeCd</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">00 | 01 | 02</span></td>
 <td><p>Item type code</p>
 <p>String representation of values:</p>
 <p>00: Non-consumable</p>
 <p>01: Consumable</p>
 <p>02: Subscription (Non-renewing)</p></td>
 </tr><tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_itemSubsBillDurationCd</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">00 | 01 | 02 | 03</span></td>
 <td><p>Item subs bill duration code</p>
<p>&#39;_itemTypeCd&#39; Value is &#39;02&#39;, the only.</p>
 <p>If the product type is subscription, the available four units for the validity period of the product are YEAR, MONTH, WEEK, and DAY. The units should be in capital code.</p>
 <p>String representation of values:</p>
 <p>00: Year</p>
 <p>01: Month</p>
 <p>02: Week</p>
 <p>03: Day</p> </td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_subscriptionDurationMultiplier</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Subscription duration multiplier</span></td>
 <td>If the _itemTypeCdis subscription (-02), this is the item duration. Combined with PREFIX_itemSubsBillDurationCd, it is means 1MONTH.</td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_timeStamp</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Time stamp&gt;</span></td>
 <td><p>Time stamp</p>
 <p>Based on GMT +0, Server time.</p>
 <p>(yyyyMMddHHmmss)</p> </td>
 </tr>
 </tbody></table>
</li>
 
<li><strong>Example code for retrieving a list of purchased items</strong>
&nbsp;&nbsp;&nbsp;
<pre class="prettyprint">
void 
get_purchased_item_list_cb(app_control_h request, app_control_h reply, app_control_result_e result, void *user_data)
{
&nbsp;&nbsp;&nbsp;char* rt_method = NULL;
&nbsp;&nbsp;&nbsp;char* rt_result = NULL;
&nbsp;&nbsp;&nbsp;char* rt_resultDescription = NULL;
&nbsp;&nbsp;&nbsp;char* rt_transactionId = NULL;
&nbsp;&nbsp;&nbsp;char* rt_startNumber = NULL;
&nbsp;&nbsp;&nbsp;char* rt_endNumber = NULL;
&nbsp;&nbsp;&nbsp;char* rt_totalCount = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemTotalCount = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemId = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemGroupId = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemName = NULL;
&nbsp;&nbsp;&nbsp;char* rt_currencyUnit = NULL;
&nbsp;&nbsp;&nbsp;char* rt_unitPrecedes = NULL;
&nbsp;&nbsp;&nbsp;char* rt_hasPenny = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemPrice = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemDownloadUrl = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemImageUrl = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemDescription = NULL;
&nbsp;&nbsp;&nbsp;char* rt_reserved1 = NULL;
&nbsp;&nbsp;&nbsp;char* rt_reserved2 = NULL;
&nbsp;&nbsp;&nbsp;char* rt_paymentId = NULL;
&nbsp;&nbsp;&nbsp;char* rt_purchaseDate = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemTypeCd = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemSubsBillDurationCd = NULL;
&nbsp;&nbsp;&nbsp;char* rt_subscriptionDurationMultiplier = NULL;
&nbsp;&nbsp;&nbsp;char* rt_timeStamp = NULL;
	
&nbsp;&nbsp;&nbsp;if (result == APP_CONTROL_RESULT_SUCCEEDED)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_method&quot;, &amp;rt_method);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_result&quot;, &amp;rt_result);
		
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// succeed
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!strcmp(&quot;0&quot;, rt_result))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_resultDescription&quot;, &amp;rt_resultDescription);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_transactionId&quot;, &amp;rt_transactionId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_startNumber&quot;, &amp;rt_startNumber);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_endNumber&quot;, &amp;rt_endNumber);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_totalCount&quot;, &amp;rt_totalCount);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemTotalCount&quot;, &amp;rt_itemTotalCount);
			
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int start = atoi(rt_startNumber);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int end = atoi(rt_endNumber);
			
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char keyId[100] = {0, };
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (; start &lt;= end; start++)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemId&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, key_id, &amp;rt_itemId);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemGroupId);&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, key_id, &amp;rt_itemGroupId);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemName&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemName);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_currencyUnit&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_currencyUnit);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_unitPrecedes&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_unitPrecedes);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_hasPenny&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_hasPenny);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemPrice&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemPrice);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemDownloadUrl&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemDownloadUrl);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemImageUrl&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemImageUrl);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemDescription&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemDescription);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_reserved1&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_reserved1);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_reserved2&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_reserved2);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_paymentId&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_paymentId);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_purchaseDate&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_purchaseDate);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemTypeCd&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemTypeCd);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_itemSubsBillDurationCd&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_itemSubsBillDurationCd);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_subscriptionDurationMultiplier&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_subscriptionDurationMultiplier);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_timeStamp&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, keyId, &amp;rt_timeStamp);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}	
&nbsp;&nbsp;&nbsp;}
}
</pre>
</li>
<li><strong>GetCountryList operation</strong>

<p>This operation returns a list of countries available for testing in-application purchase.</p>
</li>
<li><strong>Input data</strong>

<p>The following table show the (key, value) pairs required in the input extra data for the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_country_list</span> operation:</p>

<table>
<caption>Table: Input data for get country list</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_transactionId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Transaction ID number, such as

1, 2, …</span></td>
 <td><p>Transaction ID.</p>
<p>This information is mandatory.</p>
<p>This is used to track a transaction between requests.</p></td>
 </tr>
 </tbody></table>
</li>
 
<li><strong>Example code for get country list</strong>

<pre class="prettyprint">
app_control_h app_control;
int rt = app_control_create(&amp;app_control);

if (rt == APP_CONTROL_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;app_control_set_app_id(app_control, &quot; org.tizen.inapppurchase.iapservice&quot;);
&nbsp;&nbsp;&nbsp;app_control_set_operation(app_control, &quot;http://tizen.org/appcontrol/operation/iapv2/get_country_list&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_mode&quot;, &quot;0&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_transactionId&quot;, &quot;123&quot;);
		
&nbsp;&nbsp;&nbsp;rt = app_control_send_launch_request(app_control, get_country_list_cb, NULL);
}
	
if (app_control != NULL)
{
&nbsp;&nbsp;&nbsp;app_control_destroy(app_control);
}
</pre>
</li>

<li><strong>Output Data</strong>

<p>The results of the operation are returned in the app control callback.</p>

<p>The following table shows the output data for the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/get_country_list</span> operation:</p>

<table>
<caption>Table: Output data for get country list</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_method</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">OnCountryListReceived</span>
</td>
<td><p>Method to be called as a purchase request result.</p>
<p>This value will be</p>
<p>OnCountryListReceived</p>
</td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_result</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Result code&gt;</span></td>
 <td><p>Result code number.</p>
<p>Result codes are described in the end of this section.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_resultDescription</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Result code/Function ID number&gt;</span></td>
 <td><p>&quot;Result code /Function ID&quot; when &quot;_result&quot; value is not &quot;0&quot; (success).</p>
<p>Result codes are described in the end of this section</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_transactionId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;TransactionID&gt;</span></td>
 <td><p>Transaction ID number</p>
<p>This is the same as the transaction ID that is used to request.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_startNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;start number&gt;</span></td>
 <td><p>Start Number</p>
<p>Index of the first item on the list</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_endNumber</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;end number&gt;</span></td>
 <td><p>End Number</p>
<p>Index of the last item on the list</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_totalCount</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;total count&gt;</span></td>
 <td><p>Total items count</p>
<p>Number of items based on the startNumber and endNumber</p></td>
 </tr>
 </tbody></table>

<p>We also have _totalCount number of countries in the output data, each key is a PREFIX (list item index value) plus a key (i.e. &quot;1_countryName&quot;) as below:</p>

<table>
<caption>Table: _totalCount number of countries in output data</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_countryName</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;String&gt;</span></td>
<td><p>Country Name</p>
<p>Name of a country.</p>
</td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">PREFIX_mcc</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;String&gt;</span></td>
 <td><p>MCC</p>
 <p>Mobile country code.</p>
</td>
 </tr>
  </tbody></table>
</li>
 <li><strong>Example code for retrieving a list of get country list</strong>

 <pre class="prettyprint">
void 
get_country_list_cb(app_control_h request, app_control_h reply, app_control_result_e result, void *user_data)
{
&nbsp;&nbsp;&nbsp;char* rt_method = NULL;
&nbsp;&nbsp;&nbsp;char* rt_result = NULL;
&nbsp;&nbsp;&nbsp;char* rt_resultDescription = NULL;
&nbsp;&nbsp;&nbsp;char* rt_transactionId = NULL;
&nbsp;&nbsp;&nbsp;char* rt_startNumber = NULL;
&nbsp;&nbsp;&nbsp;char* rt_endNumber = NULL;
&nbsp;&nbsp;&nbsp;char* rt_totalCount = NULL;
&nbsp;&nbsp;&nbsp;char* rt_countryName = NULL;
&nbsp;&nbsp;&nbsp;char* rt_mcc = NULL;

	
&nbsp;&nbsp;&nbsp;if (result == APP_CONTROL_RESULT_SUCCEEDED)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_method&quot;, &amp;rt_method);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_result&quot;, &amp;rt_result);
		
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// succeed
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!strcmp(&quot;0&quot;, rt_result))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_resultDescription&quot;, &amp;rt_resultDescription);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_transactionId&quot;, &amp;rt_transactionId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_startNumber&quot;, &amp;rt_startNumber);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_endNumber&quot;, &amp;rt_endNumber);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_totalCount&quot;, &amp;rt_totalCount);
			
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int start = atoi(rt_startNumber);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int end = atoi(rt_endNumber);
			
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char keyId[100] = {0, };
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (; start &lt;= end; start++)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_countryName&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, key_id, &amp;rt_countryName);
				
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(key_id, sizeof(keyId), &quot;%d%s&quot;, start, &quot;_mcc&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, key_id, &amp;rt_mcc);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
</pre>
</li> 

<li><strong>Result code values</strong>

<p>Following is a list of possible values of _result key for the <span style="font-family: Courier New,Courier,monospace">org.tizen.inapppurchase.iapservice</span> Application ID:</p>

<table>
<caption>Table: Result code values</caption>
<tbody>
<tr>
 <th>Value</th>
 <th>Description</th>
 <th>Remarks</th>
</tr>
 <tr>
 <td>0</td>
 <td><span style="font-family: Courier New,Courier,monospace">Succeed</span></td>
 <td>The status code for success</td>
 </tr>
 <tr>
 <td>200</td>
 <td><span style="font-family: Courier New,Courier,monospace">Network Error</span></td>
 <td>The status code for network errors</td>
 </tr>
  <tr>
 <td>1000</td>
 <td><span style="font-family: Courier New,Courier,monospace">ProcessError</span></td>
 <td>The status code for process errors</td>
 </tr>
 <tr>
 <td>2001</td>
 <td><span style="font-family: Courier New,Courier,monospace">NoApplicationStore</span></td>
 <td>The status code if application store not present for the country</td>
 </tr>
  <tr>
 <td>9201</td>
 <td><span style="font-family: Courier New,Courier,monospace">ItemGroupIdNotFound</span></td>
 <td>The status code if the item group ID is not found</td>
 </tr>
 <tr>
 <td>9207</td>
 <td><span style="font-family: Courier New,Courier,monospace">ItemIdNotFound</span></td>
 <td>The status code if the item ID is not found</td>
 </tr>
 <tr>
 <td>9502</td>
 <td><span style="font-family: Courier New,Courier,monospace">InvalidRequestParameter</span></td>
 <td>The status code if the wrong request parameter passed</td>
 </tr>
  </tbody></table>
</li> 
</ul>

<h3>3.3. IAP Client Control (Purchase of Item)</h3>

<p>The IAP Client instance allows you to initialize a purchase of item and to complete the purchase.</p>
<ul>
<li><strong>Application ID</strong>
<p>This application control can be accessed using aliased application ID of <span style="font-family: Courier New,Courier,monospace">org.tizen.inapppurchase.iapclient</span>.</p>
</li>
<li><strong>Operation ID</strong>

<p>This application supports the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/purchase</span> operation only.</p>
</li>
<li><strong>Purchase operation</strong>

<p>This operation launches the purchase application and allows purchasing of In-App items. The input data passed in this operation are used to display a purchase form for particular item. The device user can choose between available payment methods, register his credit card, and confirm the purchase.</p>
</li>
<li><strong>Input data</strong>

<p>The following table show the (key, value) pairs required in the input extra data for the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/purchase</span> operation.</p>

<table>
<caption>Table: Input data for purchase</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_mode</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">0 | 1</span></td>
 <td><p>Mode type.</p>
<p>This information is optional. The default value is 0.</p>
<p>0 is normal (commercial) mode.</p>
<p>This mode need to be used in application submitted to Tizen Store.</p>
<p>1 is developer mode (always success). This mode can be used while development of the application for testing purpose. Payment will always succeed.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_transactionId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Transaction ID number, such as 1, 2, …</span></td>
 <td><p>Transaction ID.</p>
<p>This information is mandatory.</p>
<p>This is used to track a transaction between requests.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">ID of Item, such as 000000003501</span></td>
 <td><p>Item ID</p>
<p>This information is mandatory.</p>
<p>Item ID is associated with the particular Item in the Tizen Store Seller Office.</p>
<p>You can also retrieve a list of items available for purchase through <span style="font-family: Courier New,Courier,monospace">org.tizen.inapppurchase.iapservice Application ID</span></p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemGroupId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">ID of Group, such as 100000001455</span></td>
 <td><p>Group ID</p>
<p>This information is mandatory.</p>
<p>Group ID is a associated with the particular Group of items in the Tizen Store Seller Office.</p>
<p>You need to register your Group Id on the Tizen Store Seller Office first.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_languageCd</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Language code such as eng, rus</span></td>
 <td><p>Language code</p>
<p>This information is optional.</p>
<p>According to ISO 639-2, thus the name three character code.</p>
<p>Language Code is associated with display language of item details in the Tizen Store Seller Office site.</p>
<p>Or leave it to use default name as in seller site</p>
<p>_itemName is higher priority than _languageCd.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemName</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Item Name such as &quot;Sword&quot; or &quot;칼&quot;</span></td>
 <td><p>Item Name</p>
<p>This information is optional.</p>
<p>You can set your item name with _item Name.</p>
<p>Or leave it to use default name as in seller site’s “purchase page” of IAP.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_mcc</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">MCC Code, such as 250</span></td>
 <td><p>MCC Code</p>
<p>This information is optional. It can be used only in developer mode.</p>
<p>You can receive a list of available MCC codes through get country list operation</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_mnc</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">MNC Code, such as 01</span></td>
 <td><p>MNC Code</p>
<p>This information is optional. It can be used only in developer mode.</p>
<p>MNC Code is Mobile Network Code.</p></td>
 </tr>
 </tbody></table>
</li>

<li><strong>Example code for Purchase</strong>
&nbsp;&nbsp;&nbsp;
<pre class="prettyprint">
app_control_h app_control;
int rt = app_control_create(&amp;app_control);

if (rt == APP_CONTROL_ERROR_NONE)
{
&nbsp;&nbsp;&nbsp;app_control_set_app_id(app_control, &quot; org.tizen.inapppurchase.iapclient&quot;);
&nbsp;&nbsp;&nbsp;app_control_set_operation(app_control, &quot;http://tizen.org/appcontrol/operation/iapv2/purchase&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_mode&quot;, &quot;0&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_itemId&quot;, &quot;000000000001&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_itemGroupId&quot;, &quot;100000000012&quot;);
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_languageCd&quot;, &quot;ENG&quot;); // optional
&nbsp;&nbsp;&nbsp;app_control_add_extra_data(app_control, &quot;_itemName&quot;, &quot;Item 1&quot;); // optional
	
&nbsp;&nbsp;&nbsp;rt = app_control_send_launch_request(app_control, get_purchase_cb, NULL);
}
	
if (app_control != NULL)
{
&nbsp;&nbsp;&nbsp;app_control_destroy(app_control);
}
</pre>
</li>
<li><strong>Output Data</strong>
<p>The results of the operation are returned in the app control callback.</p>

<p>This data can be used to verify the payment with Tizen Store IAP Server.</p>

<p>The following table shows the output data for the <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/purchase</span> operation during process of purchase:</p>

<table>
<caption>Table: Output data for purchase</caption>
<tbody>
<tr>
 <th>Key</th>
 <th>Value</th>
 <th>Description</th>
</tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_method</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">OnPurchaseItemReceived</span></td>
 <td><p>Method to be called as a purchase request result</p>
<p>This value will be OnPurchaseItemReceived.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_result</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Result code&gt;</span></td>
 <td><p>Result code number.</p>
<p>Result codes are described in the end of this section.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_resultDescription</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Result code/Function ID number&gt; | &lt;HTML tags&gt;</span></td>
 <td><p>Display _resultDescription value as a pop-up by using Web-Control when you receive the &quot;_result&quot; value as 5600</p>
<p>Result codes are described in the end of this section. ex&gt;&quot;(E1000/9100)&quot;</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;ItemID&gt;</span></td>
 <td><p>Item ID number</p>
<p>This is the same as an Item ID that is used to request.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemGroupId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;ItemGroup ID&gt;</span></td>
 <td><p>Item group ID</p>
<p>Item Group ID is a collection of items and it will be linked to your application in Tizen seller site.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemName</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Item Name&gt;</span></td>
 <td><p>Item Name</p>
<p>Item Name is a name provided during item registration on the Tizen Store Seller Office.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_ticketPurchaseId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Purchase Ticked ID&gt;</span></td>
 <td>&lt;Purchase ticked ID&gt;
&lt;This ID can be used to verify the purchase with Tizen Store IAP Server.&gt;</td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_currencyUnit</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Currency unit, such as: $,Won, Pound</span></td>
 <td><p>Currency Unit</p>
<p>Device user currency unit.</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_unitPrecedes</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">0 | 1</span></td>
 <td><p>Unit Precedes</p>
<p>String representation of values:</p>
<p>0 : Tall (2.99 TL)</p>
<p>1 : Front ($ 2.99)</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_hasPenny</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">0 | 1</span></td>
 <td><p>Has Penny</p>
<p>Informations if currency unit has penny: representation</p>
<p>0 : no</p>
<p>1 : yes</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemPrice</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Item price&gt;</span></td>
 <td><p>Item price</p>
<p>This is a price of item in local currency.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemDownloadUrl</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;URL&gt;</span></td>
 <td><p>Item download URL</p>
<p>This is a URL provided during item registration on the Tizen Store Seller Office.</p></td>
 </tr>
   <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemImageUrl</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;URL&gt;</span></td>
 <td><p>Item image URL</p>
<p>This is a URL provided during item registration on the Tizen Store Seller Office</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_itemDescription</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Item description&gt;</span></td>
 <td><p>Item description</p>
<p>A description provided during item registration.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_reserved1</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Reserved Field 1&gt;</span></td>
 <td>Reserved Field 1</td>
 </tr>
   <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_reserved2</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Reserved Field 2&gt;</span></td>
 <td>Reserved Field 2</td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_paymentId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Payment ID&gt;</span></td>
 <td><p>Payment ID</p>
<p>ID of payment.</p></td>
 </tr>
   <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_ticketVerifyUrl</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">URL, such as: http://tizen.org/appcontrol/operation/iap/purchase</span></td>
 <td><p>Server’s URL</p>
<p>This URL can be used with combination of other parameters to verify the purchase with Tizen Store IAP Server.</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_ticketPurchaseId</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Purchase TickedID&gt;</span></td>
 <td><p>Purchase ticked ID</p>
<p>This ID can be used to verify the purchase with Tizen Store IAP Server.</p></td>
 </tr>
   <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_ticketParam1</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Ticket parameter 1&gt;</span></td>
 <td><p>Parameter 1</p>
<p>This parameter is to be used with URL</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_ticketParam2</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Ticket parameter 2&gt;</span></td>
 <td><p>Parameter 2</p>
<p>This parameter is to be used with URL</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_ticketParam3</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Ticket parameter 3&gt;</span></td>
 <td><p>Parameter 3</p>
<p>This parameter is to be used with URL</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_ticketParam4</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Ticket parameter 4&gt;</span></td>
 <td><p>Parameter 4</p>
<p>This parameter is to be used with URL</p></td>
 </tr>
 <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_ticketParam5</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Ticket parameter 5&gt;</span></td>
 <td><p>Parameter 5</p>
<p>This parameter is to be used with URL</p></td>
 </tr>
  <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_purchaseDate</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">Date</span></td>
 <td><p>Purchase date</p>
<p>Date of purchase.</p></td>
 </tr>
   <tr>
 <td><span style="font-family: Courier New,Courier,monospace">_timeStamp</span></td>
 <td><span style="font-family: Courier New,Courier,monospace">&lt;Time stamp&gt;</span></td>
 <td><p>Time stamp</p>
<p>Based on &quot;GMT +0&quot;, Server time.</p>
<p>(yyyyMMddHHmmss)</p></td>
 </tr>
 </tbody></table>
</li>
<li><strong>Example code for Purchase result</strong>
<pre class="prettyprint">
void 
get_purchase_cb(app_control_h request, app_control_h reply, app_control_result_e result, void *user_data)
{
&nbsp;&nbsp;&nbsp;char* rt_method = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_result = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_resultDescription = NULL;
&nbsp;&nbsp;&nbsp;char* rt_transactionId = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemId = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_itemGroupId = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_itemName = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_currencyUnit = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_unitPrecedes = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_hasPenny = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_itemPrice = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_itemDownloadUrl = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_itemImageUrl = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_itemDescription = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_reserved1 = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_reserved2 = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_paymentId = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_ticketVerifyUrl = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_ticketPurchaseId = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_ticketParam1 = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_ticketParam2 = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_ticketParam3 = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_ticketParam4 = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_ticketParam5 = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_purchaseDate = NULL; 
&nbsp;&nbsp;&nbsp;char* rt_itemTypeCd = NULL;
&nbsp;&nbsp;&nbsp;char* rt_itemSubsBillDurationCd = NULL;
&nbsp;&nbsp;&nbsp;char* rt_subscriptionDurationMultiplier = NULL;
&nbsp;&nbsp;&nbsp;char* rt_timeStamp = NULL;
	
&nbsp;&nbsp;&nbsp;if (result == APP_CONTROL_RESULT_SUCCEEDED)
&nbsp;&nbsp;&nbsp;{

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_method&quot;, &amp;rt_method);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_result&quot;, &amp;rt_result);
		
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// succeed
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!strcmp(&quot;0&quot;, rt_result))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_resultDescription&quot;, &amp;rt_resultDescription);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_transactionId&quot;, &amp;rt_transactionId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemId&quot;, &amp;rt_itemId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemGroupId&quot;, &amp;rt_itemGroupId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemName&quot;, &amp;rt_itemName);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_currencyUnit&quot;, &amp;rt_currencyUnit);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_unitPrecedes&quot;, &amp;rt_unitPrecedes);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemPrice&quot;, &amp;rt_itemPrice);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemDownloadUrl&quot;, &amp;rt_itemDownloadUrl);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemImageUrl&quot;, &amp;rt_itemImageUrl);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemDescription&quot;, &amp;rt_itemDescription);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_reserved1&quot;, &amp;amp;rt_reserved1);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_reserved2&quot;, &amp;rt_reserved2);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_paymentId&quot;, &amp;rt_paymentId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_ticketVerifyUrl&quot;, &amp;rt_ticketVerifyUrl);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_ticketPurchaseId&quot;, &amp;rt_ticketPurchaseId);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_ticketParam1&quot;, &amp;rt_ticketParam1);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_ticketParam2&quot;, &amp;rt_ticketParam2);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_ticketParam3&quot;, &amp;rt_ticketParam3);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_ticketParam4&quot;, &amp;rt_ticketParam4);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_ticketParam5&quot;, &amp;rt_ticketParam5);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_purchaseDate&quot;, &amp;rt_purchaseDate);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemTypeCd&quot;, &amp;rt_itemTypeCd);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_itemSubsBillDurationCd&quot;, &amp;rt_itemSubsBillDurationCd);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_subscriptionDurationMultiplier&quot;, &amp;rt_subscriptionDurationMultiplier);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt = app_control_get_extra_data(reply, &quot;_timeStamp&quot;, &amp;rt_timeStamp);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
</pre>
</li>
<li><strong>Result code values</strong>

<p>Following is a list of possible values of _result key of the <span style="font-family: Courier New,Courier,monospace">org.tizen.inapppurchase.iapclient</span> application ID.</p>

<table>
<caption>Table: Result code values</caption>
<tbody>
<tr>
 <th>Value</th>
 <th>Description</th>
 <th>Remarks</th>
</tr>
 <tr>
 <td>0</td>
 <td><span style="font-family: Courier New,Courier,monospace">Succeed</span></td>
 <td>The status code for success</td>
 </tr>
 <tr>
 <td>100</td>
 <td><span style="font-family: Courier New,Courier,monospace">Cancel</span></td>
 <td>The status code if the user cancels</td>
 </tr>
 <tr>
 <td>200</td>
 <td><span style="font-family: Courier New,Courier,monospace">NetworkError</span></td>
 <td>The status code for network errors</td>
 </tr>
 <tr>
 <td>1000</td>
 <td><span style="font-family: Courier New,Courier,monospace">ProcessError</span></td>
 <td>The status code for process errors</td>
 </tr>
 <tr>
 <td>5600</td>
 <td><span style="font-family: Courier New,Courier,monospace">PGError</span></td>
 <td>The status code for the payment gateway error. Display the pop-up by using web-control.</td>
 </tr>
 <tr>
 <td>9201</td>
 <td><span style="font-family: Courier New,Courier,monospace">ItemGroupIdNotFound</span></td>
 <td>The status code if the item group ID is not found</td>
 </tr>
 <tr>
 <td>9207</td>
 <td><span style="font-family: Courier New,Courier,monospace">ItemIdNotFound</span></td>
 <td>The status code if the item ID is not found</td>
 </tr>
 <tr>
 <td>9502</td>
 <td><span style="font-family: Courier New,Courier,monospace">InvalidRequestParameter</span></td>
 <td>The status code if the request parameter is invalid</td>
 </tr>
 <tr>
 <td>9291</td>
 <td><span style="font-family: Courier New,Courier,monospace">RepurchaseError</span></td>
 <td>The status code for repurchase error. This error occurs only on consumable items.</td>
 </tr>
 <tr>
 <td>9292</td>
 <td><span style="font-family: Courier New,Courier,monospace">Update is progressing</span></td>
 <td>The status code if the application is on updating.</td>
 </tr>
 <tr>
 <td>9293</td>
 <td><span style="font-family: Courier New,Courier,monospace">Account validation is not Completed</span></td>
 <td>The status code if the Samsung account validation is not completed.</td>
 </tr>
  </tbody></table>
</li>
</ul> 

<h2 id="verify">4. Verifying with Tizen Store IAP Server</h2>
<p>After purchase operation, <span style="font-family: Courier New,Courier,monospace">http://tizen.org/appcontrol/operation/iapv2/purchase</span>, you can use output data’s values to verify a purchase on the Tizen Store IAP Server. It’s simple process. You can send a query to output data’s _ticketVerifyUrl address. The query can be made with combination of output data’s _ticketPurchaseId, _ticketParam1, _ticketParam2, _ticketParam3, _ticketParam4, _ticketParam5.</p>

<p>Template as following,</p>

<p>Value of (_ticketVerifyUrl)?purchaseID=value of (_ticketPurchaseId)&amp;param1=value of (_ticketParam1)&amp;param2=value of (_ticketParam2)&amp;param3=value of (_ticketParam3)&amp;param4=value of (_ticketParam4)&amp;param5=value of (_ticketParam5)</p>

<p>The below is an example of request:</p>

<pre class="prettyprint">
http://iap.tizenstore.com/appsItemVerifyIAPReceipt.as?purchaseID=2bf8fe4fdef1dae29974e5400c106bfced6a650793efa3ce68a79e026481193d&amp;param1=abe87f635bf41aae0178b5384cbc09c1083026e93e44bd0efd69e66a9cc2ace6&amp;param2=d49e3385783366868999e17bae3410597c0b6bcf69a92cd74cab17454cf9d4d6&amp;param3=af8050beb9c0f63c773fb86f7218bb6cbd6cf78a5cdff281c2e22a229f9a1485&amp;param4=1&amp;param5=I20131115RU00001243
</pre>

<p>If a request is processed successfully, the JSON response is received as shown. The status value of &quot;true&quot; means a verifying the purchase is successful and &quot;false&quot; when it has failed.</p>

<p>The JSON example of successful result:</p>

<pre class="prettyprint">
{
&nbsp;&nbsp;&nbsp;&quot;paymentID&quot;:&quot;TPMTID20131115RU00001243&quot;,
&nbsp;&nbsp;&nbsp;&quot;paymentAmount&quot;:&quot;105.02&quot;,
&nbsp;&nbsp;&nbsp;&quot;itemName&quot;:&quot;ttttttt&quot;,&quot;itemID&quot;:&quot;000000000072&quot;,
&nbsp;&nbsp;&nbsp;&quot;status&quot;:&quot;true&quot;,
&nbsp;&nbsp;&nbsp;&quot;purchaseDate&quot;:&quot;2013-11-15 10:31:23&quot;,
&nbsp;&nbsp;&nbsp;&quot;itemDesc&quot;:&quot;dkfldfldkfl&quot;,
&nbsp;&nbsp;&nbsp;&quot;paymentMethod&quot;:&quot;Tizen RBS Russia CreditCard&quot;,
&nbsp;&nbsp;&nbsp;&quot;mode&quot;:&quot;1&quot;
}
</pre>

<p>The JSON example of failed result</p>

<pre class="prettyprint">
{&quot;status&quot;:&quot;false&quot;}
</pre>

<p>If your application uses a server-client model, server-to-server purchase verification explained above is recommended.</p>

<h2 id="appendixes">Appendixes</h2>


<h3 id="native"><a href="https://developer.tizen.org/sites/default/files/page/iap_programming_guide_appcontrol_20151214.zip" target="_blank">1 Attached Sample Native Application</a></h3>

<p>The attached sample native application allows a user to show a list of items for purchase, purchase an item, show purchased items, and make a purchase:</p>
<ul><li>In developer mode, the top of the screen, it is possible to scroll up and down direction.</li></ul>

<h3 id="web"><a href="https://developer.tizen.org/sites/default/files/page/web_sample_application_source_code_20150113.zip" target="_blank">2 Attached Sample Web Application</a></h3>

<p>The attached sample web application allows a user to show a list of items for purchase, purchase an item, show purchased items, and make a purchase.</p>


<script type="text/javascript" src="../scripts/jquery.zclip.min.js"></script>
<script type="text/javascript" src="../scripts/showhide.js"></script>

</div></div></div>

<a class="top sms" href="#"><img src="../images/btn_top.gif" alt="Go to top" /></a>

<div id="footer">
<p class="footer">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br/>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</p>
</div>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

</body>

</html>